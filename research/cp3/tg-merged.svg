<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="934" onload="init(evt)" viewBox="0 0 1200 934" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="934.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Turbogeth Merged Samples</text>
<text id="details" x="10.00" y="917" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="917" > </text>
<g id="frames">
<g >
<title>tg/p2p.(*dialTask).run (419 samples, 0.06%)</title><rect x="1187.2" y="853" width="0.7" height="15.0" fill="rgb(221,22,21)" rx="2" ry="2" />
<text  x="1190.20" y="863.5" ></text>
</g>
<g >
<title>tg/core/types.codecSelfer2.decSlicecommon_Hash (776 samples, 0.11%)</title><rect x="164.0" y="533" width="1.3" height="15.0" fill="rgb(219,59,43)" rx="2" ry="2" />
<text  x="167.03" y="543.5" ></text>
</g>
<g >
<title>runtime.mallocgc (272 samples, 0.04%)</title><rect x="833.6" y="501" width="0.4" height="15.0" fill="rgb(205,25,39)" rx="2" ry="2" />
<text  x="836.57" y="511.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb._Cfunc_lmdbgo_mdb_cursor_get1 (590 samples, 0.08%)</title><rect x="258.5" y="485" width="1.0" height="15.0" fill="rgb(237,195,50)" rx="2" ry="2" />
<text  x="261.49" y="495.5" ></text>
</g>
<g >
<title>sort.rotate (181 samples, 0.03%)</title><rect x="1068.6" y="517" width="0.3" height="15.0" fill="rgb(245,111,34)" rx="2" ry="2" />
<text  x="1071.61" y="527.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb._Cfunc_lmdbgo_mdb_cursor_get2 (567 samples, 0.08%)</title><rect x="819.3" y="517" width="1.0" height="15.0" fill="rgb(206,89,0)" rx="2" ry="2" />
<text  x="822.35" y="527.5" ></text>
</g>
<g >
<title>tg/core/vm.opExtCodeSize (3,884 samples, 0.56%)</title><rect x="522.0" y="597" width="6.6" height="15.0" fill="rgb(231,42,21)" rx="2" ry="2" />
<text  x="525.02" y="607.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).getVal2.func1 (83 samples, 0.01%)</title><rect x="386.0" y="181" width="0.1" height="15.0" fill="rgb(232,222,1)" rx="2" ry="2" />
<text  x="388.97" y="191.5" ></text>
</g>
<g >
<title>bytes.Compare (69 samples, 0.01%)</title><rect x="323.4" y="373" width="0.1" height="15.0" fill="rgb(229,107,21)" rx="2" ry="2" />
<text  x="326.36" y="383.5" ></text>
</g>
<g >
<title>runtime.makeslice (68 samples, 0.01%)</title><rect x="657.5" y="645" width="0.2" height="15.0" fill="rgb(248,183,50)" rx="2" ry="2" />
<text  x="660.54" y="655.5" ></text>
</g>
<g >
<title>tg/rlp.cachedDecoder (161 samples, 0.02%)</title><rect x="220.7" y="501" width="0.3" height="15.0" fill="rgb(250,52,24)" rx="2" ry="2" />
<text  x="223.71" y="511.5" ></text>
</g>
<g >
<title>runtime.evacuate (83 samples, 0.01%)</title><rect x="597.3" y="517" width="0.1" height="15.0" fill="rgb(219,200,1)" rx="2" ry="2" />
<text  x="600.26" y="527.5" ></text>
</g>
<g >
<title>bytes.Compare (938 samples, 0.13%)</title><rect x="275.9" y="437" width="1.6" height="15.0" fill="rgb(206,125,45)" rx="2" ry="2" />
<text  x="278.88" y="447.5" ></text>
</g>
<g >
<title>runtime.(*spanSet).push (338 samples, 0.05%)</title><rect x="33.0" y="821" width="0.6" height="15.0" fill="rgb(229,203,20)" rx="2" ry="2" />
<text  x="35.99" y="831.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find.func1 (606 samples, 0.09%)</title><rect x="281.5" y="485" width="1.0" height="15.0" fill="rgb(240,184,51)" rx="2" ry="2" />
<text  x="284.51" y="495.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*decRd).readb (233 samples, 0.03%)</title><rect x="169.8" y="517" width="0.4" height="15.0" fill="rgb(232,9,31)" rx="2" ry="2" />
<text  x="172.83" y="527.5" ></text>
</g>
<g >
<title>tg/core/vm.opStaticCall (400 samples, 0.06%)</title><rect x="391.1" y="405" width="0.7" height="15.0" fill="rgb(216,115,42)" rx="2" ry="2" />
<text  x="394.09" y="415.5" ></text>
</g>
<g >
<title>tg/core/vm.codeBitmap (1,504 samples, 0.22%)</title><rect x="531.8" y="549" width="2.6" height="15.0" fill="rgb(230,9,15)" rx="2" ry="2" />
<text  x="534.81" y="559.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (142 samples, 0.02%)</title><rect x="286.4" y="485" width="0.3" height="15.0" fill="rgb(238,110,51)" rx="2" ry="2" />
<text  x="289.44" y="495.5" ></text>
</g>
<g >
<title>runtime.gosched_m (2,871 samples, 0.41%)</title><rect x="96.2" y="853" width="4.9" height="15.0" fill="rgb(224,216,41)" rx="2" ry="2" />
<text  x="99.20" y="863.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (74 samples, 0.01%)</title><rect x="146.8" y="469" width="0.2" height="15.0" fill="rgb(224,51,27)" rx="2" ry="2" />
<text  x="149.83" y="479.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.fastpathEncodeTypeSwitch (136 samples, 0.02%)</title><rect x="1040.6" y="517" width="0.3" height="15.0" fill="rgb(239,171,7)" rx="2" ry="2" />
<text  x="1043.64" y="527.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (110 samples, 0.02%)</title><rect x="395.2" y="245" width="0.2" height="15.0" fill="rgb(228,70,10)" rx="2" ry="2" />
<text  x="398.20" y="255.5" ></text>
</g>
<g >
<title>tg/ethdb.(*mutation).Commit (96 samples, 0.01%)</title><rect x="1131.4" y="805" width="0.1" height="15.0" fill="rgb(244,91,54)" rx="2" ry="2" />
<text  x="1134.35" y="815.5" ></text>
</g>
<g >
<title>runtime.putfull (679 samples, 0.10%)</title><rect x="55.5" y="773" width="1.2" height="15.0" fill="rgb(209,171,13)" rx="2" ry="2" />
<text  x="58.51" y="783.5" ></text>
</g>
<g >
<title>tg/ethdb.(*LmdbKV).Begin (3,724 samples, 0.54%)</title><rect x="828.0" y="533" width="6.3" height="15.0" fill="rgb(232,92,34)" rx="2" ry="2" />
<text  x="830.97" y="543.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (78 samples, 0.01%)</title><rect x="341.9" y="517" width="0.2" height="15.0" fill="rgb(233,20,0)" rx="2" ry="2" />
<text  x="344.93" y="527.5" ></text>
</g>
<g >
<title>tg/core/state.(*stateObject).GetState (1,142 samples, 0.16%)</title><rect x="490.7" y="437" width="2.0" height="15.0" fill="rgb(206,115,29)" rx="2" ry="2" />
<text  x="493.74" y="447.5" ></text>
</g>
<g >
<title>runtime.mallocgc (389 samples, 0.06%)</title><rect x="786.2" y="597" width="0.7" height="15.0" fill="rgb(209,187,27)" rx="2" ry="2" />
<text  x="789.23" y="607.5" ></text>
</g>
<g >
<title>tg/core/rawdb.ReadBody (5,564 samples, 0.80%)</title><rect x="196.7" y="581" width="9.4" height="15.0" fill="rgb(219,91,7)" rx="2" ry="2" />
<text  x="199.67" y="591.5" ></text>
</g>
<g >
<title>tg/core/rawdb.ReadBody (68 samples, 0.01%)</title><rect x="1180.7" y="757" width="0.1" height="15.0" fill="rgb(228,156,35)" rx="2" ry="2" />
<text  x="1183.66" y="767.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*BTree).ReplaceOrInsert (196 samples, 0.03%)</title><rect x="665.3" y="613" width="0.4" height="15.0" fill="rgb(235,142,46)" rx="2" ry="2" />
<text  x="668.32" y="623.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).Get (84 samples, 0.01%)</title><rect x="395.5" y="277" width="0.1" height="15.0" fill="rgb(235,113,38)" rx="2" ry="2" />
<text  x="398.45" y="287.5" ></text>
</g>
<g >
<title>runtime.mapiternext (63 samples, 0.01%)</title><rect x="632.6" y="645" width="0.1" height="15.0" fill="rgb(214,172,15)" rx="2" ry="2" />
<text  x="635.57" y="655.5" ></text>
</g>
<g >
<title>sort.symMerge (812 samples, 0.12%)</title><rect x="992.5" y="277" width="1.4" height="15.0" fill="rgb(216,24,32)" rx="2" ry="2" />
<text  x="995.54" y="287.5" ></text>
</g>
<g >
<title>tg/ethdb.(*TxDb).Get (198 samples, 0.03%)</title><rect x="146.3" y="645" width="0.3" height="15.0" fill="rgb(210,104,29)" rx="2" ry="2" />
<text  x="149.28" y="655.5" ></text>
</g>
<g >
<title>tg/core/vm/stack.(*Stack).Pop (82 samples, 0.01%)</title><rect x="420.9" y="469" width="0.2" height="15.0" fill="rgb(226,49,33)" rx="2" ry="2" />
<text  x="423.92" y="479.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb._Cfunc_lmdbgo_mdb_cursor_get1 (386 samples, 0.06%)</title><rect x="525.9" y="437" width="0.6" height="15.0" fill="rgb(215,19,26)" rx="2" ry="2" />
<text  x="528.86" y="447.5" ></text>
</g>
<g >
<title>tg/p2p/rlpx.sealEIP8 (70 samples, 0.01%)</title><rect x="1187.6" y="741" width="0.1" height="15.0" fill="rgb(206,127,22)" rx="2" ry="2" />
<text  x="1190.63" y="751.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*Decoder).decode (267 samples, 0.04%)</title><rect x="1047.1" y="613" width="0.5" height="15.0" fill="rgb(237,23,27)" rx="2" ry="2" />
<text  x="1050.11" y="623.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.(*state).Write (185 samples, 0.03%)</title><rect x="553.9" y="581" width="0.3" height="15.0" fill="rgb(235,106,23)" rx="2" ry="2" />
<text  x="556.86" y="591.5" ></text>
</g>
<g >
<title>tg/core/vm.opJumpi (93 samples, 0.01%)</title><rect x="417.0" y="469" width="0.2" height="15.0" fill="rgb(250,105,18)" rx="2" ry="2" />
<text  x="420.01" y="479.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).DelegateCall (6,735 samples, 0.97%)</title><rect x="410.1" y="517" width="11.4" height="15.0" fill="rgb(216,75,41)" rx="2" ry="2" />
<text  x="413.10" y="527.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.(*runContainer16).toEfficientContainer (155 samples, 0.02%)</title><rect x="146.7" y="597" width="0.3" height="15.0" fill="rgb(233,153,41)" rx="2" ry="2" />
<text  x="149.73" y="607.5" ></text>
</g>
<g >
<title>tg/common/etl.loadFilesIntoBucket (1,435 samples, 0.21%)</title><rect x="958.6" y="693" width="2.4" height="15.0" fill="rgb(218,39,41)" rx="2" ry="2" />
<text  x="961.58" y="703.5" ></text>
</g>
<g >
<title>tg/ethdb.(*mutation).Get (134 samples, 0.02%)</title><rect x="363.8" y="453" width="0.2" height="15.0" fill="rgb(218,27,27)" rx="2" ry="2" />
<text  x="366.76" y="463.5" ></text>
</g>
<g >
<title>context.(*valueCtx).Value (380 samples, 0.05%)</title><rect x="642.6" y="613" width="0.7" height="15.0" fill="rgb(251,173,5)" rx="2" ry="2" />
<text  x="645.61" y="623.5" ></text>
</g>
<g >
<title>runtime.cgoCheckArg (90 samples, 0.01%)</title><rect x="1086.6" y="581" width="0.1" height="15.0" fill="rgb(252,90,48)" rx="2" ry="2" />
<text  x="1089.59" y="591.5" ></text>
</g>
<g >
<title>tg/core/vm.(*Memory).Resize (65 samples, 0.01%)</title><rect x="451.9" y="485" width="0.1" height="15.0" fill="rgb(252,30,40)" rx="2" ry="2" />
<text  x="454.88" y="495.5" ></text>
</g>
<g >
<title>tg/ethdb.(*MutationItem).Less (62 samples, 0.01%)</title><rect x="1121.3" y="613" width="0.1" height="15.0" fill="rgb(215,5,52)" rx="2" ry="2" />
<text  x="1124.25" y="623.5" ></text>
</g>
<g >
<title>sort.rotate (143 samples, 0.02%)</title><rect x="866.1" y="373" width="0.2" height="15.0" fill="rgb(216,225,23)" rx="2" ry="2" />
<text  x="869.09" y="383.5" ></text>
</g>
<g >
<title>cmpbody (78 samples, 0.01%)</title><rect x="988.7" y="405" width="0.1" height="15.0" fill="rgb(217,134,19)" rx="2" ry="2" />
<text  x="991.68" y="415.5" ></text>
</g>
<g >
<title>tg/ethdb.(*TxDb).Append (427 samples, 0.06%)</title><rect x="730.0" y="629" width="0.7" height="15.0" fill="rgb(216,190,39)" rx="2" ry="2" />
<text  x="732.95" y="639.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (111 samples, 0.02%)</title><rect x="177.2" y="453" width="0.2" height="15.0" fill="rgb(233,153,4)" rx="2" ry="2" />
<text  x="180.17" y="463.5" ></text>
</g>
<g >
<title>runtime.cgocall (366 samples, 0.05%)</title><rect x="527.9" y="421" width="0.6" height="15.0" fill="rgb(249,117,11)" rx="2" ry="2" />
<text  x="530.90" y="431.5" ></text>
</g>
<g >
<title>runtime.convT64 (115 samples, 0.02%)</title><rect x="848.7" y="469" width="0.2" height="15.0" fill="rgb(246,88,39)" rx="2" ry="2" />
<text  x="851.74" y="479.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).insert (100 samples, 0.01%)</title><rect x="665.3" y="549" width="0.2" height="15.0" fill="rgb(232,95,40)" rx="2" ry="2" />
<text  x="668.34" y="559.5" ></text>
</g>
<g >
<title>tg/rlp.cachedWriter (173 samples, 0.02%)</title><rect x="1126.2" y="725" width="0.3" height="15.0" fill="rgb(232,205,32)" rx="2" ry="2" />
<text  x="1129.17" y="735.5" ></text>
</g>
<g >
<title>sort.rotate (89 samples, 0.01%)</title><rect x="868.6" y="277" width="0.1" height="15.0" fill="rgb(229,86,6)" rx="2" ry="2" />
<text  x="871.60" y="287.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).GetState (79 samples, 0.01%)</title><rect x="414.0" y="325" width="0.1" height="15.0" fill="rgb(207,80,16)" rx="2" ry="2" />
<text  x="416.95" y="335.5" ></text>
</g>
<g >
<title>tg/turbo/trie.GenStructStep (297 samples, 0.04%)</title><rect x="1029.1" y="661" width="0.5" height="15.0" fill="rgb(252,23,33)" rx="2" ry="2" />
<text  x="1032.08" y="671.5" ></text>
</g>
<g >
<title>github.com/holiman/uint256.(*Int).IsZero (76 samples, 0.01%)</title><rect x="360.7" y="533" width="0.1" height="15.0" fill="rgb(226,167,47)" rx="2" ry="2" />
<text  x="363.70" y="543.5" ></text>
</g>
<g >
<title>runtime.mallocgc (160 samples, 0.02%)</title><rect x="177.1" y="533" width="0.3" height="15.0" fill="rgb(213,228,14)" rx="2" ry="2" />
<text  x="180.09" y="543.5" ></text>
</g>
<g >
<title>tg/ethdb.(*TxDb).Get (166 samples, 0.02%)</title><rect x="464.8" y="501" width="0.3" height="15.0" fill="rgb(227,85,24)" rx="2" ry="2" />
<text  x="467.83" y="511.5" ></text>
</g>
<g >
<title>runtime.cgocall (110 samples, 0.02%)</title><rect x="231.4" y="581" width="0.1" height="15.0" fill="rgb(206,11,29)" rx="2" ry="2" />
<text  x="234.35" y="591.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (59 samples, 0.01%)</title><rect x="422.5" y="373" width="0.1" height="15.0" fill="rgb(221,91,49)" rx="2" ry="2" />
<text  x="425.51" y="383.5" ></text>
</g>
<g >
<title>runtime.mapassign (105 samples, 0.02%)</title><rect x="243.0" y="549" width="0.2" height="15.0" fill="rgb(245,33,16)" rx="2" ry="2" />
<text  x="246.00" y="559.5" ></text>
</g>
<g >
<title>runtime.newobject (90 samples, 0.01%)</title><rect x="293.1" y="597" width="0.2" height="15.0" fill="rgb(228,28,35)" rx="2" ry="2" />
<text  x="296.13" y="607.5" ></text>
</g>
<g >
<title>sort.symMerge (615 samples, 0.09%)</title><rect x="992.9" y="261" width="1.0" height="15.0" fill="rgb(217,183,14)" rx="2" ry="2" />
<text  x="995.85" y="271.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).GetCode (503 samples, 0.07%)</title><rect x="340.7" y="565" width="0.9" height="15.0" fill="rgb(220,173,6)" rx="2" ry="2" />
<text  x="343.72" y="575.5" ></text>
</g>
<g >
<title>sort.Sort (657 samples, 0.09%)</title><rect x="722.2" y="645" width="1.1" height="15.0" fill="rgb(213,189,10)" rx="2" ry="2" />
<text  x="725.23" y="655.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (84 samples, 0.01%)</title><rect x="423.2" y="405" width="0.2" height="15.0" fill="rgb(252,110,23)" rx="2" ry="2" />
<text  x="426.22" y="415.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*Encoder).encode (301 samples, 0.04%)</title><rect x="994.5" y="517" width="0.5" height="15.0" fill="rgb(209,58,19)" rx="2" ry="2" />
<text  x="997.47" y="527.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*Decoder).Decode (327 samples, 0.05%)</title><rect x="1047.1" y="645" width="0.5" height="15.0" fill="rgb(246,69,29)" rx="2" ry="2" />
<text  x="1050.06" y="655.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (66 samples, 0.01%)</title><rect x="833.3" y="453" width="0.1" height="15.0" fill="rgb(215,128,47)" rx="2" ry="2" />
<text  x="836.33" y="463.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (123 samples, 0.02%)</title><rect x="504.2" y="389" width="0.3" height="15.0" fill="rgb(214,57,26)" rx="2" ry="2" />
<text  x="507.25" y="399.5" ></text>
</g>
<g >
<title>tg/common.CopyBytes (568 samples, 0.08%)</title><rect x="977.1" y="597" width="0.9" height="15.0" fill="rgb(254,62,29)" rx="2" ry="2" />
<text  x="980.08" y="607.5" ></text>
</g>
<g >
<title>runtime.mallocgc (176 samples, 0.03%)</title><rect x="142.3" y="693" width="0.3" height="15.0" fill="rgb(230,45,22)" rx="2" ry="2" />
<text  x="145.26" y="703.5" ></text>
</g>
<g >
<title>tg/core/vm.run (102 samples, 0.01%)</title><rect x="501.7" y="373" width="0.2" height="15.0" fill="rgb(235,57,7)" rx="2" ry="2" />
<text  x="504.68" y="383.5" ></text>
</g>
<g >
<title>tg/crypto/secp256k1.RecoverPubkey (68 samples, 0.01%)</title><rect x="486.2" y="277" width="0.1" height="15.0" fill="rgb(240,170,34)" rx="2" ry="2" />
<text  x="489.23" y="287.5" ></text>
</g>
<g >
<title>tg/ethdb.Walk (87 samples, 0.01%)</title><rect x="232.3" y="661" width="0.2" height="15.0" fill="rgb(234,59,13)" rx="2" ry="2" />
<text  x="235.34" y="671.5" ></text>
</g>
<g >
<title>tg/eth/downloader.(*Downloader).synchronise (572,252 samples, 82.36%)</title><rect x="135.0" y="821" width="971.8" height="15.0" fill="rgb(229,183,28)" rx="2" ry="2" />
<text  x="137.99" y="831.5" >tg/eth/downloader.(*Downloader).synchronise</text>
</g>
<g >
<title>runtime.cgocall (97 samples, 0.01%)</title><rect x="797.3" y="501" width="0.2" height="15.0" fill="rgb(223,162,42)" rx="2" ry="2" />
<text  x="800.32" y="511.5" ></text>
</g>
<g >
<title>tg/crypto/bn256/cloudflare.(*twistPoint).Add (59 samples, 0.01%)</title><rect x="446.3" y="389" width="0.1" height="15.0" fill="rgb(245,174,22)" rx="2" ry="2" />
<text  x="449.27" y="399.5" ></text>
</g>
<g >
<title>runtime.cgocall (80 samples, 0.01%)</title><rect x="814.7" y="517" width="0.1" height="15.0" fill="rgb(210,62,10)" rx="2" ry="2" />
<text  x="817.70" y="527.5" ></text>
</g>
<g >
<title>bytes.Compare (298 samples, 0.04%)</title><rect x="177.7" y="485" width="0.5" height="15.0" fill="rgb(219,53,33)" rx="2" ry="2" />
<text  x="180.65" y="495.5" ></text>
</g>
<g >
<title>tg/rlp.makeStructDecoder.func1 (2,695 samples, 0.39%)</title><rect x="787.8" y="533" width="4.5" height="15.0" fill="rgb(223,120,15)" rx="2" ry="2" />
<text  x="790.77" y="543.5" ></text>
</g>
<g >
<title>runtime.checkTimers (1,486 samples, 0.21%)</title><rect x="106.6" y="805" width="2.5" height="15.0" fill="rgb(214,61,16)" rx="2" ry="2" />
<text  x="109.56" y="815.5" ></text>
</g>
<g >
<title>runtime.injectglist (496 samples, 0.07%)</title><rect x="108.1" y="725" width="0.9" height="15.0" fill="rgb(216,209,29)" rx="2" ry="2" />
<text  x="111.12" y="735.5" ></text>
</g>
<g >
<title>tg/ethdb.(*LmdbCursor).next (588 samples, 0.08%)</title><rect x="793.5" y="629" width="1.0" height="15.0" fill="rgb(242,166,54)" rx="2" ry="2" />
<text  x="796.53" y="639.5" ></text>
</g>
<g >
<title>bytes.Compare (149 samples, 0.02%)</title><rect x="1072.8" y="389" width="0.3" height="15.0" fill="rgb(249,29,12)" rx="2" ry="2" />
<text  x="1075.84" y="399.5" ></text>
</g>
<g >
<title>bytes.Compare (71 samples, 0.01%)</title><rect x="523.2" y="373" width="0.1" height="15.0" fill="rgb(234,117,50)" rx="2" ry="2" />
<text  x="526.18" y="383.5" ></text>
</g>
<g >
<title>runtime.growslice (76 samples, 0.01%)</title><rect x="1033.0" y="581" width="0.2" height="15.0" fill="rgb(208,221,5)" rx="2" ry="2" />
<text  x="1036.03" y="591.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.(*state).permute (775 samples, 0.11%)</title><rect x="127.7" y="757" width="1.4" height="15.0" fill="rgb(220,18,34)" rx="2" ry="2" />
<text  x="130.75" y="767.5" ></text>
</g>
<g >
<title>bytes.Compare (152 samples, 0.02%)</title><rect x="180.6" y="437" width="0.2" height="15.0" fill="rgb(209,225,26)" rx="2" ry="2" />
<text  x="183.56" y="447.5" ></text>
</g>
<g >
<title>cmpbody (168 samples, 0.02%)</title><rect x="815.3" y="597" width="0.3" height="15.0" fill="rgb(223,123,19)" rx="2" ry="2" />
<text  x="818.32" y="607.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).GetState (143 samples, 0.02%)</title><rect x="415.4" y="389" width="0.2" height="15.0" fill="rgb(212,43,39)" rx="2" ry="2" />
<text  x="418.39" y="399.5" ></text>
</g>
<g >
<title>tg/core/types.(*Log).CodecEncodeSelf (687 samples, 0.10%)</title><rect x="783.4" y="565" width="1.2" height="15.0" fill="rgb(214,51,24)" rx="2" ry="2" />
<text  x="786.44" y="575.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVMInterpreter).Run (301 samples, 0.04%)</title><rect x="484.4" y="229" width="0.5" height="15.0" fill="rgb(214,181,0)" rx="2" ry="2" />
<text  x="487.39" y="239.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).AddLog (316 samples, 0.05%)</title><rect x="365.3" y="517" width="0.5" height="15.0" fill="rgb(249,153,1)" rx="2" ry="2" />
<text  x="368.28" y="527.5" ></text>
</g>
<g >
<title>runtime.newobject (92 samples, 0.01%)</title><rect x="435.2" y="469" width="0.2" height="15.0" fill="rgb(218,76,47)" rx="2" ry="2" />
<text  x="438.25" y="479.5" ></text>
</g>
<g >
<title>sort.Search (174 samples, 0.03%)</title><rect x="702.1" y="485" width="0.3" height="15.0" fill="rgb(216,91,13)" rx="2" ry="2" />
<text  x="705.08" y="495.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*decRd).readn1IO (162 samples, 0.02%)</title><rect x="969.8" y="485" width="0.3" height="15.0" fill="rgb(231,35,19)" rx="2" ry="2" />
<text  x="972.82" y="495.5" ></text>
</g>
<g >
<title>tg/core/state.(*PlainStateReader).ReadAccountStorage (685 samples, 0.10%)</title><rect x="325.8" y="533" width="1.1" height="15.0" fill="rgb(229,114,39)" rx="2" ry="2" />
<text  x="328.78" y="543.5" ></text>
</g>
<g >
<title>tg/core/vm.opPop (144 samples, 0.02%)</title><rect x="428.3" y="533" width="0.2" height="15.0" fill="rgb(235,80,9)" rx="2" ry="2" />
<text  x="431.29" y="543.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (73 samples, 0.01%)</title><rect x="260.2" y="533" width="0.1" height="15.0" fill="rgb(230,36,39)" rx="2" ry="2" />
<text  x="263.20" y="543.5" ></text>
</g>
<g >
<title>tg/core/types/accounts.(*Account).DecodeForStorage (63 samples, 0.01%)</title><rect x="824.7" y="565" width="0.1" height="15.0" fill="rgb(233,215,22)" rx="2" ry="2" />
<text  x="827.65" y="575.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).precompile (149 samples, 0.02%)</title><rect x="624.4" y="645" width="0.3" height="15.0" fill="rgb(244,163,10)" rx="2" ry="2" />
<text  x="627.40" y="655.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.fastpathT.DecSliceBytesY (597 samples, 0.09%)</title><rect x="817.0" y="549" width="1.1" height="15.0" fill="rgb(222,11,24)" rx="2" ry="2" />
<text  x="820.05" y="559.5" ></text>
</g>
<g >
<title>tg/ethdb.(*mutation).doCommit.func1 (300 samples, 0.04%)</title><rect x="814.4" y="613" width="0.5" height="15.0" fill="rgb(220,121,40)" rx="2" ry="2" />
<text  x="817.38" y="623.5" ></text>
</g>
<g >
<title>tg/crypto/ecies.Encrypt (68 samples, 0.01%)</title><rect x="1187.6" y="725" width="0.1" height="15.0" fill="rgb(247,36,33)" rx="2" ry="2" />
<text  x="1190.63" y="735.5" ></text>
</g>
<g >
<title>tg/core/vm/stack.(*Stack).Swap (61 samples, 0.01%)</title><rect x="494.8" y="469" width="0.1" height="15.0" fill="rgb(224,135,4)" rx="2" ry="2" />
<text  x="497.79" y="479.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).Put.func1 (68 samples, 0.01%)</title><rect x="814.4" y="549" width="0.2" height="15.0" fill="rgb(239,119,27)" rx="2" ry="2" />
<text  x="817.44" y="559.5" ></text>
</g>
<g >
<title>sort.Stable (5,727 samples, 0.82%)</title><rect x="1067.9" y="565" width="9.7" height="15.0" fill="rgb(251,76,21)" rx="2" ry="2" />
<text  x="1070.88" y="575.5" ></text>
</g>
<g >
<title>tg/core/state.(*PlainStateReader).ReadAccountData (63 samples, 0.01%)</title><rect x="409.8" y="453" width="0.1" height="15.0" fill="rgb(249,151,51)" rx="2" ry="2" />
<text  x="412.78" y="463.5" ></text>
</g>
<g >
<title>tg/common/dbutils.PlainGenerateCompositeStorageKey (123 samples, 0.02%)</title><rect x="435.5" y="453" width="0.2" height="15.0" fill="rgb(215,93,49)" rx="2" ry="2" />
<text  x="438.46" y="463.5" ></text>
</g>
<g >
<title>tg/common/etl.(*sortableBuffer).Swap (100 samples, 0.01%)</title><rect x="1073.2" y="357" width="0.1" height="15.0" fill="rgb(211,107,15)" rx="2" ry="2" />
<text  x="1076.15" y="367.5" ></text>
</g>
<g >
<title>time.Now (127 samples, 0.02%)</title><rect x="1186.8" y="581" width="0.2" height="15.0" fill="rgb(225,166,7)" rx="2" ry="2" />
<text  x="1189.78" y="591.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVMInterpreter).Run (65 samples, 0.01%)</title><rect x="416.1" y="293" width="0.2" height="15.0" fill="rgb(214,60,14)" rx="2" ry="2" />
<text  x="419.15" y="303.5" ></text>
</g>
<g >
<title>tg/core.(*BlockChain).GetBodyRLP (85 samples, 0.01%)</title><rect x="1180.7" y="789" width="0.1" height="15.0" fill="rgb(210,19,47)" rx="2" ry="2" />
<text  x="1183.66" y="799.5" ></text>
</g>
<g >
<title>runtime.nanotime (61 samples, 0.01%)</title><rect x="1186.8" y="565" width="0.1" height="15.0" fill="rgb(228,228,33)" rx="2" ry="2" />
<text  x="1189.79" y="575.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVMInterpreter).Run (76 samples, 0.01%)</title><rect x="484.7" y="165" width="0.1" height="15.0" fill="rgb(216,165,54)" rx="2" ry="2" />
<text  x="487.70" y="175.5" ></text>
</g>
<g >
<title>tg/ethdb.(*TxDb).Walk (8,837 samples, 1.27%)</title><rect x="1031.3" y="693" width="15.0" height="15.0" fill="rgb(249,139,12)" rx="2" ry="2" />
<text  x="1034.29" y="703.5" ></text>
</g>
<g >
<title>tg/eth/stagedsync.readBlock (5,760 samples, 0.83%)</title><rect x="785.9" y="725" width="9.8" height="15.0" fill="rgb(223,32,20)" rx="2" ry="2" />
<text  x="788.91" y="735.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (72 samples, 0.01%)</title><rect x="861.0" y="469" width="0.1" height="15.0" fill="rgb(250,157,24)" rx="2" ry="2" />
<text  x="863.97" y="479.5" ></text>
</g>
<g >
<title>tg/ethdb.(*ObjectDatabase).Walk.func1 (9,003 samples, 1.30%)</title><rect x="214.8" y="677" width="15.3" height="15.0" fill="rgb(209,229,52)" rx="2" ry="2" />
<text  x="217.79" y="687.5" ></text>
</g>
<g >
<title>runtime.newarray (89 samples, 0.01%)</title><rect x="287.2" y="549" width="0.1" height="15.0" fill="rgb(220,123,15)" rx="2" ry="2" />
<text  x="290.15" y="559.5" ></text>
</g>
<g >
<title>bytes.Compare (254 samples, 0.04%)</title><rect x="190.1" y="229" width="0.4" height="15.0" fill="rgb(240,64,3)" rx="2" ry="2" />
<text  x="193.06" y="239.5" ></text>
</g>
<g >
<title>cmpbody (83 samples, 0.01%)</title><rect x="961.4" y="613" width="0.1" height="15.0" fill="rgb(224,190,40)" rx="2" ry="2" />
<text  x="964.39" y="623.5" ></text>
</g>
<g >
<title>sort.symMerge (6,490 samples, 0.93%)</title><rect x="182.0" y="421" width="11.1" height="15.0" fill="rgb(230,217,27)" rx="2" ry="2" />
<text  x="185.04" y="431.5" ></text>
</g>
<g >
<title>runtime.mallocgc (249 samples, 0.04%)</title><rect x="971.2" y="485" width="0.4" height="15.0" fill="rgb(216,102,42)" rx="2" ry="2" />
<text  x="974.22" y="495.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (61 samples, 0.01%)</title><rect x="435.3" y="373" width="0.1" height="15.0" fill="rgb(246,32,0)" rx="2" ry="2" />
<text  x="438.27" y="383.5" ></text>
</g>
<g >
<title>tg/ethdb.(*MutationItem).Less (234 samples, 0.03%)</title><rect x="282.1" y="469" width="0.4" height="15.0" fill="rgb(224,181,38)" rx="2" ry="2" />
<text  x="285.14" y="479.5" ></text>
</g>
<g >
<title>bytes.Compare (219 samples, 0.03%)</title><rect x="439.4" y="325" width="0.3" height="15.0" fill="rgb(238,130,39)" rx="2" ry="2" />
<text  x="442.35" y="335.5" ></text>
</g>
<g >
<title>tg/core/vm.opCallDataLoad (117 samples, 0.02%)</title><rect x="459.4" y="597" width="0.2" height="15.0" fill="rgb(242,1,47)" rx="2" ry="2" />
<text  x="462.45" y="607.5" ></text>
</g>
<g >
<title>tg/core/vm.(*bn256PairingIstanbul).Run (1,020 samples, 0.15%)</title><rect x="501.9" y="357" width="1.8" height="15.0" fill="rgb(208,7,31)" rx="2" ry="2" />
<text  x="504.94" y="367.5" ></text>
</g>
<g >
<title>sort.Search (70 samples, 0.01%)</title><rect x="418.9" y="261" width="0.1" height="15.0" fill="rgb(212,88,43)" rx="2" ry="2" />
<text  x="421.90" y="271.5" ></text>
</g>
<g >
<title>tg/core/vm.run (506 samples, 0.07%)</title><rect x="414.3" y="373" width="0.8" height="15.0" fill="rgb(219,121,47)" rx="2" ry="2" />
<text  x="417.26" y="383.5" ></text>
</g>
<g >
<title>tg/core/vm.opJump (296 samples, 0.04%)</title><rect x="423.9" y="533" width="0.5" height="15.0" fill="rgb(216,64,32)" rx="2" ry="2" />
<text  x="426.87" y="543.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.fastpathT.DecSliceBytesY (627 samples, 0.09%)</title><rect x="1089.0" y="581" width="1.1" height="15.0" fill="rgb(226,138,3)" rx="2" ry="2" />
<text  x="1092.01" y="591.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*ioDecReader).readb (80 samples, 0.01%)</title><rect x="1047.3" y="517" width="0.2" height="15.0" fill="rgb(254,228,17)" rx="2" ry="2" />
<text  x="1050.34" y="527.5" ></text>
</g>
<g >
<title>bytes.Compare (85 samples, 0.01%)</title><rect x="282.7" y="485" width="0.1" height="15.0" fill="rgb(212,190,5)" rx="2" ry="2" />
<text  x="285.69" y="495.5" ></text>
</g>
<g >
<title>sort.swapRange (145 samples, 0.02%)</title><rect x="865.7" y="373" width="0.3" height="15.0" fill="rgb(211,144,7)" rx="2" ry="2" />
<text  x="868.71" y="383.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (948 samples, 0.14%)</title><rect x="401.5" y="341" width="1.6" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="404.47" y="351.5" ></text>
</g>
<g >
<title>runtime.mallocgc (89 samples, 0.01%)</title><rect x="145.8" y="613" width="0.2" height="15.0" fill="rgb(230,43,45)" rx="2" ry="2" />
<text  x="148.84" y="623.5" ></text>
</g>
<g >
<title>tg/core/vm.opJumpi (413 samples, 0.06%)</title><rect x="505.4" y="533" width="0.7" height="15.0" fill="rgb(224,148,2)" rx="2" ry="2" />
<text  x="508.42" y="543.5" ></text>
</g>
<g >
<title>tg/core/vm.opStaticCall (85 samples, 0.01%)</title><rect x="416.5" y="341" width="0.1" height="15.0" fill="rgb(223,61,22)" rx="2" ry="2" />
<text  x="419.50" y="351.5" ></text>
</g>
<g >
<title>runtime.mapaccess1 (100 samples, 0.01%)</title><rect x="287.6" y="597" width="0.2" height="15.0" fill="rgb(210,151,25)" rx="2" ry="2" />
<text  x="290.64" y="607.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.decByteSlice (129 samples, 0.02%)</title><rect x="1047.3" y="549" width="0.2" height="15.0" fill="rgb(234,212,19)" rx="2" ry="2" />
<text  x="1050.32" y="559.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.readFull (151 samples, 0.02%)</title><rect x="817.5" y="469" width="0.3" height="15.0" fill="rgb(252,41,24)" rx="2" ry="2" />
<text  x="820.49" y="479.5" ></text>
</g>
<g >
<title>runtime.newobject (330 samples, 0.05%)</title><rect x="561.7" y="533" width="0.6" height="15.0" fill="rgb(252,217,11)" rx="2" ry="2" />
<text  x="564.74" y="543.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).iterate (11,004 samples, 1.58%)</title><rect x="796.2" y="677" width="18.7" height="15.0" fill="rgb(215,15,9)" rx="2" ry="2" />
<text  x="799.21" y="687.5" ></text>
</g>
<g >
<title>tg/core/vm.opCall (62 samples, 0.01%)</title><rect x="603.1" y="469" width="0.1" height="15.0" fill="rgb(215,195,42)" rx="2" ry="2" />
<text  x="606.09" y="479.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (213 samples, 0.03%)</title><rect x="340.1" y="485" width="0.4" height="15.0" fill="rgb(224,152,1)" rx="2" ry="2" />
<text  x="343.13" y="495.5" ></text>
</g>
<g >
<title>sort.rotate (106 samples, 0.02%)</title><rect x="867.3" y="325" width="0.2" height="15.0" fill="rgb(254,70,46)" rx="2" ry="2" />
<text  x="870.28" y="335.5" ></text>
</g>
<g >
<title>tg/core/state.(*stateObject).SetBalance (265 samples, 0.04%)</title><rect x="268.7" y="581" width="0.4" height="15.0" fill="rgb(220,63,50)" rx="2" ry="2" />
<text  x="271.67" y="591.5" ></text>
</g>
<g >
<title>bytes.Compare (181 samples, 0.03%)</title><rect x="702.6" y="469" width="0.3" height="15.0" fill="rgb(227,118,47)" rx="2" ry="2" />
<text  x="705.60" y="479.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (307 samples, 0.04%)</title><rect x="778.8" y="581" width="0.5" height="15.0" fill="rgb(250,20,0)" rx="2" ry="2" />
<text  x="781.81" y="591.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).getVal0.func1 (1,432 samples, 0.21%)</title><rect x="1043.9" y="613" width="2.4" height="15.0" fill="rgb(245,18,16)" rx="2" ry="2" />
<text  x="1046.85" y="623.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).Get (69 samples, 0.01%)</title><rect x="487.2" y="277" width="0.1" height="15.0" fill="rgb(238,210,5)" rx="2" ry="2" />
<text  x="490.16" y="287.5" ></text>
</g>
<g >
<title>sync.(*Pool).Put (118 samples, 0.02%)</title><rect x="656.5" y="629" width="0.2" height="15.0" fill="rgb(205,44,7)" rx="2" ry="2" />
<text  x="659.45" y="639.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.(*state).permute (261 samples, 0.04%)</title><rect x="490.1" y="421" width="0.5" height="15.0" fill="rgb(234,0,15)" rx="2" ry="2" />
<text  x="493.11" y="431.5" ></text>
</g>
<g >
<title>bytes.Compare (94 samples, 0.01%)</title><rect x="989.9" y="373" width="0.1" height="15.0" fill="rgb(210,137,14)" rx="2" ry="2" />
<text  x="992.87" y="383.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*Decoder).Decode (2,704 samples, 0.39%)</title><rect x="161.6" y="693" width="4.6" height="15.0" fill="rgb(224,175,35)" rx="2" ry="2" />
<text  x="164.57" y="703.5" ></text>
</g>
<g >
<title>tg/core/types.(*Block).Body (64 samples, 0.01%)</title><rect x="1128.3" y="789" width="0.1" height="15.0" fill="rgb(225,203,6)" rx="2" ry="2" />
<text  x="1131.30" y="799.5" ></text>
</g>
<g >
<title>runtime.newobject (161 samples, 0.02%)</title><rect x="643.7" y="645" width="0.3" height="15.0" fill="rgb(250,130,27)" rx="2" ry="2" />
<text  x="646.69" y="655.5" ></text>
</g>
<g >
<title>tg/crypto/bn256.PairingCheck (162 samples, 0.02%)</title><rect x="405.0" y="405" width="0.2" height="15.0" fill="rgb(241,49,41)" rx="2" ry="2" />
<text  x="407.95" y="415.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find (77 samples, 0.01%)</title><rect x="320.7" y="421" width="0.1" height="15.0" fill="rgb(235,14,6)" rx="2" ry="2" />
<text  x="323.71" y="431.5" ></text>
</g>
<g >
<title>runtime.(*lfstack).push (384 samples, 0.06%)</title><rect x="56.7" y="773" width="0.6" height="15.0" fill="rgb(225,64,54)" rx="2" ry="2" />
<text  x="59.68" y="783.5" ></text>
</g>
<g >
<title>runtime.mallocgc (295 samples, 0.04%)</title><rect x="762.7" y="533" width="0.5" height="15.0" fill="rgb(251,185,15)" rx="2" ry="2" />
<text  x="765.71" y="543.5" ></text>
</g>
<g >
<title>tg/core/vm.memoryMStore (115 samples, 0.02%)</title><rect x="336.6" y="597" width="0.2" height="15.0" fill="rgb(242,92,13)" rx="2" ry="2" />
<text  x="339.59" y="607.5" ></text>
</g>
<g >
<title>runtime.cgoCheckPointer (154 samples, 0.02%)</title><rect x="1021.6" y="517" width="0.3" height="15.0" fill="rgb(228,89,23)" rx="2" ry="2" />
<text  x="1024.64" y="527.5" ></text>
</g>
<g >
<title>runtime.memmove (204 samples, 0.03%)</title><rect x="862.5" y="501" width="0.4" height="15.0" fill="rgb(239,29,4)" rx="2" ry="2" />
<text  x="865.51" y="511.5" ></text>
</g>
<g >
<title>runtime.memmove (72 samples, 0.01%)</title><rect x="1124.1" y="517" width="0.2" height="15.0" fill="rgb(218,75,22)" rx="2" ry="2" />
<text  x="1127.14" y="527.5" ></text>
</g>
<g >
<title>sort.symMerge (3,001 samples, 0.43%)</title><rect x="1072.3" y="421" width="5.1" height="15.0" fill="rgb(233,79,45)" rx="2" ry="2" />
<text  x="1075.28" y="431.5" ></text>
</g>
<g >
<title>sort.Search (1,148 samples, 0.17%)</title><rect x="437.1" y="341" width="2.0" height="15.0" fill="rgb(238,191,35)" rx="2" ry="2" />
<text  x="440.14" y="351.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.(*state).Read (601 samples, 0.09%)</title><rect x="824.9" y="533" width="1.0" height="15.0" fill="rgb(249,12,15)" rx="2" ry="2" />
<text  x="827.90" y="543.5" ></text>
</g>
<g >
<title>container/heap.down (109 samples, 0.02%)</title><rect x="144.6" y="661" width="0.2" height="15.0" fill="rgb(243,25,22)" rx="2" ry="2" />
<text  x="147.65" y="671.5" ></text>
</g>
<g >
<title>tg/core/vm.opGt (93 samples, 0.01%)</title><rect x="528.7" y="597" width="0.1" height="15.0" fill="rgb(225,52,34)" rx="2" ry="2" />
<text  x="531.67" y="607.5" ></text>
</g>
<g >
<title>sort.swapRange (204 samples, 0.03%)</title><rect x="183.1" y="373" width="0.4" height="15.0" fill="rgb(238,223,15)" rx="2" ry="2" />
<text  x="186.15" y="383.5" ></text>
</g>
<g >
<title>tg/core/vm.opStaticCall (198 samples, 0.03%)</title><rect x="406.2" y="405" width="0.3" height="15.0" fill="rgb(216,90,7)" rx="2" ry="2" />
<text  x="409.19" y="415.5" ></text>
</g>
<g >
<title>tg/ethdb.(*MutationItem).Less (345 samples, 0.05%)</title><rect x="688.9" y="533" width="0.6" height="15.0" fill="rgb(221,208,2)" rx="2" ry="2" />
<text  x="691.91" y="543.5" ></text>
</g>
<g >
<title>runtime.mallocgc (162 samples, 0.02%)</title><rect x="696.8" y="597" width="0.2" height="15.0" fill="rgb(248,167,32)" rx="2" ry="2" />
<text  x="699.76" y="607.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (109 samples, 0.02%)</title><rect x="983.8" y="421" width="0.2" height="15.0" fill="rgb(240,189,25)" rx="2" ry="2" />
<text  x="986.81" y="431.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).getVal1.func1 (112 samples, 0.02%)</title><rect x="504.9" y="389" width="0.2" height="15.0" fill="rgb(236,60,1)" rx="2" ry="2" />
<text  x="507.89" y="399.5" ></text>
</g>
<g >
<title>tg/rlp.Encode (168 samples, 0.02%)</title><rect x="1166.3" y="773" width="0.3" height="15.0" fill="rgb(237,105,35)" rx="2" ry="2" />
<text  x="1169.29" y="783.5" ></text>
</g>
<g >
<title>sort.Search (126 samples, 0.02%)</title><rect x="326.0" y="405" width="0.2" height="15.0" fill="rgb(236,48,10)" rx="2" ry="2" />
<text  x="328.98" y="415.5" ></text>
</g>
<g >
<title>sort.symMerge (1,401 samples, 0.20%)</title><rect x="869.8" y="245" width="2.3" height="15.0" fill="rgb(243,163,17)" rx="2" ry="2" />
<text  x="872.75" y="255.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).Put (2,090 samples, 0.30%)</title><rect x="723.7" y="597" width="3.6" height="15.0" fill="rgb(241,154,22)" rx="2" ry="2" />
<text  x="726.75" y="607.5" ></text>
</g>
<g >
<title>runtime.cgoCheckPointer (349 samples, 0.05%)</title><rect x="1025.0" y="565" width="0.6" height="15.0" fill="rgb(242,59,32)" rx="2" ry="2" />
<text  x="1028.01" y="575.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb._Cfunc_lmdbgo_mdb_cursor_get1 (1,413 samples, 0.20%)</title><rect x="283.2" y="485" width="2.4" height="15.0" fill="rgb(244,184,22)" rx="2" ry="2" />
<text  x="286.20" y="495.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (131 samples, 0.02%)</title><rect x="971.4" y="437" width="0.2" height="15.0" fill="rgb(205,59,3)" rx="2" ry="2" />
<text  x="974.38" y="447.5" ></text>
</g>
<g >
<title>runtime.memhash_varlen (280 samples, 0.04%)</title><rect x="698.9" y="597" width="0.5" height="15.0" fill="rgb(244,158,37)" rx="2" ry="2" />
<text  x="701.88" y="607.5" ></text>
</g>
<g >
<title>tg/common/etl.(*oldestEntrySortableBuffer).Put (3,659 samples, 0.53%)</title><rect x="978.7" y="581" width="6.2" height="15.0" fill="rgb(236,102,18)" rx="2" ry="2" />
<text  x="981.73" y="591.5" ></text>
</g>
<g >
<title>reflect.packEface (446 samples, 0.06%)</title><rect x="210.1" y="373" width="0.7" height="15.0" fill="rgb(254,36,22)" rx="2" ry="2" />
<text  x="213.07" y="383.5" ></text>
</g>
<g >
<title>runtime.mapiternext (128 samples, 0.02%)</title><rect x="1084.7" y="613" width="0.2" height="15.0" fill="rgb(236,145,30)" rx="2" ry="2" />
<text  x="1087.68" y="623.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*bufioEncWriter).flushErr (98 samples, 0.01%)</title><rect x="195.8" y="485" width="0.1" height="15.0" fill="rgb(235,88,44)" rx="2" ry="2" />
<text  x="198.76" y="495.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb._Cfunc_lmdbgo_mdb_cursor_put2 (68 samples, 0.01%)</title><rect x="814.4" y="533" width="0.2" height="15.0" fill="rgb(228,162,32)" rx="2" ry="2" />
<text  x="817.44" y="543.5" ></text>
</g>
<g >
<title>runtime.growslice (208 samples, 0.03%)</title><rect x="985.0" y="549" width="0.4" height="15.0" fill="rgb(244,15,52)" rx="2" ry="2" />
<text  x="988.04" y="559.5" ></text>
</g>
<g >
<title>tg/core/vm.run (63 samples, 0.01%)</title><rect x="514.1" y="373" width="0.1" height="15.0" fill="rgb(229,183,14)" rx="2" ry="2" />
<text  x="517.10" y="383.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVMInterpreter).Run (70 samples, 0.01%)</title><rect x="483.9" y="229" width="0.1" height="15.0" fill="rgb(243,52,27)" rx="2" ry="2" />
<text  x="486.88" y="239.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb._Cfunc_lmdbgo_mdb_get (7,794 samples, 1.12%)</title><rect x="835.1" y="469" width="13.2" height="15.0" fill="rgb(225,172,48)" rx="2" ry="2" />
<text  x="838.06" y="479.5" ></text>
</g>
<g >
<title>tg/core/vm/stack.(*Stack).Swap (133 samples, 0.02%)</title><rect x="519.5" y="533" width="0.2" height="15.0" fill="rgb(209,60,53)" rx="2" ry="2" />
<text  x="522.47" y="543.5" ></text>
</g>
<g >
<title>runtime.cgocall (4,736 samples, 0.68%)</title><rect x="1013.6" y="501" width="8.0" height="15.0" fill="rgb(237,31,9)" rx="2" ry="2" />
<text  x="1016.60" y="511.5" ></text>
</g>
<g >
<title>tg/core.Transfer (71 samples, 0.01%)</title><rect x="471.8" y="501" width="0.1" height="15.0" fill="rgb(243,140,53)" rx="2" ry="2" />
<text  x="474.77" y="511.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (80 samples, 0.01%)</title><rect x="701.2" y="581" width="0.2" height="15.0" fill="rgb(220,88,5)" rx="2" ry="2" />
<text  x="704.24" y="591.5" ></text>
</g>
<g >
<title>sort.symMerge (6,936 samples, 1.00%)</title><rect x="181.3" y="437" width="11.8" height="15.0" fill="rgb(249,158,16)" rx="2" ry="2" />
<text  x="184.33" y="447.5" ></text>
</g>
<g >
<title>tg/rlp.writeByteArrayCopy (113 samples, 0.02%)</title><rect x="764.9" y="357" width="0.2" height="15.0" fill="rgb(250,221,0)" rx="2" ry="2" />
<text  x="767.88" y="367.5" ></text>
</g>
<g >
<title>tg/core/state.(*PlainStateReader).ReadAccountIncarnation (322 samples, 0.05%)</title><rect x="460.6" y="533" width="0.6" height="15.0" fill="rgb(243,18,32)" rx="2" ry="2" />
<text  x="463.63" y="543.5" ></text>
</g>
<g >
<title>cmpbody (195 samples, 0.03%)</title><rect x="869.3" y="229" width="0.3" height="15.0" fill="rgb(232,68,33)" rx="2" ry="2" />
<text  x="872.28" y="239.5" ></text>
</g>
<g >
<title>runtime.mapaccess2 (67 samples, 0.01%)</title><rect x="244.4" y="597" width="0.1" height="15.0" fill="rgb(223,50,9)" rx="2" ry="2" />
<text  x="247.40" y="607.5" ></text>
</g>
<g >
<title>runtime.convT64 (251 samples, 0.04%)</title><rect x="1025.6" y="565" width="0.4" height="15.0" fill="rgb(234,194,22)" rx="2" ry="2" />
<text  x="1028.61" y="575.5" ></text>
</g>
<g >
<title>cmpbody (64 samples, 0.01%)</title><rect x="320.9" y="373" width="0.1" height="15.0" fill="rgb(211,164,26)" rx="2" ry="2" />
<text  x="323.91" y="383.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).scavengeRangeLocked (1,138 samples, 0.16%)</title><rect x="10.8" y="789" width="2.0" height="15.0" fill="rgb(217,193,27)" rx="2" ry="2" />
<text  x="13.84" y="799.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.(*arrayContainer).clone (93 samples, 0.01%)</title><rect x="148.0" y="581" width="0.2" height="15.0" fill="rgb(244,33,13)" rx="2" ry="2" />
<text  x="151.05" y="591.5" ></text>
</g>
<g >
<title>tg/core/vm.RunPrecompiledContract (68 samples, 0.01%)</title><rect x="486.2" y="309" width="0.1" height="15.0" fill="rgb(225,185,20)" rx="2" ry="2" />
<text  x="489.23" y="319.5" ></text>
</g>
<g >
<title>runtime.exitsyscall (117 samples, 0.02%)</title><rect x="1021.4" y="485" width="0.2" height="15.0" fill="rgb(218,73,35)" rx="2" ry="2" />
<text  x="1024.44" y="495.5" ></text>
</g>
<g >
<title>sort.symMerge (666 samples, 0.10%)</title><rect x="143.0" y="597" width="1.1" height="15.0" fill="rgb(237,70,54)" rx="2" ry="2" />
<text  x="146.01" y="607.5" ></text>
</g>
<g >
<title>runtime.cgocall (364 samples, 0.05%)</title><rect x="730.0" y="549" width="0.6" height="15.0" fill="rgb(212,171,3)" rx="2" ry="2" />
<text  x="733.00" y="559.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*BTree).Get (388 samples, 0.06%)</title><rect x="606.9" y="437" width="0.6" height="15.0" fill="rgb(252,198,1)" rx="2" ry="2" />
<text  x="609.87" y="447.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (635 samples, 0.09%)</title><rect x="621.5" y="549" width="1.1" height="15.0" fill="rgb(247,82,36)" rx="2" ry="2" />
<text  x="624.49" y="559.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*BTree).Get (278 samples, 0.04%)</title><rect x="461.2" y="485" width="0.5" height="15.0" fill="rgb(220,28,41)" rx="2" ry="2" />
<text  x="464.23" y="495.5" ></text>
</g>
<g >
<title>tg/ethdb.(*lmdbTx).Rollback (1,483 samples, 0.21%)</title><rect x="849.0" y="533" width="2.5" height="15.0" fill="rgb(228,134,28)" rx="2" ry="2" />
<text  x="851.96" y="543.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (150 samples, 0.02%)</title><rect x="519.8" y="469" width="0.2" height="15.0" fill="rgb(251,148,31)" rx="2" ry="2" />
<text  x="522.77" y="479.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.(*state).permute (105 samples, 0.02%)</title><rect x="1134.4" y="757" width="0.2" height="15.0" fill="rgb(210,46,33)" rx="2" ry="2" />
<text  x="1137.38" y="767.5" ></text>
</g>
<g >
<title>runtime.mapaccess1 (79 samples, 0.01%)</title><rect x="265.8" y="613" width="0.2" height="15.0" fill="rgb(208,41,23)" rx="2" ry="2" />
<text  x="268.83" y="623.5" ></text>
</g>
<g >
<title>tg/core/types.(*Header).Hash (128 samples, 0.02%)</title><rect x="134.6" y="869" width="0.3" height="15.0" fill="rgb(224,88,27)" rx="2" ry="2" />
<text  x="137.65" y="879.5" ></text>
</g>
<g >
<title>sort.rotate (137 samples, 0.02%)</title><rect x="988.8" y="421" width="0.2" height="15.0" fill="rgb(223,192,19)" rx="2" ry="2" />
<text  x="991.81" y="431.5" ></text>
</g>
<g >
<title>runtime.makeBucketArray (151 samples, 0.02%)</title><rect x="983.8" y="533" width="0.2" height="15.0" fill="rgb(235,73,6)" rx="2" ry="2" />
<text  x="986.75" y="543.5" ></text>
</g>
<g >
<title>tg/ethdb.(*mutation).Get (803 samples, 0.12%)</title><rect x="498.7" y="405" width="1.4" height="15.0" fill="rgb(223,31,39)" rx="2" ry="2" />
<text  x="501.75" y="415.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (160 samples, 0.02%)</title><rect x="519.8" y="485" width="0.2" height="15.0" fill="rgb(222,217,43)" rx="2" ry="2" />
<text  x="522.77" y="495.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*cborEncDriver).EncodeStringBytesRaw (120 samples, 0.02%)</title><rect x="144.2" y="565" width="0.2" height="15.0" fill="rgb(246,196,27)" rx="2" ry="2" />
<text  x="147.24" y="575.5" ></text>
</g>
<g >
<title>tg/rlp.(*encbuf).encode (1,628 samples, 0.23%)</title><rect x="209.5" y="453" width="2.8" height="15.0" fill="rgb(227,18,29)" rx="2" ry="2" />
<text  x="212.54" y="463.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (66 samples, 0.01%)</title><rect x="595.7" y="501" width="0.1" height="15.0" fill="rgb(247,157,37)" rx="2" ry="2" />
<text  x="598.67" y="511.5" ></text>
</g>
<g >
<title>bytes.Compare (137 samples, 0.02%)</title><rect x="992.2" y="277" width="0.3" height="15.0" fill="rgb(232,138,14)" rx="2" ry="2" />
<text  x="995.22" y="287.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find (159 samples, 0.02%)</title><rect x="527.4" y="437" width="0.3" height="15.0" fill="rgb(216,213,44)" rx="2" ry="2" />
<text  x="530.38" y="447.5" ></text>
</g>
<g >
<title>runtime.SetFinalizer (866 samples, 0.12%)</title><rect x="908.2" y="501" width="1.5" height="15.0" fill="rgb(236,24,50)" rx="2" ry="2" />
<text  x="911.24" y="511.5" ></text>
</g>
<g >
<title>tg/ethdb.(*mutation).getMem (81 samples, 0.01%)</title><rect x="593.9" y="501" width="0.2" height="15.0" fill="rgb(252,11,15)" rx="2" ry="2" />
<text  x="596.92" y="511.5" ></text>
</g>
<g >
<title>runtime.stringtoslicebyte (268 samples, 0.04%)</title><rect x="1081.6" y="613" width="0.5" height="15.0" fill="rgb(210,58,37)" rx="2" ry="2" />
<text  x="1084.65" y="623.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (96 samples, 0.01%)</title><rect x="120.3" y="821" width="0.2" height="15.0" fill="rgb(236,112,19)" rx="2" ry="2" />
<text  x="123.34" y="831.5" ></text>
</g>
<g >
<title>runtime.rawbyteslice (201 samples, 0.03%)</title><rect x="735.8" y="645" width="0.3" height="15.0" fill="rgb(234,67,15)" rx="2" ry="2" />
<text  x="738.78" y="655.5" ></text>
</g>
<g >
<title>tg/common/etl.loadFilesIntoBucket.func1 (2,322 samples, 0.33%)</title><rect x="818.6" y="629" width="3.9" height="15.0" fill="rgb(205,6,52)" rx="2" ry="2" />
<text  x="821.60" y="639.5" ></text>
</g>
<g >
<title>tg/ethdb.(*mutation).Get (86 samples, 0.01%)</title><rect x="1131.1" y="789" width="0.2" height="15.0" fill="rgb(243,209,11)" rx="2" ry="2" />
<text  x="1134.14" y="799.5" ></text>
</g>
<g >
<title>tg/params.GetForkFlag (590 samples, 0.08%)</title><rect x="642.4" y="645" width="1.0" height="15.0" fill="rgb(208,151,28)" rx="2" ry="2" />
<text  x="645.43" y="655.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (165 samples, 0.02%)</title><rect x="893.1" y="501" width="0.2" height="15.0" fill="rgb(228,65,29)" rx="2" ry="2" />
<text  x="896.06" y="511.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.(*state).padAndPermute (1,182 samples, 0.17%)</title><rect x="206.6" y="533" width="2.0" height="15.0" fill="rgb(232,51,13)" rx="2" ry="2" />
<text  x="209.59" y="543.5" ></text>
</g>
<g >
<title>sync.(*RWMutex).RLock (89 samples, 0.01%)</title><rect x="283.0" y="565" width="0.1" height="15.0" fill="rgb(227,180,36)" rx="2" ry="2" />
<text  x="285.97" y="575.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (246 samples, 0.04%)</title><rect x="826.9" y="517" width="0.4" height="15.0" fill="rgb(225,132,18)" rx="2" ry="2" />
<text  x="829.86" y="527.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).GetCode (104 samples, 0.01%)</title><rect x="598.2" y="565" width="0.2" height="15.0" fill="rgb(210,70,41)" rx="2" ry="2" />
<text  x="601.19" y="575.5" ></text>
</g>
<g >
<title>reflect.Value.Slice (116 samples, 0.02%)</title><rect x="219.8" y="389" width="0.2" height="15.0" fill="rgb(215,72,9)" rx="2" ry="2" />
<text  x="222.77" y="399.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*cborEncDriver).EncodeStringBytesRaw (242 samples, 0.03%)</title><rect x="784.1" y="517" width="0.4" height="15.0" fill="rgb(227,210,8)" rx="2" ry="2" />
<text  x="787.07" y="527.5" ></text>
</g>
<g >
<title>tg/ethdb.(*mutation).Get (670 samples, 0.10%)</title><rect x="325.8" y="517" width="1.1" height="15.0" fill="rgb(206,25,7)" rx="2" ry="2" />
<text  x="328.81" y="527.5" ></text>
</g>
<g >
<title>runtime.unlockWithRank (185 samples, 0.03%)</title><rect x="100.0" y="805" width="0.3" height="15.0" fill="rgb(241,84,21)" rx="2" ry="2" />
<text  x="103.03" y="815.5" ></text>
</g>
<g >
<title>sort.doPivot (149 samples, 0.02%)</title><rect x="722.7" y="597" width="0.2" height="15.0" fill="rgb(236,26,2)" rx="2" ry="2" />
<text  x="725.67" y="607.5" ></text>
</g>
<g >
<title>tg/core/state.(*PlainStateReader).ReadAccountCode (89 samples, 0.01%)</title><rect x="598.2" y="533" width="0.2" height="15.0" fill="rgb(215,14,6)" rx="2" ry="2" />
<text  x="601.21" y="543.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.(*state).padAndPermute (69 samples, 0.01%)</title><rect x="1029.2" y="581" width="0.1" height="15.0" fill="rgb(251,32,35)" rx="2" ry="2" />
<text  x="1032.21" y="591.5" ></text>
</g>
<g >
<title>runtime.(*headTailIndex).incTail (125 samples, 0.02%)</title><rect x="33.4" y="805" width="0.2" height="15.0" fill="rgb(239,94,41)" rx="2" ry="2" />
<text  x="36.35" y="815.5" ></text>
</g>
<g >
<title>tg/ethdb.(*LmdbCursor).put (1,698 samples, 0.24%)</title><rect x="811.5" y="581" width="2.9" height="15.0" fill="rgb(253,28,15)" rx="2" ry="2" />
<text  x="814.50" y="591.5" ></text>
</g>
<g >
<title>tg/ethdb.(*LmdbCursor).getBothRange (83 samples, 0.01%)</title><rect x="386.0" y="229" width="0.1" height="15.0" fill="rgb(237,205,10)" rx="2" ry="2" />
<text  x="388.97" y="239.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).StaticCall (337 samples, 0.05%)</title><rect x="603.9" y="453" width="0.6" height="15.0" fill="rgb(206,86,39)" rx="2" ry="2" />
<text  x="606.91" y="463.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).FinalizeTx (8,552 samples, 1.23%)</title><rect x="628.9" y="677" width="14.5" height="15.0" fill="rgb(253,145,42)" rx="2" ry="2" />
<text  x="631.91" y="687.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).SetState (2,119 samples, 0.30%)</title><rect x="594.3" y="581" width="3.6" height="15.0" fill="rgb(217,165,3)" rx="2" ry="2" />
<text  x="597.29" y="591.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).DelegateCall (285 samples, 0.04%)</title><rect x="515.4" y="325" width="0.5" height="15.0" fill="rgb(244,220,30)" rx="2" ry="2" />
<text  x="518.37" y="335.5" ></text>
</g>
<g >
<title>tg/ethdb.(*TxDb).Get (176 samples, 0.03%)</title><rect x="419.4" y="373" width="0.3" height="15.0" fill="rgb(238,220,53)" rx="2" ry="2" />
<text  x="422.36" y="383.5" ></text>
</g>
<g >
<title>reflect.typedmemmove (404 samples, 0.06%)</title><rect x="743.2" y="469" width="0.7" height="15.0" fill="rgb(213,127,31)" rx="2" ry="2" />
<text  x="746.25" y="479.5" ></text>
</g>
<g >
<title>tg/rlp.makeSliceWriter.func1 (603 samples, 0.09%)</title><rect x="765.1" y="373" width="1.0" height="15.0" fill="rgb(208,224,42)" rx="2" ry="2" />
<text  x="768.08" y="383.5" ></text>
</g>
<g >
<title>runtime.cgocall (289 samples, 0.04%)</title><rect x="371.0" y="405" width="0.5" height="15.0" fill="rgb(249,114,47)" rx="2" ry="2" />
<text  x="373.97" y="415.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.(*roaringArray).insertNewKeyValueAt (302 samples, 0.04%)</title><rect x="148.4" y="613" width="0.5" height="15.0" fill="rgb(223,111,46)" rx="2" ry="2" />
<text  x="151.37" y="623.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).getVal2.func1 (9,460 samples, 1.36%)</title><rect x="911.7" y="469" width="16.1" height="15.0" fill="rgb(236,106,52)" rx="2" ry="2" />
<text  x="914.74" y="479.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).Snapshot (140 samples, 0.02%)</title><rect x="292.7" y="629" width="0.3" height="15.0" fill="rgb(239,27,42)" rx="2" ry="2" />
<text  x="295.72" y="639.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (272 samples, 0.04%)</title><rect x="907.1" y="453" width="0.4" height="15.0" fill="rgb(247,74,3)" rx="2" ry="2" />
<text  x="910.08" y="463.5" ></text>
</g>
<g >
<title>runtime.(*gcBits).bitp (78 samples, 0.01%)</title><rect x="68.5" y="789" width="0.2" height="15.0" fill="rgb(243,211,3)" rx="2" ry="2" />
<text  x="71.55" y="799.5" ></text>
</g>
<g >
<title>tg/core/state.(*PlainStateReader).ReadAccountCodeSize (869 samples, 0.13%)</title><rect x="527.1" y="565" width="1.5" height="15.0" fill="rgb(220,84,3)" rx="2" ry="2" />
<text  x="530.14" y="575.5" ></text>
</g>
<g >
<title>github.com/holiman/uint256.(*Int).MulMod (282 samples, 0.04%)</title><rect x="417.6" y="453" width="0.5" height="15.0" fill="rgb(229,228,22)" rx="2" ry="2" />
<text  x="420.61" y="463.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Txn).Commit (333 samples, 0.05%)</title><rect x="1188.2" y="805" width="0.6" height="15.0" fill="rgb(212,190,26)" rx="2" ry="2" />
<text  x="1191.19" y="815.5" ></text>
</g>
<g >
<title>sort.symMerge (781 samples, 0.11%)</title><rect x="1075.8" y="293" width="1.3" height="15.0" fill="rgb(247,18,51)" rx="2" ry="2" />
<text  x="1078.80" y="303.5" ></text>
</g>
<g >
<title>tg/core/state.(*journal).append (764 samples, 0.11%)</title><rect x="242.6" y="565" width="1.3" height="15.0" fill="rgb(237,173,15)" rx="2" ry="2" />
<text  x="245.64" y="575.5" ></text>
</g>
<g >
<title>container/heap.down (665 samples, 0.10%)</title><rect x="166.7" y="645" width="1.2" height="15.0" fill="rgb(254,15,18)" rx="2" ry="2" />
<text  x="169.75" y="655.5" ></text>
</g>
<g >
<title>runtime.newobject (70 samples, 0.01%)</title><rect x="135.0" y="709" width="0.1" height="15.0" fill="rgb(236,172,16)" rx="2" ry="2" />
<text  x="138.02" y="719.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (76 samples, 0.01%)</title><rect x="435.3" y="437" width="0.1" height="15.0" fill="rgb(228,74,11)" rx="2" ry="2" />
<text  x="438.26" y="447.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).getStateObject (60 samples, 0.01%)</title><rect x="324.9" y="565" width="0.1" height="15.0" fill="rgb(249,37,28)" rx="2" ry="2" />
<text  x="327.93" y="575.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc.func1 (165 samples, 0.02%)</title><rect x="1101.1" y="373" width="0.3" height="15.0" fill="rgb(250,48,52)" rx="2" ry="2" />
<text  x="1104.14" y="383.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring/roaring64.(*Bitmap).And (190 samples, 0.03%)</title><rect x="1102.0" y="581" width="0.3" height="15.0" fill="rgb(240,44,53)" rx="2" ry="2" />
<text  x="1105.01" y="591.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (77 samples, 0.01%)</title><rect x="1176.4" y="725" width="0.1" height="15.0" fill="rgb(219,19,4)" rx="2" ry="2" />
<text  x="1179.40" y="735.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (97 samples, 0.01%)</title><rect x="594.9" y="517" width="0.2" height="15.0" fill="rgb(221,167,44)" rx="2" ry="2" />
<text  x="597.92" y="527.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (69 samples, 0.01%)</title><rect x="1097.0" y="469" width="0.1" height="15.0" fill="rgb(234,178,18)" rx="2" ry="2" />
<text  x="1099.95" y="479.5" ></text>
</g>
<g >
<title>tg/crypto/ecies.(*PrivateKey).GenerateShared (60 samples, 0.01%)</title><rect x="1187.5" y="709" width="0.1" height="15.0" fill="rgb(214,69,3)" rx="2" ry="2" />
<text  x="1190.51" y="719.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc.func1 (79 samples, 0.01%)</title><rect x="768.1" y="469" width="0.1" height="15.0" fill="rgb(247,80,8)" rx="2" ry="2" />
<text  x="771.08" y="479.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (108 samples, 0.02%)</title><rect x="978.3" y="517" width="0.2" height="15.0" fill="rgb(235,136,43)" rx="2" ry="2" />
<text  x="981.30" y="527.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (198 samples, 0.03%)</title><rect x="243.3" y="501" width="0.4" height="15.0" fill="rgb(227,169,36)" rx="2" ry="2" />
<text  x="246.33" y="511.5" ></text>
</g>
<g >
<title>cmpbody (312 samples, 0.04%)</title><rect x="256.9" y="453" width="0.5" height="15.0" fill="rgb(211,56,3)" rx="2" ry="2" />
<text  x="259.88" y="463.5" ></text>
</g>
<g >
<title>runtime.unlock2 (585 samples, 0.08%)</title><rect x="31.3" y="773" width="1.0" height="15.0" fill="rgb(254,100,13)" rx="2" ry="2" />
<text  x="34.28" y="783.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).Put.func1 (82 samples, 0.01%)</title><rect x="814.6" y="549" width="0.1" height="15.0" fill="rgb(249,178,22)" rx="2" ry="2" />
<text  x="817.56" y="559.5" ></text>
</g>
<g >
<title>runtime.mapassign (80 samples, 0.01%)</title><rect x="527.0" y="549" width="0.1" height="15.0" fill="rgb(252,114,3)" rx="2" ry="2" />
<text  x="530.00" y="559.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (453 samples, 0.07%)</title><rect x="975.7" y="533" width="0.8" height="15.0" fill="rgb(237,19,42)" rx="2" ry="2" />
<text  x="978.69" y="543.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).Create (128 samples, 0.02%)</title><rect x="495.5" y="517" width="0.2" height="15.0" fill="rgb(213,164,19)" rx="2" ry="2" />
<text  x="498.45" y="527.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).iterate (985 samples, 0.14%)</title><rect x="1126.6" y="725" width="1.7" height="15.0" fill="rgb(215,193,38)" rx="2" ry="2" />
<text  x="1129.61" y="735.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (81 samples, 0.01%)</title><rect x="1051.9" y="517" width="0.1" height="15.0" fill="rgb(219,63,44)" rx="2" ry="2" />
<text  x="1054.89" y="527.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).getVal0 (1,287 samples, 0.19%)</title><rect x="203.7" y="453" width="2.2" height="15.0" fill="rgb(245,89,52)" rx="2" ry="2" />
<text  x="206.67" y="463.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).getStateObject (66 samples, 0.01%)</title><rect x="322.5" y="565" width="0.1" height="15.0" fill="rgb(227,120,52)" rx="2" ry="2" />
<text  x="325.46" y="575.5" ></text>
</g>
<g >
<title>github.com/holiman/uint256.(*Int).AddMod (107 samples, 0.02%)</title><rect x="471.3" y="517" width="0.2" height="15.0" fill="rgb(222,42,36)" rx="2" ry="2" />
<text  x="474.34" y="527.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).getStateObject (106 samples, 0.02%)</title><rect x="460.1" y="533" width="0.2" height="15.0" fill="rgb(234,13,42)" rx="2" ry="2" />
<text  x="463.12" y="543.5" ></text>
</g>
<g >
<title>cmpbody (116 samples, 0.02%)</title><rect x="581.5" y="405" width="0.2" height="15.0" fill="rgb(221,153,1)" rx="2" ry="2" />
<text  x="584.53" y="415.5" ></text>
</g>
<g >
<title>tg/rlp.(*Stream).uint (178 samples, 0.03%)</title><rect x="791.2" y="501" width="0.3" height="15.0" fill="rgb(228,73,41)" rx="2" ry="2" />
<text  x="794.15" y="511.5" ></text>
</g>
<g >
<title>sort.quickSort_func (513 samples, 0.07%)</title><rect x="961.0" y="677" width="0.9" height="15.0" fill="rgb(222,118,16)" rx="2" ry="2" />
<text  x="964.01" y="687.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (59 samples, 0.01%)</title><rect x="965.6" y="581" width="0.1" height="15.0" fill="rgb(210,125,1)" rx="2" ry="2" />
<text  x="968.63" y="591.5" ></text>
</g>
<g >
<title>runtime.scanblock (77 samples, 0.01%)</title><rect x="60.2" y="709" width="0.1" height="15.0" fill="rgb(246,127,33)" rx="2" ry="2" />
<text  x="63.22" y="719.5" ></text>
</g>
<g >
<title>runtime.heapBits.initSpan (119 samples, 0.02%)</title><rect x="1055.4" y="405" width="0.2" height="15.0" fill="rgb(220,134,13)" rx="2" ry="2" />
<text  x="1058.42" y="415.5" ></text>
</g>
<g >
<title>bytes.Compare (124 samples, 0.02%)</title><rect x="991.8" y="293" width="0.2" height="15.0" fill="rgb(237,84,34)" rx="2" ry="2" />
<text  x="994.84" y="303.5" ></text>
</g>
<g >
<title>runtime.makeslice (161 samples, 0.02%)</title><rect x="788.5" y="485" width="0.2" height="15.0" fill="rgb(214,227,46)" rx="2" ry="2" />
<text  x="791.45" y="495.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (98 samples, 0.01%)</title><rect x="516.6" y="357" width="0.2" height="15.0" fill="rgb(233,88,7)" rx="2" ry="2" />
<text  x="519.63" y="367.5" ></text>
</g>
<g >
<title>tg/core/types.bloomValues (6,305 samples, 0.91%)</title><rect x="645.9" y="645" width="10.8" height="15.0" fill="rgb(206,49,23)" rx="2" ry="2" />
<text  x="648.95" y="655.5" ></text>
</g>
<g >
<title>runtime.memmove (104 samples, 0.01%)</title><rect x="861.2" y="517" width="0.2" height="15.0" fill="rgb(225,19,51)" rx="2" ry="2" />
<text  x="864.18" y="527.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.(*roaringArray).getIndex (106 samples, 0.02%)</title><rect x="1096.0" y="581" width="0.2" height="15.0" fill="rgb(224,108,28)" rx="2" ry="2" />
<text  x="1098.99" y="591.5" ></text>
</g>
<g >
<title>tg/core/vm.RunPrecompiledContract (246 samples, 0.04%)</title><rect x="404.9" y="437" width="0.4" height="15.0" fill="rgb(212,132,36)" rx="2" ry="2" />
<text  x="407.86" y="447.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*cborDecDriver).DecodeBytes (115 samples, 0.02%)</title><rect x="165.4" y="517" width="0.2" height="15.0" fill="rgb(252,108,1)" rx="2" ry="2" />
<text  x="168.36" y="527.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).Get (255 samples, 0.04%)</title><rect x="607.6" y="405" width="0.4" height="15.0" fill="rgb(233,202,48)" rx="2" ry="2" />
<text  x="610.56" y="415.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find.func1 (189 samples, 0.03%)</title><rect x="282.6" y="501" width="0.4" height="15.0" fill="rgb(216,174,16)" rx="2" ry="2" />
<text  x="285.64" y="511.5" ></text>
</g>
<g >
<title>reflect.Value.Interface (575 samples, 0.08%)</title><rect x="1109.0" y="533" width="0.9" height="15.0" fill="rgb(222,151,12)" rx="2" ry="2" />
<text  x="1111.95" y="543.5" ></text>
</g>
<g >
<title>runtime.newarray (159 samples, 0.02%)</title><rect x="434.9" y="421" width="0.2" height="15.0" fill="rgb(244,104,30)" rx="2" ry="2" />
<text  x="437.86" y="431.5" ></text>
</g>
<g >
<title>tg/p2p/dnsdisc.(*clientTree).syncNextRandomENR (71 samples, 0.01%)</title><rect x="1189.9" y="805" width="0.1" height="15.0" fill="rgb(215,98,16)" rx="2" ry="2" />
<text  x="1192.87" y="815.5" ></text>
</g>
<g >
<title>tg/common/changeset.FromDBFormat.func1 (209 samples, 0.03%)</title><rect x="1058.1" y="645" width="0.4" height="15.0" fill="rgb(213,90,12)" rx="2" ry="2" />
<text  x="1061.13" y="655.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (70 samples, 0.01%)</title><rect x="892.3" y="501" width="0.1" height="15.0" fill="rgb(215,141,50)" rx="2" ry="2" />
<text  x="895.29" y="511.5" ></text>
</g>
<g >
<title>runtime.newobject (81 samples, 0.01%)</title><rect x="995.3" y="549" width="0.1" height="15.0" fill="rgb(246,125,35)" rx="2" ry="2" />
<text  x="998.30" y="559.5" ></text>
</g>
<g >
<title>cmpbody (115 samples, 0.02%)</title><rect x="990.3" y="341" width="0.2" height="15.0" fill="rgb(243,157,33)" rx="2" ry="2" />
<text  x="993.31" y="351.5" ></text>
</g>
<g >
<title>sort.rotate (129 samples, 0.02%)</title><rect x="189.0" y="261" width="0.3" height="15.0" fill="rgb(214,49,5)" rx="2" ry="2" />
<text  x="192.04" y="271.5" ></text>
</g>
<g >
<title>sort.symMerge (789 samples, 0.11%)</title><rect x="870.7" y="213" width="1.3" height="15.0" fill="rgb(211,82,29)" rx="2" ry="2" />
<text  x="873.71" y="223.5" ></text>
</g>
<g >
<title>tg/rlp.writeBytes (218 samples, 0.03%)</title><rect x="766.1" y="373" width="0.4" height="15.0" fill="rgb(239,195,9)" rx="2" ry="2" />
<text  x="769.10" y="383.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (374 samples, 0.05%)</title><rect x="527.2" y="485" width="0.6" height="15.0" fill="rgb(246,15,52)" rx="2" ry="2" />
<text  x="530.18" y="495.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).Call (65 samples, 0.01%)</title><rect x="416.1" y="325" width="0.2" height="15.0" fill="rgb(234,224,45)" rx="2" ry="2" />
<text  x="419.15" y="335.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb._Cfunc_mdb_cursor_get (298 samples, 0.04%)</title><rect x="221.1" y="469" width="0.5" height="15.0" fill="rgb(236,21,37)" rx="2" ry="2" />
<text  x="224.09" y="479.5" ></text>
</g>
<g >
<title>runtime.growslice (292 samples, 0.04%)</title><rect x="1051.7" y="581" width="0.5" height="15.0" fill="rgb(246,80,16)" rx="2" ry="2" />
<text  x="1054.72" y="591.5" ></text>
</g>
<g >
<title>bytes.Compare (328 samples, 0.05%)</title><rect x="256.9" y="469" width="0.5" height="15.0" fill="rgb(213,50,33)" rx="2" ry="2" />
<text  x="259.87" y="479.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVMInterpreter).Run (228 samples, 0.03%)</title><rect x="386.9" y="293" width="0.4" height="15.0" fill="rgb(227,94,45)" rx="2" ry="2" />
<text  x="389.87" y="303.5" ></text>
</g>
<g >
<title>reflect.(*rtype).typeOff (91 samples, 0.01%)</title><rect x="217.5" y="389" width="0.1" height="15.0" fill="rgb(211,66,34)" rx="2" ry="2" />
<text  x="220.46" y="399.5" ></text>
</g>
<g >
<title>runtime.memmove (61 samples, 0.01%)</title><rect x="520.1" y="517" width="0.1" height="15.0" fill="rgb(254,114,31)" rx="2" ry="2" />
<text  x="523.12" y="527.5" ></text>
</g>
<g >
<title>tg/rlp.writeBytes (68 samples, 0.01%)</title><rect x="226.8" y="453" width="0.1" height="15.0" fill="rgb(211,14,0)" rx="2" ry="2" />
<text  x="229.75" y="463.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (246 samples, 0.04%)</title><rect x="897.4" y="437" width="0.5" height="15.0" fill="rgb(231,19,1)" rx="2" ry="2" />
<text  x="900.45" y="447.5" ></text>
</g>
<g >
<title>runtime.(*mheap).freeMSpanLocked (61 samples, 0.01%)</title><rect x="26.0" y="773" width="0.1" height="15.0" fill="rgb(252,169,54)" rx="2" ry="2" />
<text  x="29.03" y="783.5" ></text>
</g>
<g >
<title>tg/common/etl.(*oldestEntrySortableBuffer).Swap (156 samples, 0.02%)</title><rect x="987.9" y="421" width="0.3" height="15.0" fill="rgb(219,134,6)" rx="2" ry="2" />
<text  x="990.94" y="431.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).Put (1,856 samples, 0.27%)</title><rect x="730.9" y="597" width="3.2" height="15.0" fill="rgb(230,114,40)" rx="2" ry="2" />
<text  x="733.91" y="607.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*decRd).readn1IO (71 samples, 0.01%)</title><rect x="1089.2" y="517" width="0.1" height="15.0" fill="rgb(215,183,1)" rx="2" ry="2" />
<text  x="1092.16" y="527.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (65 samples, 0.01%)</title><rect x="1098.1" y="549" width="0.1" height="15.0" fill="rgb(213,180,7)" rx="2" ry="2" />
<text  x="1101.12" y="559.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.(*state).Read (255 samples, 0.04%)</title><rect x="418.2" y="453" width="0.4" height="15.0" fill="rgb(207,227,8)" rx="2" ry="2" />
<text  x="421.21" y="463.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find (2,456 samples, 0.35%)</title><rect x="564.4" y="405" width="4.2" height="15.0" fill="rgb(221,164,19)" rx="2" ry="2" />
<text  x="567.40" y="415.5" ></text>
</g>
<g >
<title>tg/rlp.writeUint256NoPtr (498 samples, 0.07%)</title><rect x="226.9" y="453" width="0.8" height="15.0" fill="rgb(210,117,32)" rx="2" ry="2" />
<text  x="229.88" y="463.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (137 samples, 0.02%)</title><rect x="340.9" y="453" width="0.3" height="15.0" fill="rgb(244,83,35)" rx="2" ry="2" />
<text  x="343.92" y="463.5" ></text>
</g>
<g >
<title>runtime.exitsyscall (153 samples, 0.02%)</title><rect x="850.0" y="437" width="0.3" height="15.0" fill="rgb(210,167,9)" rx="2" ry="2" />
<text  x="853.00" y="447.5" ></text>
</g>
<g >
<title>runtime.profilealloc (62 samples, 0.01%)</title><rect x="1055.9" y="469" width="0.1" height="15.0" fill="rgb(235,214,0)" rx="2" ry="2" />
<text  x="1058.92" y="479.5" ></text>
</g>
<g >
<title>tg/core/types.(*Receipt).CodecEncodeSelf (148 samples, 0.02%)</title><rect x="784.7" y="565" width="0.2" height="15.0" fill="rgb(205,229,28)" rx="2" ry="2" />
<text  x="787.69" y="575.5" ></text>
</g>
<g >
<title>tg/rlp.(*Stream).readFull (107 samples, 0.02%)</title><rect x="201.1" y="325" width="0.2" height="15.0" fill="rgb(205,61,8)" rx="2" ry="2" />
<text  x="204.12" y="335.5" ></text>
</g>
<g >
<title>sort.Search (1,616 samples, 0.23%)</title><rect x="705.2" y="501" width="2.7" height="15.0" fill="rgb(219,196,44)" rx="2" ry="2" />
<text  x="708.16" y="511.5" ></text>
</g>
<g >
<title>runtime.(*mheap).allocSpan (155 samples, 0.02%)</title><rect x="1101.1" y="357" width="0.3" height="15.0" fill="rgb(210,54,48)" rx="2" ry="2" />
<text  x="1104.14" y="367.5" ></text>
</g>
<g >
<title>tg/core/vm.(*Memory).Set32 (170 samples, 0.02%)</title><rect x="605.8" y="517" width="0.3" height="15.0" fill="rgb(242,44,33)" rx="2" ry="2" />
<text  x="608.78" y="527.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.(*Bitmap).RunOptimize (832 samples, 0.12%)</title><rect x="1061.4" y="613" width="1.4" height="15.0" fill="rgb(225,8,40)" rx="2" ry="2" />
<text  x="1064.37" y="623.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (61 samples, 0.01%)</title><rect x="977.9" y="581" width="0.1" height="15.0" fill="rgb(220,7,0)" rx="2" ry="2" />
<text  x="980.92" y="591.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (124 samples, 0.02%)</title><rect x="124.7" y="789" width="0.2" height="15.0" fill="rgb(246,166,49)" rx="2" ry="2" />
<text  x="127.74" y="799.5" ></text>
</g>
<g >
<title>tg/rlp.(*Stream).readUint (91 samples, 0.01%)</title><rect x="1185.4" y="517" width="0.2" height="15.0" fill="rgb(236,91,9)" rx="2" ry="2" />
<text  x="1188.42" y="527.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*BTree).Get (773 samples, 0.11%)</title><rect x="498.8" y="389" width="1.3" height="15.0" fill="rgb(253,129,27)" rx="2" ry="2" />
<text  x="501.75" y="399.5" ></text>
</g>
<g >
<title>runtime.mapaccess1 (138 samples, 0.02%)</title><rect x="1186.5" y="549" width="0.3" height="15.0" fill="rgb(244,127,42)" rx="2" ry="2" />
<text  x="1189.55" y="559.5" ></text>
</g>
<g >
<title>bytes.Compare (128 samples, 0.02%)</title><rect x="867.9" y="293" width="0.2" height="15.0" fill="rgb(208,25,20)" rx="2" ry="2" />
<text  x="870.88" y="303.5" ></text>
</g>
<g >
<title>sync/atomic.(*Value).Store (88 samples, 0.01%)</title><rect x="206.3" y="565" width="0.2" height="15.0" fill="rgb(225,106,22)" rx="2" ry="2" />
<text  x="209.30" y="575.5" ></text>
</g>
<g >
<title>runtime.memmove (64 samples, 0.01%)</title><rect x="760.1" y="597" width="0.1" height="15.0" fill="rgb(209,49,29)" rx="2" ry="2" />
<text  x="763.14" y="607.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (9,582 samples, 1.38%)</title><rect x="563.3" y="453" width="16.3" height="15.0" fill="rgb(219,29,44)" rx="2" ry="2" />
<text  x="566.31" y="463.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.fastpathEncodeTypeSwitch (1,120 samples, 0.16%)</title><rect x="873.2" y="469" width="1.9" height="15.0" fill="rgb(213,124,51)" rx="2" ry="2" />
<text  x="876.16" y="479.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find.func1 (73 samples, 0.01%)</title><rect x="325.9" y="373" width="0.1" height="15.0" fill="rgb(234,31,5)" rx="2" ry="2" />
<text  x="328.85" y="383.5" ></text>
</g>
<g >
<title>tg/common/etl.(*fileDataProvider).Next (1,510 samples, 0.22%)</title><rect x="168.8" y="661" width="2.6" height="15.0" fill="rgb(227,126,25)" rx="2" ry="2" />
<text  x="171.82" y="671.5" ></text>
</g>
<g >
<title>runtime.systemstack (304 samples, 0.04%)</title><rect x="933.0" y="453" width="0.5" height="15.0" fill="rgb(235,119,20)" rx="2" ry="2" />
<text  x="935.96" y="463.5" ></text>
</g>
<g >
<title>runtime.(*mspan).ensureSwept (80 samples, 0.01%)</title><rect x="909.0" y="421" width="0.1" height="15.0" fill="rgb(236,67,35)" rx="2" ry="2" />
<text  x="911.95" y="431.5" ></text>
</g>
<g >
<title>runtime.mallocgc (182 samples, 0.03%)</title><rect x="978.2" y="565" width="0.3" height="15.0" fill="rgb(222,139,0)" rx="2" ry="2" />
<text  x="981.20" y="575.5" ></text>
</g>
<g >
<title>time.Now (120 samples, 0.02%)</title><rect x="203.0" y="405" width="0.2" height="15.0" fill="rgb(224,103,1)" rx="2" ry="2" />
<text  x="205.96" y="415.5" ></text>
</g>
<g >
<title>runtime/pprof.profileWriter (99 samples, 0.01%)</title><rect x="127.1" y="869" width="0.2" height="15.0" fill="rgb(224,145,32)" rx="2" ry="2" />
<text  x="130.15" y="879.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).GetState (6,663 samples, 0.96%)</title><rect x="433.1" y="517" width="11.3" height="15.0" fill="rgb(205,195,46)" rx="2" ry="2" />
<text  x="436.08" y="527.5" ></text>
</g>
<g >
<title>runtime.mallocgc (121 samples, 0.02%)</title><rect x="656.8" y="645" width="0.2" height="15.0" fill="rgb(229,101,11)" rx="2" ry="2" />
<text  x="659.84" y="655.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVMInterpreter).Run (61 samples, 0.01%)</title><rect x="603.1" y="421" width="0.1" height="15.0" fill="rgb(226,126,11)" rx="2" ry="2" />
<text  x="606.09" y="431.5" ></text>
</g>
<g >
<title>tg/core/vm.opSload (148 samples, 0.02%)</title><rect x="415.4" y="405" width="0.2" height="15.0" fill="rgb(222,80,6)" rx="2" ry="2" />
<text  x="418.38" y="415.5" ></text>
</g>
<g >
<title>sort.Search (1,325 samples, 0.19%)</title><rect x="246.7" y="453" width="2.3" height="15.0" fill="rgb(234,106,16)" rx="2" ry="2" />
<text  x="249.72" y="463.5" ></text>
</g>
<g >
<title>tg/rlp.decodeUint256 (742 samples, 0.11%)</title><rect x="217.7" y="405" width="1.3" height="15.0" fill="rgb(212,78,20)" rx="2" ry="2" />
<text  x="220.74" y="415.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*BTree).Get (7,553 samples, 1.09%)</title><rect x="245.6" y="565" width="12.8" height="15.0" fill="rgb(206,32,53)" rx="2" ry="2" />
<text  x="248.58" y="575.5" ></text>
</g>
<g >
<title>sort.quickSort (511 samples, 0.07%)</title><rect x="1028.1" y="485" width="0.8" height="15.0" fill="rgb(222,78,39)" rx="2" ry="2" />
<text  x="1031.06" y="495.5" ></text>
</g>
<g >
<title>runtime.mallocgc (162 samples, 0.02%)</title><rect x="852.9" y="533" width="0.3" height="15.0" fill="rgb(206,103,1)" rx="2" ry="2" />
<text  x="855.93" y="543.5" ></text>
</g>
<g >
<title>runtime.systemstack (63 samples, 0.01%)</title><rect x="1177.3" y="645" width="0.1" height="15.0" fill="rgb(241,138,3)" rx="2" ry="2" />
<text  x="1180.31" y="655.5" ></text>
</g>
<g >
<title>runtime.mapaccess2 (124 samples, 0.02%)</title><rect x="433.7" y="485" width="0.2" height="15.0" fill="rgb(229,151,45)" rx="2" ry="2" />
<text  x="436.73" y="495.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).Get (755 samples, 0.11%)</title><rect x="160.2" y="693" width="1.2" height="15.0" fill="rgb(228,4,29)" rx="2" ry="2" />
<text  x="163.16" y="703.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.(*bitmapContainer).iadd (75 samples, 0.01%)</title><rect x="137.0" y="693" width="0.1" height="15.0" fill="rgb(210,64,11)" rx="2" ry="2" />
<text  x="139.95" y="703.5" ></text>
</g>
<g >
<title>tg/p2p.(*rlpxTransport).WriteMsg (101 samples, 0.01%)</title><rect x="1188.0" y="837" width="0.1" height="15.0" fill="rgb(226,140,23)" rx="2" ry="2" />
<text  x="1190.97" y="847.5" ></text>
</g>
<g >
<title>sort.Search (175 samples, 0.03%)</title><rect x="510.2" y="325" width="0.3" height="15.0" fill="rgb(254,170,24)" rx="2" ry="2" />
<text  x="513.16" y="335.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (104 samples, 0.01%)</title><rect x="244.7" y="549" width="0.1" height="15.0" fill="rgb(207,82,15)" rx="2" ry="2" />
<text  x="247.66" y="559.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).GetOrNewStateObject (178 samples, 0.03%)</title><rect x="241.9" y="597" width="0.3" height="15.0" fill="rgb(228,7,53)" rx="2" ry="2" />
<text  x="244.91" y="607.5" ></text>
</g>
<g >
<title>runtime.mallocgc (77 samples, 0.01%)</title><rect x="848.8" y="453" width="0.1" height="15.0" fill="rgb(247,120,37)" rx="2" ry="2" />
<text  x="851.77" y="463.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVMInterpreter).Run (59 samples, 0.01%)</title><rect x="484.5" y="37" width="0.1" height="15.0" fill="rgb(223,218,0)" rx="2" ry="2" />
<text  x="487.49" y="47.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (135 samples, 0.02%)</title><rect x="971.4" y="453" width="0.2" height="15.0" fill="rgb(218,74,46)" rx="2" ry="2" />
<text  x="974.38" y="463.5" ></text>
</g>
<g >
<title>tg/core/vm.opDiv (59 samples, 0.01%)</title><rect x="504.0" y="533" width="0.1" height="15.0" fill="rgb(207,62,9)" rx="2" ry="2" />
<text  x="506.95" y="543.5" ></text>
</g>
<g >
<title>cmpbody (1,336 samples, 0.19%)</title><rect x="709.5" y="469" width="2.3" height="15.0" fill="rgb(244,136,32)" rx="2" ry="2" />
<text  x="712.51" y="479.5" ></text>
</g>
<g >
<title>runtime.memmove (69 samples, 0.01%)</title><rect x="749.6" y="613" width="0.1" height="15.0" fill="rgb(235,130,47)" rx="2" ry="2" />
<text  x="752.62" y="623.5" ></text>
</g>
<g >
<title>runtime.newobject (147 samples, 0.02%)</title><rect x="271.5" y="581" width="0.3" height="15.0" fill="rgb(212,99,32)" rx="2" ry="2" />
<text  x="274.54" y="591.5" ></text>
</g>
<g >
<title>runtime.cgocall (1,776 samples, 0.26%)</title><rect x="441.1" y="341" width="3.1" height="15.0" fill="rgb(223,6,44)" rx="2" ry="2" />
<text  x="444.14" y="351.5" ></text>
</g>
<g >
<title>runtime.mallocgc (67 samples, 0.01%)</title><rect x="741.3" y="645" width="0.1" height="15.0" fill="rgb(219,94,2)" rx="2" ry="2" />
<text  x="744.32" y="655.5" ></text>
</g>
<g >
<title>tg/ethdb.(*ObjectDatabase).Get (423 samples, 0.06%)</title><rect x="231.0" y="693" width="0.7" height="15.0" fill="rgb(216,39,3)" rx="2" ry="2" />
<text  x="233.97" y="703.5" ></text>
</g>
<g >
<title>memeqbody (314 samples, 0.05%)</title><rect x="1037.2" y="613" width="0.5" height="15.0" fill="rgb(217,47,49)" rx="2" ry="2" />
<text  x="1040.21" y="623.5" ></text>
</g>
<g >
<title>bytes.Compare (246 samples, 0.04%)</title><rect x="187.1" y="293" width="0.4" height="15.0" fill="rgb(226,2,32)" rx="2" ry="2" />
<text  x="190.10" y="303.5" ></text>
</g>
<g >
<title>sync.(*RWMutex).RUnlock (160 samples, 0.02%)</title><rect x="1133.2" y="725" width="0.3" height="15.0" fill="rgb(225,196,24)" rx="2" ry="2" />
<text  x="1136.19" y="735.5" ></text>
</g>
<g >
<title>tg/ethdb.(*mutation).Get (390 samples, 0.06%)</title><rect x="464.4" y="517" width="0.7" height="15.0" fill="rgb(212,87,49)" rx="2" ry="2" />
<text  x="467.45" y="527.5" ></text>
</g>
<g >
<title>runtime.mapassign (94 samples, 0.01%)</title><rect x="445.6" y="485" width="0.2" height="15.0" fill="rgb(240,56,42)" rx="2" ry="2" />
<text  x="448.61" y="495.5" ></text>
</g>
<g >
<title>tg/crypto/bn256/cloudflare.(*gfP12).Exp (171 samples, 0.02%)</title><rect x="502.5" y="293" width="0.3" height="15.0" fill="rgb(239,189,28)" rx="2" ry="2" />
<text  x="505.55" y="303.5" ></text>
</g>
<g >
<title>tg/rlp.cachedTypeInfo (129 samples, 0.02%)</title><rect x="1126.2" y="709" width="0.3" height="15.0" fill="rgb(226,176,22)" rx="2" ry="2" />
<text  x="1129.24" y="719.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVMInterpreter).Run (104 samples, 0.01%)</title><rect x="479.0" y="229" width="0.1" height="15.0" fill="rgb(252,74,48)" rx="2" ry="2" />
<text  x="481.97" y="239.5" ></text>
</g>
<g >
<title>runtime.mallocgc (297 samples, 0.04%)</title><rect x="259.8" y="549" width="0.5" height="15.0" fill="rgb(248,149,31)" rx="2" ry="2" />
<text  x="262.84" y="559.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.(*state).padAndPermute (1,244 samples, 0.18%)</title><rect x="738.8" y="645" width="2.1" height="15.0" fill="rgb(232,97,13)" rx="2" ry="2" />
<text  x="741.77" y="655.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.fastpathDecodeTypeSwitch (637 samples, 0.09%)</title><rect x="1089.0" y="597" width="1.1" height="15.0" fill="rgb(214,60,9)" rx="2" ry="2" />
<text  x="1091.99" y="607.5" ></text>
</g>
<g >
<title>runtime.convT2E (81 samples, 0.01%)</title><rect x="815.9" y="613" width="0.1" height="15.0" fill="rgb(230,111,36)" rx="2" ry="2" />
<text  x="818.89" y="623.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (172 samples, 0.02%)</title><rect x="286.4" y="533" width="0.3" height="15.0" fill="rgb(225,0,37)" rx="2" ry="2" />
<text  x="289.43" y="543.5" ></text>
</g>
<g >
<title>tg/core/vm.opSload (91 samples, 0.01%)</title><rect x="497.9" y="405" width="0.2" height="15.0" fill="rgb(217,69,24)" rx="2" ry="2" />
<text  x="500.91" y="415.5" ></text>
</g>
<g >
<title>tg/core/types.EIP155Signer.SenderWithContext (20,001 samples, 2.88%)</title><rect x="1132.2" y="837" width="33.9" height="15.0" fill="rgb(233,203,51)" rx="2" ry="2" />
<text  x="1135.17" y="847.5" >tg..</text>
</g>
<g >
<title>runtime.acquirem (87 samples, 0.01%)</title><rect x="239.3" y="597" width="0.1" height="15.0" fill="rgb(244,10,17)" rx="2" ry="2" />
<text  x="242.30" y="607.5" ></text>
</g>
<g >
<title>tg/core/rawdb.WriteTransactions (3,828 samples, 0.55%)</title><rect x="1120.0" y="757" width="6.5" height="15.0" fill="rgb(218,217,12)" rx="2" ry="2" />
<text  x="1122.96" y="767.5" ></text>
</g>
<g >
<title>tg/core/state.(*PlainStateWriter).WriteAccountStorage (14,966 samples, 2.15%)</title><rect x="695.5" y="645" width="25.4" height="15.0" fill="rgb(218,114,7)" rx="2" ry="2" />
<text  x="698.46" y="655.5" >t..</text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).SubBalance (63 samples, 0.01%)</title><rect x="369.5" y="485" width="0.1" height="15.0" fill="rgb(230,120,28)" rx="2" ry="2" />
<text  x="372.45" y="495.5" ></text>
</g>
<g >
<title>tg/rlp.(*encbuf).encode (2,162 samples, 0.31%)</title><rect x="1122.2" y="725" width="3.7" height="15.0" fill="rgb(245,17,8)" rx="2" ry="2" />
<text  x="1125.23" y="735.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.(*state).Reset (111 samples, 0.02%)</title><rect x="891.4" y="533" width="0.2" height="15.0" fill="rgb(205,181,38)" rx="2" ry="2" />
<text  x="894.42" y="543.5" ></text>
</g>
<g >
<title>tg/core/vm.(*bn256PairingIstanbul).Run (84 samples, 0.01%)</title><rect x="416.5" y="293" width="0.1" height="15.0" fill="rgb(252,186,51)" rx="2" ry="2" />
<text  x="419.50" y="303.5" ></text>
</g>
<g >
<title>tg/consensus/ethash.hashimotoLight.func1 (3,034 samples, 0.44%)</title><rect x="129.3" y="773" width="5.1" height="15.0" fill="rgb(254,167,1)" rx="2" ry="2" />
<text  x="132.25" y="783.5" ></text>
</g>
<g >
<title>runtime.(*headTailIndex).cas (186 samples, 0.03%)</title><rect x="21.2" y="821" width="0.3" height="15.0" fill="rgb(235,105,45)" rx="2" ry="2" />
<text  x="24.16" y="831.5" ></text>
</g>
<g >
<title>bytes.Compare (168 samples, 0.02%)</title><rect x="868.8" y="261" width="0.3" height="15.0" fill="rgb(205,194,32)" rx="2" ry="2" />
<text  x="871.80" y="271.5" ></text>
</g>
<g >
<title>tg/common/etl.NewCollector.func2 (1,063 samples, 0.15%)</title><rect x="142.8" y="693" width="1.8" height="15.0" fill="rgb(229,77,17)" rx="2" ry="2" />
<text  x="145.80" y="703.5" ></text>
</g>
<g >
<title>tg/core/vm.RunPrecompiledContract (84 samples, 0.01%)</title><rect x="416.5" y="309" width="0.1" height="15.0" fill="rgb(239,217,41)" rx="2" ry="2" />
<text  x="419.50" y="319.5" ></text>
</g>
<g >
<title>tg/common/etl.FlushToDisk (282 samples, 0.04%)</title><rect x="193.3" y="549" width="0.4" height="15.0" fill="rgb(231,6,26)" rx="2" ry="2" />
<text  x="196.25" y="559.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.binarySearch (99 samples, 0.01%)</title><rect x="136.6" y="677" width="0.2" height="15.0" fill="rgb(251,106,6)" rx="2" ry="2" />
<text  x="139.60" y="687.5" ></text>
</g>
<g >
<title>tg/core/vm.opSha3 (83 samples, 0.01%)</title><rect x="481.3" y="405" width="0.1" height="15.0" fill="rgb(216,33,2)" rx="2" ry="2" />
<text  x="484.28" y="415.5" ></text>
</g>
<g >
<title>tg/rlp.writeByteArrayCopy (477 samples, 0.07%)</title><rect x="765.3" y="341" width="0.8" height="15.0" fill="rgb(243,71,30)" rx="2" ry="2" />
<text  x="768.29" y="351.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).getVal1.func1 (182 samples, 0.03%)</title><rect x="341.2" y="437" width="0.3" height="15.0" fill="rgb(243,151,27)" rx="2" ry="2" />
<text  x="344.23" y="447.5" ></text>
</g>
<g >
<title>tg/rlp.makeByteArrayWriter.func1 (118 samples, 0.02%)</title><rect x="764.9" y="373" width="0.2" height="15.0" fill="rgb(250,1,48)" rx="2" ry="2" />
<text  x="767.88" y="383.5" ></text>
</g>
<g >
<title>tg/core/state.(*PlainStateReader).ReadAccountStorage (248 samples, 0.04%)</title><rect x="395.2" y="341" width="0.4" height="15.0" fill="rgb(243,82,22)" rx="2" ry="2" />
<text  x="398.18" y="351.5" ></text>
</g>
<g >
<title>github.com/holiman/uint256.(*Int).AddMod (75 samples, 0.01%)</title><rect x="412.6" y="453" width="0.1" height="15.0" fill="rgb(240,139,29)" rx="2" ry="2" />
<text  x="415.60" y="463.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).Call (3,159 samples, 0.45%)</title><rect x="477.3" y="453" width="5.3" height="15.0" fill="rgb(227,81,34)" rx="2" ry="2" />
<text  x="480.28" y="463.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).insert (408 samples, 0.06%)</title><rect x="666.0" y="581" width="0.7" height="15.0" fill="rgb(211,183,0)" rx="2" ry="2" />
<text  x="669.04" y="591.5" ></text>
</g>
<g >
<title>runtime.cgocall (424 samples, 0.06%)</title><rect x="1057.1" y="501" width="0.7" height="15.0" fill="rgb(250,138,15)" rx="2" ry="2" />
<text  x="1060.13" y="511.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (97 samples, 0.01%)</title><rect x="909.4" y="453" width="0.1" height="15.0" fill="rgb(215,131,39)" rx="2" ry="2" />
<text  x="912.37" y="463.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (78 samples, 0.01%)</title><rect x="1097.9" y="501" width="0.2" height="15.0" fill="rgb(222,141,21)" rx="2" ry="2" />
<text  x="1100.95" y="511.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*cborEncDriver).EncodeStringBytesRaw (256 samples, 0.04%)</title><rect x="994.5" y="469" width="0.5" height="15.0" fill="rgb(221,84,36)" rx="2" ry="2" />
<text  x="997.53" y="479.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (76 samples, 0.01%)</title><rect x="860.1" y="405" width="0.2" height="15.0" fill="rgb(242,100,36)" rx="2" ry="2" />
<text  x="863.12" y="415.5" ></text>
</g>
<g >
<title>tg/core/types.(*Log).codecDecodeSelfFromArray (1,378 samples, 0.20%)</title><rect x="163.2" y="549" width="2.4" height="15.0" fill="rgb(235,8,37)" rx="2" ry="2" />
<text  x="166.22" y="559.5" ></text>
</g>
<g >
<title>runtime.arenaIndex (59 samples, 0.01%)</title><rect x="827.3" y="517" width="0.1" height="15.0" fill="rgb(236,195,34)" rx="2" ry="2" />
<text  x="830.29" y="527.5" ></text>
</g>
<g >
<title>tg/core/state.(*PlainStateWriter).WriteChangeSets.func2 (2,527 samples, 0.36%)</title><rect x="729.9" y="645" width="4.3" height="15.0" fill="rgb(231,65,16)" rx="2" ry="2" />
<text  x="732.90" y="655.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).getVal1 (112 samples, 0.02%)</title><rect x="504.9" y="405" width="0.2" height="15.0" fill="rgb(248,12,49)" rx="2" ry="2" />
<text  x="507.89" y="415.5" ></text>
</g>
<g >
<title>tg/p2p.(*rlpxTransport).ReadMsg (2,584 samples, 0.37%)</title><rect x="1176.1" y="853" width="4.3" height="15.0" fill="rgb(238,35,48)" rx="2" ry="2" />
<text  x="1179.06" y="863.5" ></text>
</g>
<g >
<title>tg/ethdb.(*mutation).Get (83 samples, 0.01%)</title><rect x="387.8" y="341" width="0.2" height="15.0" fill="rgb(251,171,27)" rx="2" ry="2" />
<text  x="390.82" y="351.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb._Cfunc_lmdbgo_mdb_cursor_put2 (82 samples, 0.01%)</title><rect x="814.6" y="533" width="0.1" height="15.0" fill="rgb(242,187,52)" rx="2" ry="2" />
<text  x="817.56" y="543.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.keccakF1600 (96 samples, 0.01%)</title><rect x="606.3" y="469" width="0.1" height="15.0" fill="rgb(247,57,34)" rx="2" ry="2" />
<text  x="609.29" y="479.5" ></text>
</g>
<g >
<title>runtime.growslice (102 samples, 0.01%)</title><rect x="330.8" y="549" width="0.2" height="15.0" fill="rgb(206,29,54)" rx="2" ry="2" />
<text  x="333.79" y="559.5" ></text>
</g>
<g >
<title>runtime.addfinalizer (253 samples, 0.04%)</title><rect x="832.9" y="453" width="0.4" height="15.0" fill="rgb(241,113,18)" rx="2" ry="2" />
<text  x="835.90" y="463.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Txn).Get.func1 (152 samples, 0.02%)</title><rect x="230.5" y="629" width="0.3" height="15.0" fill="rgb(244,210,38)" rx="2" ry="2" />
<text  x="233.50" y="639.5" ></text>
</g>
<g >
<title>bytes.Compare (905 samples, 0.13%)</title><rect x="576.8" y="389" width="1.5" height="15.0" fill="rgb(236,2,5)" rx="2" ry="2" />
<text  x="579.75" y="399.5" ></text>
</g>
<g >
<title>github.com/holiman/uint256.(*Int).Bytes32 (81 samples, 0.01%)</title><rect x="329.3" y="581" width="0.1" height="15.0" fill="rgb(210,140,20)" rx="2" ry="2" />
<text  x="332.25" y="591.5" ></text>
</g>
<g >
<title>runtime.cgocall (108 samples, 0.02%)</title><rect x="146.3" y="549" width="0.2" height="15.0" fill="rgb(233,227,0)" rx="2" ry="2" />
<text  x="149.31" y="559.5" ></text>
</g>
<g >
<title>tg/ethdb.(*LmdbCursor).putDupSort (83 samples, 0.01%)</title><rect x="822.4" y="581" width="0.1" height="15.0" fill="rgb(254,95,17)" rx="2" ry="2" />
<text  x="825.36" y="591.5" ></text>
</g>
<g >
<title>tg/ethdb.(*LmdbCursor).Put (257 samples, 0.04%)</title><rect x="814.4" y="597" width="0.4" height="15.0" fill="rgb(245,113,26)" rx="2" ry="2" />
<text  x="817.40" y="607.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*BTree).Get (223 samples, 0.03%)</title><rect x="464.4" y="501" width="0.4" height="15.0" fill="rgb(211,67,21)" rx="2" ry="2" />
<text  x="467.45" y="511.5" ></text>
</g>
<g >
<title>runtime.cgocall (84 samples, 0.01%)</title><rect x="608.2" y="405" width="0.2" height="15.0" fill="rgb(248,80,17)" rx="2" ry="2" />
<text  x="611.24" y="415.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (85 samples, 0.01%)</title><rect x="597.7" y="485" width="0.2" height="15.0" fill="rgb(242,126,41)" rx="2" ry="2" />
<text  x="600.71" y="495.5" ></text>
</g>
<g >
<title>bytes.Compare (67 samples, 0.01%)</title><rect x="1068.5" y="517" width="0.1" height="15.0" fill="rgb(239,212,39)" rx="2" ry="2" />
<text  x="1071.49" y="527.5" ></text>
</g>
<g >
<title>runtime.makeslice (71 samples, 0.01%)</title><rect x="162.5" y="565" width="0.1" height="15.0" fill="rgb(241,2,13)" rx="2" ry="2" />
<text  x="165.45" y="575.5" ></text>
</g>
<g >
<title>tg/core/types.(*Transaction).EncodeRLP (1,669 samples, 0.24%)</title><rect x="225.2" y="533" width="2.8" height="15.0" fill="rgb(218,138,22)" rx="2" ry="2" />
<text  x="228.20" y="543.5" ></text>
</g>
<g >
<title>runtime.mallocgc (304 samples, 0.04%)</title><rect x="561.8" y="517" width="0.5" height="15.0" fill="rgb(250,177,12)" rx="2" ry="2" />
<text  x="564.76" y="527.5" ></text>
</g>
<g >
<title>runtime.pageIndexOf (4,021 samples, 0.58%)</title><rect x="88.4" y="789" width="6.9" height="15.0" fill="rgb(212,82,37)" rx="2" ry="2" />
<text  x="91.43" y="799.5" ></text>
</g>
<g >
<title>runtime.mallocgc (63 samples, 0.01%)</title><rect x="862.9" y="485" width="0.1" height="15.0" fill="rgb(222,139,20)" rx="2" ry="2" />
<text  x="865.87" y="495.5" ></text>
</g>
<g >
<title>runtime.mallocgc (294 samples, 0.04%)</title><rect x="744.0" y="453" width="0.5" height="15.0" fill="rgb(219,154,39)" rx="2" ry="2" />
<text  x="746.99" y="463.5" ></text>
</g>
<g >
<title>runtime.newobject (68 samples, 0.01%)</title><rect x="166.0" y="677" width="0.2" height="15.0" fill="rgb(215,10,10)" rx="2" ry="2" />
<text  x="169.05" y="687.5" ></text>
</g>
<g >
<title>tg/core/vm.(*Memory).Set32 (512 samples, 0.07%)</title><rect x="398.1" y="453" width="0.9" height="15.0" fill="rgb(216,76,31)" rx="2" ry="2" />
<text  x="401.08" y="463.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (98 samples, 0.01%)</title><rect x="894.5" y="469" width="0.2" height="15.0" fill="rgb(218,113,24)" rx="2" ry="2" />
<text  x="897.51" y="479.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (62 samples, 0.01%)</title><rect x="287.2" y="517" width="0.1" height="15.0" fill="rgb(245,80,43)" rx="2" ry="2" />
<text  x="290.16" y="527.5" ></text>
</g>
<g >
<title>tg/common/etl.NewCollector.func1 (8,735 samples, 1.26%)</title><rect x="861.5" y="549" width="14.8" height="15.0" fill="rgb(254,192,1)" rx="2" ry="2" />
<text  x="864.50" y="559.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).GetState (66 samples, 0.01%)</title><rect x="479.7" y="325" width="0.2" height="15.0" fill="rgb(218,165,53)" rx="2" ry="2" />
<text  x="482.74" y="335.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.keccakF1600 (1,129 samples, 0.16%)</title><rect x="1114.7" y="581" width="2.0" height="15.0" fill="rgb(251,17,46)" rx="2" ry="2" />
<text  x="1117.74" y="591.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*items).insertAt (87 samples, 0.01%)</title><rect x="704.9" y="533" width="0.2" height="15.0" fill="rgb(220,38,37)" rx="2" ry="2" />
<text  x="707.94" y="543.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (62 samples, 0.01%)</title><rect x="1184.4" y="469" width="0.1" height="15.0" fill="rgb(248,64,29)" rx="2" ry="2" />
<text  x="1187.38" y="479.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).getVal1.func1 (635 samples, 0.09%)</title><rect x="1093.9" y="581" width="1.1" height="15.0" fill="rgb(217,94,7)" rx="2" ry="2" />
<text  x="1096.94" y="591.5" ></text>
</g>
<g >
<title>tg/p2p/discover.(*UDPv4).handlePacket (96 samples, 0.01%)</title><rect x="1189.6" y="853" width="0.2" height="15.0" fill="rgb(246,149,53)" rx="2" ry="2" />
<text  x="1192.60" y="863.5" ></text>
</g>
<g >
<title>sync/atomic.(*Value).Store (197 samples, 0.03%)</title><rect x="738.2" y="677" width="0.4" height="15.0" fill="rgb(227,55,41)" rx="2" ry="2" />
<text  x="741.25" y="687.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.(*arrayContainer).getSizeInBytes (319 samples, 0.05%)</title><rect x="1043.0" y="581" width="0.6" height="15.0" fill="rgb(227,72,52)" rx="2" ry="2" />
<text  x="1046.01" y="591.5" ></text>
</g>
<g >
<title>runtime.convT64 (89 samples, 0.01%)</title><rect x="1086.7" y="597" width="0.2" height="15.0" fill="rgb(227,126,46)" rx="2" ry="2" />
<text  x="1089.75" y="607.5" ></text>
</g>
<g >
<title>tg/rlp.puthead (67 samples, 0.01%)</title><rect x="768.6" y="597" width="0.1" height="15.0" fill="rgb(222,58,30)" rx="2" ry="2" />
<text  x="771.62" y="607.5" ></text>
</g>
<g >
<title>runtime.SetFinalizer.func2 (389 samples, 0.06%)</title><rect x="832.9" y="469" width="0.6" height="15.0" fill="rgb(210,32,26)" rx="2" ry="2" />
<text  x="835.87" y="479.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (186 samples, 0.03%)</title><rect x="235.9" y="581" width="0.3" height="15.0" fill="rgb(226,121,33)" rx="2" ry="2" />
<text  x="238.87" y="591.5" ></text>
</g>
<g >
<title>runtime.cgocall (176 samples, 0.03%)</title><rect x="323.9" y="405" width="0.3" height="15.0" fill="rgb(228,228,19)" rx="2" ry="2" />
<text  x="326.91" y="415.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find.func1 (69 samples, 0.01%)</title><rect x="418.9" y="245" width="0.1" height="15.0" fill="rgb(217,130,13)" rx="2" ry="2" />
<text  x="421.90" y="255.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (111 samples, 0.02%)</title><rect x="495.0" y="421" width="0.2" height="15.0" fill="rgb(250,38,25)" rx="2" ry="2" />
<text  x="497.97" y="431.5" ></text>
</g>
<g >
<title>tg/p2p/dnsdisc.(*subtreeSync).resolveNext (71 samples, 0.01%)</title><rect x="1189.9" y="789" width="0.1" height="15.0" fill="rgb(246,90,47)" rx="2" ry="2" />
<text  x="1192.87" y="799.5" ></text>
</g>
<g >
<title>runtime.mallocgc (128 samples, 0.02%)</title><rect x="701.2" y="597" width="0.2" height="15.0" fill="rgb(226,132,19)" rx="2" ry="2" />
<text  x="704.18" y="607.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (95 samples, 0.01%)</title><rect x="895.4" y="485" width="0.1" height="15.0" fill="rgb(217,206,45)" rx="2" ry="2" />
<text  x="898.36" y="495.5" ></text>
</g>
<g >
<title>runtime.memhash_varlen (117 samples, 0.02%)</title><rect x="559.9" y="485" width="0.2" height="15.0" fill="rgb(208,98,7)" rx="2" ry="2" />
<text  x="562.92" y="495.5" ></text>
</g>
<g >
<title>tg/ethdb.(*mutation).Get (71 samples, 0.01%)</title><rect x="623.8" y="581" width="0.1" height="15.0" fill="rgb(214,71,53)" rx="2" ry="2" />
<text  x="626.82" y="591.5" ></text>
</g>
<g >
<title>reflect.Value.Slice (109 samples, 0.02%)</title><rect x="1186.0" y="517" width="0.2" height="15.0" fill="rgb(217,173,46)" rx="2" ry="2" />
<text  x="1188.99" y="527.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.(*roaringArray).runOptimize (145 samples, 0.02%)</title><rect x="1095.4" y="597" width="0.3" height="15.0" fill="rgb(236,203,17)" rx="2" ry="2" />
<text  x="1098.40" y="607.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find (66 samples, 0.01%)</title><rect x="369.9" y="373" width="0.1" height="15.0" fill="rgb(240,85,50)" rx="2" ry="2" />
<text  x="372.91" y="383.5" ></text>
</g>
<g >
<title>sort.symMerge (3,797 samples, 0.55%)</title><rect x="987.7" y="469" width="6.5" height="15.0" fill="rgb(206,224,45)" rx="2" ry="2" />
<text  x="990.74" y="479.5" ></text>
</g>
<g >
<title>sync.(*RWMutex).Lock (62 samples, 0.01%)</title><rect x="691.3" y="629" width="0.1" height="15.0" fill="rgb(251,162,47)" rx="2" ry="2" />
<text  x="694.26" y="639.5" ></text>
</g>
<g >
<title>tg/core/state.(*stateObject).GetState (65 samples, 0.01%)</title><rect x="608.8" y="437" width="0.1" height="15.0" fill="rgb(205,137,18)" rx="2" ry="2" />
<text  x="611.78" y="447.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).Get (61 samples, 0.01%)</title><rect x="452.9" y="405" width="0.1" height="15.0" fill="rgb(247,185,8)" rx="2" ry="2" />
<text  x="455.88" y="415.5" ></text>
</g>
<g >
<title>sort.symMerge (5,079 samples, 0.73%)</title><rect x="863.8" y="469" width="8.6" height="15.0" fill="rgb(219,166,43)" rx="2" ry="2" />
<text  x="866.76" y="479.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).GetState (89 samples, 0.01%)</title><rect x="497.9" y="389" width="0.2" height="15.0" fill="rgb(250,19,22)" rx="2" ry="2" />
<text  x="500.92" y="399.5" ></text>
</g>
<g >
<title>tg/rlp.decodeUint256NoPtr (111 samples, 0.02%)</title><rect x="232.8" y="437" width="0.2" height="15.0" fill="rgb(214,50,46)" rx="2" ry="2" />
<text  x="235.76" y="447.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVMInterpreter).Run (111 samples, 0.02%)</title><rect x="414.9" y="293" width="0.2" height="15.0" fill="rgb(241,170,14)" rx="2" ry="2" />
<text  x="417.90" y="303.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).getVal1 (610 samples, 0.09%)</title><rect x="258.5" y="517" width="1.0" height="15.0" fill="rgb(233,182,51)" rx="2" ry="2" />
<text  x="261.48" y="527.5" ></text>
</g>
<g >
<title>runtime.mallocgc (61 samples, 0.01%)</title><rect x="815.9" y="597" width="0.1" height="15.0" fill="rgb(245,152,39)" rx="2" ry="2" />
<text  x="818.90" y="607.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).getStateObject (2,777 samples, 0.40%)</title><rect x="522.3" y="565" width="4.7" height="15.0" fill="rgb(206,29,31)" rx="2" ry="2" />
<text  x="525.26" y="575.5" ></text>
</g>
<g >
<title>reflect.unsafe_New (72 samples, 0.01%)</title><rect x="1185.7" y="517" width="0.1" height="15.0" fill="rgb(237,156,6)" rx="2" ry="2" />
<text  x="1188.68" y="527.5" ></text>
</g>
<g >
<title>tg/core/vm/stack.(*Stack).Swap (62 samples, 0.01%)</title><rect x="392.4" y="405" width="0.1" height="15.0" fill="rgb(240,164,0)" rx="2" ry="2" />
<text  x="395.42" y="415.5" ></text>
</g>
<g >
<title>tg/turbo/trie.(*FlatDBTrieLoader).CalcTrieRoot (3,085 samples, 0.44%)</title><rect x="1026.1" y="709" width="5.2" height="15.0" fill="rgb(205,49,52)" rx="2" ry="2" />
<text  x="1029.05" y="719.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (71 samples, 0.01%)</title><rect x="363.8" y="405" width="0.1" height="15.0" fill="rgb(248,38,37)" rx="2" ry="2" />
<text  x="366.76" y="415.5" ></text>
</g>
<g >
<title>runtime.cgocall (132 samples, 0.02%)</title><rect x="460.9" y="405" width="0.3" height="15.0" fill="rgb(243,89,36)" rx="2" ry="2" />
<text  x="463.94" y="415.5" ></text>
</g>
<g >
<title>tg/core/vm.opCall (715 samples, 0.10%)</title><rect x="393.5" y="405" width="1.2" height="15.0" fill="rgb(244,16,38)" rx="2" ry="2" />
<text  x="396.47" y="415.5" ></text>
</g>
<g >
<title>tg/ethdb/bitmapdb.CutLeft64.func1 (228 samples, 0.03%)</title><rect x="1101.9" y="597" width="0.4" height="15.0" fill="rgb(251,66,1)" rx="2" ry="2" />
<text  x="1104.94" y="607.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (80 samples, 0.01%)</title><rect x="329.6" y="517" width="0.1" height="15.0" fill="rgb(251,120,37)" rx="2" ry="2" />
<text  x="332.59" y="527.5" ></text>
</g>
<g >
<title>tg/ethdb.Walk (8,836 samples, 1.27%)</title><rect x="1031.3" y="677" width="15.0" height="15.0" fill="rgb(206,118,35)" rx="2" ry="2" />
<text  x="1034.30" y="687.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (317 samples, 0.05%)</title><rect x="389.9" y="293" width="0.5" height="15.0" fill="rgb(222,76,41)" rx="2" ry="2" />
<text  x="392.89" y="303.5" ></text>
</g>
<g >
<title>bytes.(*Buffer).Write (113 samples, 0.02%)</title><rect x="1107.4" y="693" width="0.2" height="15.0" fill="rgb(220,124,14)" rx="2" ry="2" />
<text  x="1110.40" y="703.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (238 samples, 0.03%)</title><rect x="238.3" y="613" width="0.4" height="15.0" fill="rgb(222,53,13)" rx="2" ry="2" />
<text  x="241.27" y="623.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.(*Bitmap).AddRange (534 samples, 0.08%)</title><rect x="147.1" y="613" width="0.9" height="15.0" fill="rgb(213,30,25)" rx="2" ry="2" />
<text  x="150.07" y="623.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find (133 samples, 0.02%)</title><rect x="452.4" y="341" width="0.2" height="15.0" fill="rgb(246,46,16)" rx="2" ry="2" />
<text  x="455.39" y="351.5" ></text>
</g>
<g >
<title>runtime.convT2I (124 samples, 0.02%)</title><rect x="266.4" y="613" width="0.2" height="15.0" fill="rgb(240,54,9)" rx="2" ry="2" />
<text  x="269.39" y="623.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (127 samples, 0.02%)</title><rect x="519.8" y="437" width="0.2" height="15.0" fill="rgb(217,220,49)" rx="2" ry="2" />
<text  x="522.78" y="447.5" ></text>
</g>
<g >
<title>tg/core/state.(*stateObject).GetCommittedState (134 samples, 0.02%)</title><rect x="415.4" y="357" width="0.2" height="15.0" fill="rgb(210,124,20)" rx="2" ry="2" />
<text  x="418.40" y="367.5" ></text>
</g>
<g >
<title>cmpbody (281 samples, 0.04%)</title><rect x="580.1" y="389" width="0.5" height="15.0" fill="rgb(253,16,50)" rx="2" ry="2" />
<text  x="583.09" y="399.5" ></text>
</g>
<g >
<title>tg/core/state.(*ChangeSetWriter).UpdateAccountData (1,874 samples, 0.27%)</title><rect x="668.2" y="645" width="3.2" height="15.0" fill="rgb(238,105,51)" rx="2" ry="2" />
<text  x="671.22" y="655.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVMInterpreter).Run (66 samples, 0.01%)</title><rect x="394.2" y="229" width="0.1" height="15.0" fill="rgb(226,8,32)" rx="2" ry="2" />
<text  x="397.21" y="239.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).getVal2.func1 (663 samples, 0.10%)</title><rect x="819.3" y="533" width="1.1" height="15.0" fill="rgb(240,167,16)" rx="2" ry="2" />
<text  x="822.32" y="543.5" ></text>
</g>
<g >
<title>tg/core/vm.opMstore (564 samples, 0.08%)</title><rect x="398.0" y="469" width="1.0" height="15.0" fill="rgb(223,184,46)" rx="2" ry="2" />
<text  x="401.00" y="479.5" ></text>
</g>
<g >
<title>aeshashbody (239 samples, 0.03%)</title><rect x="856.2" y="517" width="0.4" height="15.0" fill="rgb(232,64,23)" rx="2" ry="2" />
<text  x="859.16" y="527.5" ></text>
</g>
<g >
<title>sort.symMerge (3,989 samples, 0.57%)</title><rect x="865.6" y="405" width="6.7" height="15.0" fill="rgb(224,0,49)" rx="2" ry="2" />
<text  x="868.55" y="415.5" ></text>
</g>
<g >
<title>runtime.mallocgc (102 samples, 0.01%)</title><rect x="597.7" y="533" width="0.2" height="15.0" fill="rgb(215,209,53)" rx="2" ry="2" />
<text  x="600.70" y="543.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (228 samples, 0.03%)</title><rect x="452.4" y="373" width="0.4" height="15.0" fill="rgb(228,170,52)" rx="2" ry="2" />
<text  x="455.37" y="383.5" ></text>
</g>
<g >
<title>tg/core/vm.(*Memory).Set32 (59 samples, 0.01%)</title><rect x="486.6" y="389" width="0.1" height="15.0" fill="rgb(242,205,53)" rx="2" ry="2" />
<text  x="489.64" y="399.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*BTree).Get (1,008 samples, 0.15%)</title><rect x="401.5" y="373" width="1.7" height="15.0" fill="rgb(210,111,48)" rx="2" ry="2" />
<text  x="404.46" y="383.5" ></text>
</g>
<g >
<title>runtime.cgocall (165 samples, 0.02%)</title><rect x="461.7" y="389" width="0.3" height="15.0" fill="rgb(217,203,19)" rx="2" ry="2" />
<text  x="464.71" y="399.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (120 samples, 0.02%)</title><rect x="162.7" y="453" width="0.2" height="15.0" fill="rgb(225,44,25)" rx="2" ry="2" />
<text  x="165.70" y="463.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.(*state).padAndPermute (143 samples, 0.02%)</title><rect x="1132.4" y="773" width="0.3" height="15.0" fill="rgb(220,40,45)" rx="2" ry="2" />
<text  x="1135.42" y="783.5" ></text>
</g>
<g >
<title>sort.swapRange (185 samples, 0.03%)</title><rect x="185.3" y="325" width="0.3" height="15.0" fill="rgb(205,223,0)" rx="2" ry="2" />
<text  x="188.29" y="335.5" ></text>
</g>
<g >
<title>runtime.newobject (119 samples, 0.02%)</title><rect x="196.0" y="517" width="0.2" height="15.0" fill="rgb(230,102,19)" rx="2" ry="2" />
<text  x="198.96" y="527.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).maybeSplitChild (157 samples, 0.02%)</title><rect x="687.3" y="581" width="0.3" height="15.0" fill="rgb(231,8,49)" rx="2" ry="2" />
<text  x="690.31" y="591.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (70 samples, 0.01%)</title><rect x="504.8" y="421" width="0.1" height="15.0" fill="rgb(245,117,38)" rx="2" ry="2" />
<text  x="507.76" y="431.5" ></text>
</g>
<g >
<title>runtime.(*mheap).allocMSpanLocked (63 samples, 0.01%)</title><rect x="1101.2" y="341" width="0.1" height="15.0" fill="rgb(252,208,40)" rx="2" ry="2" />
<text  x="1104.24" y="351.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (1,307 samples, 0.19%)</title><rect x="1053.5" y="453" width="2.2" height="15.0" fill="rgb(223,65,44)" rx="2" ry="2" />
<text  x="1056.50" y="463.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).getVal1.func1 (101 samples, 0.01%)</title><rect x="370.5" y="373" width="0.2" height="15.0" fill="rgb(236,187,54)" rx="2" ry="2" />
<text  x="373.52" y="383.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).GetOrNewStateObject (533 samples, 0.08%)</title><rect x="452.2" y="501" width="0.9" height="15.0" fill="rgb(240,210,26)" rx="2" ry="2" />
<text  x="455.15" y="511.5" ></text>
</g>
<g >
<title>tg/core/state.(*PlainStateReader).ReadAccountCode (61 samples, 0.01%)</title><rect x="410.1" y="469" width="0.1" height="15.0" fill="rgb(247,208,4)" rx="2" ry="2" />
<text  x="413.13" y="479.5" ></text>
</g>
<g >
<title>tg/ethdb.(*LmdbDupSortCursor).Append (400 samples, 0.06%)</title><rect x="730.0" y="613" width="0.7" height="15.0" fill="rgb(224,162,22)" rx="2" ry="2" />
<text  x="732.97" y="623.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVMInterpreter).Run (98 samples, 0.01%)</title><rect x="501.7" y="357" width="0.1" height="15.0" fill="rgb(239,2,29)" rx="2" ry="2" />
<text  x="504.68" y="367.5" ></text>
</g>
<g >
<title>tg/core/state.(*stateObject).GetCommittedState (86 samples, 0.01%)</title><rect x="325.0" y="565" width="0.2" height="15.0" fill="rgb(215,205,49)" rx="2" ry="2" />
<text  x="328.04" y="575.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*bufioDecReader).readn1 (233 samples, 0.03%)</title><rect x="165.6" y="565" width="0.4" height="15.0" fill="rgb(237,105,32)" rx="2" ry="2" />
<text  x="168.59" y="575.5" ></text>
</g>
<g >
<title>runtime.cgoCheckArg (230 samples, 0.03%)</title><rect x="1025.2" y="549" width="0.4" height="15.0" fill="rgb(233,197,3)" rx="2" ry="2" />
<text  x="1028.22" y="559.5" ></text>
</g>
<g >
<title>tg/ethdb.(*TxDb).Get (116 samples, 0.02%)</title><rect x="370.5" y="437" width="0.2" height="15.0" fill="rgb(225,77,28)" rx="2" ry="2" />
<text  x="373.51" y="447.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.readFull (205 samples, 0.03%)</title><rect x="169.9" y="485" width="0.3" height="15.0" fill="rgb(252,95,45)" rx="2" ry="2" />
<text  x="172.88" y="495.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (79 samples, 0.01%)</title><rect x="659.0" y="533" width="0.1" height="15.0" fill="rgb(225,211,29)" rx="2" ry="2" />
<text  x="661.97" y="543.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).create (331 samples, 0.05%)</title><rect x="623.8" y="629" width="0.6" height="15.0" fill="rgb(246,7,45)" rx="2" ry="2" />
<text  x="626.80" y="639.5" ></text>
</g>
<g >
<title>tg/core/vm.makeDup.func1 (199 samples, 0.03%)</title><rect x="376.9" y="469" width="0.3" height="15.0" fill="rgb(212,4,38)" rx="2" ry="2" />
<text  x="379.86" y="479.5" ></text>
</g>
<g >
<title>tg/core/types.(*Bloom).add (6,043 samples, 0.87%)</title><rect x="750.9" y="677" width="10.3" height="15.0" fill="rgb(240,43,51)" rx="2" ry="2" />
<text  x="753.95" y="687.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (96 samples, 0.01%)</title><rect x="423.2" y="437" width="0.2" height="15.0" fill="rgb(207,183,8)" rx="2" ry="2" />
<text  x="426.22" y="447.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb._Cfunc_lmdbgo_mdb_cursor_get1 (545 samples, 0.08%)</title><rect x="1094.0" y="565" width="0.9" height="15.0" fill="rgb(251,181,19)" rx="2" ry="2" />
<text  x="1096.96" y="575.5" ></text>
</g>
<g >
<title>runtime.mallocgc (199 samples, 0.03%)</title><rect x="562.6" y="485" width="0.4" height="15.0" fill="rgb(211,155,19)" rx="2" ry="2" />
<text  x="565.62" y="495.5" ></text>
</g>
<g >
<title>tg/common/etl.(*sortableBuffer).Swap (211 samples, 0.03%)</title><rect x="182.4" y="373" width="0.4" height="15.0" fill="rgb(230,212,13)" rx="2" ry="2" />
<text  x="185.39" y="383.5" ></text>
</g>
<g >
<title>runtime.(*gcWork).tryGet (1,467 samples, 0.21%)</title><rect x="56.7" y="805" width="2.5" height="15.0" fill="rgb(220,168,29)" rx="2" ry="2" />
<text  x="59.67" y="815.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).Get (3,950 samples, 0.57%)</title><rect x="951.8" y="581" width="6.7" height="15.0" fill="rgb(206,153,2)" rx="2" ry="2" />
<text  x="954.83" y="591.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (460 samples, 0.07%)</title><rect x="975.7" y="565" width="0.8" height="15.0" fill="rgb(244,114,21)" rx="2" ry="2" />
<text  x="978.69" y="575.5" ></text>
</g>
<g >
<title>runtime.(*mheap).allocSpan (231 samples, 0.03%)</title><rect x="1055.0" y="357" width="0.4" height="15.0" fill="rgb(252,121,7)" rx="2" ry="2" />
<text  x="1057.98" y="367.5" ></text>
</g>
<g >
<title>tg/rlp.cachedDecoder (190 samples, 0.03%)</title><rect x="220.1" y="453" width="0.3" height="15.0" fill="rgb(226,99,20)" rx="2" ry="2" />
<text  x="223.11" y="463.5" ></text>
</g>
<g >
<title>runtime.makeslicecopy (111 samples, 0.02%)</title><rect x="318.4" y="581" width="0.2" height="15.0" fill="rgb(211,150,38)" rx="2" ry="2" />
<text  x="321.38" y="591.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (85 samples, 0.01%)</title><rect x="1097.1" y="517" width="0.2" height="15.0" fill="rgb(250,191,21)" rx="2" ry="2" />
<text  x="1100.13" y="527.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (208 samples, 0.03%)</title><rect x="786.3" y="517" width="0.4" height="15.0" fill="rgb(224,48,52)" rx="2" ry="2" />
<text  x="789.35" y="527.5" ></text>
</g>
<g >
<title>tg/core/rawdb.ReadTransactions (5,089 samples, 0.73%)</title><rect x="786.0" y="677" width="8.6" height="15.0" fill="rgb(245,141,27)" rx="2" ry="2" />
<text  x="788.99" y="687.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).getVal2 (88 samples, 0.01%)</title><rect x="516.8" y="325" width="0.2" height="15.0" fill="rgb(216,14,3)" rx="2" ry="2" />
<text  x="519.81" y="335.5" ></text>
</g>
<g >
<title>runtime.mallocgc (227 samples, 0.03%)</title><rect x="727.8" y="629" width="0.4" height="15.0" fill="rgb(253,224,30)" rx="2" ry="2" />
<text  x="730.77" y="639.5" ></text>
</g>
<g >
<title>sort.rotate (197 samples, 0.03%)</title><rect x="185.3" y="341" width="0.3" height="15.0" fill="rgb(254,25,46)" rx="2" ry="2" />
<text  x="188.27" y="351.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (260 samples, 0.04%)</title><rect x="458.3" y="485" width="0.4" height="15.0" fill="rgb(237,225,20)" rx="2" ry="2" />
<text  x="461.27" y="495.5" ></text>
</g>
<g >
<title>runtime.systemstack (34,649 samples, 4.99%)</title><rect x="37.0" y="853" width="58.8" height="15.0" fill="rgb(207,56,18)" rx="2" ry="2" />
<text  x="39.99" y="863.5" >runtim..</text>
</g>
<g >
<title>tg/core/vm.run (158 samples, 0.02%)</title><rect x="416.1" y="373" width="0.3" height="15.0" fill="rgb(243,146,18)" rx="2" ry="2" />
<text  x="419.11" y="383.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (275 samples, 0.04%)</title><rect x="452.4" y="389" width="0.4" height="15.0" fill="rgb(234,39,25)" rx="2" ry="2" />
<text  x="455.36" y="399.5" ></text>
</g>
<g >
<title>tg/ethdb.(*mutation).Put (506 samples, 0.07%)</title><rect x="666.0" y="645" width="0.9" height="15.0" fill="rgb(244,34,49)" rx="2" ry="2" />
<text  x="669.02" y="655.5" ></text>
</g>
<g >
<title>bytes.Compare (274 samples, 0.04%)</title><rect x="281.6" y="469" width="0.5" height="15.0" fill="rgb(251,166,51)" rx="2" ry="2" />
<text  x="284.63" y="479.5" ></text>
</g>
<g >
<title>syscall.write (66 samples, 0.01%)</title><rect x="195.8" y="373" width="0.1" height="15.0" fill="rgb(237,29,46)" rx="2" ry="2" />
<text  x="198.80" y="383.5" ></text>
</g>
<g >
<title>runtime.cgoCheckUnknownPointer (59 samples, 0.01%)</title><rect x="205.6" y="389" width="0.1" height="15.0" fill="rgb(238,24,8)" rx="2" ry="2" />
<text  x="208.55" y="399.5" ></text>
</g>
<g >
<title>runtime.systemstack (271 samples, 0.04%)</title><rect x="10.2" y="853" width="0.4" height="15.0" fill="rgb(207,82,47)" rx="2" ry="2" />
<text  x="13.17" y="863.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.(*state).Write (130 samples, 0.02%)</title><rect x="1009.7" y="565" width="0.2" height="15.0" fill="rgb(243,109,21)" rx="2" ry="2" />
<text  x="1012.69" y="575.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Txn).Get.func1 (124 samples, 0.02%)</title><rect x="231.4" y="613" width="0.2" height="15.0" fill="rgb(250,218,7)" rx="2" ry="2" />
<text  x="234.35" y="623.5" ></text>
</g>
<g >
<title>runtime.mallocgc (99 samples, 0.01%)</title><rect x="635.0" y="597" width="0.2" height="15.0" fill="rgb(217,167,2)" rx="2" ry="2" />
<text  x="637.98" y="607.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (96 samples, 0.01%)</title><rect x="293.3" y="549" width="0.2" height="15.0" fill="rgb(240,217,9)" rx="2" ry="2" />
<text  x="296.33" y="559.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (120 samples, 0.02%)</title><rect x="434.9" y="373" width="0.2" height="15.0" fill="rgb(232,215,44)" rx="2" ry="2" />
<text  x="437.87" y="383.5" ></text>
</g>
<g >
<title>runtime.mallocgc (91 samples, 0.01%)</title><rect x="831.4" y="453" width="0.2" height="15.0" fill="rgb(253,124,50)" rx="2" ry="2" />
<text  x="834.44" y="463.5" ></text>
</g>
<g >
<title>github.com/holiman/uint256.udivrem (74 samples, 0.01%)</title><rect x="387.6" y="373" width="0.1" height="15.0" fill="rgb(233,140,40)" rx="2" ry="2" />
<text  x="390.61" y="383.5" ></text>
</g>
<g >
<title>runtime.mallocgc (87 samples, 0.01%)</title><rect x="761.5" y="581" width="0.1" height="15.0" fill="rgb(213,152,3)" rx="2" ry="2" />
<text  x="764.48" y="591.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.genHelperDecoder.DecSliceHelperStart (91 samples, 0.01%)</title><rect x="163.9" y="533" width="0.1" height="15.0" fill="rgb(213,213,31)" rx="2" ry="2" />
<text  x="166.87" y="543.5" ></text>
</g>
<g >
<title>tg/common/etl.(*oldestEntrySortableBuffer).Swap (110 samples, 0.02%)</title><rect x="866.5" y="325" width="0.2" height="15.0" fill="rgb(205,160,29)" rx="2" ry="2" />
<text  x="869.51" y="335.5" ></text>
</g>
<g >
<title>tg/core/vm.RunPrecompiledContract (1,045 samples, 0.15%)</title><rect x="501.9" y="373" width="1.8" height="15.0" fill="rgb(215,216,7)" rx="2" ry="2" />
<text  x="504.93" y="383.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.(*state).permute (216 samples, 0.03%)</title><rect x="389.0" y="357" width="0.4" height="15.0" fill="rgb(243,143,13)" rx="2" ry="2" />
<text  x="392.02" y="367.5" ></text>
</g>
<g >
<title>sort.symMerge (122 samples, 0.02%)</title><rect x="1040.3" y="309" width="0.2" height="15.0" fill="rgb(229,221,27)" rx="2" ry="2" />
<text  x="1043.32" y="319.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).getStateObject (121 samples, 0.02%)</title><rect x="410.2" y="485" width="0.2" height="15.0" fill="rgb(210,179,9)" rx="2" ry="2" />
<text  x="413.24" y="495.5" ></text>
</g>
<g >
<title>sync/atomic.(*Value).Store (118 samples, 0.02%)</title><rect x="795.5" y="693" width="0.2" height="15.0" fill="rgb(226,102,54)" rx="2" ry="2" />
<text  x="798.46" y="703.5" ></text>
</g>
<g >
<title>runtime.mapaccess1 (82 samples, 0.01%)</title><rect x="262.7" y="581" width="0.1" height="15.0" fill="rgb(216,166,11)" rx="2" ry="2" />
<text  x="265.68" y="591.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (59 samples, 0.01%)</title><rect x="410.3" y="405" width="0.1" height="15.0" fill="rgb(220,82,24)" rx="2" ry="2" />
<text  x="413.26" y="415.5" ></text>
</g>
<g >
<title>tg/core/state.(*PlainStateReader).ReadAccountData (387 samples, 0.06%)</title><rect x="452.3" y="469" width="0.7" height="15.0" fill="rgb(248,47,51)" rx="2" ry="2" />
<text  x="455.35" y="479.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).Put.func1 (1,842 samples, 0.27%)</title><rect x="730.9" y="581" width="3.2" height="15.0" fill="rgb(213,196,46)" rx="2" ry="2" />
<text  x="733.93" y="591.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.(*state).Read (78 samples, 0.01%)</title><rect x="481.3" y="389" width="0.1" height="15.0" fill="rgb(218,112,10)" rx="2" ry="2" />
<text  x="484.29" y="399.5" ></text>
</g>
<g >
<title>sort.Search (156 samples, 0.02%)</title><rect x="527.4" y="421" width="0.3" height="15.0" fill="rgb(214,27,29)" rx="2" ry="2" />
<text  x="530.39" y="431.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find (123 samples, 0.02%)</title><rect x="390.0" y="229" width="0.2" height="15.0" fill="rgb(242,16,47)" rx="2" ry="2" />
<text  x="393.04" y="239.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (118 samples, 0.02%)</title><rect x="971.4" y="421" width="0.2" height="15.0" fill="rgb(227,62,4)" rx="2" ry="2" />
<text  x="974.40" y="431.5" ></text>
</g>
<g >
<title>bytes.Compare (402 samples, 0.06%)</title><rect x="688.1" y="533" width="0.7" height="15.0" fill="rgb(205,33,24)" rx="2" ry="2" />
<text  x="691.15" y="543.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (106 samples, 0.02%)</title><rect x="293.3" y="581" width="0.2" height="15.0" fill="rgb(206,108,47)" rx="2" ry="2" />
<text  x="296.32" y="591.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*Encoder).mustEncode (149 samples, 0.02%)</title><rect x="1040.6" y="549" width="0.3" height="15.0" fill="rgb(235,215,28)" rx="2" ry="2" />
<text  x="1043.63" y="559.5" ></text>
</g>
<g >
<title>tg/common/etl.extractBucketIntoFiles.func1 (22,471 samples, 3.23%)</title><rect x="176.5" y="613" width="38.2" height="15.0" fill="rgb(211,54,3)" rx="2" ry="2" />
<text  x="179.55" y="623.5" >tg/..</text>
</g>
<g >
<title>github.com/google/btree.(*node).get (70 samples, 0.01%)</title><rect x="464.0" y="485" width="0.1" height="15.0" fill="rgb(232,138,19)" rx="2" ry="2" />
<text  x="467.01" y="495.5" ></text>
</g>
<g >
<title>tg/common.CopyBytes (114 samples, 0.02%)</title><rect x="176.7" y="581" width="0.2" height="15.0" fill="rgb(211,94,14)" rx="2" ry="2" />
<text  x="179.69" y="591.5" ></text>
</g>
<g >
<title>tg/core/vm.(*ecrecover).Run (5,017 samples, 0.72%)</title><rect x="342.2" y="549" width="8.6" height="15.0" fill="rgb(221,93,16)" rx="2" ry="2" />
<text  x="345.24" y="559.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVMInterpreter).Run (60 samples, 0.01%)</title><rect x="387.1" y="229" width="0.1" height="15.0" fill="rgb(248,97,52)" rx="2" ry="2" />
<text  x="390.06" y="239.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find (163 samples, 0.02%)</title><rect x="666.2" y="549" width="0.3" height="15.0" fill="rgb(253,216,31)" rx="2" ry="2" />
<text  x="669.23" y="559.5" ></text>
</g>
<g >
<title>sort.symMerge (74 samples, 0.01%)</title><rect x="143.9" y="405" width="0.2" height="15.0" fill="rgb(216,32,35)" rx="2" ry="2" />
<text  x="146.94" y="415.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.(*roaringArray).binarySearch (86 samples, 0.01%)</title><rect x="1096.0" y="565" width="0.2" height="15.0" fill="rgb(206,97,13)" rx="2" ry="2" />
<text  x="1099.02" y="575.5" ></text>
</g>
<g >
<title>runtime.globrunqget (122 samples, 0.02%)</title><rect x="98.2" y="789" width="0.2" height="15.0" fill="rgb(214,41,11)" rx="2" ry="2" />
<text  x="101.18" y="799.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (93 samples, 0.01%)</title><rect x="226.1" y="325" width="0.2" height="15.0" fill="rgb(237,46,17)" rx="2" ry="2" />
<text  x="229.11" y="335.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.(*addHelper16).add (65 samples, 0.01%)</title><rect x="157.0" y="501" width="0.1" height="15.0" fill="rgb(243,26,50)" rx="2" ry="2" />
<text  x="159.96" y="511.5" ></text>
</g>
<g >
<title>runtime.assertI2I (64 samples, 0.01%)</title><rect x="730.8" y="613" width="0.1" height="15.0" fill="rgb(221,70,1)" rx="2" ry="2" />
<text  x="733.79" y="623.5" ></text>
</g>
<g >
<title>tg/ethdb.(*LmdbCursor).set (176 samples, 0.03%)</title><rect x="146.3" y="629" width="0.3" height="15.0" fill="rgb(215,201,9)" rx="2" ry="2" />
<text  x="149.29" y="639.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (119 samples, 0.02%)</title><rect x="910.4" y="485" width="0.2" height="15.0" fill="rgb(209,34,37)" rx="2" ry="2" />
<text  x="913.41" y="495.5" ></text>
</g>
<g >
<title>tg/common/etl.(*oldestEntrySortableBuffer).Swap (164 samples, 0.02%)</title><rect x="863.5" y="437" width="0.3" height="15.0" fill="rgb(205,13,6)" rx="2" ry="2" />
<text  x="866.48" y="447.5" ></text>
</g>
<g >
<title>runtime.mallocgc (76 samples, 0.01%)</title><rect x="263.2" y="549" width="0.1" height="15.0" fill="rgb(242,107,16)" rx="2" ry="2" />
<text  x="266.17" y="559.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (104 samples, 0.01%)</title><rect x="894.5" y="485" width="0.2" height="15.0" fill="rgb(232,189,37)" rx="2" ry="2" />
<text  x="897.51" y="495.5" ></text>
</g>
<g >
<title>runtime.growslice (206 samples, 0.03%)</title><rect x="148.5" y="597" width="0.4" height="15.0" fill="rgb(231,228,0)" rx="2" ry="2" />
<text  x="151.52" y="607.5" ></text>
</g>
<g >
<title>runtime.(*mheap).freeSpan.func1 (2,963 samples, 0.43%)</title><rect x="25.9" y="789" width="5.0" height="15.0" fill="rgb(212,208,30)" rx="2" ry="2" />
<text  x="28.88" y="799.5" ></text>
</g>
<g >
<title>tg/rlp.makeNilPtrDecoder.func1 (401 samples, 0.06%)</title><rect x="219.4" y="421" width="0.6" height="15.0" fill="rgb(222,171,20)" rx="2" ry="2" />
<text  x="222.35" y="431.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).StaticCall (104 samples, 0.01%)</title><rect x="416.5" y="389" width="0.1" height="15.0" fill="rgb(205,83,0)" rx="2" ry="2" />
<text  x="419.47" y="399.5" ></text>
</g>
<g >
<title>runtime.mallocgc (61 samples, 0.01%)</title><rect x="995.2" y="533" width="0.1" height="15.0" fill="rgb(205,11,54)" rx="2" ry="2" />
<text  x="998.19" y="543.5" ></text>
</g>
<g >
<title>tg/ethdb.(*TxDb).cursor (113 samples, 0.02%)</title><rect x="593.7" y="485" width="0.2" height="15.0" fill="rgb(245,149,12)" rx="2" ry="2" />
<text  x="596.73" y="495.5" ></text>
</g>
<g >
<title>runtime.getitab (112 samples, 0.02%)</title><rect x="760.7" y="629" width="0.2" height="15.0" fill="rgb(228,49,19)" rx="2" ry="2" />
<text  x="763.70" y="639.5" ></text>
</g>
<g >
<title>runtime.convT2I (730 samples, 0.11%)</title><rect x="235.5" y="677" width="1.3" height="15.0" fill="rgb(209,129,52)" rx="2" ry="2" />
<text  x="238.51" y="687.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).Get (182 samples, 0.03%)</title><rect x="461.7" y="453" width="0.3" height="15.0" fill="rgb(210,37,28)" rx="2" ry="2" />
<text  x="464.70" y="463.5" ></text>
</g>
<g >
<title>tg/eth/downloader.(*Downloader).SpawnBodyDownloadStage.func4 (6,180 samples, 0.89%)</title><rect x="1119.4" y="853" width="10.5" height="15.0" fill="rgb(226,188,22)" rx="2" ry="2" />
<text  x="1122.37" y="863.5" ></text>
</g>
<g >
<title>tg/common/etl.(*oldestEntrySortableBuffer).Swap (75 samples, 0.01%)</title><rect x="990.6" y="325" width="0.1" height="15.0" fill="rgb(219,158,24)" rx="2" ry="2" />
<text  x="993.55" y="335.5" ></text>
</g>
<g >
<title>runtime.gcBgMarkWorker.func2 (34,647 samples, 4.99%)</title><rect x="37.0" y="837" width="58.8" height="15.0" fill="rgb(233,204,22)" rx="2" ry="2" />
<text  x="39.99" y="847.5" >runtim..</text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Txn).commit (490 samples, 0.07%)</title><rect x="1128.8" y="757" width="0.9" height="15.0" fill="rgb(218,41,47)" rx="2" ry="2" />
<text  x="1131.83" y="767.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*decRd).readn1IO (235 samples, 0.03%)</title><rect x="165.6" y="581" width="0.4" height="15.0" fill="rgb(205,187,54)" rx="2" ry="2" />
<text  x="168.59" y="591.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).Call (137 samples, 0.02%)</title><rect x="480.2" y="325" width="0.2" height="15.0" fill="rgb(249,128,23)" rx="2" ry="2" />
<text  x="483.21" y="335.5" ></text>
</g>
<g >
<title>encoding/binary.littleEndian.PutUint32 (177 samples, 0.03%)</title><rect x="1080.4" y="613" width="0.3" height="15.0" fill="rgb(235,211,4)" rx="2" ry="2" />
<text  x="1083.40" y="623.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*BTree).Ascend (64 samples, 0.01%)</title><rect x="1131.4" y="757" width="0.1" height="15.0" fill="rgb(210,204,54)" rx="2" ry="2" />
<text  x="1134.40" y="767.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVMInterpreter).Run (169 samples, 0.02%)</title><rect x="482.0" y="357" width="0.3" height="15.0" fill="rgb(247,98,38)" rx="2" ry="2" />
<text  x="484.99" y="367.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (106 samples, 0.02%)</title><rect x="908.0" y="469" width="0.2" height="15.0" fill="rgb(240,187,2)" rx="2" ry="2" />
<text  x="911.00" y="479.5" ></text>
</g>
<g >
<title>sort.rotate (178 samples, 0.03%)</title><rect x="863.5" y="469" width="0.3" height="15.0" fill="rgb(243,1,45)" rx="2" ry="2" />
<text  x="866.46" y="479.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (92 samples, 0.01%)</title><rect x="597.7" y="517" width="0.2" height="15.0" fill="rgb(219,184,42)" rx="2" ry="2" />
<text  x="600.71" y="527.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).update (2,142 samples, 0.31%)</title><rect x="26.5" y="741" width="3.6" height="15.0" fill="rgb(230,203,18)" rx="2" ry="2" />
<text  x="29.49" y="751.5" ></text>
</g>
<g >
<title>container/heap.Pop (153 samples, 0.02%)</title><rect x="144.6" y="677" width="0.3" height="15.0" fill="rgb(228,117,23)" rx="2" ry="2" />
<text  x="147.63" y="687.5" ></text>
</g>
<g >
<title>runtime.notewakeup (85 samples, 0.01%)</title><rect x="122.1" y="805" width="0.2" height="15.0" fill="rgb(227,174,15)" rx="2" ry="2" />
<text  x="125.11" y="815.5" ></text>
</g>
<g >
<title>runtime.memmove (65 samples, 0.01%)</title><rect x="1089.6" y="469" width="0.1" height="15.0" fill="rgb(248,86,39)" rx="2" ry="2" />
<text  x="1092.59" y="479.5" ></text>
</g>
<g >
<title>tg/core.IntrinsicGas (164 samples, 0.02%)</title><rect x="263.9" y="645" width="0.3" height="15.0" fill="rgb(222,65,14)" rx="2" ry="2" />
<text  x="266.92" y="655.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find.func1 (88 samples, 0.01%)</title><rect x="321.1" y="421" width="0.2" height="15.0" fill="rgb(248,135,51)" rx="2" ry="2" />
<text  x="324.13" y="431.5" ></text>
</g>
<g >
<title>syscall.Write (137 samples, 0.02%)</title><rect x="875.2" y="373" width="0.2" height="15.0" fill="rgb(227,213,38)" rx="2" ry="2" />
<text  x="878.17" y="383.5" ></text>
</g>
<g >
<title>tg/core/state.(*PlainStateReader).ReadAccountData (398 samples, 0.06%)</title><rect x="464.4" y="533" width="0.7" height="15.0" fill="rgb(237,29,11)" rx="2" ry="2" />
<text  x="467.43" y="543.5" ></text>
</g>
<g >
<title>runtime.usleep (798 samples, 0.11%)</title><rect x="125.7" y="821" width="1.4" height="15.0" fill="rgb(229,181,19)" rx="2" ry="2" />
<text  x="128.74" y="831.5" ></text>
</g>
<g >
<title>runtime.mallocgc (63 samples, 0.01%)</title><rect x="269.6" y="549" width="0.1" height="15.0" fill="rgb(209,193,16)" rx="2" ry="2" />
<text  x="272.61" y="559.5" ></text>
</g>
<g >
<title>runtime.newobject (387 samples, 0.06%)</title><rect x="876.5" y="549" width="0.7" height="15.0" fill="rgb(215,170,16)" rx="2" ry="2" />
<text  x="879.51" y="559.5" ></text>
</g>
<g >
<title>container/heap.down (481 samples, 0.07%)</title><rect x="815.0" y="629" width="0.9" height="15.0" fill="rgb(244,189,50)" rx="2" ry="2" />
<text  x="818.05" y="639.5" ></text>
</g>
<g >
<title>tg/eth/stagedsync.DefaultStages.func14.1 (1,319 samples, 0.19%)</title><rect x="230.1" y="757" width="2.2" height="15.0" fill="rgb(213,154,38)" rx="2" ry="2" />
<text  x="233.08" y="767.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find.func1 (73 samples, 0.01%)</title><rect x="403.0" y="293" width="0.1" height="15.0" fill="rgb(222,119,43)" rx="2" ry="2" />
<text  x="405.95" y="303.5" ></text>
</g>
<g >
<title>tg/common/etl.(*oldestEntrySortableBuffer).Swap (170 samples, 0.02%)</title><rect x="864.8" y="389" width="0.3" height="15.0" fill="rgb(212,15,27)" rx="2" ry="2" />
<text  x="867.84" y="399.5" ></text>
</g>
<g >
<title>runtime.newobject (95 samples, 0.01%)</title><rect x="1031.9" y="613" width="0.1" height="15.0" fill="rgb(254,87,42)" rx="2" ry="2" />
<text  x="1034.85" y="623.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb._Cfunc_lmdbgo_mdb_cursor_put2 (1,694 samples, 0.24%)</title><rect x="811.5" y="533" width="2.9" height="15.0" fill="rgb(230,54,48)" rx="2" ry="2" />
<text  x="814.50" y="543.5" ></text>
</g>
<g >
<title>tg/rlp.(*encbuf).encode (1,816 samples, 0.26%)</title><rect x="1122.5" y="645" width="3.1" height="15.0" fill="rgb(250,26,21)" rx="2" ry="2" />
<text  x="1125.52" y="655.5" ></text>
</g>
<g >
<title>tg/core/vm.makeSwap.func1 (780 samples, 0.11%)</title><rect x="335.0" y="597" width="1.3" height="15.0" fill="rgb(251,224,1)" rx="2" ry="2" />
<text  x="337.97" y="607.5" ></text>
</g>
<g >
<title>runtime.mapiternext (60 samples, 0.01%)</title><rect x="735.5" y="661" width="0.1" height="15.0" fill="rgb(219,11,52)" rx="2" ry="2" />
<text  x="738.47" y="671.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).Call (366 samples, 0.05%)</title><rect x="602.8" y="517" width="0.7" height="15.0" fill="rgb(219,76,35)" rx="2" ry="2" />
<text  x="605.84" y="527.5" ></text>
</g>
<g >
<title>tg/core/state.(*stateObject).GetCommittedState (834 samples, 0.12%)</title><rect x="389.6" y="357" width="1.4" height="15.0" fill="rgb(227,224,30)" rx="2" ry="2" />
<text  x="392.58" y="367.5" ></text>
</g>
<g >
<title>tg/core/state.(*stateObject).SetState (1,405 samples, 0.20%)</title><rect x="594.7" y="565" width="2.4" height="15.0" fill="rgb(214,168,44)" rx="2" ry="2" />
<text  x="597.70" y="575.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).GetCodeSize (91 samples, 0.01%)</title><rect x="416.7" y="453" width="0.2" height="15.0" fill="rgb(233,116,53)" rx="2" ry="2" />
<text  x="419.74" y="463.5" ></text>
</g>
<g >
<title>tg/common/bitutil.XORBytes (127 samples, 0.02%)</title><rect x="127.3" y="821" width="0.2" height="15.0" fill="rgb(206,53,15)" rx="2" ry="2" />
<text  x="130.32" y="831.5" ></text>
</g>
<g >
<title>tg/core/state.newObject (112 samples, 0.02%)</title><rect x="500.1" y="421" width="0.2" height="15.0" fill="rgb(222,120,52)" rx="2" ry="2" />
<text  x="503.11" y="431.5" ></text>
</g>
<g >
<title>tg/core/vm.(*Contract).validJumpdest (82 samples, 0.01%)</title><rect x="488.9" y="453" width="0.2" height="15.0" fill="rgb(220,72,47)" rx="2" ry="2" />
<text  x="491.94" y="463.5" ></text>
</g>
<g >
<title>tg/core/vm.opCall (245 samples, 0.04%)</title><rect x="383.4" y="213" width="0.4" height="15.0" fill="rgb(220,226,23)" rx="2" ry="2" />
<text  x="386.41" y="223.5" ></text>
</g>
<g >
<title>tg/p2p/dnsdisc.(*randomIterator).nextNode (74 samples, 0.01%)</title><rect x="1189.9" y="837" width="0.1" height="15.0" fill="rgb(251,187,28)" rx="2" ry="2" />
<text  x="1192.87" y="847.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVMInterpreter).Run (80 samples, 0.01%)</title><rect x="487.9" y="229" width="0.2" height="15.0" fill="rgb(250,10,18)" rx="2" ry="2" />
<text  x="490.94" y="239.5" ></text>
</g>
<g >
<title>tg/turbo/trie.(*HashBuilder).completeLeafHash (143 samples, 0.02%)</title><rect x="1029.2" y="613" width="0.2" height="15.0" fill="rgb(223,146,24)" rx="2" ry="2" />
<text  x="1032.17" y="623.5" ></text>
</g>
<g >
<title>reflect.Value.Interface (191 samples, 0.03%)</title><rect x="789.3" y="501" width="0.3" height="15.0" fill="rgb(227,80,32)" rx="2" ry="2" />
<text  x="792.32" y="511.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (125 samples, 0.02%)</title><rect x="852.2" y="517" width="0.2" height="15.0" fill="rgb(221,4,0)" rx="2" ry="2" />
<text  x="855.22" y="527.5" ></text>
</g>
<g >
<title>runtime.cgoCheckUnknownPointer (403 samples, 0.06%)</title><rect x="956.5" y="501" width="0.7" height="15.0" fill="rgb(217,115,38)" rx="2" ry="2" />
<text  x="959.52" y="511.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find.func1 (97 samples, 0.01%)</title><rect x="491.2" y="245" width="0.2" height="15.0" fill="rgb(226,87,9)" rx="2" ry="2" />
<text  x="494.20" y="255.5" ></text>
</g>
<g >
<title>tg/core/vm.opCall (64 samples, 0.01%)</title><rect x="414.4" y="277" width="0.1" height="15.0" fill="rgb(235,217,48)" rx="2" ry="2" />
<text  x="417.42" y="287.5" ></text>
</g>
<g >
<title>sort.rotate (98 samples, 0.01%)</title><rect x="1073.6" y="373" width="0.1" height="15.0" fill="rgb(237,121,23)" rx="2" ry="2" />
<text  x="1076.56" y="383.5" ></text>
</g>
<g >
<title>runtime.evacuate_faststr (332 samples, 0.05%)</title><rect x="1037.9" y="597" width="0.5" height="15.0" fill="rgb(244,60,21)" rx="2" ry="2" />
<text  x="1040.85" y="607.5" ></text>
</g>
<g >
<title>tg/core/vm.(*Contract).isCode (423 samples, 0.06%)</title><rect x="605.0" y="501" width="0.7" height="15.0" fill="rgb(206,134,18)" rx="2" ry="2" />
<text  x="607.98" y="511.5" ></text>
</g>
<g >
<title>reflect.unsafe_New (319 samples, 0.05%)</title><rect x="1109.4" y="485" width="0.5" height="15.0" fill="rgb(215,10,38)" rx="2" ry="2" />
<text  x="1112.39" y="495.5" ></text>
</g>
<g >
<title>tg/log.(*logger).write (119 samples, 0.02%)</title><rect x="1128.6" y="773" width="0.2" height="15.0" fill="rgb(205,0,22)" rx="2" ry="2" />
<text  x="1131.58" y="783.5" ></text>
</g>
<g >
<title>reflect.(*rtype).typeOff (90 samples, 0.01%)</title><rect x="1183.5" y="517" width="0.2" height="15.0" fill="rgb(253,21,30)" rx="2" ry="2" />
<text  x="1186.52" y="527.5" ></text>
</g>
<g >
<title>sort.Search (3,106 samples, 0.45%)</title><rect x="708.4" y="517" width="5.3" height="15.0" fill="rgb(242,59,22)" rx="2" ry="2" />
<text  x="711.39" y="527.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.(*state).Read (1,199 samples, 0.17%)</title><rect x="206.6" y="549" width="2.0" height="15.0" fill="rgb(221,26,11)" rx="2" ry="2" />
<text  x="209.57" y="559.5" ></text>
</g>
<g >
<title>cmpbody (91 samples, 0.01%)</title><rect x="401.7" y="213" width="0.1" height="15.0" fill="rgb(223,152,21)" rx="2" ry="2" />
<text  x="404.67" y="223.5" ></text>
</g>
<g >
<title>tg/core/vm.opSha3 (85 samples, 0.01%)</title><rect x="385.5" y="341" width="0.2" height="15.0" fill="rgb(214,207,16)" rx="2" ry="2" />
<text  x="388.54" y="351.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (221 samples, 0.03%)</title><rect x="260.5" y="501" width="0.4" height="15.0" fill="rgb(239,202,34)" rx="2" ry="2" />
<text  x="263.54" y="511.5" ></text>
</g>
<g >
<title>tg/common.CopyBytes (613 samples, 0.09%)</title><rect x="851.8" y="565" width="1.0" height="15.0" fill="rgb(241,130,5)" rx="2" ry="2" />
<text  x="854.76" y="575.5" ></text>
</g>
<g >
<title>tg/rlp.(*Stream).Decode (2,528 samples, 0.36%)</title><rect x="198.3" y="405" width="4.3" height="15.0" fill="rgb(213,191,37)" rx="2" ry="2" />
<text  x="201.27" y="415.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).insert (74 samples, 0.01%)</title><rect x="666.1" y="549" width="0.1" height="15.0" fill="rgb(244,60,25)" rx="2" ry="2" />
<text  x="669.08" y="559.5" ></text>
</g>
<g >
<title>tg/core.(*StateTransition).refundGas (1,090 samples, 0.16%)</title><rect x="261.8" y="645" width="1.9" height="15.0" fill="rgb(252,202,48)" rx="2" ry="2" />
<text  x="264.83" y="655.5" ></text>
</g>
<g >
<title>sort.swapRange (173 samples, 0.02%)</title><rect x="186.1" y="309" width="0.2" height="15.0" fill="rgb(222,140,54)" rx="2" ry="2" />
<text  x="189.05" y="319.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find.func1 (1,085 samples, 0.16%)</title><rect x="273.2" y="437" width="1.8" height="15.0" fill="rgb(250,84,52)" rx="2" ry="2" />
<text  x="276.16" y="447.5" ></text>
</g>
<g >
<title>sort.swapRange (67 samples, 0.01%)</title><rect x="869.6" y="229" width="0.2" height="15.0" fill="rgb(248,78,41)" rx="2" ry="2" />
<text  x="872.64" y="239.5" ></text>
</g>
<g >
<title>tg/core/state.(*stateObject).GetState (126 samples, 0.02%)</title><rect x="406.0" y="373" width="0.2" height="15.0" fill="rgb(240,61,50)" rx="2" ry="2" />
<text  x="408.98" y="383.5" ></text>
</g>
<g >
<title>cmpbody (117 samples, 0.02%)</title><rect x="1071.9" y="405" width="0.2" height="15.0" fill="rgb(229,105,11)" rx="2" ry="2" />
<text  x="1074.86" y="415.5" ></text>
</g>
<g >
<title>tg/core/vm.opDelegateCall (62 samples, 0.01%)</title><rect x="462.9" y="453" width="0.1" height="15.0" fill="rgb(234,78,41)" rx="2" ry="2" />
<text  x="465.90" y="463.5" ></text>
</g>
<g >
<title>runtime.convT64 (63 samples, 0.01%)</title><rect x="734.0" y="565" width="0.1" height="15.0" fill="rgb(236,224,15)" rx="2" ry="2" />
<text  x="736.96" y="575.5" ></text>
</g>
<g >
<title>tg/core/state.newObject (108 samples, 0.02%)</title><rect x="270.5" y="597" width="0.2" height="15.0" fill="rgb(231,103,54)" rx="2" ry="2" />
<text  x="273.49" y="607.5" ></text>
</g>
<g >
<title>runtime.exitsyscall (267 samples, 0.04%)</title><rect x="949.1" y="437" width="0.4" height="15.0" fill="rgb(244,38,40)" rx="2" ry="2" />
<text  x="952.08" y="447.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.(*state).padAndPermute (249 samples, 0.04%)</title><rect x="1030.1" y="581" width="0.4" height="15.0" fill="rgb(237,153,44)" rx="2" ry="2" />
<text  x="1033.10" y="591.5" ></text>
</g>
<g >
<title>runtime.largeAlloc (79 samples, 0.01%)</title><rect x="860.1" y="421" width="0.2" height="15.0" fill="rgb(237,181,26)" rx="2" ry="2" />
<text  x="863.12" y="431.5" ></text>
</g>
<g >
<title>sync.(*RWMutex).Lock (188 samples, 0.03%)</title><rect x="596.2" y="533" width="0.4" height="15.0" fill="rgb(236,192,32)" rx="2" ry="2" />
<text  x="599.24" y="543.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (82 samples, 0.01%)</title><rect x="594.9" y="469" width="0.2" height="15.0" fill="rgb(250,35,53)" rx="2" ry="2" />
<text  x="597.93" y="479.5" ></text>
</g>
<g >
<title>tg/core/vm.run (76 samples, 0.01%)</title><rect x="405.6" y="373" width="0.1" height="15.0" fill="rgb(226,124,8)" rx="2" ry="2" />
<text  x="408.58" y="383.5" ></text>
</g>
<g >
<title>runtime.convT64 (233 samples, 0.03%)</title><rect x="905.9" y="469" width="0.4" height="15.0" fill="rgb(214,213,40)" rx="2" ry="2" />
<text  x="908.92" y="479.5" ></text>
</g>
<g >
<title>tg/rlp.writeUint (97 samples, 0.01%)</title><rect x="747.4" y="517" width="0.1" height="15.0" fill="rgb(230,167,27)" rx="2" ry="2" />
<text  x="750.38" y="527.5" ></text>
</g>
<g >
<title>runtime.convI2I (74 samples, 0.01%)</title><rect x="741.0" y="661" width="0.2" height="15.0" fill="rgb(215,160,0)" rx="2" ry="2" />
<text  x="744.04" y="671.5" ></text>
</g>
<g >
<title>sort.symMerge (5,094 samples, 0.73%)</title><rect x="1068.9" y="517" width="8.7" height="15.0" fill="rgb(213,183,43)" rx="2" ry="2" />
<text  x="1071.92" y="527.5" ></text>
</g>
<g >
<title>runtime.mallocgc (115 samples, 0.02%)</title><rect x="1091.3" y="613" width="0.2" height="15.0" fill="rgb(211,19,31)" rx="2" ry="2" />
<text  x="1094.31" y="623.5" ></text>
</g>
<g >
<title>tg/common/dbutils.PlainParseCompositeStorageKey (469 samples, 0.07%)</title><rect x="895.7" y="549" width="0.8" height="15.0" fill="rgb(219,213,29)" rx="2" ry="2" />
<text  x="898.72" y="559.5" ></text>
</g>
<g >
<title>tg/core/vm.run (604 samples, 0.09%)</title><rect x="484.2" y="309" width="1.1" height="15.0" fill="rgb(246,151,13)" rx="2" ry="2" />
<text  x="487.22" y="319.5" ></text>
</g>
<g >
<title>sort.symMerge (510 samples, 0.07%)</title><rect x="143.3" y="549" width="0.8" height="15.0" fill="rgb(217,71,13)" rx="2" ry="2" />
<text  x="146.26" y="559.5" ></text>
</g>
<g >
<title>sort.Search (92 samples, 0.01%)</title><rect x="321.1" y="437" width="0.2" height="15.0" fill="rgb(211,227,17)" rx="2" ry="2" />
<text  x="324.12" y="447.5" ></text>
</g>
<g >
<title>encoding/binary.bigEndian.Uint64 (125 samples, 0.02%)</title><rect x="334.6" y="565" width="0.2" height="15.0" fill="rgb(232,180,0)" rx="2" ry="2" />
<text  x="337.55" y="575.5" ></text>
</g>
<g >
<title>tg/common/etl.(*Collector).Load (1,435 samples, 0.21%)</title><rect x="958.6" y="709" width="2.4" height="15.0" fill="rgb(243,183,0)" rx="2" ry="2" />
<text  x="961.58" y="719.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (178 samples, 0.03%)</title><rect x="762.8" y="501" width="0.3" height="15.0" fill="rgb(238,122,11)" rx="2" ry="2" />
<text  x="765.77" y="511.5" ></text>
</g>
<g >
<title>runtime.notesleep (176 samples, 0.03%)</title><rect x="123.1" y="773" width="0.3" height="15.0" fill="rgb(254,144,18)" rx="2" ry="2" />
<text  x="126.12" y="783.5" ></text>
</g>
<g >
<title>tg/eth/stagedsync.(*State).runStage (572,252 samples, 82.36%)</title><rect x="135.0" y="773" width="971.8" height="15.0" fill="rgb(246,62,32)" rx="2" ry="2" />
<text  x="137.99" y="783.5" >tg/eth/stagedsync.(*State).runStage</text>
</g>
<g >
<title>tg/core/types.(*Receipt).statusEncoding (80 samples, 0.01%)</title><rect x="767.2" y="565" width="0.1" height="15.0" fill="rgb(227,179,12)" rx="2" ry="2" />
<text  x="770.21" y="575.5" ></text>
</g>
<g >
<title>tg/rlp.cachedWriter (84 samples, 0.01%)</title><rect x="1166.3" y="725" width="0.1" height="15.0" fill="rgb(215,205,13)" rx="2" ry="2" />
<text  x="1169.31" y="735.5" ></text>
</g>
<g >
<title>runtime.mallocgc (262 samples, 0.04%)</title><rect x="658.9" y="629" width="0.4" height="15.0" fill="rgb(214,32,45)" rx="2" ry="2" />
<text  x="661.89" y="639.5" ></text>
</g>
<g >
<title>tg/ethdb.(*LmdbCursor).next (1,360 samples, 0.20%)</title><rect x="203.7" y="485" width="2.3" height="15.0" fill="rgb(218,177,7)" rx="2" ry="2" />
<text  x="206.65" y="495.5" ></text>
</g>
<g >
<title>tg/core/vm.opCall (588 samples, 0.08%)</title><rect x="383.2" y="277" width="1.0" height="15.0" fill="rgb(210,133,9)" rx="2" ry="2" />
<text  x="386.25" y="287.5" ></text>
</g>
<g >
<title>tg/core/vm/stack.(*Stack).Push (195 samples, 0.03%)</title><rect x="392.1" y="405" width="0.3" height="15.0" fill="rgb(252,92,18)" rx="2" ry="2" />
<text  x="395.09" y="415.5" ></text>
</g>
<g >
<title>runtime.mallocgc (92 samples, 0.01%)</title><rect x="1107.6" y="677" width="0.2" height="15.0" fill="rgb(231,194,24)" rx="2" ry="2" />
<text  x="1110.62" y="687.5" ></text>
</g>
<g >
<title>runtime.newobject (96 samples, 0.01%)</title><rect x="1091.0" y="613" width="0.1" height="15.0" fill="rgb(215,114,15)" rx="2" ry="2" />
<text  x="1093.98" y="623.5" ></text>
</g>
<g >
<title>tg/ethdb.(*lmdbTx).Commit (302 samples, 0.04%)</title><rect x="795.7" y="693" width="0.5" height="15.0" fill="rgb(226,177,36)" rx="2" ry="2" />
<text  x="798.69" y="703.5" ></text>
</g>
<g >
<title>tg/core/vm.run (813 samples, 0.12%)</title><rect x="405.3" y="437" width="1.4" height="15.0" fill="rgb(214,152,45)" rx="2" ry="2" />
<text  x="408.28" y="447.5" ></text>
</g>
<g >
<title>sync.(*RWMutex).Lock (99 samples, 0.01%)</title><rect x="267.2" y="597" width="0.1" height="15.0" fill="rgb(214,174,9)" rx="2" ry="2" />
<text  x="270.17" y="607.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).Call (233 samples, 0.03%)</title><rect x="386.9" y="325" width="0.4" height="15.0" fill="rgb(254,96,12)" rx="2" ry="2" />
<text  x="389.86" y="335.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (260 samples, 0.04%)</title><rect x="907.1" y="437" width="0.4" height="15.0" fill="rgb(248,77,15)" rx="2" ry="2" />
<text  x="910.09" y="447.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.xorInUnaligned (134 samples, 0.02%)</title><rect x="890.9" y="485" width="0.2" height="15.0" fill="rgb(208,81,24)" rx="2" ry="2" />
<text  x="893.86" y="495.5" ></text>
</g>
<g >
<title>tg/core/vm.gasSStoreEIP2200 (1,590 samples, 0.23%)</title><rect x="324.2" y="597" width="2.7" height="15.0" fill="rgb(209,95,43)" rx="2" ry="2" />
<text  x="327.24" y="607.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find (2,393 samples, 0.34%)</title><rect x="683.2" y="565" width="4.1" height="15.0" fill="rgb(238,200,51)" rx="2" ry="2" />
<text  x="686.25" y="575.5" ></text>
</g>
<g >
<title>tg/ethdb.(*LmdbCursor).putNoOverwrite (2,229 samples, 0.32%)</title><rect x="807.7" y="565" width="3.8" height="15.0" fill="rgb(244,189,1)" rx="2" ry="2" />
<text  x="810.71" y="575.5" ></text>
</g>
<g >
<title>tg/crypto/secp256k1._Cfunc_secp256k1_ext_ecdsa_recover (18,517 samples, 2.66%)</title><rect x="1134.7" y="773" width="31.4" height="15.0" fill="rgb(213,14,40)" rx="2" ry="2" />
<text  x="1137.69" y="783.5" >tg..</text>
</g>
<g >
<title>runtime.cgocall (383 samples, 0.06%)</title><rect x="525.9" y="421" width="0.6" height="15.0" fill="rgb(215,68,49)" rx="2" ry="2" />
<text  x="528.87" y="431.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).Put (438 samples, 0.06%)</title><rect x="1057.1" y="549" width="0.8" height="15.0" fill="rgb(234,92,34)" rx="2" ry="2" />
<text  x="1060.12" y="559.5" ></text>
</g>
<g >
<title>runtime.notetsleep_internal (109 samples, 0.02%)</title><rect x="123.8" y="805" width="0.2" height="15.0" fill="rgb(229,6,20)" rx="2" ry="2" />
<text  x="126.79" y="815.5" ></text>
</g>
<g >
<title>tg/ethdb.(*LmdbCursor).next (1,170 samples, 0.17%)</title><rect x="1084.9" y="661" width="2.0" height="15.0" fill="rgb(212,185,37)" rx="2" ry="2" />
<text  x="1087.93" y="671.5" ></text>
</g>
<g >
<title>runtime.(*mSpanStateBox).get (82 samples, 0.01%)</title><rect x="20.9" y="837" width="0.1" height="15.0" fill="rgb(245,146,32)" rx="2" ry="2" />
<text  x="23.89" y="847.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (448 samples, 0.06%)</title><rect x="108.2" y="661" width="0.8" height="15.0" fill="rgb(254,112,4)" rx="2" ry="2" />
<text  x="111.20" y="671.5" ></text>
</g>
<g >
<title>tg/common/etl.Heap.Less (228 samples, 0.03%)</title><rect x="964.4" y="613" width="0.4" height="15.0" fill="rgb(229,147,43)" rx="2" ry="2" />
<text  x="967.44" y="623.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).GetState (2,191 samples, 0.32%)</title><rect x="400.6" y="453" width="3.8" height="15.0" fill="rgb(232,212,35)" rx="2" ry="2" />
<text  x="403.64" y="463.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find (112 samples, 0.02%)</title><rect x="703.6" y="549" width="0.2" height="15.0" fill="rgb(248,58,34)" rx="2" ry="2" />
<text  x="706.62" y="559.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (2,815 samples, 0.41%)</title><rect x="150.2" y="485" width="4.8" height="15.0" fill="rgb(223,59,12)" rx="2" ry="2" />
<text  x="153.23" y="495.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find (313 samples, 0.05%)</title><rect x="510.5" y="357" width="0.5" height="15.0" fill="rgb(217,191,0)" rx="2" ry="2" />
<text  x="513.46" y="367.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.(*state).Reset (79 samples, 0.01%)</title><rect x="760.3" y="645" width="0.1" height="15.0" fill="rgb(226,120,20)" rx="2" ry="2" />
<text  x="763.29" y="655.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc.func1 (77 samples, 0.01%)</title><rect x="662.1" y="517" width="0.1" height="15.0" fill="rgb(214,181,6)" rx="2" ry="2" />
<text  x="665.07" y="527.5" ></text>
</g>
<g >
<title>tg/rlp.decodeDecoder (2,964 samples, 0.43%)</title><rect x="1182.0" y="613" width="5.0" height="15.0" fill="rgb(223,44,25)" rx="2" ry="2" />
<text  x="1184.98" y="623.5" ></text>
</g>
<g >
<title>runtime.(*fixalloc).alloc (62 samples, 0.01%)</title><rect x="1101.2" y="325" width="0.1" height="15.0" fill="rgb(233,48,41)" rx="2" ry="2" />
<text  x="1104.24" y="335.5" ></text>
</g>
<g >
<title>sync.(*RWMutex).Lock (185 samples, 0.03%)</title><rect x="555.2" y="565" width="0.3" height="15.0" fill="rgb(247,143,5)" rx="2" ry="2" />
<text  x="558.21" y="575.5" ></text>
</g>
<g >
<title>reflect.New (397 samples, 0.06%)</title><rect x="1181.2" y="613" width="0.7" height="15.0" fill="rgb(220,46,21)" rx="2" ry="2" />
<text  x="1184.23" y="623.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (143 samples, 0.02%)</title><rect x="734.7" y="549" width="0.3" height="15.0" fill="rgb(213,116,12)" rx="2" ry="2" />
<text  x="737.71" y="559.5" ></text>
</g>
<g >
<title>runtime.rawbyteslice (62 samples, 0.01%)</title><rect x="985.9" y="533" width="0.1" height="15.0" fill="rgb(216,156,23)" rx="2" ry="2" />
<text  x="988.93" y="543.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).GetCode (3,000 samples, 0.43%)</title><rect x="287.4" y="629" width="5.1" height="15.0" fill="rgb(253,41,10)" rx="2" ry="2" />
<text  x="290.39" y="639.5" ></text>
</g>
<g >
<title>runtime.growslice (196 samples, 0.03%)</title><rect x="266.7" y="597" width="0.3" height="15.0" fill="rgb(243,27,54)" rx="2" ry="2" />
<text  x="269.69" y="607.5" ></text>
</g>
<g >
<title>github.com/holiman/uint256.udivremBy1 (67 samples, 0.01%)</title><rect x="521.1" y="549" width="0.1" height="15.0" fill="rgb(240,83,33)" rx="2" ry="2" />
<text  x="524.10" y="559.5" ></text>
</g>
<g >
<title>bytes.(*Reader).Read (217 samples, 0.03%)</title><rect x="165.6" y="533" width="0.4" height="15.0" fill="rgb(240,172,2)" rx="2" ry="2" />
<text  x="168.62" y="543.5" ></text>
</g>
<g >
<title>tg/core/state.(*PlainStateReader).ReadAccountStorage (1,753 samples, 0.25%)</title><rect x="401.4" y="405" width="3.0" height="15.0" fill="rgb(221,222,46)" rx="2" ry="2" />
<text  x="404.38" y="415.5" ></text>
</g>
<g >
<title>tg/core/vm.(*bn256PairingIstanbul).Run (214 samples, 0.03%)</title><rect x="404.9" y="421" width="0.3" height="15.0" fill="rgb(215,41,40)" rx="2" ry="2" />
<text  x="407.86" y="431.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).insert (5,679 samples, 0.82%)</title><rect x="672.9" y="565" width="9.6" height="15.0" fill="rgb(248,116,6)" rx="2" ry="2" />
<text  x="675.85" y="575.5" ></text>
</g>
<g >
<title>reflect.unsafe_New (321 samples, 0.05%)</title><rect x="225.9" y="405" width="0.5" height="15.0" fill="rgb(236,53,9)" rx="2" ry="2" />
<text  x="228.89" y="415.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (322 samples, 0.05%)</title><rect x="658.0" y="597" width="0.5" height="15.0" fill="rgb(209,194,21)" rx="2" ry="2" />
<text  x="660.98" y="607.5" ></text>
</g>
<g >
<title>tg/ethdb.(*ObjectDatabase).Walk (66 samples, 0.01%)</title><rect x="1180.7" y="725" width="0.1" height="15.0" fill="rgb(241,102,47)" rx="2" ry="2" />
<text  x="1183.67" y="735.5" ></text>
</g>
<g >
<title>tg/crypto/secp256k1._Cfunc_secp256k1_ext_ecdsa_recover (170 samples, 0.02%)</title><rect x="492.9" y="357" width="0.3" height="15.0" fill="rgb(234,56,21)" rx="2" ry="2" />
<text  x="495.90" y="367.5" ></text>
</g>
<g >
<title>context.(*valueCtx).Value (258 samples, 0.04%)</title><rect x="642.7" y="581" width="0.5" height="15.0" fill="rgb(236,217,44)" rx="2" ry="2" />
<text  x="645.72" y="591.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.(*state).Read (255 samples, 0.04%)</title><rect x="389.0" y="389" width="0.4" height="15.0" fill="rgb(213,175,47)" rx="2" ry="2" />
<text  x="391.97" y="399.5" ></text>
</g>
<g >
<title>tg/core/vm.codeBitmap (210 samples, 0.03%)</title><rect x="397.5" y="421" width="0.4" height="15.0" fill="rgb(235,82,38)" rx="2" ry="2" />
<text  x="400.49" y="431.5" ></text>
</g>
<g >
<title>tg/p2p.(*dialTask).dial (418 samples, 0.06%)</title><rect x="1187.2" y="837" width="0.7" height="15.0" fill="rgb(254,226,2)" rx="2" ry="2" />
<text  x="1190.20" y="847.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).getStateObject (72 samples, 0.01%)</title><rect x="325.3" y="565" width="0.1" height="15.0" fill="rgb(246,107,7)" rx="2" ry="2" />
<text  x="328.25" y="575.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (186 samples, 0.03%)</title><rect x="669.6" y="485" width="0.4" height="15.0" fill="rgb(244,214,40)" rx="2" ry="2" />
<text  x="672.64" y="495.5" ></text>
</g>
<g >
<title>tg/eth/stagedsync.promoteHistory.func1 (15,531 samples, 2.24%)</title><rect x="1058.5" y="645" width="26.4" height="15.0" fill="rgb(216,124,4)" rx="2" ry="2" />
<text  x="1061.52" y="655.5" >t..</text>
</g>
<g >
<title>tg/core/vm.opCaller (93 samples, 0.01%)</title><rect x="459.8" y="597" width="0.1" height="15.0" fill="rgb(234,171,5)" rx="2" ry="2" />
<text  x="462.75" y="607.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).Get (192 samples, 0.03%)</title><rect x="323.9" y="469" width="0.3" height="15.0" fill="rgb(226,156,7)" rx="2" ry="2" />
<text  x="326.90" y="479.5" ></text>
</g>
<g >
<title>runtime.mapaccess1_faststr (231 samples, 0.03%)</title><rect x="928.0" y="501" width="0.4" height="15.0" fill="rgb(215,87,45)" rx="2" ry="2" />
<text  x="930.97" y="511.5" ></text>
</g>
<g >
<title>tg/core/vm.opJumpi (2,228 samples, 0.32%)</title><rect x="530.6" y="597" width="3.8" height="15.0" fill="rgb(224,221,5)" rx="2" ry="2" />
<text  x="533.61" y="607.5" ></text>
</g>
<g >
<title>cmpbody (185 samples, 0.03%)</title><rect x="870.3" y="197" width="0.3" height="15.0" fill="rgb(246,136,25)" rx="2" ry="2" />
<text  x="873.29" y="207.5" ></text>
</g>
<g >
<title>sort.Stable (200 samples, 0.03%)</title><rect x="1040.2" y="565" width="0.3" height="15.0" fill="rgb(220,209,42)" rx="2" ry="2" />
<text  x="1043.19" y="575.5" ></text>
</g>
<g >
<title>tg/ethdb.(*ObjectDatabase).Get (14,781 samples, 2.13%)</title><rect x="826.4" y="565" width="25.1" height="15.0" fill="rgb(205,143,44)" rx="2" ry="2" />
<text  x="829.37" y="575.5" >t..</text>
</g>
<g >
<title>sort.Search (153 samples, 0.02%)</title><rect x="440.6" y="389" width="0.2" height="15.0" fill="rgb(229,179,45)" rx="2" ry="2" />
<text  x="443.57" y="399.5" ></text>
</g>
<g >
<title>tg/core/types.(*Transaction).AsMessage (291 samples, 0.04%)</title><rect x="644.5" y="677" width="0.5" height="15.0" fill="rgb(210,127,18)" rx="2" ry="2" />
<text  x="647.49" y="687.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.(*arrayContainer).numberOfRuns (106 samples, 0.02%)</title><rect x="1035.1" y="565" width="0.2" height="15.0" fill="rgb(205,147,10)" rx="2" ry="2" />
<text  x="1038.14" y="575.5" ></text>
</g>
<g >
<title>bytes.Compare (77 samples, 0.01%)</title><rect x="510.2" y="293" width="0.2" height="15.0" fill="rgb(208,169,46)" rx="2" ry="2" />
<text  x="513.22" y="303.5" ></text>
</g>
<g >
<title>tg/crypto/secp256k1.RecoverPubkey (144 samples, 0.02%)</title><rect x="447.0" y="469" width="0.3" height="15.0" fill="rgb(207,212,32)" rx="2" ry="2" />
<text  x="450.01" y="479.5" ></text>
</g>
<g >
<title>sort.symMerge (1,047 samples, 0.15%)</title><rect x="992.2" y="293" width="1.8" height="15.0" fill="rgb(247,143,21)" rx="2" ry="2" />
<text  x="995.17" y="303.5" ></text>
</g>
<g >
<title>cmpbody (60 samples, 0.01%)</title><rect x="993.6" y="181" width="0.1" height="15.0" fill="rgb(222,81,27)" rx="2" ry="2" />
<text  x="996.60" y="191.5" ></text>
</g>
<g >
<title>runtime.growWork (428 samples, 0.06%)</title><rect x="668.9" y="613" width="0.7" height="15.0" fill="rgb(212,202,24)" rx="2" ry="2" />
<text  x="671.87" y="623.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVMInterpreter).Run (2,697 samples, 0.39%)</title><rect x="447.3" y="485" width="4.6" height="15.0" fill="rgb(234,53,49)" rx="2" ry="2" />
<text  x="450.30" y="495.5" ></text>
</g>
<g >
<title>tg/consensus/ethash.(*cache).generate.func1 (1,082 samples, 0.16%)</title><rect x="127.3" y="837" width="1.9" height="15.0" fill="rgb(232,47,28)" rx="2" ry="2" />
<text  x="130.32" y="847.5" ></text>
</g>
<g >
<title>tg/eth/stagedsync.promoteHistory.func2 (9,621 samples, 1.38%)</title><rect x="1090.5" y="677" width="16.3" height="15.0" fill="rgb(243,142,23)" rx="2" ry="2" />
<text  x="1093.49" y="687.5" ></text>
</g>
<g >
<title>bytes.Compare (697 samples, 0.10%)</title><rect x="254.3" y="453" width="1.1" height="15.0" fill="rgb(254,70,4)" rx="2" ry="2" />
<text  x="257.26" y="463.5" ></text>
</g>
<g >
<title>tg/core/vm.opStaticCall (1,109 samples, 0.16%)</title><rect x="404.8" y="469" width="1.9" height="15.0" fill="rgb(236,92,3)" rx="2" ry="2" />
<text  x="407.78" y="479.5" ></text>
</g>
<g >
<title>cmpbody (554 samples, 0.08%)</title><rect x="247.2" y="405" width="0.9" height="15.0" fill="rgb(215,184,44)" rx="2" ry="2" />
<text  x="250.20" y="415.5" ></text>
</g>
<g >
<title>runtime.mapaccess1 (161 samples, 0.02%)</title><rect x="750.0" y="613" width="0.2" height="15.0" fill="rgb(240,229,13)" rx="2" ry="2" />
<text  x="752.97" y="623.5" ></text>
</g>
<g >
<title>runtime.typedmemmove (66 samples, 0.01%)</title><rect x="561.6" y="517" width="0.1" height="15.0" fill="rgb(236,139,3)" rx="2" ry="2" />
<text  x="564.63" y="527.5" ></text>
</g>
<g >
<title>runtime.memmove (86 samples, 0.01%)</title><rect x="1124.4" y="565" width="0.1" height="15.0" fill="rgb(246,93,38)" rx="2" ry="2" />
<text  x="1127.39" y="575.5" ></text>
</g>
<g >
<title>tg/rlp.(*encbuf).toWriter (142 samples, 0.02%)</title><rect x="1125.9" y="725" width="0.2" height="15.0" fill="rgb(235,17,8)" rx="2" ry="2" />
<text  x="1128.90" y="735.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (129 samples, 0.02%)</title><rect x="369.7" y="373" width="0.2" height="15.0" fill="rgb(233,141,40)" rx="2" ry="2" />
<text  x="372.69" y="383.5" ></text>
</g>
<g >
<title>tg/core/vm/stack.(*Stack).Dup (116 samples, 0.02%)</title><rect x="453.5" y="533" width="0.2" height="15.0" fill="rgb(219,196,7)" rx="2" ry="2" />
<text  x="456.50" y="543.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (153 samples, 0.02%)</title><rect x="898.7" y="533" width="0.2" height="15.0" fill="rgb(218,96,52)" rx="2" ry="2" />
<text  x="901.68" y="543.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (6,072 samples, 0.87%)</title><rect x="272.2" y="533" width="10.3" height="15.0" fill="rgb(246,101,13)" rx="2" ry="2" />
<text  x="275.24" y="543.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.(*state).permute (88 samples, 0.01%)</title><rect x="1130.6" y="741" width="0.1" height="15.0" fill="rgb(236,221,30)" rx="2" ry="2" />
<text  x="1133.58" y="751.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.beginTxn (2,716 samples, 0.39%)</title><rect x="828.1" y="501" width="4.6" height="15.0" fill="rgb(217,130,15)" rx="2" ry="2" />
<text  x="831.09" y="511.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (60 samples, 0.01%)</title><rect x="271.6" y="517" width="0.1" height="15.0" fill="rgb(232,83,39)" rx="2" ry="2" />
<text  x="274.63" y="527.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (148 samples, 0.02%)</title><rect x="977.5" y="565" width="0.2" height="15.0" fill="rgb(238,94,5)" rx="2" ry="2" />
<text  x="980.49" y="575.5" ></text>
</g>
<g >
<title>tg/ethdb.(*LmdbCursor).set (141 samples, 0.02%)</title><rect x="460.9" y="485" width="0.3" height="15.0" fill="rgb(227,109,15)" rx="2" ry="2" />
<text  x="463.93" y="495.5" ></text>
</g>
<g >
<title>tg/crypto/secp256k1.RecoverPubkey (79 samples, 0.01%)</title><rect x="450.6" y="405" width="0.1" height="15.0" fill="rgb(209,164,54)" rx="2" ry="2" />
<text  x="453.56" y="415.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb._Cfunc_lmdbgo_mdb_cursor_get1 (133 samples, 0.02%)</title><rect x="464.1" y="421" width="0.3" height="15.0" fill="rgb(211,82,23)" rx="2" ry="2" />
<text  x="467.14" y="431.5" ></text>
</g>
<g >
<title>runtime.SetFinalizer.func2 (304 samples, 0.04%)</title><rect x="933.0" y="437" width="0.5" height="15.0" fill="rgb(235,79,13)" rx="2" ry="2" />
<text  x="935.96" y="447.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.(*state).Read (310 samples, 0.04%)</title><rect x="490.0" y="453" width="0.6" height="15.0" fill="rgb(210,67,0)" rx="2" ry="2" />
<text  x="493.05" y="463.5" ></text>
</g>
<g >
<title>bytes.(*Reader).Read (75 samples, 0.01%)</title><rect x="790.9" y="453" width="0.2" height="15.0" fill="rgb(228,20,26)" rx="2" ry="2" />
<text  x="793.93" y="463.5" ></text>
</g>
<g >
<title>sort.swapRange (111 samples, 0.02%)</title><rect x="868.1" y="277" width="0.2" height="15.0" fill="rgb(209,95,36)" rx="2" ry="2" />
<text  x="871.11" y="287.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).getVal2 (6,353 samples, 0.91%)</title><rect x="582.9" y="453" width="10.8" height="15.0" fill="rgb(227,89,44)" rx="2" ry="2" />
<text  x="585.91" y="463.5" ></text>
</g>
<g >
<title>tg/core/vm/stack.(*Stack).Push (1,346 samples, 0.19%)</title><rect x="455.0" y="533" width="2.3" height="15.0" fill="rgb(238,68,4)" rx="2" ry="2" />
<text  x="458.04" y="543.5" ></text>
</g>
<g >
<title>github.com/holiman/uint256.NewInt (72 samples, 0.01%)</title><rect x="656.7" y="661" width="0.1" height="15.0" fill="rgb(242,117,48)" rx="2" ry="2" />
<text  x="659.68" y="671.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (151 samples, 0.02%)</title><rect x="243.4" y="453" width="0.2" height="15.0" fill="rgb(254,172,47)" rx="2" ry="2" />
<text  x="246.36" y="463.5" ></text>
</g>
<g >
<title>tg/crypto/secp256k1.RecoverPubkeyWithContext.func1 (170 samples, 0.02%)</title><rect x="492.9" y="373" width="0.3" height="15.0" fill="rgb(205,165,43)" rx="2" ry="2" />
<text  x="495.90" y="383.5" ></text>
</g>
<g >
<title>sort.swapRange (79 samples, 0.01%)</title><rect x="1074.9" y="309" width="0.1" height="15.0" fill="rgb(248,226,31)" rx="2" ry="2" />
<text  x="1077.87" y="319.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).GetState (1,197 samples, 0.17%)</title><rect x="490.7" y="453" width="2.0" height="15.0" fill="rgb(240,112,16)" rx="2" ry="2" />
<text  x="493.65" y="463.5" ></text>
</g>
<g >
<title>tg/rlp.decodeUint (215 samples, 0.03%)</title><rect x="791.1" y="517" width="0.4" height="15.0" fill="rgb(235,3,20)" rx="2" ry="2" />
<text  x="794.09" y="527.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (83 samples, 0.01%)</title><rect x="597.4" y="453" width="0.2" height="15.0" fill="rgb(237,177,24)" rx="2" ry="2" />
<text  x="600.41" y="463.5" ></text>
</g>
<g >
<title>tg/ethdb.(*mutation).Get (380 samples, 0.05%)</title><rect x="452.4" y="453" width="0.6" height="15.0" fill="rgb(252,137,20)" rx="2" ry="2" />
<text  x="455.36" y="463.5" ></text>
</g>
<g >
<title>tg/core/vm/stack.(*Stack).Push (300 samples, 0.04%)</title><rect x="494.3" y="469" width="0.5" height="15.0" fill="rgb(222,35,12)" rx="2" ry="2" />
<text  x="497.28" y="479.5" ></text>
</g>
<g >
<title>tg/core/vm.NewContract (67 samples, 0.01%)</title><rect x="598.4" y="565" width="0.1" height="15.0" fill="rgb(217,2,20)" rx="2" ry="2" />
<text  x="601.41" y="575.5" ></text>
</g>
<g >
<title>runtime.mallocgc.func1 (86 samples, 0.01%)</title><rect x="1067.6" y="533" width="0.1" height="15.0" fill="rgb(253,185,35)" rx="2" ry="2" />
<text  x="1070.59" y="543.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.fastpathT.EncSliceBytesV (130 samples, 0.02%)</title><rect x="1040.7" y="501" width="0.2" height="15.0" fill="rgb(230,154,31)" rx="2" ry="2" />
<text  x="1043.65" y="511.5" ></text>
</g>
<g >
<title>sort.rotate (141 samples, 0.02%)</title><rect x="1071.6" y="437" width="0.2" height="15.0" fill="rgb(224,132,50)" rx="2" ry="2" />
<text  x="1074.56" y="447.5" ></text>
</g>
<g >
<title>tg/turbo/trie.(*RetainList).AddHex (608 samples, 0.09%)</title><rect x="974.0" y="613" width="1.0" height="15.0" fill="rgb(241,123,19)" rx="2" ry="2" />
<text  x="976.95" y="623.5" ></text>
</g>
<g >
<title>runtime.casgstatus (61 samples, 0.01%)</title><rect x="1024.6" y="517" width="0.1" height="15.0" fill="rgb(247,210,20)" rx="2" ry="2" />
<text  x="1027.63" y="527.5" ></text>
</g>
<g >
<title>tg/core/types.HomesteadSigner.Sender (5,773 samples, 0.83%)</title><rect x="1166.1" y="837" width="9.8" height="15.0" fill="rgb(230,6,8)" rx="2" ry="2" />
<text  x="1169.14" y="847.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVMInterpreter).Run (59 samples, 0.01%)</title><rect x="384.3" y="229" width="0.1" height="15.0" fill="rgb(254,15,51)" rx="2" ry="2" />
<text  x="387.26" y="239.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*BTree).Get (172 samples, 0.02%)</title><rect x="460.6" y="501" width="0.3" height="15.0" fill="rgb(250,41,18)" rx="2" ry="2" />
<text  x="463.63" y="511.5" ></text>
</g>
<g >
<title>tg/eth/downloader.(*queue).DeliverBodies (7,161 samples, 1.03%)</title><rect x="1106.9" y="789" width="12.2" height="15.0" fill="rgb(249,88,32)" rx="2" ry="2" />
<text  x="1109.94" y="799.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (77 samples, 0.01%)</title><rect x="1123.7" y="501" width="0.1" height="15.0" fill="rgb(210,98,38)" rx="2" ry="2" />
<text  x="1126.69" y="511.5" ></text>
</g>
<g >
<title>tg/p2p/rlpx.(*encHandshake).makeAuthMsg (105 samples, 0.02%)</title><rect x="1187.2" y="741" width="0.2" height="15.0" fill="rgb(221,90,44)" rx="2" ry="2" />
<text  x="1190.24" y="751.5" ></text>
</g>
<g >
<title>runtime.mapaccess1 (107 samples, 0.02%)</title><rect x="766.6" y="373" width="0.2" height="15.0" fill="rgb(232,175,47)" rx="2" ry="2" />
<text  x="769.61" y="383.5" ></text>
</g>
<g >
<title>sort.Search (435 samples, 0.06%)</title><rect x="581.2" y="453" width="0.8" height="15.0" fill="rgb(205,5,45)" rx="2" ry="2" />
<text  x="584.23" y="463.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (93 samples, 0.01%)</title><rect x="244.7" y="517" width="0.1" height="15.0" fill="rgb(235,52,14)" rx="2" ry="2" />
<text  x="247.66" y="527.5" ></text>
</g>
<g >
<title>sort.swapRange (129 samples, 0.02%)</title><rect x="1073.1" y="373" width="0.2" height="15.0" fill="rgb(220,111,21)" rx="2" ry="2" />
<text  x="1076.10" y="383.5" ></text>
</g>
<g >
<title>tg/core/vm.run (74 samples, 0.01%)</title><rect x="479.5" y="309" width="0.1" height="15.0" fill="rgb(239,123,1)" rx="2" ry="2" />
<text  x="482.47" y="319.5" ></text>
</g>
<g >
<title>reflect.Value.Interface (160 samples, 0.02%)</title><rect x="199.8" y="357" width="0.3" height="15.0" fill="rgb(217,25,48)" rx="2" ry="2" />
<text  x="202.79" y="367.5" ></text>
</g>
<g >
<title>tg/core/vm.run (75 samples, 0.01%)</title><rect x="493.3" y="373" width="0.1" height="15.0" fill="rgb(247,65,27)" rx="2" ry="2" />
<text  x="496.31" y="383.5" ></text>
</g>
<g >
<title>runtime.rawbyteslice (77 samples, 0.01%)</title><rect x="862.9" y="501" width="0.1" height="15.0" fill="rgb(218,175,26)" rx="2" ry="2" />
<text  x="865.86" y="511.5" ></text>
</g>
<g >
<title>bytes.Compare (87 samples, 0.01%)</title><rect x="728.7" y="597" width="0.1" height="15.0" fill="rgb(231,135,45)" rx="2" ry="2" />
<text  x="731.67" y="607.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (1,267 samples, 0.18%)</title><rect x="1053.5" y="437" width="2.2" height="15.0" fill="rgb(216,45,0)" rx="2" ry="2" />
<text  x="1056.52" y="447.5" ></text>
</g>
<g >
<title>runtime.markroot (1,411 samples, 0.20%)</title><rect x="59.7" y="805" width="2.4" height="15.0" fill="rgb(236,122,6)" rx="2" ry="2" />
<text  x="62.67" y="815.5" ></text>
</g>
<g >
<title>runtime.memmove (114 samples, 0.02%)</title><rect x="862.0" y="501" width="0.2" height="15.0" fill="rgb(245,133,53)" rx="2" ry="2" />
<text  x="864.96" y="511.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.(*state).permute (64 samples, 0.01%)</title><rect x="1029.8" y="597" width="0.1" height="15.0" fill="rgb(221,49,4)" rx="2" ry="2" />
<text  x="1032.77" y="607.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).DelegateCall (33,236 samples, 4.78%)</title><rect x="463.9" y="581" width="56.5" height="15.0" fill="rgb(249,106,38)" rx="2" ry="2" />
<text  x="466.93" y="591.5" >tg/co..</text>
</g>
<g >
<title>runtime.futex (84 samples, 0.01%)</title><rect x="122.1" y="773" width="0.2" height="15.0" fill="rgb(228,28,7)" rx="2" ry="2" />
<text  x="125.11" y="783.5" ></text>
</g>
<g >
<title>runtime.mallocgc (79 samples, 0.01%)</title><rect x="1034.2" y="581" width="0.2" height="15.0" fill="rgb(230,208,3)" rx="2" ry="2" />
<text  x="1037.22" y="591.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (85 samples, 0.01%)</title><rect x="971.4" y="389" width="0.1" height="15.0" fill="rgb(250,88,1)" rx="2" ry="2" />
<text  x="974.40" y="399.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (101 samples, 0.01%)</title><rect x="370.3" y="421" width="0.2" height="15.0" fill="rgb(216,58,52)" rx="2" ry="2" />
<text  x="373.34" y="431.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVMInterpreter).Run (62 samples, 0.01%)</title><rect x="514.1" y="357" width="0.1" height="15.0" fill="rgb(224,29,0)" rx="2" ry="2" />
<text  x="517.10" y="367.5" ></text>
</g>
<g >
<title>runtime.walltime (62 samples, 0.01%)</title><rect x="203.1" y="389" width="0.1" height="15.0" fill="rgb(217,45,19)" rx="2" ry="2" />
<text  x="206.05" y="399.5" ></text>
</g>
<g >
<title>tg/ethdb/bitmapdb.WalkChunkWithKeys64 (4,694 samples, 0.68%)</title><rect x="1049.9" y="661" width="8.0" height="15.0" fill="rgb(253,59,11)" rx="2" ry="2" />
<text  x="1052.91" y="671.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (93 samples, 0.01%)</title><rect x="215.3" y="405" width="0.2" height="15.0" fill="rgb(228,115,51)" rx="2" ry="2" />
<text  x="218.31" y="415.5" ></text>
</g>
<g >
<title>runtime.hashGrow (164 samples, 0.02%)</title><rect x="434.9" y="453" width="0.2" height="15.0" fill="rgb(209,229,32)" rx="2" ry="2" />
<text  x="437.85" y="463.5" ></text>
</g>
<g >
<title>runtime.bgscavenge.func1 (535 samples, 0.08%)</title><rect x="108.1" y="757" width="0.9" height="15.0" fill="rgb(240,171,18)" rx="2" ry="2" />
<text  x="111.08" y="767.5" ></text>
</g>
<g >
<title>tg/core/vm.run (439 samples, 0.06%)</title><rect x="415.9" y="437" width="0.8" height="15.0" fill="rgb(247,186,20)" rx="2" ry="2" />
<text  x="418.95" y="447.5" ></text>
</g>
<g >
<title>runtime.mallocgc (71 samples, 0.01%)</title><rect x="1079.6" y="549" width="0.2" height="15.0" fill="rgb(216,108,31)" rx="2" ry="2" />
<text  x="1082.63" y="559.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*ioDecReader).readn1 (59 samples, 0.01%)</title><rect x="169.7" y="485" width="0.1" height="15.0" fill="rgb(244,140,47)" rx="2" ry="2" />
<text  x="172.69" y="495.5" ></text>
</g>
<g >
<title>sort.symMerge (167 samples, 0.02%)</title><rect x="1040.2" y="453" width="0.3" height="15.0" fill="rgb(253,153,36)" rx="2" ry="2" />
<text  x="1043.25" y="463.5" ></text>
</g>
<g >
<title>runtime.newobject (106 samples, 0.02%)</title><rect x="145.8" y="629" width="0.2" height="15.0" fill="rgb(253,141,48)" rx="2" ry="2" />
<text  x="148.82" y="639.5" ></text>
</g>
<g >
<title>tg/core/vm.NewContract (63 samples, 0.01%)</title><rect x="472.2" y="501" width="0.1" height="15.0" fill="rgb(230,164,4)" rx="2" ry="2" />
<text  x="475.18" y="511.5" ></text>
</g>
<g >
<title>tg/core/state.(*PlainStateReader).ReadAccountCode (129 samples, 0.02%)</title><rect x="396.7" y="421" width="0.2" height="15.0" fill="rgb(227,7,24)" rx="2" ry="2" />
<text  x="399.72" y="431.5" ></text>
</g>
<g >
<title>runtime.cgocall (75 samples, 0.01%)</title><rect x="723.4" y="549" width="0.1" height="15.0" fill="rgb(205,37,20)" rx="2" ry="2" />
<text  x="726.41" y="559.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).getVal0.func1 (1,283 samples, 0.18%)</title><rect x="203.7" y="437" width="2.2" height="15.0" fill="rgb(211,78,9)" rx="2" ry="2" />
<text  x="206.68" y="447.5" ></text>
</g>
<g >
<title>math/big.(*Int).Set (63 samples, 0.01%)</title><rect x="234.8" y="677" width="0.1" height="15.0" fill="rgb(234,80,33)" rx="2" ry="2" />
<text  x="237.78" y="687.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.newArrayContainerCapacity (68 samples, 0.01%)</title><rect x="1052.8" y="565" width="0.1" height="15.0" fill="rgb(239,4,15)" rx="2" ry="2" />
<text  x="1055.79" y="575.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.(*Bitmap).Or (211 samples, 0.03%)</title><rect x="1090.8" y="645" width="0.4" height="15.0" fill="rgb(218,47,19)" rx="2" ry="2" />
<text  x="1093.82" y="655.5" ></text>
</g>
<g >
<title>internal/poll.ignoringEINTR (105 samples, 0.02%)</title><rect x="1079.3" y="437" width="0.2" height="15.0" fill="rgb(251,137,24)" rx="2" ry="2" />
<text  x="1082.32" y="447.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.newRunContainer16FromArray (72 samples, 0.01%)</title><rect x="1102.2" y="501" width="0.1" height="15.0" fill="rgb(210,39,44)" rx="2" ry="2" />
<text  x="1105.17" y="511.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.(*state).Write (998 samples, 0.14%)</title><rect x="228.1" y="565" width="1.7" height="15.0" fill="rgb(236,184,52)" rx="2" ry="2" />
<text  x="231.08" y="575.5" ></text>
</g>
<g >
<title>runtime.growslice (130 samples, 0.02%)</title><rect x="1030.9" y="581" width="0.2" height="15.0" fill="rgb(212,172,5)" rx="2" ry="2" />
<text  x="1033.86" y="591.5" ></text>
</g>
<g >
<title>runtime.makeslice (298 samples, 0.04%)</title><rect x="894.4" y="533" width="0.5" height="15.0" fill="rgb(209,10,20)" rx="2" ry="2" />
<text  x="897.36" y="543.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (75 samples, 0.01%)</title><rect x="1039.1" y="613" width="0.1" height="15.0" fill="rgb(243,222,53)" rx="2" ry="2" />
<text  x="1042.06" y="623.5" ></text>
</g>
<g >
<title>container/heap.Pop (201 samples, 0.03%)</title><rect x="1046.4" y="677" width="0.4" height="15.0" fill="rgb(232,190,38)" rx="2" ry="2" />
<text  x="1049.44" y="687.5" ></text>
</g>
<g >
<title>runtime.shouldStealTimers (596 samples, 0.09%)</title><rect x="121.1" y="821" width="1.0" height="15.0" fill="rgb(227,9,8)" rx="2" ry="2" />
<text  x="124.09" y="831.5" ></text>
</g>
<g >
<title>tg/core/vm.opCreate2 (322 samples, 0.05%)</title><rect x="459.9" y="597" width="0.6" height="15.0" fill="rgb(220,215,46)" rx="2" ry="2" />
<text  x="462.93" y="607.5" ></text>
</g>
<g >
<title>tg/ethdb.(*lmdbTx).Commit (490 samples, 0.07%)</title><rect x="1128.8" y="789" width="0.9" height="15.0" fill="rgb(210,169,50)" rx="2" ry="2" />
<text  x="1131.83" y="799.5" ></text>
</g>
<g >
<title>container/heap.down (136 samples, 0.02%)</title><rect x="958.6" y="661" width="0.3" height="15.0" fill="rgb(215,56,45)" rx="2" ry="2" />
<text  x="961.64" y="671.5" ></text>
</g>
<g >
<title>runtime.memmove (66 samples, 0.01%)</title><rect x="236.6" y="645" width="0.2" height="15.0" fill="rgb(231,51,24)" rx="2" ry="2" />
<text  x="239.64" y="655.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).getStateObject (418 samples, 0.06%)</title><rect x="555.9" y="565" width="0.7" height="15.0" fill="rgb(245,30,6)" rx="2" ry="2" />
<text  x="558.86" y="575.5" ></text>
</g>
<g >
<title>tg/eth/stagedsync.flushBitmaps64 (1,274 samples, 0.18%)</title><rect x="1079.9" y="629" width="2.2" height="15.0" fill="rgb(208,210,7)" rx="2" ry="2" />
<text  x="1082.94" y="639.5" ></text>
</g>
<g >
<title>runtime.makemap_small (241 samples, 0.03%)</title><rect x="286.0" y="581" width="0.4" height="15.0" fill="rgb(226,185,20)" rx="2" ry="2" />
<text  x="288.96" y="591.5" ></text>
</g>
<g >
<title>sort.rotate (80 samples, 0.01%)</title><rect x="1074.4" y="341" width="0.2" height="15.0" fill="rgb(240,71,29)" rx="2" ry="2" />
<text  x="1077.42" y="351.5" ></text>
</g>
<g >
<title>github.com/holiman/uint256.(*Int).SetBytes (229 samples, 0.03%)</title><rect x="366.9" y="517" width="0.4" height="15.0" fill="rgb(246,99,47)" rx="2" ry="2" />
<text  x="369.92" y="527.5" ></text>
</g>
<g >
<title>runtime.getitab (206 samples, 0.03%)</title><rect x="655.9" y="613" width="0.3" height="15.0" fill="rgb(236,105,26)" rx="2" ry="2" />
<text  x="658.89" y="623.5" ></text>
</g>
<g >
<title>tg/core/state.(*stateObject).Code (63 samples, 0.01%)</title><rect x="410.1" y="485" width="0.1" height="15.0" fill="rgb(225,40,39)" rx="2" ry="2" />
<text  x="413.13" y="495.5" ></text>
</g>
<g >
<title>tg/core/state.(*stateObject).SubBalance (1,016 samples, 0.15%)</title><rect x="242.2" y="597" width="1.7" height="15.0" fill="rgb(212,180,25)" rx="2" ry="2" />
<text  x="245.21" y="607.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (2,194 samples, 0.32%)</title><rect x="150.6" y="421" width="3.7" height="15.0" fill="rgb(232,189,36)" rx="2" ry="2" />
<text  x="153.55" y="431.5" ></text>
</g>
<g >
<title>runtime.mallocgc (309 samples, 0.04%)</title><rect x="891.9" y="517" width="0.5" height="15.0" fill="rgb(220,184,31)" rx="2" ry="2" />
<text  x="894.92" y="527.5" ></text>
</g>
<g >
<title>runtime.mallocgc (346 samples, 0.05%)</title><rect x="197.0" y="453" width="0.6" height="15.0" fill="rgb(240,59,35)" rx="2" ry="2" />
<text  x="199.98" y="463.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).getStateObject (75 samples, 0.01%)</title><rect x="477.3" y="421" width="0.2" height="15.0" fill="rgb(253,109,39)" rx="2" ry="2" />
<text  x="480.34" y="431.5" ></text>
</g>
<g >
<title>runtime.mallocgc (170 samples, 0.02%)</title><rect x="244.6" y="565" width="0.3" height="15.0" fill="rgb(251,88,30)" rx="2" ry="2" />
<text  x="247.59" y="575.5" ></text>
</g>
<g >
<title>tg/crypto/bn256.PairingCheck (255 samples, 0.04%)</title><rect x="446.5" y="469" width="0.4" height="15.0" fill="rgb(224,25,46)" rx="2" ry="2" />
<text  x="449.48" y="479.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (63 samples, 0.01%)</title><rect x="460.1" y="469" width="0.1" height="15.0" fill="rgb(238,177,3)" rx="2" ry="2" />
<text  x="463.13" y="479.5" ></text>
</g>
<g >
<title>tg/core/vm.gasSStore (1,478 samples, 0.21%)</title><rect x="321.7" y="597" width="2.5" height="15.0" fill="rgb(229,90,21)" rx="2" ry="2" />
<text  x="324.73" y="607.5" ></text>
</g>
<g >
<title>cmpbody (774 samples, 0.11%)</title><rect x="715.0" y="485" width="1.3" height="15.0" fill="rgb(227,170,11)" rx="2" ry="2" />
<text  x="718.03" y="495.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (71 samples, 0.01%)</title><rect x="973.5" y="549" width="0.2" height="15.0" fill="rgb(224,15,10)" rx="2" ry="2" />
<text  x="976.53" y="559.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (68 samples, 0.01%)</title><rect x="264.7" y="533" width="0.1" height="15.0" fill="rgb(207,153,7)" rx="2" ry="2" />
<text  x="267.68" y="543.5" ></text>
</g>
<g >
<title>tg/eth/stagedsync.DefaultStages.func3.1 (98 samples, 0.01%)</title><rect x="232.3" y="757" width="0.2" height="15.0" fill="rgb(239,158,50)" rx="2" ry="2" />
<text  x="235.32" y="767.5" ></text>
</g>
<g >
<title>tg/core/vm.run (3,232 samples, 0.47%)</title><rect x="482.9" y="437" width="5.5" height="15.0" fill="rgb(225,146,52)" rx="2" ry="2" />
<text  x="485.88" y="447.5" ></text>
</g>
<g >
<title>tg/core/types.Transactions.GetRlp (3,128 samples, 0.45%)</title><rect x="1107.8" y="693" width="5.3" height="15.0" fill="rgb(238,204,30)" rx="2" ry="2" />
<text  x="1110.80" y="703.5" ></text>
</g>
<g >
<title>bytes.Compare (502 samples, 0.07%)</title><rect x="437.5" y="309" width="0.9" height="15.0" fill="rgb(224,145,30)" rx="2" ry="2" />
<text  x="440.54" y="319.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*cborEncDriver).EncodeStringBytesRaw (659 samples, 0.09%)</title><rect x="1078.1" y="485" width="1.1" height="15.0" fill="rgb(214,213,47)" rx="2" ry="2" />
<text  x="1081.13" y="495.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find.func1 (107 samples, 0.02%)</title><rect x="666.6" y="533" width="0.1" height="15.0" fill="rgb(233,179,52)" rx="2" ry="2" />
<text  x="669.55" y="543.5" ></text>
</g>
<g >
<title>runtime.(*gcBitsArena).tryAlloc (1,213 samples, 0.17%)</title><rect x="23.8" y="821" width="2.1" height="15.0" fill="rgb(211,78,19)" rx="2" ry="2" />
<text  x="26.80" y="831.5" ></text>
</g>
<g >
<title>runtime.cgoCheckArg (232 samples, 0.03%)</title><rect x="848.3" y="453" width="0.4" height="15.0" fill="rgb(250,137,27)" rx="2" ry="2" />
<text  x="851.34" y="463.5" ></text>
</g>
<g >
<title>tg/rlp.(*Stream).readFull (71 samples, 0.01%)</title><rect x="788.8" y="485" width="0.1" height="15.0" fill="rgb(221,62,27)" rx="2" ry="2" />
<text  x="791.83" y="495.5" ></text>
</g>
<g >
<title>tg/common/etl.Heap.Less (83 samples, 0.01%)</title><rect x="966.6" y="613" width="0.1" height="15.0" fill="rgb(228,192,28)" rx="2" ry="2" />
<text  x="969.55" y="623.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVMInterpreter).Run (139 samples, 0.02%)</title><rect x="384.9" y="293" width="0.3" height="15.0" fill="rgb(206,85,1)" rx="2" ry="2" />
<text  x="387.95" y="303.5" ></text>
</g>
<g >
<title>github.com/holiman/uint256.(*Int).Exp (69 samples, 0.01%)</title><rect x="521.8" y="581" width="0.1" height="15.0" fill="rgb(220,108,42)" rx="2" ry="2" />
<text  x="524.77" y="591.5" ></text>
</g>
<g >
<title>tg/ethdb.(*ObjectDatabase).Get (431 samples, 0.06%)</title><rect x="230.1" y="709" width="0.8" height="15.0" fill="rgb(225,173,1)" rx="2" ry="2" />
<text  x="233.14" y="719.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.(*Bitmap).WriteTo (248 samples, 0.04%)</title><rect x="1102.5" y="597" width="0.4" height="15.0" fill="rgb(233,157,38)" rx="2" ry="2" />
<text  x="1105.48" y="607.5" ></text>
</g>
<g >
<title>bytes.Compare (110 samples, 0.02%)</title><rect x="690.1" y="549" width="0.2" height="15.0" fill="rgb(230,168,31)" rx="2" ry="2" />
<text  x="693.13" y="559.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.(*roaringArray).runOptimize (4,451 samples, 0.64%)</title><rect x="148.9" y="581" width="7.6" height="15.0" fill="rgb(220,121,34)" rx="2" ry="2" />
<text  x="151.90" y="591.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb._Cfunc_lmdbgo_mdb_cursor_put2 (525 samples, 0.08%)</title><rect x="1126.7" y="613" width="0.9" height="15.0" fill="rgb(212,26,37)" rx="2" ry="2" />
<text  x="1129.75" y="623.5" ></text>
</g>
<g >
<title>tg/core/state.(*PlainStateReader).ReadAccountCode (398 samples, 0.06%)</title><rect x="340.9" y="533" width="0.7" height="15.0" fill="rgb(233,210,1)" rx="2" ry="2" />
<text  x="343.90" y="543.5" ></text>
</g>
<g >
<title>sort.rotate (227 samples, 0.03%)</title><rect x="986.9" y="485" width="0.4" height="15.0" fill="rgb(218,85,14)" rx="2" ry="2" />
<text  x="989.91" y="495.5" ></text>
</g>
<g >
<title>tg/ethdb.(*TxDb).Commit (490 samples, 0.07%)</title><rect x="1128.8" y="805" width="0.9" height="15.0" fill="rgb(222,216,27)" rx="2" ry="2" />
<text  x="1131.83" y="815.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (93 samples, 0.01%)</title><rect x="340.9" y="437" width="0.2" height="15.0" fill="rgb(252,66,32)" rx="2" ry="2" />
<text  x="343.92" y="447.5" ></text>
</g>
<g >
<title>tg/rlp.writeByteArrayCopy (131 samples, 0.02%)</title><rect x="226.5" y="421" width="0.3" height="15.0" fill="rgb(228,10,13)" rx="2" ry="2" />
<text  x="229.53" y="431.5" ></text>
</g>
<g >
<title>reflect.Value.Field (102 samples, 0.01%)</title><rect x="209.9" y="405" width="0.1" height="15.0" fill="rgb(209,87,18)" rx="2" ry="2" />
<text  x="212.85" y="415.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (644 samples, 0.09%)</title><rect x="498.8" y="341" width="1.1" height="15.0" fill="rgb(241,26,39)" rx="2" ry="2" />
<text  x="501.76" y="351.5" ></text>
</g>
<g >
<title>runtime.mallocgc (141 samples, 0.02%)</title><rect x="861.7" y="501" width="0.3" height="15.0" fill="rgb(211,96,25)" rx="2" ry="2" />
<text  x="864.72" y="511.5" ></text>
</g>
<g >
<title>runtime.preemptM (196 samples, 0.03%)</title><rect x="124.4" y="805" width="0.3" height="15.0" fill="rgb(207,66,48)" rx="2" ry="2" />
<text  x="127.38" y="815.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (368 samples, 0.05%)</title><rect x="323.1" y="453" width="0.7" height="15.0" fill="rgb(218,206,31)" rx="2" ry="2" />
<text  x="326.13" y="463.5" ></text>
</g>
<g >
<title>bytes.Compare (67 samples, 0.01%)</title><rect x="988.2" y="437" width="0.1" height="15.0" fill="rgb(227,171,3)" rx="2" ry="2" />
<text  x="991.23" y="447.5" ></text>
</g>
<g >
<title>sort.symMerge (370 samples, 0.05%)</title><rect x="1076.5" y="261" width="0.6" height="15.0" fill="rgb(221,127,3)" rx="2" ry="2" />
<text  x="1079.45" y="271.5" ></text>
</g>
<g >
<title>tg/turbo/trie.(*AccTrieCursor).AtPrefix (1,497 samples, 0.22%)</title><rect x="1026.4" y="693" width="2.5" height="15.0" fill="rgb(245,102,5)" rx="2" ry="2" />
<text  x="1029.39" y="703.5" ></text>
</g>
<g >
<title>bytes.Compare (748 samples, 0.11%)</title><rect x="705.7" y="469" width="1.3" height="15.0" fill="rgb(253,61,3)" rx="2" ry="2" />
<text  x="708.73" y="479.5" ></text>
</g>
<g >
<title>github.com/holiman/uint256.(*Int).SetUint64 (152 samples, 0.02%)</title><rect x="317.0" y="597" width="0.3" height="15.0" fill="rgb(216,115,7)" rx="2" ry="2" />
<text  x="319.99" y="607.5" ></text>
</g>
<g >
<title>sync/atomic.CompareAndSwapPointer (65 samples, 0.01%)</title><rect x="795.5" y="677" width="0.1" height="15.0" fill="rgb(248,173,20)" rx="2" ry="2" />
<text  x="798.48" y="687.5" ></text>
</g>
<g >
<title>reflect.New (113 samples, 0.02%)</title><rect x="201.8" y="357" width="0.2" height="15.0" fill="rgb(212,51,51)" rx="2" ry="2" />
<text  x="204.81" y="367.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVMInterpreter).Run (1,313 samples, 0.19%)</title><rect x="483.6" y="357" width="2.2" height="15.0" fill="rgb(249,75,39)" rx="2" ry="2" />
<text  x="486.55" y="367.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find (557 samples, 0.08%)</title><rect x="719.0" y="581" width="0.9" height="15.0" fill="rgb(221,172,24)" rx="2" ry="2" />
<text  x="721.99" y="591.5" ></text>
</g>
<g >
<title>tg/core/vm.run (95 samples, 0.01%)</title><rect x="386.9" y="245" width="0.2" height="15.0" fill="rgb(247,173,28)" rx="2" ry="2" />
<text  x="389.90" y="255.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*bufioEncWriter).writestr (96 samples, 0.01%)</title><rect x="783.6" y="517" width="0.2" height="15.0" fill="rgb(237,111,23)" rx="2" ry="2" />
<text  x="786.62" y="527.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*cborDecDriver).TryNil (240 samples, 0.03%)</title><rect x="165.6" y="629" width="0.4" height="15.0" fill="rgb(229,119,42)" rx="2" ry="2" />
<text  x="168.58" y="639.5" ></text>
</g>
<g >
<title>tg/common.CopyBytes (129 samples, 0.02%)</title><rect x="1067.0" y="613" width="0.2" height="15.0" fill="rgb(221,76,31)" rx="2" ry="2" />
<text  x="1069.95" y="623.5" ></text>
</g>
<g >
<title>runtime.mallocgc (82 samples, 0.01%)</title><rect x="330.8" y="533" width="0.1" height="15.0" fill="rgb(250,17,21)" rx="2" ry="2" />
<text  x="333.80" y="543.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (214 samples, 0.03%)</title><rect x="197.1" y="437" width="0.3" height="15.0" fill="rgb(228,39,5)" rx="2" ry="2" />
<text  x="200.06" y="447.5" ></text>
</g>
<g >
<title>tg/rlp.makePtrWriter.func1 (144 samples, 0.02%)</title><rect x="226.5" y="453" width="0.3" height="15.0" fill="rgb(249,228,2)" rx="2" ry="2" />
<text  x="229.51" y="463.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVMInterpreter).Run (200 samples, 0.03%)</title><rect x="483.8" y="293" width="0.4" height="15.0" fill="rgb(238,186,42)" rx="2" ry="2" />
<text  x="486.84" y="303.5" ></text>
</g>
<g >
<title>tg/ethdb.(*LmdbKV).View (13,978 samples, 2.01%)</title><rect x="827.7" y="549" width="23.8" height="15.0" fill="rgb(248,51,15)" rx="2" ry="2" />
<text  x="830.74" y="559.5" >t..</text>
</g>
<g >
<title>cmpbody (138 samples, 0.02%)</title><rect x="181.4" y="405" width="0.2" height="15.0" fill="rgb(245,72,18)" rx="2" ry="2" />
<text  x="184.37" y="415.5" ></text>
</g>
<g >
<title>tg/rlp.writeUint256 (422 samples, 0.06%)</title><rect x="227.0" y="437" width="0.7" height="15.0" fill="rgb(247,140,18)" rx="2" ry="2" />
<text  x="230.00" y="447.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).DelegateCall (60 samples, 0.01%)</title><rect x="387.1" y="261" width="0.1" height="15.0" fill="rgb(214,66,38)" rx="2" ry="2" />
<text  x="390.06" y="271.5" ></text>
</g>
<g >
<title>sort.swapRange (134 samples, 0.02%)</title><rect x="989.2" y="389" width="0.3" height="15.0" fill="rgb(249,167,15)" rx="2" ry="2" />
<text  x="992.23" y="399.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*encWr).end (72 samples, 0.01%)</title><rect x="995.0" y="533" width="0.1" height="15.0" fill="rgb(238,90,34)" rx="2" ry="2" />
<text  x="997.98" y="543.5" ></text>
</g>
<g >
<title>cmpbody (104 samples, 0.01%)</title><rect x="991.1" y="309" width="0.2" height="15.0" fill="rgb(225,145,54)" rx="2" ry="2" />
<text  x="994.12" y="319.5" ></text>
</g>
<g >
<title>sort.symMerge (4,044 samples, 0.58%)</title><rect x="1070.6" y="469" width="6.9" height="15.0" fill="rgb(251,128,24)" rx="2" ry="2" />
<text  x="1073.63" y="479.5" ></text>
</g>
<g >
<title>runtime.newobject (1,328 samples, 0.19%)</title><rect x="660.9" y="645" width="2.2" height="15.0" fill="rgb(228,17,16)" rx="2" ry="2" />
<text  x="663.85" y="655.5" ></text>
</g>
<g >
<title>sort.Search (92 samples, 0.01%)</title><rect x="491.7" y="293" width="0.2" height="15.0" fill="rgb(208,207,22)" rx="2" ry="2" />
<text  x="494.73" y="303.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (81 samples, 0.01%)</title><rect x="996.2" y="469" width="0.1" height="15.0" fill="rgb(239,144,4)" rx="2" ry="2" />
<text  x="999.16" y="479.5" ></text>
</g>
<g >
<title>tg/core/vm.makeLog.func1 (151 samples, 0.02%)</title><rect x="377.2" y="469" width="0.3" height="15.0" fill="rgb(225,93,17)" rx="2" ry="2" />
<text  x="380.20" y="479.5" ></text>
</g>
<g >
<title>runtime.memmove (99 samples, 0.01%)</title><rect x="722.1" y="645" width="0.1" height="15.0" fill="rgb(224,19,5)" rx="2" ry="2" />
<text  x="725.06" y="655.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).create (149 samples, 0.02%)</title><rect x="409.7" y="501" width="0.2" height="15.0" fill="rgb(227,52,49)" rx="2" ry="2" />
<text  x="412.68" y="511.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.keccakF1600 (91 samples, 0.01%)</title><rect x="769.3" y="565" width="0.2" height="15.0" fill="rgb(228,173,40)" rx="2" ry="2" />
<text  x="772.33" y="575.5" ></text>
</g>
<g >
<title>runtime.typedslicecopy (117 samples, 0.02%)</title><rect x="704.7" y="533" width="0.2" height="15.0" fill="rgb(241,166,38)" rx="2" ry="2" />
<text  x="707.71" y="543.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).createObject (71 samples, 0.01%)</title><rect x="452.2" y="485" width="0.1" height="15.0" fill="rgb(253,41,13)" rx="2" ry="2" />
<text  x="455.17" y="495.5" ></text>
</g>
<g >
<title>sort.symMerge (152 samples, 0.02%)</title><rect x="1040.3" y="389" width="0.2" height="15.0" fill="rgb(245,187,16)" rx="2" ry="2" />
<text  x="1043.27" y="399.5" ></text>
</g>
<g >
<title>tg/core/vm.opSload (254 samples, 0.04%)</title><rect x="385.7" y="341" width="0.4" height="15.0" fill="rgb(205,56,30)" rx="2" ry="2" />
<text  x="388.68" y="351.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).Del.func1 (101 samples, 0.01%)</title><rect x="797.3" y="533" width="0.2" height="15.0" fill="rgb(210,140,17)" rx="2" ry="2" />
<text  x="800.32" y="543.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (204 samples, 0.03%)</title><rect x="418.9" y="309" width="0.3" height="15.0" fill="rgb(212,195,18)" rx="2" ry="2" />
<text  x="421.87" y="319.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.(*Bitmap).RunOptimize (182 samples, 0.03%)</title><rect x="146.7" y="629" width="0.3" height="15.0" fill="rgb(244,167,14)" rx="2" ry="2" />
<text  x="149.69" y="639.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.keccakF1600 (981 samples, 0.14%)</title><rect x="770.7" y="533" width="1.6" height="15.0" fill="rgb(213,138,11)" rx="2" ry="2" />
<text  x="773.67" y="543.5" ></text>
</g>
<g >
<title>runtime.spanOfUnchecked (61 samples, 0.01%)</title><rect x="95.7" y="805" width="0.1" height="15.0" fill="rgb(228,75,42)" rx="2" ry="2" />
<text  x="98.69" y="815.5" ></text>
</g>
<g >
<title>tg/ethdb.(*MutationItem).Less (395 samples, 0.06%)</title><rect x="438.4" y="309" width="0.7" height="15.0" fill="rgb(216,218,46)" rx="2" ry="2" />
<text  x="441.42" y="319.5" ></text>
</g>
<g >
<title>runtime.cgocall (74 samples, 0.01%)</title><rect x="340.5" y="405" width="0.1" height="15.0" fill="rgb(245,147,26)" rx="2" ry="2" />
<text  x="343.50" y="415.5" ></text>
</g>
<g >
<title>runtime.mapaccess1 (148 samples, 0.02%)</title><rect x="1112.9" y="629" width="0.2" height="15.0" fill="rgb(250,61,13)" rx="2" ry="2" />
<text  x="1115.86" y="639.5" ></text>
</g>
<g >
<title>runtime.memhash_varlen (111 samples, 0.02%)</title><rect x="561.3" y="517" width="0.2" height="15.0" fill="rgb(242,122,16)" rx="2" ry="2" />
<text  x="564.32" y="527.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (66 samples, 0.01%)</title><rect x="171.0" y="597" width="0.1" height="15.0" fill="rgb(246,128,28)" rx="2" ry="2" />
<text  x="174.01" y="607.5" ></text>
</g>
<g >
<title>runtime.(*randomEnum).next (845 samples, 0.12%)</title><rect x="101.5" y="821" width="1.5" height="15.0" fill="rgb(242,199,4)" rx="2" ry="2" />
<text  x="104.52" y="831.5" ></text>
</g>
<g >
<title>runtime.(*lfstack).pop (1,066 samples, 0.15%)</title><rect x="57.3" y="773" width="1.8" height="15.0" fill="rgb(226,113,51)" rx="2" ry="2" />
<text  x="60.34" y="783.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).getVal0.func1 (552 samples, 0.08%)</title><rect x="793.6" y="581" width="0.9" height="15.0" fill="rgb(248,97,49)" rx="2" ry="2" />
<text  x="796.58" y="591.5" ></text>
</g>
<g >
<title>tg/ethdb.(*LmdbKV).View (64 samples, 0.01%)</title><rect x="196.7" y="533" width="0.1" height="15.0" fill="rgb(221,159,31)" rx="2" ry="2" />
<text  x="199.70" y="543.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).GetCodeSize (3,828 samples, 0.55%)</title><rect x="522.1" y="581" width="6.5" height="15.0" fill="rgb(205,85,47)" rx="2" ry="2" />
<text  x="525.11" y="591.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).getVal2 (331 samples, 0.05%)</title><rect x="797.5" y="533" width="0.6" height="15.0" fill="rgb(226,148,20)" rx="2" ry="2" />
<text  x="800.51" y="543.5" ></text>
</g>
<g >
<title>runtime.mallocgc (87 samples, 0.01%)</title><rect x="219.8" y="357" width="0.1" height="15.0" fill="rgb(231,47,39)" rx="2" ry="2" />
<text  x="222.80" y="367.5" ></text>
</g>
<g >
<title>reflect.valueInterface (178 samples, 0.03%)</title><rect x="789.3" y="485" width="0.3" height="15.0" fill="rgb(215,31,8)" rx="2" ry="2" />
<text  x="792.34" y="495.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find (285 samples, 0.04%)</title><rect x="257.9" y="533" width="0.5" height="15.0" fill="rgb(211,164,50)" rx="2" ry="2" />
<text  x="260.93" y="543.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb._Cfunc_mdb_txn_begin (72 samples, 0.01%)</title><rect x="230.2" y="613" width="0.1" height="15.0" fill="rgb(243,85,36)" rx="2" ry="2" />
<text  x="233.21" y="623.5" ></text>
</g>
<g >
<title>sort.Search (1,696 samples, 0.24%)</title><rect x="714.4" y="533" width="2.9" height="15.0" fill="rgb(230,38,9)" rx="2" ry="2" />
<text  x="717.41" y="543.5" ></text>
</g>
<g >
<title>runtime.newobject (584 samples, 0.08%)</title><rect x="238.0" y="645" width="1.0" height="15.0" fill="rgb(219,19,13)" rx="2" ry="2" />
<text  x="241.00" y="655.5" ></text>
</g>
<g >
<title>tg/core/vm.opStaticCall (119 samples, 0.02%)</title><rect x="414.9" y="341" width="0.2" height="15.0" fill="rgb(227,42,41)" rx="2" ry="2" />
<text  x="417.89" y="351.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).Get (352 samples, 0.05%)</title><rect x="492.1" y="341" width="0.6" height="15.0" fill="rgb(211,83,26)" rx="2" ry="2" />
<text  x="495.06" y="351.5" ></text>
</g>
<g >
<title>tg/rlp.(*encbuf).encode (2,049 samples, 0.29%)</title><rect x="1108.4" y="581" width="3.5" height="15.0" fill="rgb(206,204,3)" rx="2" ry="2" />
<text  x="1111.42" y="591.5" ></text>
</g>
<g >
<title>tg/core/types.(*Transaction).DecodeRLP (356 samples, 0.05%)</title><rect x="232.6" y="485" width="0.6" height="15.0" fill="rgb(226,190,12)" rx="2" ry="2" />
<text  x="235.61" y="495.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (77 samples, 0.01%)</title><rect x="1012.9" y="485" width="0.2" height="15.0" fill="rgb(249,58,39)" rx="2" ry="2" />
<text  x="1015.95" y="495.5" ></text>
</g>
<g >
<title>tg/ethdb.(*LmdbDupSortCursor).Append (87 samples, 0.01%)</title><rect x="723.4" y="613" width="0.1" height="15.0" fill="rgb(227,187,36)" rx="2" ry="2" />
<text  x="726.40" y="623.5" ></text>
</g>
<g >
<title>encoding/binary.bigEndian.Uint64 (63 samples, 0.01%)</title><rect x="535.0" y="565" width="0.1" height="15.0" fill="rgb(233,110,30)" rx="2" ry="2" />
<text  x="538.00" y="575.5" ></text>
</g>
<g >
<title>tg/core/vm.newTwistPoint (123 samples, 0.02%)</title><rect x="446.3" y="453" width="0.2" height="15.0" fill="rgb(216,106,8)" rx="2" ry="2" />
<text  x="449.27" y="463.5" ></text>
</g>
<g >
<title>math/big.nat.mul (248 samples, 0.04%)</title><rect x="240.9" y="597" width="0.4" height="15.0" fill="rgb(236,190,3)" rx="2" ry="2" />
<text  x="243.93" y="607.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1,113 samples, 0.16%)</title><rect x="661.0" y="629" width="1.9" height="15.0" fill="rgb(231,21,4)" rx="2" ry="2" />
<text  x="664.03" y="639.5" ></text>
</g>
<g >
<title>runtime.mallocgc (515 samples, 0.07%)</title><rect x="235.6" y="661" width="0.9" height="15.0" fill="rgb(239,225,2)" rx="2" ry="2" />
<text  x="238.64" y="671.5" ></text>
</g>
<g >
<title>runtime.assertE2I (293 samples, 0.04%)</title><rect x="655.7" y="629" width="0.5" height="15.0" fill="rgb(234,16,47)" rx="2" ry="2" />
<text  x="658.74" y="639.5" ></text>
</g>
<g >
<title>tg/core/vm.opCall (597 samples, 0.09%)</title><rect x="413.2" y="405" width="1.0" height="15.0" fill="rgb(245,22,34)" rx="2" ry="2" />
<text  x="416.21" y="415.5" ></text>
</g>
<g >
<title>runtime.mapaccess2_faststr (1,833 samples, 0.26%)</title><rect x="979.0" y="565" width="3.1" height="15.0" fill="rgb(218,110,39)" rx="2" ry="2" />
<text  x="981.97" y="575.5" ></text>
</g>
<g >
<title>memeqbody (258 samples, 0.04%)</title><rect x="1064.5" y="613" width="0.4" height="15.0" fill="rgb(236,191,48)" rx="2" ry="2" />
<text  x="1067.48" y="623.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (108 samples, 0.02%)</title><rect x="833.7" y="453" width="0.2" height="15.0" fill="rgb(223,110,36)" rx="2" ry="2" />
<text  x="836.71" y="463.5" ></text>
</g>
<g >
<title>crypto/cipher.(*ctr).XORKeyStream (530 samples, 0.08%)</title><rect x="1177.5" y="805" width="0.9" height="15.0" fill="rgb(232,152,52)" rx="2" ry="2" />
<text  x="1180.48" y="815.5" ></text>
</g>
<g >
<title>reflect.Value.Interface (470 samples, 0.07%)</title><rect x="225.6" y="453" width="0.8" height="15.0" fill="rgb(207,151,18)" rx="2" ry="2" />
<text  x="228.64" y="463.5" ></text>
</g>
<g >
<title>tg/core/state.(*stateObject).GetState (6,315 samples, 0.91%)</title><rect x="433.7" y="501" width="10.7" height="15.0" fill="rgb(235,224,2)" rx="2" ry="2" />
<text  x="436.68" y="511.5" ></text>
</g>
<g >
<title>sort.symMerge (5,149 samples, 0.74%)</title><rect x="184.2" y="373" width="8.7" height="15.0" fill="rgb(219,65,20)" rx="2" ry="2" />
<text  x="187.20" y="383.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find (681 samples, 0.10%)</title><rect x="281.4" y="517" width="1.1" height="15.0" fill="rgb(242,132,46)" rx="2" ry="2" />
<text  x="284.39" y="527.5" ></text>
</g>
<g >
<title>tg/ethdb.(*mutation).Get (99 samples, 0.01%)</title><rect x="460.1" y="501" width="0.2" height="15.0" fill="rgb(220,141,21)" rx="2" ry="2" />
<text  x="463.13" y="511.5" ></text>
</g>
<g >
<title>runtime.runtimer (636 samples, 0.09%)</title><rect x="108.0" y="789" width="1.1" height="15.0" fill="rgb(209,83,7)" rx="2" ry="2" />
<text  x="111.01" y="799.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).SetState (95 samples, 0.01%)</title><rect x="492.7" y="453" width="0.2" height="15.0" fill="rgb(214,158,44)" rx="2" ry="2" />
<text  x="495.70" y="463.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (11,097 samples, 1.60%)</title><rect x="563.2" y="485" width="18.8" height="15.0" fill="rgb(240,217,40)" rx="2" ry="2" />
<text  x="566.18" y="495.5" ></text>
</g>
<g >
<title>runtime.getitab (77 samples, 0.01%)</title><rect x="772.5" y="565" width="0.2" height="15.0" fill="rgb(224,212,12)" rx="2" ry="2" />
<text  x="775.54" y="575.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).Put.func1 (392 samples, 0.06%)</title><rect x="730.0" y="581" width="0.7" height="15.0" fill="rgb(253,50,48)" rx="2" ry="2" />
<text  x="732.99" y="591.5" ></text>
</g>
<g >
<title>tg/core/state.(*stateObject).SubBalance (410 samples, 0.06%)</title><rect x="269.6" y="597" width="0.7" height="15.0" fill="rgb(238,164,13)" rx="2" ry="2" />
<text  x="272.57" y="607.5" ></text>
</g>
<g >
<title>bufio.(*Reader).Read (132 samples, 0.02%)</title><rect x="817.5" y="453" width="0.3" height="15.0" fill="rgb(234,215,40)" rx="2" ry="2" />
<text  x="820.53" y="463.5" ></text>
</g>
<g >
<title>tg/core/types.CreateBloom (6,752 samples, 0.97%)</title><rect x="645.2" y="677" width="11.5" height="15.0" fill="rgb(251,107,3)" rx="2" ry="2" />
<text  x="648.19" y="687.5" ></text>
</g>
<g >
<title>tg/consensus/ethash.hashimoto (3,058 samples, 0.44%)</title><rect x="129.2" y="789" width="5.2" height="15.0" fill="rgb(206,6,22)" rx="2" ry="2" />
<text  x="132.22" y="799.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (245 samples, 0.04%)</title><rect x="458.3" y="469" width="0.4" height="15.0" fill="rgb(222,78,39)" rx="2" ry="2" />
<text  x="461.27" y="479.5" ></text>
</g>
<g >
<title>tg/core/types.recoverPlain (307 samples, 0.04%)</title><rect x="1134.1" y="821" width="0.5" height="15.0" fill="rgb(220,83,36)" rx="2" ry="2" />
<text  x="1137.12" y="831.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (69 samples, 0.01%)</title><rect x="244.7" y="485" width="0.1" height="15.0" fill="rgb(246,146,11)" rx="2" ry="2" />
<text  x="247.68" y="495.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (199 samples, 0.03%)</title><rect x="243.3" y="517" width="0.4" height="15.0" fill="rgb(207,69,28)" rx="2" ry="2" />
<text  x="246.33" y="527.5" ></text>
</g>
<g >
<title>tg/ethdb.(*MutationItem).Less (62 samples, 0.01%)</title><rect x="1120.8" y="597" width="0.1" height="15.0" fill="rgb(234,198,30)" rx="2" ry="2" />
<text  x="1123.82" y="607.5" ></text>
</g>
<g >
<title>sort.symMerge (4,281 samples, 0.62%)</title><rect x="185.6" y="341" width="7.3" height="15.0" fill="rgb(235,22,40)" rx="2" ry="2" />
<text  x="188.60" y="351.5" ></text>
</g>
<g >
<title>tg/rlp.writeUint256 (542 samples, 0.08%)</title><rect x="1110.9" y="517" width="0.9" height="15.0" fill="rgb(206,140,32)" rx="2" ry="2" />
<text  x="1113.85" y="527.5" ></text>
</g>
<g >
<title>tg/core/vm/stack.(*Stack).Push (93 samples, 0.01%)</title><rect x="451.7" y="469" width="0.1" height="15.0" fill="rgb(227,75,52)" rx="2" ry="2" />
<text  x="454.68" y="479.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.(*state).permute (1,169 samples, 0.17%)</title><rect x="1114.7" y="597" width="2.0" height="15.0" fill="rgb(226,181,13)" rx="2" ry="2" />
<text  x="1117.71" y="607.5" ></text>
</g>
<g >
<title>runtime.mallocgc (478 samples, 0.07%)</title><rect x="657.9" y="645" width="0.8" height="15.0" fill="rgb(229,16,24)" rx="2" ry="2" />
<text  x="660.93" y="655.5" ></text>
</g>
<g >
<title>tg/core/vm.opDelegateCall (441 samples, 0.06%)</title><rect x="415.9" y="469" width="0.8" height="15.0" fill="rgb(206,142,16)" rx="2" ry="2" />
<text  x="418.94" y="479.5" ></text>
</g>
<g >
<title>runtime.mallocgc (128 samples, 0.02%)</title><rect x="788.5" y="469" width="0.2" height="15.0" fill="rgb(224,28,46)" rx="2" ry="2" />
<text  x="791.47" y="479.5" ></text>
</g>
<g >
<title>sort.Search (63 samples, 0.01%)</title><rect x="461.5" y="405" width="0.1" height="15.0" fill="rgb(238,16,0)" rx="2" ry="2" />
<text  x="464.54" y="415.5" ></text>
</g>
<g >
<title>tg/core/vm.run (103 samples, 0.01%)</title><rect x="604.2" y="309" width="0.2" height="15.0" fill="rgb(227,116,52)" rx="2" ry="2" />
<text  x="607.21" y="319.5" ></text>
</g>
<g >
<title>container/heap.down (1,450 samples, 0.21%)</title><rect x="962.6" y="629" width="2.5" height="15.0" fill="rgb(240,169,28)" rx="2" ry="2" />
<text  x="965.61" y="639.5" ></text>
</g>
<g >
<title>tg/ethdb.(*mutation).Commit (11,004 samples, 1.58%)</title><rect x="796.2" y="709" width="18.7" height="15.0" fill="rgb(230,173,52)" rx="2" ry="2" />
<text  x="799.21" y="719.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find (658 samples, 0.09%)</title><rect x="436.0" y="341" width="1.1" height="15.0" fill="rgb(240,91,23)" rx="2" ry="2" />
<text  x="439.00" y="351.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*decRd).readb (81 samples, 0.01%)</title><rect x="1047.3" y="533" width="0.2" height="15.0" fill="rgb(224,158,14)" rx="2" ry="2" />
<text  x="1050.34" y="543.5" ></text>
</g>
<g >
<title>bytes.(*Buffer).Write (109 samples, 0.02%)</title><rect x="785.2" y="613" width="0.2" height="15.0" fill="rgb(225,219,26)" rx="2" ry="2" />
<text  x="788.24" y="623.5" ></text>
</g>
<g >
<title>tg/core/state.(*stateObject).updateTrie (17,335 samples, 2.49%)</title><rect x="691.4" y="661" width="29.5" height="15.0" fill="rgb(207,183,31)" rx="2" ry="2" />
<text  x="694.44" y="671.5" >tg..</text>
</g>
<g >
<title>tg/common/dbutils.PlainParseStoragePrefix (65 samples, 0.01%)</title><rect x="1013.3" y="565" width="0.2" height="15.0" fill="rgb(229,49,28)" rx="2" ry="2" />
<text  x="1016.35" y="575.5" ></text>
</g>
<g >
<title>tg/core/vm.opCall (367 samples, 0.05%)</title><rect x="478.8" y="341" width="0.7" height="15.0" fill="rgb(251,22,15)" rx="2" ry="2" />
<text  x="481.84" y="351.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (98 samples, 0.01%)</title><rect x="370.3" y="405" width="0.2" height="15.0" fill="rgb(207,33,29)" rx="2" ry="2" />
<text  x="373.34" y="415.5" ></text>
</g>
<g >
<title>tg/eth/downloader.(*Downloader).fillHeaderSkeleton.func1 (98 samples, 0.01%)</title><rect x="1129.9" y="789" width="0.1" height="15.0" fill="rgb(224,74,14)" rx="2" ry="2" />
<text  x="1132.87" y="799.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*BTree).ReplaceOrInsert (948 samples, 0.14%)</title><rect x="1120.1" y="709" width="1.6" height="15.0" fill="rgb(229,7,9)" rx="2" ry="2" />
<text  x="1123.12" y="719.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.(*roaringArray).getIndex (88 samples, 0.01%)</title><rect x="147.1" y="597" width="0.2" height="15.0" fill="rgb(240,118,8)" rx="2" ry="2" />
<text  x="150.13" y="607.5" ></text>
</g>
<g >
<title>bytes.Compare (70 samples, 0.01%)</title><rect x="729.1" y="581" width="0.1" height="15.0" fill="rgb(238,88,51)" rx="2" ry="2" />
<text  x="732.08" y="591.5" ></text>
</g>
<g >
<title>runtime.typedmemmove (63 samples, 0.01%)</title><rect x="1011.7" y="517" width="0.1" height="15.0" fill="rgb(213,222,4)" rx="2" ry="2" />
<text  x="1014.71" y="527.5" ></text>
</g>
<g >
<title>tg/core/types.(*Transaction).DecodeRLP (2,880 samples, 0.41%)</title><rect x="1182.1" y="597" width="4.9" height="15.0" fill="rgb(252,92,22)" rx="2" ry="2" />
<text  x="1185.11" y="607.5" ></text>
</g>
<g >
<title>runtime.newobject (161 samples, 0.02%)</title><rect x="324.5" y="581" width="0.3" height="15.0" fill="rgb(218,229,48)" rx="2" ry="2" />
<text  x="327.50" y="591.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).Get (140 samples, 0.02%)</title><rect x="464.1" y="469" width="0.3" height="15.0" fill="rgb(251,23,20)" rx="2" ry="2" />
<text  x="467.14" y="479.5" ></text>
</g>
<g >
<title>tg/ethdb.(*mutation).Put (1,184 samples, 0.17%)</title><rect x="1120.1" y="725" width="2.0" height="15.0" fill="rgb(212,31,11)" rx="2" ry="2" />
<text  x="1123.08" y="735.5" ></text>
</g>
<g >
<title>tg/eth/downloader.(*Downloader).syncWithPeer (572,252 samples, 82.36%)</title><rect x="135.0" y="805" width="971.8" height="15.0" fill="rgb(251,122,40)" rx="2" ry="2" />
<text  x="137.99" y="815.5" >tg/eth/downloader.(*Downloader).syncWithPeer</text>
</g>
<g >
<title>runtime.futex (219 samples, 0.03%)</title><rect x="120.7" y="741" width="0.4" height="15.0" fill="rgb(222,40,33)" rx="2" ry="2" />
<text  x="123.70" y="751.5" ></text>
</g>
<g >
<title>runtime.heapBits.bits (158 samples, 0.02%)</title><rect x="59.3" y="805" width="0.2" height="15.0" fill="rgb(226,132,18)" rx="2" ry="2" />
<text  x="62.26" y="815.5" ></text>
</g>
<g >
<title>tg/core/state.(*stateObject).Code (91 samples, 0.01%)</title><rect x="598.2" y="549" width="0.2" height="15.0" fill="rgb(207,100,30)" rx="2" ry="2" />
<text  x="601.21" y="559.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (64 samples, 0.01%)</title><rect x="597.4" y="389" width="0.1" height="15.0" fill="rgb(231,202,12)" rx="2" ry="2" />
<text  x="600.42" y="399.5" ></text>
</g>
<g >
<title>tg/rlp.Encode (82 samples, 0.01%)</title><rect x="737.6" y="661" width="0.2" height="15.0" fill="rgb(209,175,20)" rx="2" ry="2" />
<text  x="740.65" y="671.5" ></text>
</g>
<g >
<title>memeqbody (104 samples, 0.01%)</title><rect x="824.2" y="517" width="0.2" height="15.0" fill="rgb(245,89,16)" rx="2" ry="2" />
<text  x="827.21" y="527.5" ></text>
</g>
<g >
<title>tg/ethdb.(*mutation).Get (668 samples, 0.10%)</title><rect x="606.9" y="453" width="1.1" height="15.0" fill="rgb(249,103,23)" rx="2" ry="2" />
<text  x="609.87" y="463.5" ></text>
</g>
<g >
<title>bytes.Compare (190 samples, 0.03%)</title><rect x="870.3" y="213" width="0.3" height="15.0" fill="rgb(217,171,7)" rx="2" ry="2" />
<text  x="873.29" y="223.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (144 samples, 0.02%)</title><rect x="1119.6" y="725" width="0.3" height="15.0" fill="rgb(209,96,43)" rx="2" ry="2" />
<text  x="1122.61" y="735.5" ></text>
</g>
<g >
<title>tg/common/changeset.encodeStorage2 (3,901 samples, 0.56%)</title><rect x="727.6" y="661" width="6.6" height="15.0" fill="rgb(231,3,32)" rx="2" ry="2" />
<text  x="730.56" y="671.5" ></text>
</g>
<g >
<title>tg/common/etl.(*sortableBuffer).Swap (66 samples, 0.01%)</title><rect x="189.9" y="213" width="0.1" height="15.0" fill="rgb(208,145,48)" rx="2" ry="2" />
<text  x="192.89" y="223.5" ></text>
</g>
<g >
<title>tg/rlp.makeByteArrayWriter.func1 (489 samples, 0.07%)</title><rect x="765.3" y="357" width="0.8" height="15.0" fill="rgb(226,79,22)" rx="2" ry="2" />
<text  x="768.27" y="367.5" ></text>
</g>
<g >
<title>runtime.mapaccess1 (71 samples, 0.01%)</title><rect x="242.1" y="565" width="0.1" height="15.0" fill="rgb(235,107,26)" rx="2" ry="2" />
<text  x="245.09" y="575.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.(*state).permute (570 samples, 0.08%)</title><rect x="212.7" y="501" width="0.9" height="15.0" fill="rgb(218,162,11)" rx="2" ry="2" />
<text  x="215.67" y="511.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (417 samples, 0.06%)</title><rect x="560.3" y="453" width="0.7" height="15.0" fill="rgb(219,115,40)" rx="2" ry="2" />
<text  x="563.31" y="463.5" ></text>
</g>
<g >
<title>tg/common/etl.(*Heap).Pop (108 samples, 0.02%)</title><rect x="1088.0" y="661" width="0.1" height="15.0" fill="rgb(237,228,7)" rx="2" ry="2" />
<text  x="1090.96" y="671.5" ></text>
</g>
<g >
<title>sort.insertionSort (89 samples, 0.01%)</title><rect x="729.6" y="581" width="0.2" height="15.0" fill="rgb(211,97,29)" rx="2" ry="2" />
<text  x="732.61" y="591.5" ></text>
</g>
<g >
<title>runtime.(*lfstack).push (669 samples, 0.10%)</title><rect x="55.5" y="757" width="1.2" height="15.0" fill="rgb(227,43,52)" rx="2" ry="2" />
<text  x="58.53" y="767.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVMInterpreter).Run (1,771 samples, 0.25%)</title><rect x="412.9" y="421" width="3.0" height="15.0" fill="rgb(212,204,6)" rx="2" ry="2" />
<text  x="415.88" y="431.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (91 samples, 0.01%)</title><rect x="701.7" y="549" width="0.1" height="15.0" fill="rgb(213,206,18)" rx="2" ry="2" />
<text  x="704.69" y="559.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVMInterpreter).Run (86 samples, 0.01%)</title><rect x="624.2" y="597" width="0.1" height="15.0" fill="rgb(220,123,43)" rx="2" ry="2" />
<text  x="627.19" y="607.5" ></text>
</g>
<g >
<title>cmpbody (172 samples, 0.02%)</title><rect x="167.2" y="613" width="0.3" height="15.0" fill="rgb(244,48,53)" rx="2" ry="2" />
<text  x="170.21" y="623.5" ></text>
</g>
<g >
<title>cmpbody (132 samples, 0.02%)</title><rect x="992.2" y="261" width="0.3" height="15.0" fill="rgb(251,210,47)" rx="2" ry="2" />
<text  x="995.23" y="271.5" ></text>
</g>
<g >
<title>runtime.evacuate_faststr (472 samples, 0.07%)</title><rect x="1065.0" y="597" width="0.8" height="15.0" fill="rgb(213,202,18)" rx="2" ry="2" />
<text  x="1068.01" y="607.5" ></text>
</g>
<g >
<title>runtime.cgoCheckPointer (150 samples, 0.02%)</title><rect x="831.1" y="469" width="0.3" height="15.0" fill="rgb(208,16,1)" rx="2" ry="2" />
<text  x="834.12" y="479.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find (64 samples, 0.01%)</title><rect x="461.5" y="421" width="0.1" height="15.0" fill="rgb(208,54,13)" rx="2" ry="2" />
<text  x="464.53" y="431.5" ></text>
</g>
<g >
<title>runtime.mallocgc (610 samples, 0.09%)</title><rect x="826.6" y="533" width="1.0" height="15.0" fill="rgb(230,90,1)" rx="2" ry="2" />
<text  x="829.58" y="543.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*items).insertAt (66 samples, 0.01%)</title><rect x="672.9" y="549" width="0.1" height="15.0" fill="rgb(212,1,8)" rx="2" ry="2" />
<text  x="675.89" y="559.5" ></text>
</g>
<g >
<title>runtime.mallocgc (60 samples, 0.01%)</title><rect x="1086.8" y="581" width="0.1" height="15.0" fill="rgb(216,129,54)" rx="2" ry="2" />
<text  x="1089.78" y="591.5" ></text>
</g>
<g >
<title>runtime.growslice (126 samples, 0.02%)</title><rect x="147.4" y="565" width="0.2" height="15.0" fill="rgb(230,53,24)" rx="2" ry="2" />
<text  x="150.37" y="575.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (10,544 samples, 1.52%)</title><rect x="563.2" y="469" width="17.9" height="15.0" fill="rgb(247,162,4)" rx="2" ry="2" />
<text  x="566.23" y="479.5" ></text>
</g>
<g >
<title>bytes.Compare (143 samples, 0.02%)</title><rect x="1075.5" y="293" width="0.2" height="15.0" fill="rgb(220,142,3)" rx="2" ry="2" />
<text  x="1078.46" y="303.5" ></text>
</g>
<g >
<title>bytes.(*Reader).Read (67 samples, 0.01%)</title><rect x="1185.0" y="485" width="0.1" height="15.0" fill="rgb(241,31,46)" rx="2" ry="2" />
<text  x="1188.02" y="495.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*cborDecDriver).advanceNil (182 samples, 0.03%)</title><rect x="164.7" y="485" width="0.3" height="15.0" fill="rgb(214,128,9)" rx="2" ry="2" />
<text  x="167.73" y="495.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).Get (101 samples, 0.01%)</title><rect x="370.5" y="405" width="0.2" height="15.0" fill="rgb(242,57,49)" rx="2" ry="2" />
<text  x="373.52" y="415.5" ></text>
</g>
<g >
<title>tg/ethdb.Walk (4,016 samples, 0.58%)</title><rect x="215.2" y="549" width="6.8" height="15.0" fill="rgb(242,166,14)" rx="2" ry="2" />
<text  x="218.15" y="559.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (107 samples, 0.02%)</title><rect x="1119.6" y="661" width="0.2" height="15.0" fill="rgb(242,150,22)" rx="2" ry="2" />
<text  x="1122.63" y="671.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).Prepare (151 samples, 0.02%)</title><rect x="721.4" y="693" width="0.3" height="15.0" fill="rgb(212,63,46)" rx="2" ry="2" />
<text  x="724.44" y="703.5" ></text>
</g>
<g >
<title>reflect.packEface (426 samples, 0.06%)</title><rect x="225.7" y="421" width="0.7" height="15.0" fill="rgb(241,112,49)" rx="2" ry="2" />
<text  x="228.71" y="431.5" ></text>
</g>
<g >
<title>tg/rlp.(*Stream).Decode (3,640 samples, 0.52%)</title><rect x="1180.9" y="773" width="6.1" height="15.0" fill="rgb(225,15,30)" rx="2" ry="2" />
<text  x="1183.86" y="783.5" ></text>
</g>
<g >
<title>bytes.Compare (186 samples, 0.03%)</title><rect x="288.7" y="437" width="0.3" height="15.0" fill="rgb(223,226,36)" rx="2" ry="2" />
<text  x="291.68" y="447.5" ></text>
</g>
<g >
<title>runtime.newobject (389 samples, 0.06%)</title><rect x="1096.7" y="549" width="0.7" height="15.0" fill="rgb(217,199,6)" rx="2" ry="2" />
<text  x="1099.70" y="559.5" ></text>
</g>
<g >
<title>tg/p2p/discover.(*UDPv4).readLoop (100 samples, 0.01%)</title><rect x="1189.6" y="869" width="0.2" height="15.0" fill="rgb(228,35,29)" rx="2" ry="2" />
<text  x="1192.59" y="879.5" ></text>
</g>
<g >
<title>tg/core/vm.makePush.func1 (248 samples, 0.04%)</title><rect x="476.6" y="469" width="0.4" height="15.0" fill="rgb(223,101,24)" rx="2" ry="2" />
<text  x="479.60" y="479.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb._Cfunc_lmdbgo_mdb_cursor_get2 (6,033 samples, 0.87%)</title><rect x="583.0" y="421" width="10.2" height="15.0" fill="rgb(217,183,10)" rx="2" ry="2" />
<text  x="585.99" y="431.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).DelegateCall (62 samples, 0.01%)</title><rect x="462.9" y="437" width="0.1" height="15.0" fill="rgb(254,139,2)" rx="2" ry="2" />
<text  x="465.90" y="447.5" ></text>
</g>
<g >
<title>sort.insertionSort (435 samples, 0.06%)</title><rect x="177.6" y="501" width="0.7" height="15.0" fill="rgb(218,199,43)" rx="2" ry="2" />
<text  x="180.57" y="511.5" ></text>
</g>
<g >
<title>runtime.callers.func1 (119 samples, 0.02%)</title><rect x="155.5" y="421" width="0.2" height="15.0" fill="rgb(217,181,47)" rx="2" ry="2" />
<text  x="158.47" y="431.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (135 samples, 0.02%)</title><rect x="690.8" y="581" width="0.2" height="15.0" fill="rgb(245,140,47)" rx="2" ry="2" />
<text  x="693.76" y="591.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).Call (66 samples, 0.01%)</title><rect x="514.1" y="389" width="0.1" height="15.0" fill="rgb(213,206,53)" rx="2" ry="2" />
<text  x="517.09" y="399.5" ></text>
</g>
<g >
<title>tg/core/vm.opCall (344 samples, 0.05%)</title><rect x="393.6" y="341" width="0.6" height="15.0" fill="rgb(245,23,20)" rx="2" ry="2" />
<text  x="396.58" y="351.5" ></text>
</g>
<g >
<title>runtime.mapaccess1 (82 samples, 0.01%)</title><rect x="594.6" y="533" width="0.1" height="15.0" fill="rgb(211,99,29)" rx="2" ry="2" />
<text  x="597.56" y="543.5" ></text>
</g>
<g >
<title>github.com/holiman/uint256.(*Int).WriteToSlice (579 samples, 0.08%)</title><rect x="506.4" y="501" width="1.0" height="15.0" fill="rgb(254,170,31)" rx="2" ry="2" />
<text  x="509.44" y="511.5" ></text>
</g>
<g >
<title>tg/core/types.(*Transaction).EncodeRLP (2,002 samples, 0.29%)</title><rect x="1122.5" y="677" width="3.4" height="15.0" fill="rgb(222,48,31)" rx="2" ry="2" />
<text  x="1125.50" y="687.5" ></text>
</g>
<g >
<title>runtime.mapassign_faststr (490 samples, 0.07%)</title><rect x="140.9" y="709" width="0.9" height="15.0" fill="rgb(235,211,32)" rx="2" ry="2" />
<text  x="143.92" y="719.5" ></text>
</g>
<g >
<title>tg/rlp.Decode (3,099 samples, 0.45%)</title><rect x="215.7" y="517" width="5.3" height="15.0" fill="rgb(237,107,44)" rx="2" ry="2" />
<text  x="218.72" y="527.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (113 samples, 0.02%)</title><rect x="177.2" y="469" width="0.2" height="15.0" fill="rgb(208,50,35)" rx="2" ry="2" />
<text  x="180.16" y="479.5" ></text>
</g>
<g >
<title>tg/core/state.(*stateObject).GetState (924 samples, 0.13%)</title><rect x="325.4" y="565" width="1.5" height="15.0" fill="rgb(227,95,15)" rx="2" ry="2" />
<text  x="328.38" y="575.5" ></text>
</g>
<g >
<title>github.com/holiman/uint256.udivrem (78 samples, 0.01%)</title><rect x="471.4" y="485" width="0.1" height="15.0" fill="rgb(237,118,7)" rx="2" ry="2" />
<text  x="474.37" y="495.5" ></text>
</g>
<g >
<title>bufio.(*Writer).Write (86 samples, 0.01%)</title><rect x="195.8" y="469" width="0.1" height="15.0" fill="rgb(225,37,27)" rx="2" ry="2" />
<text  x="198.78" y="479.5" ></text>
</g>
<g >
<title>tg/ethdb.(*MutationItem).Less (117 samples, 0.02%)</title><rect x="524.9" y="405" width="0.2" height="15.0" fill="rgb(225,127,10)" rx="2" ry="2" />
<text  x="527.86" y="415.5" ></text>
</g>
<g >
<title>runtime.cgoCheckPointer (188 samples, 0.03%)</title><rect x="205.5" y="421" width="0.3" height="15.0" fill="rgb(238,139,24)" rx="2" ry="2" />
<text  x="208.48" y="431.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (83 samples, 0.01%)</title><rect x="329.6" y="533" width="0.1" height="15.0" fill="rgb(224,14,16)" rx="2" ry="2" />
<text  x="332.59" y="543.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).Get (1,297 samples, 0.19%)</title><rect x="203.7" y="469" width="2.2" height="15.0" fill="rgb(237,18,36)" rx="2" ry="2" />
<text  x="206.66" y="479.5" ></text>
</g>
<g >
<title>runtime.systemstack (389 samples, 0.06%)</title><rect x="832.9" y="485" width="0.6" height="15.0" fill="rgb(253,77,9)" rx="2" ry="2" />
<text  x="835.87" y="495.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).GetState (196 samples, 0.03%)</title><rect x="501.1" y="453" width="0.4" height="15.0" fill="rgb(235,90,5)" rx="2" ry="2" />
<text  x="504.13" y="463.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Txn).Get (8,201 samples, 1.18%)</title><rect x="835.0" y="501" width="13.9" height="15.0" fill="rgb(225,122,25)" rx="2" ry="2" />
<text  x="838.00" y="511.5" ></text>
</g>
<g >
<title>sort.symMerge (158 samples, 0.02%)</title><rect x="1040.3" y="421" width="0.2" height="15.0" fill="rgb(242,116,37)" rx="2" ry="2" />
<text  x="1043.26" y="431.5" ></text>
</g>
<g >
<title>runtime.gcDrain (34,564 samples, 4.97%)</title><rect x="37.1" y="821" width="58.7" height="15.0" fill="rgb(228,170,52)" rx="2" ry="2" />
<text  x="40.13" y="831.5" >runtim..</text>
</g>
<g >
<title>runtime.growslice (160 samples, 0.02%)</title><rect x="1091.3" y="629" width="0.2" height="15.0" fill="rgb(223,191,54)" rx="2" ry="2" />
<text  x="1094.27" y="639.5" ></text>
</g>
<g >
<title>runtime.mapaccess1 (100 samples, 0.01%)</title><rect x="214.5" y="501" width="0.2" height="15.0" fill="rgb(225,193,6)" rx="2" ry="2" />
<text  x="217.54" y="511.5" ></text>
</g>
<g >
<title>tg/core/state.(*PlainStateReader).ReadAccountStorage (103 samples, 0.01%)</title><rect x="406.0" y="341" width="0.2" height="15.0" fill="rgb(207,11,22)" rx="2" ry="2" />
<text  x="409.01" y="351.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (532 samples, 0.08%)</title><rect x="510.1" y="373" width="0.9" height="15.0" fill="rgb(215,166,23)" rx="2" ry="2" />
<text  x="513.08" y="383.5" ></text>
</g>
<g >
<title>tg/common/dbutils.PlainParseCompositeStorageKey (149 samples, 0.02%)</title><rect x="1013.2" y="581" width="0.3" height="15.0" fill="rgb(219,224,21)" rx="2" ry="2" />
<text  x="1016.20" y="591.5" ></text>
</g>
<g >
<title>sort.rotate (74 samples, 0.01%)</title><rect x="992.0" y="293" width="0.2" height="15.0" fill="rgb(230,80,24)" rx="2" ry="2" />
<text  x="995.05" y="303.5" ></text>
</g>
<g >
<title>runtime.mapassign_faststr (432 samples, 0.06%)</title><rect x="1037.8" y="629" width="0.7" height="15.0" fill="rgb(209,127,11)" rx="2" ry="2" />
<text  x="1040.78" y="639.5" ></text>
</g>
<g >
<title>runtime.growWork (74 samples, 0.01%)</title><rect x="698.7" y="597" width="0.1" height="15.0" fill="rgb(254,8,43)" rx="2" ry="2" />
<text  x="701.69" y="607.5" ></text>
</g>
<g >
<title>tg/p2p.(*Peer).startProtocols.func1 (3,926 samples, 0.57%)</title><rect x="1180.5" y="869" width="6.6" height="15.0" fill="rgb(211,21,9)" rx="2" ry="2" />
<text  x="1183.46" y="879.5" ></text>
</g>
<g >
<title>bytes.Compare (84 samples, 0.01%)</title><rect x="989.5" y="389" width="0.1" height="15.0" fill="rgb(205,155,49)" rx="2" ry="2" />
<text  x="992.50" y="399.5" ></text>
</g>
<g >
<title>tg/core/vm.gasSStoreEIP2200 (88 samples, 0.01%)</title><rect x="411.9" y="469" width="0.1" height="15.0" fill="rgb(250,196,25)" rx="2" ry="2" />
<text  x="414.88" y="479.5" ></text>
</g>
<g >
<title>cmpbody (86 samples, 0.01%)</title><rect x="993.4" y="197" width="0.1" height="15.0" fill="rgb(251,135,5)" rx="2" ry="2" />
<text  x="996.40" y="207.5" ></text>
</g>
<g >
<title>bytes.Compare (141 samples, 0.02%)</title><rect x="288.2" y="421" width="0.2" height="15.0" fill="rgb(241,125,24)" rx="2" ry="2" />
<text  x="291.15" y="431.5" ></text>
</g>
<g >
<title>tg/core/vm.run (63,893 samples, 9.20%)</title><rect x="350.8" y="565" width="108.5" height="15.0" fill="rgb(213,180,53)" rx="2" ry="2" />
<text  x="353.82" y="575.5" >tg/core/vm.run</text>
</g>
<g >
<title>golang.org/x/crypto/sha3.keccakF1600 (240 samples, 0.03%)</title><rect x="1113.7" y="629" width="0.4" height="15.0" fill="rgb(250,162,13)" rx="2" ry="2" />
<text  x="1116.67" y="639.5" ></text>
</g>
<g >
<title>sort.swapRange (288 samples, 0.04%)</title><rect x="180.8" y="421" width="0.5" height="15.0" fill="rgb(206,129,17)" rx="2" ry="2" />
<text  x="183.84" y="431.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*ioDecReader).reset (62 samples, 0.01%)</title><rect x="816.7" y="629" width="0.1" height="15.0" fill="rgb(227,194,46)" rx="2" ry="2" />
<text  x="819.72" y="639.5" ></text>
</g>
<g >
<title>runtime.evacuate (382 samples, 0.05%)</title><rect x="559.6" y="501" width="0.6" height="15.0" fill="rgb(235,12,25)" rx="2" ry="2" />
<text  x="562.58" y="511.5" ></text>
</g>
<g >
<title>runtime.makeslicecopy (228 samples, 0.03%)</title><rect x="701.6" y="581" width="0.4" height="15.0" fill="rgb(212,16,43)" rx="2" ry="2" />
<text  x="704.57" y="591.5" ></text>
</g>
<g >
<title>tg/core/state.(*stateObject).GetCommittedState (6,157 samples, 0.89%)</title><rect x="433.9" y="485" width="10.5" height="15.0" fill="rgb(254,166,9)" rx="2" ry="2" />
<text  x="436.94" y="495.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (69 samples, 0.01%)</title><rect x="423.2" y="389" width="0.1" height="15.0" fill="rgb(249,136,7)" rx="2" ry="2" />
<text  x="426.22" y="399.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (104 samples, 0.01%)</title><rect x="833.7" y="437" width="0.2" height="15.0" fill="rgb(249,200,43)" rx="2" ry="2" />
<text  x="836.71" y="447.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (113 samples, 0.02%)</title><rect x="972.8" y="549" width="0.1" height="15.0" fill="rgb(206,97,34)" rx="2" ry="2" />
<text  x="975.75" y="559.5" ></text>
</g>
<g >
<title>tg/core/vm.makeDup.func1 (503 samples, 0.07%)</title><rect x="364.1" y="533" width="0.9" height="15.0" fill="rgb(208,185,22)" rx="2" ry="2" />
<text  x="367.10" y="543.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).insert (10,848 samples, 1.56%)</title><rect x="672.2" y="613" width="18.4" height="15.0" fill="rgb(206,170,7)" rx="2" ry="2" />
<text  x="675.16" y="623.5" ></text>
</g>
<g >
<title>runtime.SetFinalizer.func1 (303 samples, 0.04%)</title><rect x="929.6" y="437" width="0.5" height="15.0" fill="rgb(207,88,5)" rx="2" ry="2" />
<text  x="932.61" y="447.5" ></text>
</g>
<g >
<title>tg/core/state.(*PlainStateReader).ReadAccountData (470 samples, 0.07%)</title><rect x="461.2" y="517" width="0.8" height="15.0" fill="rgb(218,45,4)" rx="2" ry="2" />
<text  x="464.22" y="527.5" ></text>
</g>
<g >
<title>runtime.makeslice (97 samples, 0.01%)</title><rect x="657.7" y="661" width="0.2" height="15.0" fill="rgb(248,29,43)" rx="2" ry="2" />
<text  x="660.74" y="671.5" ></text>
</g>
<g >
<title>runtime.makeslice (519 samples, 0.07%)</title><rect x="767.6" y="597" width="0.8" height="15.0" fill="rgb(245,200,40)" rx="2" ry="2" />
<text  x="770.56" y="607.5" ></text>
</g>
<g >
<title>tg/crypto/bn256/cloudflare.gfpMul (100 samples, 0.01%)</title><rect x="503.4" y="245" width="0.2" height="15.0" fill="rgb(211,158,47)" rx="2" ry="2" />
<text  x="506.39" y="255.5" ></text>
</g>
<g >
<title>tg/core/rawdb.ReadTransactions (552 samples, 0.08%)</title><rect x="232.5" y="629" width="0.9" height="15.0" fill="rgb(217,192,34)" rx="2" ry="2" />
<text  x="235.51" y="639.5" ></text>
</g>
<g >
<title>runtime.lock2 (160 samples, 0.02%)</title><rect x="893.1" y="485" width="0.2" height="15.0" fill="rgb(221,51,47)" rx="2" ry="2" />
<text  x="896.06" y="495.5" ></text>
</g>
<g >
<title>tg/core/vm.opSstore (102 samples, 0.01%)</title><rect x="492.7" y="469" width="0.2" height="15.0" fill="rgb(233,102,36)" rx="2" ry="2" />
<text  x="495.69" y="479.5" ></text>
</g>
<g >
<title>runtime.mallocgc (175 samples, 0.03%)</title><rect x="1119.6" y="741" width="0.3" height="15.0" fill="rgb(212,64,30)" rx="2" ry="2" />
<text  x="1122.57" y="751.5" ></text>
</g>
<g >
<title>tg/core/state.(*PlainStateReader).ReadAccountCodeSize (129 samples, 0.02%)</title><rect x="396.7" y="437" width="0.2" height="15.0" fill="rgb(240,214,50)" rx="2" ry="2" />
<text  x="399.72" y="447.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (89 samples, 0.01%)</title><rect x="1012.4" y="533" width="0.2" height="15.0" fill="rgb(226,77,15)" rx="2" ry="2" />
<text  x="1015.45" y="543.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (91 samples, 0.01%)</title><rect x="597.7" y="501" width="0.2" height="15.0" fill="rgb(207,95,28)" rx="2" ry="2" />
<text  x="600.71" y="511.5" ></text>
</g>
<g >
<title>bytes.Compare (62 samples, 0.01%)</title><rect x="511.0" y="325" width="0.2" height="15.0" fill="rgb(248,55,50)" rx="2" ry="2" />
<text  x="514.05" y="335.5" ></text>
</g>
<g >
<title>tg/core.GetHashFn (289 samples, 0.04%)</title><rect x="628.4" y="661" width="0.5" height="15.0" fill="rgb(231,228,16)" rx="2" ry="2" />
<text  x="631.42" y="671.5" ></text>
</g>
<g >
<title>sort.quickSort (931 samples, 0.13%)</title><rect x="1027.3" y="533" width="1.6" height="15.0" fill="rgb(215,169,54)" rx="2" ry="2" />
<text  x="1030.35" y="543.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.(*state).Read (224 samples, 0.03%)</title><rect x="134.0" y="725" width="0.4" height="15.0" fill="rgb(241,124,16)" rx="2" ry="2" />
<text  x="136.99" y="735.5" ></text>
</g>
<g >
<title>tg/common/etl.Heap.Swap (140 samples, 0.02%)</title><rect x="964.8" y="613" width="0.3" height="15.0" fill="rgb(235,7,48)" rx="2" ry="2" />
<text  x="967.83" y="623.5" ></text>
</g>
<g >
<title>sort.symMerge (447 samples, 0.06%)</title><rect x="143.4" y="533" width="0.7" height="15.0" fill="rgb(228,224,2)" rx="2" ry="2" />
<text  x="146.36" y="543.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).GetCodeHash (66 samples, 0.01%)</title><rect x="409.8" y="485" width="0.1" height="15.0" fill="rgb(231,101,0)" rx="2" ry="2" />
<text  x="412.77" y="495.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (103 samples, 0.01%)</title><rect x="606.9" y="357" width="0.2" height="15.0" fill="rgb(228,32,0)" rx="2" ry="2" />
<text  x="609.90" y="367.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).getVal2.func1 (97 samples, 0.01%)</title><rect x="481.8" y="245" width="0.1" height="15.0" fill="rgb(222,26,53)" rx="2" ry="2" />
<text  x="484.77" y="255.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find (103 samples, 0.01%)</title><rect x="491.2" y="277" width="0.2" height="15.0" fill="rgb(220,94,38)" rx="2" ry="2" />
<text  x="494.19" y="287.5" ></text>
</g>
<g >
<title>tg/rlp.Encode (3,243 samples, 0.47%)</title><rect x="742.3" y="581" width="5.5" height="15.0" fill="rgb(219,82,9)" rx="2" ry="2" />
<text  x="745.31" y="591.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (590 samples, 0.08%)</title><rect x="621.5" y="533" width="1.0" height="15.0" fill="rgb(206,175,44)" rx="2" ry="2" />
<text  x="624.49" y="543.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).insert (1,046 samples, 0.15%)</title><rect x="702.0" y="565" width="1.8" height="15.0" fill="rgb(221,173,32)" rx="2" ry="2" />
<text  x="705.03" y="575.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVMInterpreter).Run (549 samples, 0.08%)</title><rect x="603.6" y="485" width="0.9" height="15.0" fill="rgb(216,151,12)" rx="2" ry="2" />
<text  x="606.59" y="495.5" ></text>
</g>
<g >
<title>runtime.makeBucketArray (90 samples, 0.01%)</title><rect x="287.2" y="565" width="0.1" height="15.0" fill="rgb(242,17,50)" rx="2" ry="2" />
<text  x="290.15" y="575.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (67 samples, 0.01%)</title><rect x="595.1" y="517" width="0.1" height="15.0" fill="rgb(206,57,8)" rx="2" ry="2" />
<text  x="598.12" y="527.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (139 samples, 0.02%)</title><rect x="977.5" y="549" width="0.2" height="15.0" fill="rgb(225,50,28)" rx="2" ry="2" />
<text  x="980.50" y="559.5" ></text>
</g>
<g >
<title>tg/ethdb.(*LmdbCursor).nextDup (127 samples, 0.02%)</title><rect x="1026.2" y="693" width="0.2" height="15.0" fill="rgb(209,7,48)" rx="2" ry="2" />
<text  x="1029.16" y="703.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).Call (2,742 samples, 0.39%)</title><rect x="382.0" y="389" width="4.7" height="15.0" fill="rgb(248,90,25)" rx="2" ry="2" />
<text  x="385.02" y="399.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).GetState (61 samples, 0.01%)</title><rect x="387.4" y="325" width="0.1" height="15.0" fill="rgb(222,90,18)" rx="2" ry="2" />
<text  x="390.38" y="335.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb._Cfunc_mdb_txn_begin (70 samples, 0.01%)</title><rect x="231.0" y="597" width="0.2" height="15.0" fill="rgb(217,191,6)" rx="2" ry="2" />
<text  x="234.03" y="607.5" ></text>
</g>
<g >
<title>tg/consensus/ethash.generateDatasetItem (2,980 samples, 0.43%)</title><rect x="129.3" y="757" width="5.1" height="15.0" fill="rgb(218,217,17)" rx="2" ry="2" />
<text  x="132.34" y="767.5" ></text>
</g>
<g >
<title>math/big.nat.make (188 samples, 0.03%)</title><rect x="241.0" y="581" width="0.3" height="15.0" fill="rgb(206,27,17)" rx="2" ry="2" />
<text  x="243.97" y="591.5" ></text>
</g>
<g >
<title>tg/rlp.cachedWriter (538 samples, 0.08%)</title><rect x="1132.8" y="741" width="0.9" height="15.0" fill="rgb(211,63,50)" rx="2" ry="2" />
<text  x="1135.77" y="751.5" ></text>
</g>
<g >
<title>tg/core/vm.codeBitmap (312 samples, 0.04%)</title><rect x="424.9" y="485" width="0.5" height="15.0" fill="rgb(247,2,38)" rx="2" ry="2" />
<text  x="427.91" y="495.5" ></text>
</g>
<g >
<title>tg/rlp.(*encbuf).encodeString (196 samples, 0.03%)</title><rect x="766.1" y="357" width="0.4" height="15.0" fill="rgb(249,114,18)" rx="2" ry="2" />
<text  x="769.14" y="367.5" ></text>
</g>
<g >
<title>runtime.mallocgc (236 samples, 0.03%)</title><rect x="286.4" y="565" width="0.4" height="15.0" fill="rgb(254,71,51)" rx="2" ry="2" />
<text  x="289.38" y="575.5" ></text>
</g>
<g >
<title>runtime.cgocall (338 samples, 0.05%)</title><rect x="492.1" y="277" width="0.5" height="15.0" fill="rgb(234,22,50)" rx="2" ry="2" />
<text  x="495.06" y="287.5" ></text>
</g>
<g >
<title>runtime.mapaccess1 (86 samples, 0.01%)</title><rect x="643.5" y="661" width="0.1" height="15.0" fill="rgb(210,58,44)" rx="2" ry="2" />
<text  x="646.47" y="671.5" ></text>
</g>
<g >
<title>github.com/golang/snappy.decode (191 samples, 0.03%)</title><rect x="1176.1" y="805" width="0.3" height="15.0" fill="rgb(222,160,39)" rx="2" ry="2" />
<text  x="1179.07" y="815.5" ></text>
</g>
<g >
<title>tg/core/state.(*stateObject).GetState (59 samples, 0.01%)</title><rect x="515.7" y="181" width="0.1" height="15.0" fill="rgb(243,192,44)" rx="2" ry="2" />
<text  x="518.70" y="191.5" ></text>
</g>
<g >
<title>tg/core/state.(*PlainStateReader).ReadAccountCode (205 samples, 0.03%)</title><rect x="504.8" y="485" width="0.3" height="15.0" fill="rgb(236,107,41)" rx="2" ry="2" />
<text  x="507.76" y="495.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*BTree).Get (822 samples, 0.12%)</title><rect x="510.0" y="437" width="1.4" height="15.0" fill="rgb(227,124,40)" rx="2" ry="2" />
<text  x="513.05" y="447.5" ></text>
</g>
<g >
<title>tg/rlp.(*Stream).Reset (67 samples, 0.01%)</title><rect x="203.2" y="453" width="0.1" height="15.0" fill="rgb(246,17,11)" rx="2" ry="2" />
<text  x="206.18" y="463.5" ></text>
</g>
<g >
<title>tg/ethdb.(*lmdbTx).Commit (336 samples, 0.05%)</title><rect x="1188.2" y="821" width="0.6" height="15.0" fill="rgb(213,51,27)" rx="2" ry="2" />
<text  x="1191.18" y="831.5" ></text>
</g>
<g >
<title>runtime.newobject (95 samples, 0.01%)</title><rect x="1049.1" y="613" width="0.2" height="15.0" fill="rgb(211,134,24)" rx="2" ry="2" />
<text  x="1052.10" y="623.5" ></text>
</g>
<g >
<title>tg/rlp.makeByteArrayWriter.func1 (131 samples, 0.02%)</title><rect x="226.5" y="437" width="0.3" height="15.0" fill="rgb(221,160,30)" rx="2" ry="2" />
<text  x="229.53" y="447.5" ></text>
</g>
<g >
<title>tg/core/state.(*stateObject).GetCommittedState (269 samples, 0.04%)</title><rect x="481.5" y="357" width="0.4" height="15.0" fill="rgb(252,31,31)" rx="2" ry="2" />
<text  x="484.48" y="367.5" ></text>
</g>
<g >
<title>runtime.newobject (187 samples, 0.03%)</title><rect x="932.5" y="453" width="0.3" height="15.0" fill="rgb(225,60,46)" rx="2" ry="2" />
<text  x="935.49" y="463.5" ></text>
</g>
<g >
<title>runtime.preemptM (103 samples, 0.01%)</title><rect x="51.2" y="773" width="0.2" height="15.0" fill="rgb(245,109,29)" rx="2" ry="2" />
<text  x="54.21" y="783.5" ></text>
</g>
<g >
<title>sort.Search (65 samples, 0.01%)</title><rect x="422.8" y="373" width="0.1" height="15.0" fill="rgb(241,179,43)" rx="2" ry="2" />
<text  x="425.78" y="383.5" ></text>
</g>
<g >
<title>tg/rlp.cachedWriter (267 samples, 0.04%)</title><rect x="749.8" y="645" width="0.4" height="15.0" fill="rgb(218,69,31)" rx="2" ry="2" />
<text  x="752.79" y="655.5" ></text>
</g>
<g >
<title>bytes.Compare (145 samples, 0.02%)</title><rect x="1075.0" y="309" width="0.3" height="15.0" fill="rgb(243,73,1)" rx="2" ry="2" />
<text  x="1078.04" y="319.5" ></text>
</g>
<g >
<title>runtime.mallocgc (193 samples, 0.03%)</title><rect x="1112.2" y="629" width="0.3" height="15.0" fill="rgb(236,74,32)" rx="2" ry="2" />
<text  x="1115.21" y="639.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (206 samples, 0.03%)</title><rect x="826.9" y="453" width="0.3" height="15.0" fill="rgb(216,98,38)" rx="2" ry="2" />
<text  x="829.89" y="463.5" ></text>
</g>
<g >
<title>runtime.cgocall (68 samples, 0.01%)</title><rect x="814.4" y="517" width="0.2" height="15.0" fill="rgb(254,174,14)" rx="2" ry="2" />
<text  x="817.44" y="527.5" ></text>
</g>
<g >
<title>sort.symMerge (3,300 samples, 0.47%)</title><rect x="1071.8" y="437" width="5.6" height="15.0" fill="rgb(228,114,12)" rx="2" ry="2" />
<text  x="1074.80" y="447.5" ></text>
</g>
<g >
<title>tg/core/vm.opStaticCall (190 samples, 0.03%)</title><rect x="609.1" y="405" width="0.4" height="15.0" fill="rgb(225,64,7)" rx="2" ry="2" />
<text  x="612.14" y="415.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (64 samples, 0.01%)</title><rect x="363.8" y="389" width="0.1" height="15.0" fill="rgb(219,194,26)" rx="2" ry="2" />
<text  x="366.76" y="399.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).Get (5,010 samples, 0.72%)</title><rect x="1013.5" y="565" width="8.5" height="15.0" fill="rgb(216,179,18)" rx="2" ry="2" />
<text  x="1016.53" y="575.5" ></text>
</g>
<g >
<title>runtime.schedule (12,620 samples, 1.82%)</title><rect x="101.1" y="837" width="21.5" height="15.0" fill="rgb(234,28,42)" rx="2" ry="2" />
<text  x="104.14" y="847.5" >r..</text>
</g>
<g >
<title>runtime.(*mcentral).grow (137 samples, 0.02%)</title><rect x="965.4" y="533" width="0.2" height="15.0" fill="rgb(206,4,14)" rx="2" ry="2" />
<text  x="968.35" y="543.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.(*state).padAndPermute (250 samples, 0.04%)</title><rect x="389.0" y="373" width="0.4" height="15.0" fill="rgb(214,130,37)" rx="2" ry="2" />
<text  x="391.97" y="383.5" ></text>
</g>
<g >
<title>sort.symMerge (5,375 samples, 0.77%)</title><rect x="1068.5" y="533" width="9.1" height="15.0" fill="rgb(237,222,27)" rx="2" ry="2" />
<text  x="1071.48" y="543.5" ></text>
</g>
<g >
<title>bytes.Compare (66 samples, 0.01%)</title><rect x="866.4" y="357" width="0.1" height="15.0" fill="rgb(215,17,3)" rx="2" ry="2" />
<text  x="869.36" y="367.5" ></text>
</g>
<g >
<title>tg/core/vm.run (12,970 samples, 1.87%)</title><rect x="473.4" y="501" width="22.0" height="15.0" fill="rgb(221,66,19)" rx="2" ry="2" />
<text  x="476.36" y="511.5" >t..</text>
</g>
<g >
<title>tg/core/vm/stack.(*Stack).Pop (233 samples, 0.03%)</title><rect x="518.3" y="533" width="0.4" height="15.0" fill="rgb(210,23,5)" rx="2" ry="2" />
<text  x="521.30" y="543.5" ></text>
</g>
<g >
<title>runtime.unlockWithRank (138 samples, 0.02%)</title><rect x="894.1" y="501" width="0.2" height="15.0" fill="rgb(208,42,52)" rx="2" ry="2" />
<text  x="897.09" y="511.5" ></text>
</g>
<g >
<title>runtime.mallocgc (97 samples, 0.01%)</title><rect x="657.2" y="629" width="0.2" height="15.0" fill="rgb(218,98,23)" rx="2" ry="2" />
<text  x="660.23" y="639.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).insert (178 samples, 0.03%)</title><rect x="702.1" y="517" width="0.3" height="15.0" fill="rgb(234,228,9)" rx="2" ry="2" />
<text  x="705.08" y="527.5" ></text>
</g>
<g >
<title>tg/core/state.(*stateObject).GetCommittedState (2,035 samples, 0.29%)</title><rect x="400.9" y="421" width="3.5" height="15.0" fill="rgb(218,115,17)" rx="2" ry="2" />
<text  x="403.91" y="431.5" ></text>
</g>
<g >
<title>tg/ethdb.(*LmdbCursor).putCurrent (2,143 samples, 0.31%)</title><rect x="803.5" y="565" width="3.6" height="15.0" fill="rgb(245,204,15)" rx="2" ry="2" />
<text  x="806.51" y="575.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (169 samples, 0.02%)</title><rect x="734.7" y="597" width="0.3" height="15.0" fill="rgb(212,82,3)" rx="2" ry="2" />
<text  x="737.70" y="607.5" ></text>
</g>
<g >
<title>runtime.newobject (92 samples, 0.01%)</title><rect x="1060.8" y="597" width="0.1" height="15.0" fill="rgb(241,189,43)" rx="2" ry="2" />
<text  x="1063.79" y="607.5" ></text>
</g>
<g >
<title>bytes.Compare (115 samples, 0.02%)</title><rect x="992.9" y="245" width="0.2" height="15.0" fill="rgb(218,97,9)" rx="2" ry="2" />
<text  x="995.89" y="255.5" ></text>
</g>
<g >
<title>runtime.mallocgc.func1 (116 samples, 0.02%)</title><rect x="177.2" y="501" width="0.2" height="15.0" fill="rgb(207,209,34)" rx="2" ry="2" />
<text  x="180.16" y="511.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.readFull (477 samples, 0.07%)</title><rect x="970.3" y="469" width="0.8" height="15.0" fill="rgb(247,41,6)" rx="2" ry="2" />
<text  x="973.29" y="479.5" ></text>
</g>
<g >
<title>runtime.resolveTypeOff (73 samples, 0.01%)</title><rect x="217.5" y="357" width="0.1" height="15.0" fill="rgb(207,87,1)" rx="2" ry="2" />
<text  x="220.49" y="367.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).Get (200 samples, 0.03%)</title><rect x="1049.5" y="613" width="0.4" height="15.0" fill="rgb(230,24,7)" rx="2" ry="2" />
<text  x="1052.54" y="623.5" ></text>
</g>
<g >
<title>tg/eth/stagedsync.needFlush64 (1,298 samples, 0.19%)</title><rect x="1041.5" y="629" width="2.2" height="15.0" fill="rgb(252,192,7)" rx="2" ry="2" />
<text  x="1044.53" y="639.5" ></text>
</g>
<g >
<title>cmpbody (931 samples, 0.13%)</title><rect x="275.9" y="421" width="1.6" height="15.0" fill="rgb(207,0,12)" rx="2" ry="2" />
<text  x="278.88" y="431.5" ></text>
</g>
<g >
<title>runtime.goschedImpl (2,345 samples, 0.34%)</title><rect x="96.4" y="837" width="4.0" height="15.0" fill="rgb(244,138,51)" rx="2" ry="2" />
<text  x="99.38" y="847.5" ></text>
</g>
<g >
<title>tg/eth/stagedsync.incrementIntermediateHashes.func1 (1,530 samples, 0.22%)</title><rect x="973.9" y="629" width="2.6" height="15.0" fill="rgb(245,101,11)" rx="2" ry="2" />
<text  x="976.93" y="639.5" ></text>
</g>
<g >
<title>runtime.unlock2 (217 samples, 0.03%)</title><rect x="100.7" y="821" width="0.4" height="15.0" fill="rgb(229,60,1)" rx="2" ry="2" />
<text  x="103.71" y="831.5" ></text>
</g>
<g >
<title>tg/core/types.bloomValues (5,998 samples, 0.86%)</title><rect x="751.0" y="661" width="10.2" height="15.0" fill="rgb(245,14,11)" rx="2" ry="2" />
<text  x="754.03" y="671.5" ></text>
</g>
<g >
<title>runtime.mallocgc (122 samples, 0.02%)</title><rect x="167.9" y="613" width="0.3" height="15.0" fill="rgb(212,220,33)" rx="2" ry="2" />
<text  x="170.95" y="623.5" ></text>
</g>
<g >
<title>tg/rlp.makeNilPtrDecoder.func1 (526 samples, 0.08%)</title><rect x="791.5" y="517" width="0.8" height="15.0" fill="rgb(212,174,13)" rx="2" ry="2" />
<text  x="794.45" y="527.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find (106 samples, 0.02%)</title><rect x="1120.3" y="629" width="0.2" height="15.0" fill="rgb(238,10,43)" rx="2" ry="2" />
<text  x="1123.34" y="639.5" ></text>
</g>
<g >
<title>tg/ethdb.(*ObjectDatabase).Walk (550 samples, 0.08%)</title><rect x="232.5" y="613" width="0.9" height="15.0" fill="rgb(253,208,23)" rx="2" ry="2" />
<text  x="235.52" y="623.5" ></text>
</g>
<g >
<title>tg/rlp.makeSliceWriter.func1 (689 samples, 0.10%)</title><rect x="1132.7" y="757" width="1.2" height="15.0" fill="rgb(207,151,10)" rx="2" ry="2" />
<text  x="1135.74" y="767.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb._Cfunc_lmdbgo_mdb_cursor_get1 (120 samples, 0.02%)</title><rect x="423.4" y="373" width="0.2" height="15.0" fill="rgb(233,30,48)" rx="2" ry="2" />
<text  x="426.39" y="383.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find.func1 (129 samples, 0.02%)</title><rect x="440.6" y="373" width="0.2" height="15.0" fill="rgb(216,128,43)" rx="2" ry="2" />
<text  x="443.61" y="383.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (257 samples, 0.04%)</title><rect x="786.3" y="581" width="0.5" height="15.0" fill="rgb(214,157,48)" rx="2" ry="2" />
<text  x="789.32" y="591.5" ></text>
</g>
<g >
<title>tg/core/state.(*stateObject).Code (409 samples, 0.06%)</title><rect x="340.9" y="549" width="0.7" height="15.0" fill="rgb(234,166,47)" rx="2" ry="2" />
<text  x="343.88" y="559.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (188 samples, 0.03%)</title><rect x="1181.4" y="533" width="0.3" height="15.0" fill="rgb(215,29,20)" rx="2" ry="2" />
<text  x="1184.40" y="543.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.newRunContainer16Range (687 samples, 0.10%)</title><rect x="1096.2" y="565" width="1.2" height="15.0" fill="rgb(228,24,14)" rx="2" ry="2" />
<text  x="1099.20" y="575.5" ></text>
</g>
<g >
<title>tg/rlp.makeSimplePtrDecoder.func1 (3,436 samples, 0.49%)</title><rect x="1181.2" y="629" width="5.8" height="15.0" fill="rgb(220,20,14)" rx="2" ry="2" />
<text  x="1184.20" y="639.5" ></text>
</g>
<g >
<title>runtime.memmove (359 samples, 0.05%)</title><rect x="743.3" y="437" width="0.6" height="15.0" fill="rgb(209,198,49)" rx="2" ry="2" />
<text  x="746.32" y="447.5" ></text>
</g>
<g >
<title>tg/ethdb.(*MutationItem).Less (70 samples, 0.01%)</title><rect x="491.6" y="245" width="0.1" height="15.0" fill="rgb(224,183,54)" rx="2" ry="2" />
<text  x="494.61" y="255.5" ></text>
</g>
<g >
<title>tg/common/dbutils.PlainGenerateCompositeStorageKey (364 samples, 0.05%)</title><rect x="562.5" y="517" width="0.6" height="15.0" fill="rgb(218,168,16)" rx="2" ry="2" />
<text  x="565.51" y="527.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find (179 samples, 0.03%)</title><rect x="510.2" y="341" width="0.3" height="15.0" fill="rgb(223,128,27)" rx="2" ry="2" />
<text  x="513.15" y="351.5" ></text>
</g>
<g >
<title>tg/core/state.(*stateObject).SetState (82 samples, 0.01%)</title><rect x="512.4" y="501" width="0.1" height="15.0" fill="rgb(245,128,52)" rx="2" ry="2" />
<text  x="515.37" y="511.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (142 samples, 0.02%)</title><rect x="893.9" y="501" width="0.2" height="15.0" fill="rgb(226,86,28)" rx="2" ry="2" />
<text  x="896.85" y="511.5" ></text>
</g>
<g >
<title>runtime.mallocgc (211 samples, 0.03%)</title><rect x="790.0" y="453" width="0.4" height="15.0" fill="rgb(212,188,52)" rx="2" ry="2" />
<text  x="793.04" y="463.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.(*state).permute (513 samples, 0.07%)</title><rect x="399.6" y="421" width="0.9" height="15.0" fill="rgb(248,163,9)" rx="2" ry="2" />
<text  x="402.61" y="431.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find.func1 (172 samples, 0.02%)</title><rect x="402.6" y="277" width="0.3" height="15.0" fill="rgb(246,128,23)" rx="2" ry="2" />
<text  x="405.62" y="287.5" ></text>
</g>
<g >
<title>tg/core/rawdb.ReadTransactions.func1 (4,273 samples, 0.61%)</title><rect x="786.2" y="629" width="7.2" height="15.0" fill="rgb(206,45,33)" rx="2" ry="2" />
<text  x="789.19" y="639.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).GetState (23,022 samples, 3.31%)</title><rect x="555.0" y="581" width="39.1" height="15.0" fill="rgb(221,122,23)" rx="2" ry="2" />
<text  x="557.98" y="591.5" >tg/..</text>
</g>
<g >
<title>tg/core.Transfer (121 samples, 0.02%)</title><rect x="369.4" y="501" width="0.2" height="15.0" fill="rgb(235,167,40)" rx="2" ry="2" />
<text  x="372.35" y="511.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).StaticCall (919 samples, 0.13%)</title><rect x="608.0" y="517" width="1.6" height="15.0" fill="rgb(238,23,5)" rx="2" ry="2" />
<text  x="611.01" y="527.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (821 samples, 0.12%)</title><rect x="523.0" y="453" width="1.4" height="15.0" fill="rgb(242,120,51)" rx="2" ry="2" />
<text  x="525.99" y="463.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (159 samples, 0.02%)</title><rect x="910.1" y="437" width="0.2" height="15.0" fill="rgb(237,171,29)" rx="2" ry="2" />
<text  x="913.07" y="447.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (103 samples, 0.01%)</title><rect x="293.3" y="565" width="0.2" height="15.0" fill="rgb(205,92,30)" rx="2" ry="2" />
<text  x="296.33" y="575.5" ></text>
</g>
<g >
<title>tg/core/types.(*Header).Hash (92 samples, 0.01%)</title><rect x="1128.4" y="789" width="0.2" height="15.0" fill="rgb(225,218,32)" rx="2" ry="2" />
<text  x="1131.42" y="799.5" ></text>
</g>
<g >
<title>tg/core/state.(*PlainStateWriter).WriteChangeSets.func1 (2,482 samples, 0.36%)</title><rect x="723.3" y="645" width="4.3" height="15.0" fill="rgb(220,119,41)" rx="2" ry="2" />
<text  x="726.34" y="655.5" ></text>
</g>
<g >
<title>runtime.cgocall (238 samples, 0.03%)</title><rect x="607.6" y="341" width="0.4" height="15.0" fill="rgb(222,136,8)" rx="2" ry="2" />
<text  x="610.56" y="351.5" ></text>
</g>
<g >
<title>bytes.Compare (92 samples, 0.01%)</title><rect x="401.7" y="229" width="0.1" height="15.0" fill="rgb(244,227,22)" rx="2" ry="2" />
<text  x="404.67" y="239.5" ></text>
</g>
<g >
<title>runtime.mallocgc (91 samples, 0.01%)</title><rect x="659.5" y="629" width="0.1" height="15.0" fill="rgb(229,156,7)" rx="2" ry="2" />
<text  x="662.47" y="639.5" ></text>
</g>
<g >
<title>sort.Stable (4,841 samples, 0.70%)</title><rect x="986.0" y="549" width="8.3" height="15.0" fill="rgb(227,108,19)" rx="2" ry="2" />
<text  x="989.04" y="559.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Txn).commit.func1 (302 samples, 0.04%)</title><rect x="795.7" y="645" width="0.5" height="15.0" fill="rgb(249,23,40)" rx="2" ry="2" />
<text  x="798.69" y="655.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Txn).OpenCursor (1,918 samples, 0.28%)</title><rect x="930.2" y="485" width="3.3" height="15.0" fill="rgb(253,94,9)" rx="2" ry="2" />
<text  x="933.24" y="495.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).Put.func1 (576 samples, 0.08%)</title><rect x="1126.7" y="629" width="1.0" height="15.0" fill="rgb(248,152,28)" rx="2" ry="2" />
<text  x="1129.74" y="639.5" ></text>
</g>
<g >
<title>tg/ethdb.(*ObjectDatabase).Walk.func1 (22,523 samples, 3.24%)</title><rect x="176.5" y="645" width="38.3" height="15.0" fill="rgb(246,177,34)" rx="2" ry="2" />
<text  x="179.54" y="655.5" >tg/..</text>
</g>
<g >
<title>tg/core/vm.opJumpi (119 samples, 0.02%)</title><rect x="488.9" y="469" width="0.2" height="15.0" fill="rgb(236,6,23)" rx="2" ry="2" />
<text  x="491.88" y="479.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (98 samples, 0.01%)</title><rect x="861.0" y="501" width="0.1" height="15.0" fill="rgb(243,221,31)" rx="2" ry="2" />
<text  x="863.96" y="511.5" ></text>
</g>
<g >
<title>tg/ethdb.(*ObjectDatabase).Walk.func1 (4,023 samples, 0.58%)</title><rect x="215.1" y="565" width="6.9" height="15.0" fill="rgb(214,47,5)" rx="2" ry="2" />
<text  x="218.14" y="575.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.(*Bitmap).And (215 samples, 0.03%)</title><rect x="148.0" y="613" width="0.3" height="15.0" fill="rgb(225,163,24)" rx="2" ry="2" />
<text  x="150.97" y="623.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).GetCode (71 samples, 0.01%)</title><rect x="472.0" y="501" width="0.1" height="15.0" fill="rgb(246,12,42)" rx="2" ry="2" />
<text  x="474.98" y="511.5" ></text>
</g>
<g >
<title>tg/core/state.(*stateObject).GetCommittedState (219 samples, 0.03%)</title><rect x="450.2" y="421" width="0.3" height="15.0" fill="rgb(220,155,33)" rx="2" ry="2" />
<text  x="453.15" y="431.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).getStateObject (95 samples, 0.01%)</title><rect x="242.0" y="581" width="0.2" height="15.0" fill="rgb(217,112,24)" rx="2" ry="2" />
<text  x="245.05" y="591.5" ></text>
</g>
<g >
<title>runtime.exitsyscall (119 samples, 0.02%)</title><rect x="176.2" y="533" width="0.2" height="15.0" fill="rgb(220,42,28)" rx="2" ry="2" />
<text  x="179.18" y="543.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).CommitBlock (34,068 samples, 4.90%)</title><rect x="663.6" y="693" width="57.8" height="15.0" fill="rgb(228,88,22)" rx="2" ry="2" />
<text  x="666.58" y="703.5" >tg/cor..</text>
</g>
<g >
<title>aeshashbody (732 samples, 0.11%)</title><rect x="858.7" y="485" width="1.2" height="15.0" fill="rgb(224,13,47)" rx="2" ry="2" />
<text  x="861.68" y="495.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.binarySearch (99 samples, 0.01%)</title><rect x="1053.2" y="501" width="0.1" height="15.0" fill="rgb(252,65,37)" rx="2" ry="2" />
<text  x="1056.17" y="511.5" ></text>
</g>
<g >
<title>sort.symMerge (4,252 samples, 0.61%)</title><rect x="865.1" y="421" width="7.2" height="15.0" fill="rgb(205,106,31)" rx="2" ry="2" />
<text  x="868.13" y="431.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Txn).Get.func1 (6,964 samples, 1.00%)</title><rect x="935.2" y="485" width="11.8" height="15.0" fill="rgb(242,182,35)" rx="2" ry="2" />
<text  x="938.18" y="495.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find.func1 (120 samples, 0.02%)</title><rect x="1121.5" y="645" width="0.2" height="15.0" fill="rgb(212,28,22)" rx="2" ry="2" />
<text  x="1124.48" y="655.5" ></text>
</g>
<g >
<title>tg/common/etl.loadFilesIntoBucket (8,029 samples, 1.16%)</title><rect x="144.6" y="693" width="13.6" height="15.0" fill="rgb(247,106,51)" rx="2" ry="2" />
<text  x="147.61" y="703.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (60 samples, 0.01%)</title><rect x="1183.0" y="469" width="0.1" height="15.0" fill="rgb(211,106,17)" rx="2" ry="2" />
<text  x="1186.05" y="479.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (181 samples, 0.03%)</title><rect x="700.5" y="485" width="0.3" height="15.0" fill="rgb(254,2,19)" rx="2" ry="2" />
<text  x="703.53" y="495.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Txn).Get (154 samples, 0.02%)</title><rect x="230.5" y="645" width="0.3" height="15.0" fill="rgb(241,83,18)" rx="2" ry="2" />
<text  x="233.49" y="655.5" ></text>
</g>
<g >
<title>cmpbody (187 samples, 0.03%)</title><rect x="869.8" y="213" width="0.3" height="15.0" fill="rgb(215,46,46)" rx="2" ry="2" />
<text  x="872.81" y="223.5" ></text>
</g>
<g >
<title>runtime.cgocall (1,747 samples, 0.25%)</title><rect x="731.0" y="549" width="2.9" height="15.0" fill="rgb(221,179,15)" rx="2" ry="2" />
<text  x="733.96" y="559.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (60 samples, 0.01%)</title><rect x="196.5" y="485" width="0.1" height="15.0" fill="rgb(224,44,23)" rx="2" ry="2" />
<text  x="199.49" y="495.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (433 samples, 0.06%)</title><rect x="323.1" y="485" width="0.8" height="15.0" fill="rgb(249,131,38)" rx="2" ry="2" />
<text  x="326.13" y="495.5" ></text>
</g>
<g >
<title>tg/rlp.makeStructDecoder.func1 (3,621 samples, 0.52%)</title><rect x="1180.9" y="693" width="6.1" height="15.0" fill="rgb(227,141,51)" rx="2" ry="2" />
<text  x="1183.88" y="703.5" ></text>
</g>
<g >
<title>runtime.newarray (109 samples, 0.02%)</title><rect x="597.4" y="501" width="0.2" height="15.0" fill="rgb(205,192,10)" rx="2" ry="2" />
<text  x="600.41" y="511.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).uncacheSpan (83 samples, 0.01%)</title><rect x="36.8" y="725" width="0.1" height="15.0" fill="rgb(239,27,22)" rx="2" ry="2" />
<text  x="39.77" y="735.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.(*arrayContainer).iaddRange (65 samples, 0.01%)</title><rect x="1095.5" y="549" width="0.1" height="15.0" fill="rgb(242,224,2)" rx="2" ry="2" />
<text  x="1098.54" y="559.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).Get (126 samples, 0.02%)</title><rect x="423.4" y="421" width="0.2" height="15.0" fill="rgb(231,36,46)" rx="2" ry="2" />
<text  x="426.39" y="431.5" ></text>
</g>
<g >
<title>bytes.Compare (82 samples, 0.01%)</title><rect x="988.7" y="421" width="0.1" height="15.0" fill="rgb(234,29,11)" rx="2" ry="2" />
<text  x="991.67" y="431.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.fastpathT.DecSliceBytesY (813 samples, 0.12%)</title><rect x="169.2" y="565" width="1.4" height="15.0" fill="rgb(208,213,11)" rx="2" ry="2" />
<text  x="172.24" y="575.5" ></text>
</g>
<g >
<title>tg/rlp.makePtrWriter.func1 (2,151 samples, 0.31%)</title><rect x="763.3" y="517" width="3.6" height="15.0" fill="rgb(223,162,54)" rx="2" ry="2" />
<text  x="766.29" y="527.5" ></text>
</g>
<g >
<title>tg/core/vm.run (66 samples, 0.01%)</title><rect x="415.7" y="373" width="0.1" height="15.0" fill="rgb(228,29,41)" rx="2" ry="2" />
<text  x="418.71" y="383.5" ></text>
</g>
<g >
<title>tg/ethdb.(*mutation).Get (2,244 samples, 0.32%)</title><rect x="522.9" y="533" width="3.8" height="15.0" fill="rgb(206,47,0)" rx="2" ry="2" />
<text  x="525.89" y="543.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.keccakF1600 (206 samples, 0.03%)</title><rect x="389.0" y="341" width="0.4" height="15.0" fill="rgb(211,220,39)" rx="2" ry="2" />
<text  x="392.03" y="351.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).getVal1.func1 (79 samples, 0.01%)</title><rect x="340.5" y="437" width="0.1" height="15.0" fill="rgb(241,2,43)" rx="2" ry="2" />
<text  x="343.50" y="447.5" ></text>
</g>
<g >
<title>tg/ethdb.(*mutation).doCommit.func1 (637 samples, 0.09%)</title><rect x="1126.6" y="677" width="1.1" height="15.0" fill="rgb(215,38,16)" rx="2" ry="2" />
<text  x="1129.64" y="687.5" ></text>
</g>
<g >
<title>runtime.cgocall (302 samples, 0.04%)</title><rect x="795.7" y="613" width="0.5" height="15.0" fill="rgb(209,188,21)" rx="2" ry="2" />
<text  x="798.69" y="623.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*decRd).readn1IO (78 samples, 0.01%)</title><rect x="164.9" y="453" width="0.1" height="15.0" fill="rgb(241,123,22)" rx="2" ry="2" />
<text  x="167.90" y="463.5" ></text>
</g>
<g >
<title>tg/core/types.codecSelfer2.enccommon_Address (72 samples, 0.01%)</title><rect x="784.5" y="549" width="0.1" height="15.0" fill="rgb(241,38,47)" rx="2" ry="2" />
<text  x="787.48" y="559.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (172 samples, 0.02%)</title><rect x="460.6" y="485" width="0.3" height="15.0" fill="rgb(210,87,34)" rx="2" ry="2" />
<text  x="463.63" y="495.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find.func1 (1,613 samples, 0.23%)</title><rect x="253.8" y="469" width="2.8" height="15.0" fill="rgb(231,43,19)" rx="2" ry="2" />
<text  x="256.82" y="479.5" ></text>
</g>
<g >
<title>tg/core/vm.opMload (62 samples, 0.01%)</title><rect x="506.1" y="533" width="0.2" height="15.0" fill="rgb(209,132,4)" rx="2" ry="2" />
<text  x="509.15" y="543.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).getVal2.func1 (88 samples, 0.01%)</title><rect x="516.8" y="309" width="0.2" height="15.0" fill="rgb(228,123,16)" rx="2" ry="2" />
<text  x="519.81" y="319.5" ></text>
</g>
<g >
<title>runtime.schedule (2,117 samples, 0.30%)</title><rect x="96.8" y="821" width="3.5" height="15.0" fill="rgb(244,222,11)" rx="2" ry="2" />
<text  x="99.75" y="831.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Txn).Commit (297 samples, 0.04%)</title><rect x="1188.9" y="789" width="0.5" height="15.0" fill="rgb(245,209,16)" rx="2" ry="2" />
<text  x="1191.85" y="799.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find.func1 (484 samples, 0.07%)</title><rect x="439.2" y="341" width="0.9" height="15.0" fill="rgb(208,172,0)" rx="2" ry="2" />
<text  x="442.23" y="351.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (131 samples, 0.02%)</title><rect x="1119.6" y="677" width="0.2" height="15.0" fill="rgb(237,163,51)" rx="2" ry="2" />
<text  x="1122.63" y="687.5" ></text>
</g>
<g >
<title>tg/core/vm.opStaticCall (155 samples, 0.02%)</title><rect x="386.1" y="341" width="0.3" height="15.0" fill="rgb(242,31,43)" rx="2" ry="2" />
<text  x="389.14" y="351.5" ></text>
</g>
<g >
<title>reflect.Value.Addr (105 samples, 0.02%)</title><rect x="742.0" y="597" width="0.2" height="15.0" fill="rgb(236,45,38)" rx="2" ry="2" />
<text  x="745.02" y="607.5" ></text>
</g>
<g >
<title>runtime.makeslicecopy (159 samples, 0.02%)</title><rect x="1089.7" y="533" width="0.3" height="15.0" fill="rgb(254,199,33)" rx="2" ry="2" />
<text  x="1092.70" y="543.5" ></text>
</g>
<g >
<title>tg/rlp.makeByteArrayWriter.func1 (89 samples, 0.01%)</title><rect x="1130.4" y="725" width="0.1" height="15.0" fill="rgb(238,72,41)" rx="2" ry="2" />
<text  x="1133.37" y="735.5" ></text>
</g>
<g >
<title>sort.Search (65 samples, 0.01%)</title><rect x="340.2" y="405" width="0.1" height="15.0" fill="rgb(234,200,13)" rx="2" ry="2" />
<text  x="343.23" y="415.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Env).BeginTxn (123 samples, 0.02%)</title><rect x="231.0" y="645" width="0.2" height="15.0" fill="rgb(210,46,41)" rx="2" ry="2" />
<text  x="234.02" y="655.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).Call (209,866 samples, 30.20%)</title><rect x="267.4" y="645" width="356.4" height="15.0" fill="rgb(250,222,36)" rx="2" ry="2" />
<text  x="270.38" y="655.5" >tg/core/vm.(*EVM).Call</text>
</g>
<g >
<title>tg/crypto/secp256k1._Cfunc_secp256k1_ext_ecdsa_recover (79 samples, 0.01%)</title><rect x="450.6" y="357" width="0.1" height="15.0" fill="rgb(231,139,7)" rx="2" ry="2" />
<text  x="453.56" y="367.5" ></text>
</g>
<g >
<title>runtime.convT64 (141 samples, 0.02%)</title><rect x="927.6" y="453" width="0.2" height="15.0" fill="rgb(223,80,37)" rx="2" ry="2" />
<text  x="930.56" y="463.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find.func1 (1,560 samples, 0.22%)</title><rect x="705.3" y="485" width="2.6" height="15.0" fill="rgb(244,115,21)" rx="2" ry="2" />
<text  x="708.25" y="495.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*Encoder).Encode (201 samples, 0.03%)</title><rect x="1040.6" y="565" width="0.3" height="15.0" fill="rgb(244,122,15)" rx="2" ry="2" />
<text  x="1043.61" y="575.5" ></text>
</g>
<g >
<title>tg/crypto/secp256k1.RecoverPubkeyWithContext (4,929 samples, 0.71%)</title><rect x="342.4" y="517" width="8.4" height="15.0" fill="rgb(226,187,49)" rx="2" ry="2" />
<text  x="345.39" y="527.5" ></text>
</g>
<g >
<title>runtime/internal/atomic.Cas64 (84 samples, 0.01%)</title><rect x="738.3" y="645" width="0.2" height="15.0" fill="rgb(210,217,32)" rx="2" ry="2" />
<text  x="741.32" y="655.5" ></text>
</g>
<g >
<title>sort.quickSort (69 samples, 0.01%)</title><rect x="729.8" y="581" width="0.1" height="15.0" fill="rgb(239,93,21)" rx="2" ry="2" />
<text  x="732.76" y="591.5" ></text>
</g>
<g >
<title>tg/core/state.(*stateObject).AddBalance (482 samples, 0.07%)</title><rect x="264.8" y="629" width="0.8" height="15.0" fill="rgb(240,144,13)" rx="2" ry="2" />
<text  x="267.83" y="639.5" ></text>
</g>
<g >
<title>sort.rotate (103 samples, 0.01%)</title><rect x="990.5" y="357" width="0.2" height="15.0" fill="rgb(216,227,7)" rx="2" ry="2" />
<text  x="993.50" y="367.5" ></text>
</g>
<g >
<title>tg/rlp.cachedWriter (158 samples, 0.02%)</title><rect x="229.8" y="581" width="0.3" height="15.0" fill="rgb(240,63,22)" rx="2" ry="2" />
<text  x="232.80" y="591.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.(*state).permute (68 samples, 0.01%)</title><rect x="481.3" y="357" width="0.1" height="15.0" fill="rgb(245,170,33)" rx="2" ry="2" />
<text  x="484.30" y="367.5" ></text>
</g>
<g >
<title>runtime.mallocgc (130 samples, 0.02%)</title><rect x="875.7" y="501" width="0.3" height="15.0" fill="rgb(211,154,9)" rx="2" ry="2" />
<text  x="878.75" y="511.5" ></text>
</g>
<g >
<title>reflect.valueInterface (565 samples, 0.08%)</title><rect x="1109.0" y="517" width="0.9" height="15.0" fill="rgb(246,36,8)" rx="2" ry="2" />
<text  x="1111.97" y="527.5" ></text>
</g>
<g >
<title>tg/core/vm.opCall (72 samples, 0.01%)</title><rect x="394.2" y="277" width="0.1" height="15.0" fill="rgb(245,169,16)" rx="2" ry="2" />
<text  x="397.21" y="287.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*BTree).ReplaceOrInsert (1,143 samples, 0.16%)</title><rect x="702.0" y="597" width="1.9" height="15.0" fill="rgb(226,176,27)" rx="2" ry="2" />
<text  x="705.00" y="607.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (1,315 samples, 0.19%)</title><rect x="1053.5" y="469" width="2.2" height="15.0" fill="rgb(240,148,12)" rx="2" ry="2" />
<text  x="1056.49" y="479.5" ></text>
</g>
<g >
<title>tg/core/vm.(*Memory).Resize (223 samples, 0.03%)</title><rect x="408.8" y="485" width="0.4" height="15.0" fill="rgb(209,222,31)" rx="2" ry="2" />
<text  x="411.82" y="495.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (85 samples, 0.01%)</title><rect x="1096.9" y="517" width="0.2" height="15.0" fill="rgb(235,27,51)" rx="2" ry="2" />
<text  x="1099.93" y="527.5" ></text>
</g>
<g >
<title>cmpbody (108 samples, 0.02%)</title><rect x="871.6" y="149" width="0.2" height="15.0" fill="rgb(223,51,11)" rx="2" ry="2" />
<text  x="874.60" y="159.5" ></text>
</g>
<g >
<title>runtime.wakep (237 samples, 0.03%)</title><rect x="120.7" y="805" width="0.4" height="15.0" fill="rgb(205,167,11)" rx="2" ry="2" />
<text  x="123.67" y="815.5" ></text>
</g>
<g >
<title>github.com/holiman/uint256.FromBig (224 samples, 0.03%)</title><rect x="239.3" y="629" width="0.3" height="15.0" fill="rgb(213,55,33)" rx="2" ry="2" />
<text  x="242.26" y="639.5" ></text>
</g>
<g >
<title>runtime.unlockWithRank (94 samples, 0.01%)</title><rect x="1039.4" y="613" width="0.1" height="15.0" fill="rgb(216,174,13)" rx="2" ry="2" />
<text  x="1042.38" y="623.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find.func1 (167 samples, 0.02%)</title><rect x="702.1" y="469" width="0.3" height="15.0" fill="rgb(230,11,41)" rx="2" ry="2" />
<text  x="705.10" y="479.5" ></text>
</g>
<g >
<title>tg/crypto/bn256/cloudflare.(*twistPoint).Double (185 samples, 0.03%)</title><rect x="502.2" y="261" width="0.3" height="15.0" fill="rgb(213,200,8)" rx="2" ry="2" />
<text  x="505.22" y="271.5" ></text>
</g>
<g >
<title>tg/eth/downloader.(*Downloader).fetchParts (105 samples, 0.02%)</title><rect x="1129.9" y="805" width="0.1" height="15.0" fill="rgb(211,48,45)" rx="2" ry="2" />
<text  x="1132.86" y="815.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (322 samples, 0.05%)</title><rect x="325.8" y="469" width="0.6" height="15.0" fill="rgb(207,90,4)" rx="2" ry="2" />
<text  x="328.81" y="479.5" ></text>
</g>
<g >
<title>tg/core/vm.opCall (97 samples, 0.01%)</title><rect x="386.9" y="277" width="0.2" height="15.0" fill="rgb(220,61,47)" rx="2" ry="2" />
<text  x="389.90" y="287.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).GetState (61 samples, 0.01%)</title><rect x="476.2" y="453" width="0.1" height="15.0" fill="rgb(227,105,0)" rx="2" ry="2" />
<text  x="479.21" y="463.5" ></text>
</g>
<g >
<title>tg/core/vm.opDelegateCall (65 samples, 0.01%)</title><rect x="384.3" y="277" width="0.1" height="15.0" fill="rgb(216,192,45)" rx="2" ry="2" />
<text  x="387.25" y="287.5" ></text>
</g>
<g >
<title>tg/rlp.(*encbuf).encode (2,416 samples, 0.35%)</title><rect x="1108.0" y="661" width="4.1" height="15.0" fill="rgb(229,64,3)" rx="2" ry="2" />
<text  x="1111.04" y="671.5" ></text>
</g>
<g >
<title>tg/common/etl.(*sortableBuffer).Swap (97 samples, 0.01%)</title><rect x="187.6" y="261" width="0.2" height="15.0" fill="rgb(222,30,42)" rx="2" ry="2" />
<text  x="190.60" y="271.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (214 samples, 0.03%)</title><rect x="464.4" y="469" width="0.4" height="15.0" fill="rgb(211,224,25)" rx="2" ry="2" />
<text  x="467.45" y="479.5" ></text>
</g>
<g >
<title>runtime.typedmemmove (387 samples, 0.06%)</title><rect x="743.3" y="453" width="0.6" height="15.0" fill="rgb(213,192,26)" rx="2" ry="2" />
<text  x="746.28" y="463.5" ></text>
</g>
<g >
<title>tg/rlp.decodeUint (239 samples, 0.03%)</title><rect x="201.3" y="373" width="0.5" height="15.0" fill="rgb(228,166,12)" rx="2" ry="2" />
<text  x="204.35" y="383.5" ></text>
</g>
<g >
<title>runtime.cgocall (8,798 samples, 1.27%)</title><rect x="911.8" y="437" width="15.0" height="15.0" fill="rgb(225,159,12)" rx="2" ry="2" />
<text  x="914.84" y="447.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (114 samples, 0.02%)</title><rect x="627.5" y="549" width="0.2" height="15.0" fill="rgb(215,119,50)" rx="2" ry="2" />
<text  x="630.55" y="559.5" ></text>
</g>
<g >
<title>tg/core/vm.run (69 samples, 0.01%)</title><rect x="493.3" y="309" width="0.1" height="15.0" fill="rgb(220,214,53)" rx="2" ry="2" />
<text  x="496.31" y="319.5" ></text>
</g>
<g >
<title>tg/crypto/secp256k1.RecoverPubkeyWithContext.func1 (319 samples, 0.05%)</title><rect x="512.7" y="437" width="0.6" height="15.0" fill="rgb(219,71,2)" rx="2" ry="2" />
<text  x="515.75" y="447.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).getVal2 (351 samples, 0.05%)</title><rect x="492.1" y="325" width="0.6" height="15.0" fill="rgb(223,95,33)" rx="2" ry="2" />
<text  x="495.06" y="335.5" ></text>
</g>
<g >
<title>tg/ethdb.(*lmdbTx).get (7,019 samples, 1.01%)</title><rect x="935.1" y="517" width="12.0" height="15.0" fill="rgb(249,185,43)" rx="2" ry="2" />
<text  x="938.13" y="527.5" ></text>
</g>
<g >
<title>sort.symMerge (616 samples, 0.09%)</title><rect x="143.1" y="581" width="1.0" height="15.0" fill="rgb(246,195,36)" rx="2" ry="2" />
<text  x="146.09" y="591.5" ></text>
</g>
<g >
<title>tg/core/state.(*stateObject).GetState (81 samples, 0.01%)</title><rect x="445.5" y="485" width="0.1" height="15.0" fill="rgb(234,130,39)" rx="2" ry="2" />
<text  x="448.47" y="495.5" ></text>
</g>
<g >
<title>github.com/holiman/uint256.udivrem (60 samples, 0.01%)</title><rect x="488.4" y="437" width="0.1" height="15.0" fill="rgb(248,192,5)" rx="2" ry="2" />
<text  x="491.39" y="447.5" ></text>
</g>
<g >
<title>tg/core.(*TinyChainContext).GetHeader (257 samples, 0.04%)</title><rect x="338.1" y="565" width="0.4" height="15.0" fill="rgb(249,41,13)" rx="2" ry="2" />
<text  x="341.06" y="575.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).getVal2.func1 (628 samples, 0.09%)</title><rect x="403.3" y="309" width="1.0" height="15.0" fill="rgb(231,192,19)" rx="2" ry="2" />
<text  x="406.26" y="319.5" ></text>
</g>
<g >
<title>runtime.exitsyscallfast (235 samples, 0.03%)</title><rect x="955.7" y="485" width="0.4" height="15.0" fill="rgb(231,85,43)" rx="2" ry="2" />
<text  x="958.74" y="495.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.(*state).Read (132 samples, 0.02%)</title><rect x="449.8" y="453" width="0.2" height="15.0" fill="rgb(207,142,32)" rx="2" ry="2" />
<text  x="452.81" y="463.5" ></text>
</g>
<g >
<title>tg/eth/downloader.(*queue).deliver (7,054 samples, 1.02%)</title><rect x="1107.1" y="773" width="12.0" height="15.0" fill="rgb(233,156,2)" rx="2" ry="2" />
<text  x="1110.12" y="783.5" ></text>
</g>
<g >
<title>tg/crypto/secp256k1.RecoverPubkeyWithContext (290 samples, 0.04%)</title><rect x="371.0" y="453" width="0.5" height="15.0" fill="rgb(249,33,2)" rx="2" ry="2" />
<text  x="373.97" y="463.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).getVal1.func1 (69 samples, 0.01%)</title><rect x="396.8" y="325" width="0.1" height="15.0" fill="rgb(234,49,43)" rx="2" ry="2" />
<text  x="399.82" y="335.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find (71 samples, 0.01%)</title><rect x="326.2" y="437" width="0.1" height="15.0" fill="rgb(254,92,48)" rx="2" ry="2" />
<text  x="329.20" y="447.5" ></text>
</g>
<g >
<title>sort.symMerge (292 samples, 0.04%)</title><rect x="143.6" y="485" width="0.5" height="15.0" fill="rgb(208,133,54)" rx="2" ry="2" />
<text  x="146.60" y="495.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.fastpathEncodeTypeSwitch (717 samples, 0.10%)</title><rect x="1078.0" y="517" width="1.3" height="15.0" fill="rgb(225,120,13)" rx="2" ry="2" />
<text  x="1081.03" y="527.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (149 samples, 0.02%)</title><rect x="786.4" y="501" width="0.2" height="15.0" fill="rgb(242,148,34)" rx="2" ry="2" />
<text  x="789.35" y="511.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).iterate (986 samples, 0.14%)</title><rect x="1126.6" y="741" width="1.7" height="15.0" fill="rgb(228,170,52)" rx="2" ry="2" />
<text  x="1129.61" y="751.5" ></text>
</g>
<g >
<title>tg/common/etl.(*sortableBuffer).Swap (156 samples, 0.02%)</title><rect x="1070.4" y="437" width="0.2" height="15.0" fill="rgb(206,153,4)" rx="2" ry="2" />
<text  x="1073.36" y="447.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.keccakF1600 (1,017 samples, 0.15%)</title><rect x="1178.4" y="789" width="1.7" height="15.0" fill="rgb(221,84,50)" rx="2" ry="2" />
<text  x="1181.42" y="799.5" ></text>
</g>
<g >
<title>tg/common/etl.extractBucketIntoFiles.func1 (26,820 samples, 3.86%)</title><rect x="976.6" y="629" width="45.6" height="15.0" fill="rgb(209,106,18)" rx="2" ry="2" />
<text  x="979.63" y="639.5" >tg/c..</text>
</g>
<g >
<title>tg/core/state.newAccessList (290 samples, 0.04%)</title><rect x="737.0" y="693" width="0.5" height="15.0" fill="rgb(245,206,29)" rx="2" ry="2" />
<text  x="740.02" y="703.5" ></text>
</g>
<g >
<title>runtime.mallocgc (105 samples, 0.02%)</title><rect x="667.7" y="629" width="0.2" height="15.0" fill="rgb(226,162,4)" rx="2" ry="2" />
<text  x="670.69" y="639.5" ></text>
</g>
<g >
<title>tg/rlp.decodeByteSlice (345 samples, 0.05%)</title><rect x="198.9" y="373" width="0.6" height="15.0" fill="rgb(230,197,50)" rx="2" ry="2" />
<text  x="201.87" y="383.5" ></text>
</g>
<g >
<title>tg/core/vm.opCall (73 samples, 0.01%)</title><rect x="483.9" y="277" width="0.1" height="15.0" fill="rgb(236,7,51)" rx="2" ry="2" />
<text  x="486.88" y="287.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (63 samples, 0.01%)</title><rect x="293.3" y="501" width="0.1" height="15.0" fill="rgb(218,131,24)" rx="2" ry="2" />
<text  x="296.34" y="511.5" ></text>
</g>
<g >
<title>tg/core/rawdb.ReadCanonicalHash (443 samples, 0.06%)</title><rect x="230.1" y="725" width="0.8" height="15.0" fill="rgb(236,53,34)" rx="2" ry="2" />
<text  x="233.12" y="735.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (2,552 samples, 0.37%)</title><rect x="435.7" y="389" width="4.4" height="15.0" fill="rgb(234,41,21)" rx="2" ry="2" />
<text  x="438.73" y="399.5" ></text>
</g>
<g >
<title>runtime.assertE2I (59 samples, 0.01%)</title><rect x="742.2" y="597" width="0.1" height="15.0" fill="rgb(214,210,39)" rx="2" ry="2" />
<text  x="745.20" y="607.5" ></text>
</g>
<g >
<title>runtime.reentersyscall (59 samples, 0.01%)</title><rect x="726.7" y="517" width="0.1" height="15.0" fill="rgb(231,157,1)" rx="2" ry="2" />
<text  x="729.66" y="527.5" ></text>
</g>
<g >
<title>sync.(*RWMutex).RUnlock (67 samples, 0.01%)</title><rect x="951.3" y="501" width="0.1" height="15.0" fill="rgb(254,32,7)" rx="2" ry="2" />
<text  x="954.33" y="511.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Env).BeginTxn (142 samples, 0.02%)</title><rect x="230.2" y="661" width="0.2" height="15.0" fill="rgb(206,215,0)" rx="2" ry="2" />
<text  x="233.21" y="671.5" ></text>
</g>
<g >
<title>cmpbody (165 samples, 0.02%)</title><rect x="871.2" y="165" width="0.3" height="15.0" fill="rgb(235,35,36)" rx="2" ry="2" />
<text  x="874.22" y="175.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVMInterpreter).Run (684 samples, 0.10%)</title><rect x="608.4" y="485" width="1.1" height="15.0" fill="rgb(233,108,20)" rx="2" ry="2" />
<text  x="611.39" y="495.5" ></text>
</g>
<g >
<title>sort.doPivot (96 samples, 0.01%)</title><rect x="729.4" y="581" width="0.2" height="15.0" fill="rgb(225,44,1)" rx="2" ry="2" />
<text  x="732.45" y="591.5" ></text>
</g>
<g >
<title>runtime.evacuate (253 samples, 0.04%)</title><rect x="631.2" y="629" width="0.5" height="15.0" fill="rgb(224,136,46)" rx="2" ry="2" />
<text  x="634.22" y="639.5" ></text>
</g>
<g >
<title>tg/core/vm.opDelegateCall (112 samples, 0.02%)</title><rect x="497.1" y="341" width="0.2" height="15.0" fill="rgb(210,31,38)" rx="2" ry="2" />
<text  x="500.10" y="351.5" ></text>
</g>
<g >
<title>tg/rlp.(*encbuf).toBytes (303 samples, 0.04%)</title><rect x="1112.1" y="661" width="0.6" height="15.0" fill="rgb(212,28,30)" rx="2" ry="2" />
<text  x="1115.14" y="671.5" ></text>
</g>
<g >
<title>tg/core/vm.opCall (154 samples, 0.02%)</title><rect x="448.5" y="469" width="0.3" height="15.0" fill="rgb(254,97,54)" rx="2" ry="2" />
<text  x="451.49" y="479.5" ></text>
</g>
<g >
<title>runtime.mapaccess2_faststr (94 samples, 0.01%)</title><rect x="593.8" y="469" width="0.1" height="15.0" fill="rgb(214,115,1)" rx="2" ry="2" />
<text  x="596.76" y="479.5" ></text>
</g>
<g >
<title>tg/common/etl.(*sortableBuffer).Sort (9,237 samples, 1.33%)</title><rect x="177.6" y="549" width="15.7" height="15.0" fill="rgb(245,169,24)" rx="2" ry="2" />
<text  x="180.57" y="559.5" ></text>
</g>
<g >
<title>runtime.memmove (87 samples, 0.01%)</title><rect x="783.6" y="501" width="0.2" height="15.0" fill="rgb(240,216,32)" rx="2" ry="2" />
<text  x="786.63" y="511.5" ></text>
</g>
<g >
<title>github.com/holiman/uint256.(*Int).SetBytes (75 samples, 0.01%)</title><rect x="544.3" y="581" width="0.2" height="15.0" fill="rgb(236,29,16)" rx="2" ry="2" />
<text  x="547.33" y="591.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb._Cfunc_lmdbgo_mdb_cursor_get1 (74 samples, 0.01%)</title><rect x="340.5" y="421" width="0.1" height="15.0" fill="rgb(231,210,21)" rx="2" ry="2" />
<text  x="343.50" y="431.5" ></text>
</g>
<g >
<title>tg/core.ExecuteBlockEphemerally (321,547 samples, 46.28%)</title><rect x="233.6" y="709" width="546.1" height="15.0" fill="rgb(244,10,54)" rx="2" ry="2" />
<text  x="236.64" y="719.5" >tg/core.ExecuteBlockEphemerally</text>
</g>
<g >
<title>tg/ethdb.(*MutationItem).Less (672 samples, 0.10%)</title><rect x="578.4" y="389" width="1.1" height="15.0" fill="rgb(239,184,51)" rx="2" ry="2" />
<text  x="581.39" y="399.5" ></text>
</g>
<g >
<title>runtime.gcMarkTermination.func4.1 (111 samples, 0.02%)</title><rect x="36.7" y="773" width="0.2" height="15.0" fill="rgb(240,119,6)" rx="2" ry="2" />
<text  x="39.73" y="783.5" ></text>
</g>
<g >
<title>tg/core/vm.RunPrecompiledContract (180 samples, 0.03%)</title><rect x="492.9" y="437" width="0.3" height="15.0" fill="rgb(245,182,22)" rx="2" ry="2" />
<text  x="495.88" y="447.5" ></text>
</g>
<g >
<title>runtime.cgoCheckPointer (196 samples, 0.03%)</title><rect x="593.2" y="421" width="0.4" height="15.0" fill="rgb(220,167,24)" rx="2" ry="2" />
<text  x="596.24" y="431.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).StaticCall (3,189 samples, 0.46%)</title><rect x="512.5" y="517" width="5.5" height="15.0" fill="rgb(251,0,21)" rx="2" ry="2" />
<text  x="515.54" y="527.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (225 samples, 0.03%)</title><rect x="458.3" y="453" width="0.4" height="15.0" fill="rgb(231,225,23)" rx="2" ry="2" />
<text  x="461.30" y="463.5" ></text>
</g>
<g >
<title>tg/core/vm.opCall (892 samples, 0.13%)</title><rect x="478.5" y="405" width="1.5" height="15.0" fill="rgb(250,140,42)" rx="2" ry="2" />
<text  x="481.51" y="415.5" ></text>
</g>
<g >
<title>tg/common/etl.NewCollector.func1 (6,181 samples, 0.89%)</title><rect x="984.9" y="581" width="10.5" height="15.0" fill="rgb(207,117,0)" rx="2" ry="2" />
<text  x="987.94" y="591.5" ></text>
</g>
<g >
<title>tg/rlp.(*Stream).readFull (63 samples, 0.01%)</title><rect x="217.1" y="389" width="0.2" height="15.0" fill="rgb(208,133,23)" rx="2" ry="2" />
<text  x="220.15" y="399.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.(*state).Reset (68 samples, 0.01%)</title><rect x="1009.6" y="565" width="0.1" height="15.0" fill="rgb(243,169,39)" rx="2" ry="2" />
<text  x="1012.58" y="575.5" ></text>
</g>
<g >
<title>tg/core/vm.opSstore (2,231 samples, 0.32%)</title><rect x="594.1" y="597" width="3.8" height="15.0" fill="rgb(233,141,51)" rx="2" ry="2" />
<text  x="597.10" y="607.5" ></text>
</g>
<g >
<title>tg/core/vm.opDiv (94 samples, 0.01%)</title><rect x="387.6" y="405" width="0.2" height="15.0" fill="rgb(223,78,44)" rx="2" ry="2" />
<text  x="390.59" y="415.5" ></text>
</g>
<g >
<title>bytes.Compare (199 samples, 0.03%)</title><rect x="869.3" y="245" width="0.3" height="15.0" fill="rgb(228,112,44)" rx="2" ry="2" />
<text  x="872.28" y="255.5" ></text>
</g>
<g >
<title>cmpbody (82 samples, 0.01%)</title><rect x="863.1" y="453" width="0.1" height="15.0" fill="rgb(240,150,26)" rx="2" ry="2" />
<text  x="866.07" y="463.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*BTree).Get (3,025 samples, 0.44%)</title><rect x="435.7" y="437" width="5.1" height="15.0" fill="rgb(216,13,48)" rx="2" ry="2" />
<text  x="438.70" y="447.5" ></text>
</g>
<g >
<title>runtime.addfinalizer (191 samples, 0.03%)</title><rect x="933.0" y="421" width="0.3" height="15.0" fill="rgb(241,174,17)" rx="2" ry="2" />
<text  x="935.98" y="431.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.newRunContainer16Range (520 samples, 0.07%)</title><rect x="1050.6" y="565" width="0.9" height="15.0" fill="rgb(226,172,50)" rx="2" ry="2" />
<text  x="1053.62" y="575.5" ></text>
</g>
<g >
<title>cmpbody (191 samples, 0.03%)</title><rect x="183.5" y="357" width="0.4" height="15.0" fill="rgb(233,3,15)" rx="2" ry="2" />
<text  x="186.54" y="367.5" ></text>
</g>
<g >
<title>runtime.mallocgc (245 samples, 0.04%)</title><rect x="628.5" y="629" width="0.4" height="15.0" fill="rgb(244,92,50)" rx="2" ry="2" />
<text  x="631.47" y="639.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring/roaring64.(*roaringArray64).insertNewKeyValueAt (221 samples, 0.03%)</title><rect x="1098.6" y="597" width="0.4" height="15.0" fill="rgb(238,135,36)" rx="2" ry="2" />
<text  x="1101.60" y="607.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.(*state).permute (524 samples, 0.08%)</title><rect x="228.2" y="549" width="0.9" height="15.0" fill="rgb(248,211,2)" rx="2" ry="2" />
<text  x="231.18" y="559.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (451 samples, 0.06%)</title><rect x="1100.4" y="389" width="0.7" height="15.0" fill="rgb(217,217,47)" rx="2" ry="2" />
<text  x="1103.37" y="399.5" ></text>
</g>
<g >
<title>cmpbody (106 samples, 0.02%)</title><rect x="1076.5" y="229" width="0.2" height="15.0" fill="rgb(245,134,41)" rx="2" ry="2" />
<text  x="1079.49" y="239.5" ></text>
</g>
<g >
<title>runtime.convT2E (441 samples, 0.06%)</title><rect x="966.9" y="645" width="0.8" height="15.0" fill="rgb(218,60,33)" rx="2" ry="2" />
<text  x="969.90" y="655.5" ></text>
</g>
<g >
<title>tg/core/vm.opJump (743 samples, 0.11%)</title><rect x="529.2" y="597" width="1.3" height="15.0" fill="rgb(244,133,18)" rx="2" ry="2" />
<text  x="532.21" y="607.5" ></text>
</g>
<g >
<title>tg/core/state.(*PlainStateReader).ReadAccountIncarnation (79 samples, 0.01%)</title><rect x="460.0" y="533" width="0.1" height="15.0" fill="rgb(220,40,4)" rx="2" ry="2" />
<text  x="462.98" y="543.5" ></text>
</g>
<g >
<title>tg/core/vm.run (1,341 samples, 0.19%)</title><rect x="483.5" y="373" width="2.3" height="15.0" fill="rgb(226,58,34)" rx="2" ry="2" />
<text  x="486.54" y="383.5" ></text>
</g>
<g >
<title>tg/core/vm.(*Contract).isCode (346 samples, 0.05%)</title><rect x="424.9" y="501" width="0.5" height="15.0" fill="rgb(244,24,5)" rx="2" ry="2" />
<text  x="427.85" y="511.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Txn).Commit (490 samples, 0.07%)</title><rect x="1128.8" y="773" width="0.9" height="15.0" fill="rgb(253,225,24)" rx="2" ry="2" />
<text  x="1131.83" y="783.5" ></text>
</g>
<g >
<title>runtime.mallocgc (136 samples, 0.02%)</title><rect x="645.6" y="645" width="0.2" height="15.0" fill="rgb(213,44,24)" rx="2" ry="2" />
<text  x="648.59" y="655.5" ></text>
</g>
<g >
<title>runtime.mallocgc (111 samples, 0.02%)</title><rect x="444.7" y="469" width="0.2" height="15.0" fill="rgb(247,93,32)" rx="2" ry="2" />
<text  x="447.74" y="479.5" ></text>
</g>
<g >
<title>tg/ethdb.(*MutationItem).Less (111 samples, 0.02%)</title><rect x="581.8" y="421" width="0.2" height="15.0" fill="rgb(211,185,4)" rx="2" ry="2" />
<text  x="584.79" y="431.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).GetState (284 samples, 0.04%)</title><rect x="395.1" y="389" width="0.5" height="15.0" fill="rgb(225,78,35)" rx="2" ry="2" />
<text  x="398.12" y="399.5" ></text>
</g>
<g >
<title>runtime.findObject (134 samples, 0.02%)</title><rect x="949.9" y="485" width="0.3" height="15.0" fill="rgb(212,99,37)" rx="2" ry="2" />
<text  x="952.93" y="495.5" ></text>
</g>
<g >
<title>time.Now (113 samples, 0.02%)</title><rect x="220.4" y="453" width="0.2" height="15.0" fill="rgb(230,124,45)" rx="2" ry="2" />
<text  x="223.43" y="463.5" ></text>
</g>
<g >
<title>runtime.mapiternext (94 samples, 0.01%)</title><rect x="1043.6" y="613" width="0.1" height="15.0" fill="rgb(228,212,54)" rx="2" ry="2" />
<text  x="1046.58" y="623.5" ></text>
</g>
<g >
<title>tg/eth/downloader.(*queue).ReserveBodies (146 samples, 0.02%)</title><rect x="1119.1" y="805" width="0.3" height="15.0" fill="rgb(237,84,35)" rx="2" ry="2" />
<text  x="1122.11" y="815.5" ></text>
</g>
<g >
<title>reflect.Value.Field (66 samples, 0.01%)</title><rect x="216.7" y="421" width="0.1" height="15.0" fill="rgb(214,111,7)" rx="2" ry="2" />
<text  x="219.67" y="431.5" ></text>
</g>
<g >
<title>github.com/holiman/uint256.(*Int).SetBytes (483 samples, 0.07%)</title><rect x="333.5" y="581" width="0.8" height="15.0" fill="rgb(229,92,36)" rx="2" ry="2" />
<text  x="336.47" y="591.5" ></text>
</g>
<g >
<title>runtime.cgocall (143 samples, 0.02%)</title><rect x="447.0" y="405" width="0.3" height="15.0" fill="rgb(208,213,19)" rx="2" ry="2" />
<text  x="450.02" y="415.5" ></text>
</g>
<g >
<title>runtime.mapaccess1 (117 samples, 0.02%)</title><rect x="1126.3" y="693" width="0.2" height="15.0" fill="rgb(227,212,47)" rx="2" ry="2" />
<text  x="1129.26" y="703.5" ></text>
</g>
<g >
<title>tg/rlp.makePtrWriter.func1 (3,031 samples, 0.44%)</title><rect x="742.4" y="549" width="5.1" height="15.0" fill="rgb(217,215,45)" rx="2" ry="2" />
<text  x="745.40" y="559.5" ></text>
</g>
<g >
<title>runtime.convT2I (132 samples, 0.02%)</title><rect x="264.9" y="597" width="0.2" height="15.0" fill="rgb(216,143,54)" rx="2" ry="2" />
<text  x="267.85" y="607.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring/roaring64.(*roaringArray64).getIndex (163 samples, 0.02%)</title><rect x="1060.9" y="613" width="0.3" height="15.0" fill="rgb(225,114,23)" rx="2" ry="2" />
<text  x="1063.94" y="623.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (59 samples, 0.01%)</title><rect x="495.0" y="357" width="0.1" height="15.0" fill="rgb(253,48,4)" rx="2" ry="2" />
<text  x="497.98" y="367.5" ></text>
</g>
<g >
<title>runtime.mallocgc (95 samples, 0.01%)</title><rect x="792.0" y="453" width="0.1" height="15.0" fill="rgb(208,47,2)" rx="2" ry="2" />
<text  x="794.95" y="463.5" ></text>
</g>
<g >
<title>runtime.mallocgc (511 samples, 0.07%)</title><rect x="975.6" y="581" width="0.9" height="15.0" fill="rgb(226,103,3)" rx="2" ry="2" />
<text  x="978.62" y="591.5" ></text>
</g>
<g >
<title>runtime.suspendG (804 samples, 0.12%)</title><rect x="60.4" y="773" width="1.4" height="15.0" fill="rgb(240,89,0)" rx="2" ry="2" />
<text  x="63.39" y="783.5" ></text>
</g>
<g >
<title>runtime.addspecial (105 samples, 0.02%)</title><rect x="833.0" y="437" width="0.2" height="15.0" fill="rgb(249,76,36)" rx="2" ry="2" />
<text  x="835.99" y="447.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (98 samples, 0.01%)</title><rect x="978.3" y="501" width="0.2" height="15.0" fill="rgb(254,168,24)" rx="2" ry="2" />
<text  x="981.31" y="511.5" ></text>
</g>
<g >
<title>tg/rlp.makeEncoderWriter.func2 (2,118 samples, 0.30%)</title><rect x="1122.3" y="693" width="3.6" height="15.0" fill="rgb(213,107,50)" rx="2" ry="2" />
<text  x="1125.30" y="703.5" ></text>
</g>
<g >
<title>tg/ethdb.(*mutation).Get (80 samples, 0.01%)</title><rect x="485.5" y="261" width="0.1" height="15.0" fill="rgb(237,135,2)" rx="2" ry="2" />
<text  x="488.49" y="271.5" ></text>
</g>
<g >
<title>tg/core/state.(*PlainStateReader).ReadAccountCode (236 samples, 0.03%)</title><rect x="464.0" y="533" width="0.4" height="15.0" fill="rgb(230,95,53)" rx="2" ry="2" />
<text  x="467.00" y="543.5" ></text>
</g>
<g >
<title>tg/consensus/ethash.makeHasher.func1 (883 samples, 0.13%)</title><rect x="127.7" y="805" width="1.5" height="15.0" fill="rgb(244,40,4)" rx="2" ry="2" />
<text  x="130.65" y="815.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (248 samples, 0.04%)</title><rect x="235.8" y="629" width="0.5" height="15.0" fill="rgb(217,4,14)" rx="2" ry="2" />
<text  x="238.84" y="639.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (108 samples, 0.02%)</title><rect x="894.5" y="501" width="0.2" height="15.0" fill="rgb(206,84,22)" rx="2" ry="2" />
<text  x="897.50" y="511.5" ></text>
</g>
<g >
<title>tg/ethdb.(*TxDb).Get (206 samples, 0.03%)</title><rect x="341.2" y="501" width="0.4" height="15.0" fill="rgb(206,98,35)" rx="2" ry="2" />
<text  x="344.22" y="511.5" ></text>
</g>
<g >
<title>cmpbody (63 samples, 0.01%)</title><rect x="1068.5" y="501" width="0.1" height="15.0" fill="rgb(222,22,25)" rx="2" ry="2" />
<text  x="1071.50" y="511.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.(*roaringArray).runOptimize (594 samples, 0.09%)</title><rect x="1061.8" y="597" width="1.0" height="15.0" fill="rgb(236,139,34)" rx="2" ry="2" />
<text  x="1064.77" y="607.5" ></text>
</g>
<g >
<title>github.com/holiman/uint256.(*Int).WriteToSlice (324 samples, 0.05%)</title><rect x="227.1" y="421" width="0.6" height="15.0" fill="rgb(243,160,46)" rx="2" ry="2" />
<text  x="230.13" y="431.5" ></text>
</g>
<g >
<title>tg/ethdb.(*LmdbKV).View (5,424 samples, 0.78%)</title><rect x="196.9" y="533" width="9.2" height="15.0" fill="rgb(250,162,39)" rx="2" ry="2" />
<text  x="199.86" y="543.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVMInterpreter).Run (502 samples, 0.07%)</title><rect x="414.3" y="357" width="0.8" height="15.0" fill="rgb(229,97,11)" rx="2" ry="2" />
<text  x="417.26" y="367.5" ></text>
</g>
<g >
<title>runtime.makeslicecopy (256 samples, 0.04%)</title><rect x="696.7" y="613" width="0.4" height="15.0" fill="rgb(231,74,4)" rx="2" ry="2" />
<text  x="699.69" y="623.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).scavengeOne (1,163 samples, 0.17%)</title><rect x="10.8" y="805" width="2.0" height="15.0" fill="rgb(232,187,7)" rx="2" ry="2" />
<text  x="13.82" y="815.5" ></text>
</g>
<g >
<title>bytes.Compare (163 samples, 0.02%)</title><rect x="499.0" y="261" width="0.3" height="15.0" fill="rgb(228,152,36)" rx="2" ry="2" />
<text  x="502.00" y="271.5" ></text>
</g>
<g >
<title>runtime.newobject (116 samples, 0.02%)</title><rect x="318.2" y="597" width="0.2" height="15.0" fill="rgb(232,141,6)" rx="2" ry="2" />
<text  x="321.16" y="607.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*decRd).readn1 (68 samples, 0.01%)</title><rect x="169.7" y="517" width="0.1" height="15.0" fill="rgb(223,201,3)" rx="2" ry="2" />
<text  x="172.67" y="527.5" ></text>
</g>
<g >
<title>tg/core/vm.opSload (293 samples, 0.04%)</title><rect x="395.1" y="405" width="0.5" height="15.0" fill="rgb(214,107,30)" rx="2" ry="2" />
<text  x="398.10" y="415.5" ></text>
</g>
<g >
<title>runtime.nanotime (97 samples, 0.01%)</title><rect x="123.5" y="837" width="0.1" height="15.0" fill="rgb(248,113,34)" rx="2" ry="2" />
<text  x="126.47" y="847.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).Put.func1 (2,199 samples, 0.32%)</title><rect x="807.7" y="533" width="3.8" height="15.0" fill="rgb(239,26,12)" rx="2" ry="2" />
<text  x="810.72" y="543.5" ></text>
</g>
<g >
<title>tg/common/changeset.FromDBFormat.func1 (321 samples, 0.05%)</title><rect x="978.0" y="597" width="0.6" height="15.0" fill="rgb(251,196,29)" rx="2" ry="2" />
<text  x="981.04" y="607.5" ></text>
</g>
<g >
<title>sync.(*WaitGroup).Done (67 samples, 0.01%)</title><rect x="951.5" y="517" width="0.1" height="15.0" fill="rgb(245,218,0)" rx="2" ry="2" />
<text  x="954.46" y="527.5" ></text>
</g>
<g >
<title>tg/crypto/bn256/cloudflare.(*gfP2).Mul (111 samples, 0.02%)</title><rect x="503.4" y="261" width="0.2" height="15.0" fill="rgb(226,214,45)" rx="2" ry="2" />
<text  x="506.37" y="271.5" ></text>
</g>
<g >
<title>tg/core/vm.(*ecrecover).Run (68 samples, 0.01%)</title><rect x="486.2" y="293" width="0.1" height="15.0" fill="rgb(243,196,25)" rx="2" ry="2" />
<text  x="489.23" y="303.5" ></text>
</g>
<g >
<title>sort.symMerge (1,823 samples, 0.26%)</title><rect x="1074.2" y="357" width="3.1" height="15.0" fill="rgb(211,140,6)" rx="2" ry="2" />
<text  x="1077.17" y="367.5" ></text>
</g>
<g >
<title>runtime.systemstack (539 samples, 0.08%)</title><rect x="153.4" y="405" width="0.9" height="15.0" fill="rgb(206,2,17)" rx="2" ry="2" />
<text  x="156.36" y="415.5" ></text>
</g>
<g >
<title>sort.swapRange (115 samples, 0.02%)</title><rect x="1072.1" y="405" width="0.2" height="15.0" fill="rgb(218,111,38)" rx="2" ry="2" />
<text  x="1075.09" y="415.5" ></text>
</g>
<g >
<title>tg/ethdb.(*LmdbCursor).set (61 samples, 0.01%)</title><rect x="452.9" y="421" width="0.1" height="15.0" fill="rgb(253,205,51)" rx="2" ry="2" />
<text  x="455.88" y="431.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (71 samples, 0.01%)</title><rect x="341.9" y="485" width="0.1" height="15.0" fill="rgb(231,117,8)" rx="2" ry="2" />
<text  x="344.93" y="495.5" ></text>
</g>
<g >
<title>cmpbody (77 samples, 0.01%)</title><rect x="510.2" y="277" width="0.2" height="15.0" fill="rgb(220,27,38)" rx="2" ry="2" />
<text  x="513.22" y="287.5" ></text>
</g>
<g >
<title>tg/crypto/secp256k1.RecoverPubkeyWithContext (622 samples, 0.09%)</title><rect x="472.3" y="453" width="1.1" height="15.0" fill="rgb(251,15,34)" rx="2" ry="2" />
<text  x="475.30" y="463.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).Call (1,864 samples, 0.27%)</title><rect x="412.8" y="453" width="3.1" height="15.0" fill="rgb(252,14,37)" rx="2" ry="2" />
<text  x="415.76" y="463.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (83 samples, 0.01%)</title><rect x="1012.9" y="517" width="0.2" height="15.0" fill="rgb(250,164,37)" rx="2" ry="2" />
<text  x="1015.94" y="527.5" ></text>
</g>
<g >
<title>tg/core/vm.opSload (245 samples, 0.04%)</title><rect x="516.5" y="469" width="0.5" height="15.0" fill="rgb(213,62,44)" rx="2" ry="2" />
<text  x="519.55" y="479.5" ></text>
</g>
<g >
<title>tg/eth/stagedsync.promoteHistory.func1 (7,141 samples, 1.03%)</title><rect x="1031.6" y="645" width="12.1" height="15.0" fill="rgb(206,61,44)" rx="2" ry="2" />
<text  x="1034.61" y="655.5" ></text>
</g>
<g >
<title>runtime.mallocgc (145 samples, 0.02%)</title><rect x="1012.9" y="533" width="0.2" height="15.0" fill="rgb(212,45,20)" rx="2" ry="2" />
<text  x="1015.85" y="543.5" ></text>
</g>
<g >
<title>tg/rlp.makeByteArrayWriter.func1 (230 samples, 0.03%)</title><rect x="1110.0" y="517" width="0.4" height="15.0" fill="rgb(237,164,8)" rx="2" ry="2" />
<text  x="1113.02" y="527.5" ></text>
</g>
<g >
<title>runtime.add (63 samples, 0.01%)</title><rect x="635.2" y="629" width="0.2" height="15.0" fill="rgb(232,24,54)" rx="2" ry="2" />
<text  x="638.25" y="639.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.(*state).Read (1,392 samples, 0.20%)</title><rect x="1114.4" y="629" width="2.4" height="15.0" fill="rgb(251,41,39)" rx="2" ry="2" />
<text  x="1117.40" y="639.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find.func1 (74 samples, 0.01%)</title><rect x="1120.4" y="597" width="0.1" height="15.0" fill="rgb(209,97,20)" rx="2" ry="2" />
<text  x="1123.38" y="607.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (162 samples, 0.02%)</title><rect x="934.5" y="373" width="0.3" height="15.0" fill="rgb(222,213,47)" rx="2" ry="2" />
<text  x="937.48" y="383.5" ></text>
</g>
<g >
<title>sort.rotate (185 samples, 0.03%)</title><rect x="186.0" y="325" width="0.3" height="15.0" fill="rgb(205,128,17)" rx="2" ry="2" />
<text  x="189.03" y="335.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.fastpathDecodeTypeSwitch (826 samples, 0.12%)</title><rect x="169.2" y="581" width="1.4" height="15.0" fill="rgb(252,51,35)" rx="2" ry="2" />
<text  x="172.22" y="591.5" ></text>
</g>
<g >
<title>tg/crypto/bn256.PairingCheck (666 samples, 0.10%)</title><rect x="502.5" y="341" width="1.2" height="15.0" fill="rgb(205,211,22)" rx="2" ry="2" />
<text  x="505.54" y="351.5" ></text>
</g>
<g >
<title>tg/turbo/trie.(*HashBuilder).completeLeafHash (2,790 samples, 0.40%)</title><rect x="1114.3" y="645" width="4.7" height="15.0" fill="rgb(210,215,53)" rx="2" ry="2" />
<text  x="1117.30" y="655.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.(*state).Read (100 samples, 0.01%)</title><rect x="1113.4" y="661" width="0.2" height="15.0" fill="rgb(215,175,23)" rx="2" ry="2" />
<text  x="1116.44" y="671.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*BTree).Get (69 samples, 0.01%)</title><rect x="415.4" y="309" width="0.1" height="15.0" fill="rgb(232,146,52)" rx="2" ry="2" />
<text  x="418.42" y="319.5" ></text>
</g>
<g >
<title>sort.Search (385 samples, 0.06%)</title><rect x="498.9" y="293" width="0.6" height="15.0" fill="rgb(242,28,51)" rx="2" ry="2" />
<text  x="501.85" y="303.5" ></text>
</g>
<g >
<title>tg/common/etl.(*oldestEntrySortableBuffer).Swap (69 samples, 0.01%)</title><rect x="991.0" y="309" width="0.1" height="15.0" fill="rgb(242,25,23)" rx="2" ry="2" />
<text  x="993.96" y="319.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (62 samples, 0.01%)</title><rect x="287.2" y="501" width="0.1" height="15.0" fill="rgb(238,193,3)" rx="2" ry="2" />
<text  x="290.16" y="511.5" ></text>
</g>
<g >
<title>runtime.stringtoslicebyte (86 samples, 0.01%)</title><rect x="1041.4" y="613" width="0.1" height="15.0" fill="rgb(248,130,5)" rx="2" ry="2" />
<text  x="1044.38" y="623.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.decByteSlice (1,013 samples, 0.15%)</title><rect x="970.1" y="517" width="1.7" height="15.0" fill="rgb(210,225,33)" rx="2" ry="2" />
<text  x="973.10" y="527.5" ></text>
</g>
<g >
<title>runtime.(*mheap).allocSpan (74 samples, 0.01%)</title><rect x="768.1" y="453" width="0.1" height="15.0" fill="rgb(233,4,2)" rx="2" ry="2" />
<text  x="771.08" y="463.5" ></text>
</g>
<g >
<title>runtime.evacuate (61 samples, 0.01%)</title><rect x="330.2" y="533" width="0.1" height="15.0" fill="rgb(219,16,49)" rx="2" ry="2" />
<text  x="333.21" y="543.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find (796 samples, 0.11%)</title><rect x="256.6" y="517" width="1.3" height="15.0" fill="rgb(205,57,20)" rx="2" ry="2" />
<text  x="259.57" y="527.5" ></text>
</g>
<g >
<title>runtime.mapaccess2 (248 samples, 0.04%)</title><rect x="663.8" y="677" width="0.4" height="15.0" fill="rgb(251,128,51)" rx="2" ry="2" />
<text  x="666.83" y="687.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*items).insertAt (144 samples, 0.02%)</title><rect x="704.7" y="549" width="0.2" height="15.0" fill="rgb(220,190,48)" rx="2" ry="2" />
<text  x="707.66" y="559.5" ></text>
</g>
<g >
<title>runtime.memmove (948 samples, 0.14%)</title><rect x="873.4" y="389" width="1.7" height="15.0" fill="rgb(222,8,33)" rx="2" ry="2" />
<text  x="876.44" y="399.5" ></text>
</g>
<g >
<title>bytes.Compare (73 samples, 0.01%)</title><rect x="527.4" y="389" width="0.2" height="15.0" fill="rgb(252,148,8)" rx="2" ry="2" />
<text  x="530.43" y="399.5" ></text>
</g>
<g >
<title>tg/rlp.(*Stream).Kind (192 samples, 0.03%)</title><rect x="790.5" y="469" width="0.4" height="15.0" fill="rgb(223,11,13)" rx="2" ry="2" />
<text  x="793.54" y="479.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (244 samples, 0.04%)</title><rect x="826.9" y="501" width="0.4" height="15.0" fill="rgb(208,72,4)" rx="2" ry="2" />
<text  x="829.86" y="511.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find (69 samples, 0.01%)</title><rect x="340.2" y="421" width="0.1" height="15.0" fill="rgb(216,222,49)" rx="2" ry="2" />
<text  x="343.22" y="431.5" ></text>
</g>
<g >
<title>tg/ethdb.(*TxDb).Get (1,568 samples, 0.23%)</title><rect x="289.8" y="565" width="2.7" height="15.0" fill="rgb(240,24,53)" rx="2" ry="2" />
<text  x="292.80" y="575.5" ></text>
</g>
<g >
<title>runtime.goschedImpl (493 samples, 0.07%)</title><rect x="122.6" y="821" width="0.8" height="15.0" fill="rgb(213,98,20)" rx="2" ry="2" />
<text  x="125.59" y="831.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).GetCodeHash (457 samples, 0.07%)</title><rect x="464.4" y="565" width="0.8" height="15.0" fill="rgb(210,187,7)" rx="2" ry="2" />
<text  x="467.40" y="575.5" ></text>
</g>
<g >
<title>runtime.asyncPreempt (333 samples, 0.05%)</title><rect x="974.1" y="597" width="0.6" height="15.0" fill="rgb(213,67,11)" rx="2" ry="2" />
<text  x="977.11" y="607.5" ></text>
</g>
<g >
<title>tg/rlp.cachedTypeInfo (164 samples, 0.02%)</title><rect x="220.2" y="437" width="0.2" height="15.0" fill="rgb(238,52,53)" rx="2" ry="2" />
<text  x="223.15" y="447.5" ></text>
</g>
<g >
<title>runtime.mallocgc (69 samples, 0.01%)</title><rect x="435.5" y="421" width="0.1" height="15.0" fill="rgb(227,215,2)" rx="2" ry="2" />
<text  x="438.49" y="431.5" ></text>
</g>
<g >
<title>cmpbody (79 samples, 0.01%)</title><rect x="702.1" y="437" width="0.2" height="15.0" fill="rgb(252,75,33)" rx="2" ry="2" />
<text  x="705.13" y="447.5" ></text>
</g>
<g >
<title>runtime.evacuate_faststr (945 samples, 0.14%)</title><rect x="858.4" y="501" width="1.6" height="15.0" fill="rgb(220,228,5)" rx="2" ry="2" />
<text  x="861.44" y="511.5" ></text>
</g>
<g >
<title>runtime.mallocgc (95 samples, 0.01%)</title><rect x="262.9" y="565" width="0.1" height="15.0" fill="rgb(248,101,26)" rx="2" ry="2" />
<text  x="265.88" y="575.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (166 samples, 0.02%)</title><rect x="762.8" y="485" width="0.3" height="15.0" fill="rgb(209,181,51)" rx="2" ry="2" />
<text  x="765.78" y="495.5" ></text>
</g>
<g >
<title>runtime.lock2 (160 samples, 0.02%)</title><rect x="99.1" y="789" width="0.3" height="15.0" fill="rgb(249,4,6)" rx="2" ry="2" />
<text  x="102.09" y="799.5" ></text>
</g>
<g >
<title>tg/core/vm.RunPrecompiledContract (591 samples, 0.09%)</title><rect x="446.3" y="501" width="1.0" height="15.0" fill="rgb(221,87,30)" rx="2" ry="2" />
<text  x="449.25" y="511.5" ></text>
</g>
<g >
<title>sync/atomic.(*Value).Store (95 samples, 0.01%)</title><rect x="198.1" y="405" width="0.2" height="15.0" fill="rgb(234,17,48)" rx="2" ry="2" />
<text  x="201.11" y="415.5" ></text>
</g>
<g >
<title>runtime.markrootSpans (147 samples, 0.02%)</title><rect x="61.8" y="789" width="0.3" height="15.0" fill="rgb(210,140,34)" rx="2" ry="2" />
<text  x="64.81" y="799.5" ></text>
</g>
<g >
<title>tg/rlp.Encode (98 samples, 0.01%)</title><rect x="134.7" y="837" width="0.2" height="15.0" fill="rgb(251,212,51)" rx="2" ry="2" />
<text  x="137.70" y="847.5" ></text>
</g>
<g >
<title>tg/ethdb.(*mutation).Get (8,254 samples, 1.19%)</title><rect x="245.6" y="581" width="14.0" height="15.0" fill="rgb(222,96,29)" rx="2" ry="2" />
<text  x="248.57" y="591.5" ></text>
</g>
<g >
<title>tg/eth/downloader.(*Downloader).fillHeaderSkeleton (105 samples, 0.02%)</title><rect x="1129.9" y="821" width="0.1" height="15.0" fill="rgb(247,206,22)" rx="2" ry="2" />
<text  x="1132.86" y="831.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring/roaring64.(*Bitmap).Add (1,678 samples, 0.24%)</title><rect x="1032.0" y="629" width="2.9" height="15.0" fill="rgb(212,56,20)" rx="2" ry="2" />
<text  x="1035.01" y="639.5" ></text>
</g>
<g >
<title>tg/rlp.cachedWriter (143 samples, 0.02%)</title><rect x="1111.9" y="581" width="0.2" height="15.0" fill="rgb(226,200,24)" rx="2" ry="2" />
<text  x="1114.90" y="591.5" ></text>
</g>
<g >
<title>tg/core/vm/stack.(*Stack).Len (93 samples, 0.01%)</title><rect x="459.0" y="549" width="0.2" height="15.0" fill="rgb(254,119,38)" rx="2" ry="2" />
<text  x="462.04" y="559.5" ></text>
</g>
<g >
<title>tg/core/vm.memoryGasCost (190 samples, 0.03%)</title><rect x="610.9" y="581" width="0.3" height="15.0" fill="rgb(241,208,46)" rx="2" ry="2" />
<text  x="613.92" y="591.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (175 samples, 0.03%)</title><rect x="832.0" y="437" width="0.3" height="15.0" fill="rgb(242,43,8)" rx="2" ry="2" />
<text  x="835.05" y="447.5" ></text>
</g>
<g >
<title>runtime.memmove (136 samples, 0.02%)</title><rect x="1109.2" y="453" width="0.2" height="15.0" fill="rgb(246,101,31)" rx="2" ry="2" />
<text  x="1112.16" y="463.5" ></text>
</g>
<g >
<title>runtime.mallocgc (88 samples, 0.01%)</title><rect x="1183.0" y="501" width="0.2" height="15.0" fill="rgb(210,169,51)" rx="2" ry="2" />
<text  x="1186.02" y="511.5" ></text>
</g>
<g >
<title>runtime.mapaccess2 (64 samples, 0.01%)</title><rect x="325.4" y="549" width="0.1" height="15.0" fill="rgb(231,188,18)" rx="2" ry="2" />
<text  x="328.40" y="559.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (62 samples, 0.01%)</title><rect x="450.2" y="309" width="0.1" height="15.0" fill="rgb(228,188,29)" rx="2" ry="2" />
<text  x="453.21" y="319.5" ></text>
</g>
<g >
<title>tg/core/state.(*stateObject).GetCommittedState (61 samples, 0.01%)</title><rect x="420.3" y="357" width="0.1" height="15.0" fill="rgb(251,66,4)" rx="2" ry="2" />
<text  x="423.27" y="367.5" ></text>
</g>
<g >
<title>bytes.Compare (202 samples, 0.03%)</title><rect x="167.2" y="629" width="0.3" height="15.0" fill="rgb(206,123,28)" rx="2" ry="2" />
<text  x="170.19" y="639.5" ></text>
</g>
<g >
<title>tg/log.Debug (119 samples, 0.02%)</title><rect x="1128.6" y="789" width="0.2" height="15.0" fill="rgb(217,94,27)" rx="2" ry="2" />
<text  x="1131.58" y="799.5" ></text>
</g>
<g >
<title>runtime.convTslice (70 samples, 0.01%)</title><rect x="779.8" y="693" width="0.1" height="15.0" fill="rgb(212,113,24)" rx="2" ry="2" />
<text  x="782.75" y="703.5" ></text>
</g>
<g >
<title>runtime.mallocgc (112 samples, 0.02%)</title><rect x="860.1" y="469" width="0.2" height="15.0" fill="rgb(248,38,17)" rx="2" ry="2" />
<text  x="863.07" y="479.5" ></text>
</g>
<g >
<title>tg/common/etl.(*oldestEntrySortableBuffer).Swap (79 samples, 0.01%)</title><rect x="866.9" y="309" width="0.2" height="15.0" fill="rgb(217,80,33)" rx="2" ry="2" />
<text  x="869.95" y="319.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).Call (364 samples, 0.05%)</title><rect x="478.8" y="325" width="0.7" height="15.0" fill="rgb(206,57,7)" rx="2" ry="2" />
<text  x="481.84" y="335.5" ></text>
</g>
<g >
<title>tg/core/state.(*PlainStateWriter).UpdateAccountCode (515 samples, 0.07%)</title><rect x="666.0" y="661" width="0.9" height="15.0" fill="rgb(231,30,42)" rx="2" ry="2" />
<text  x="669.00" y="671.5" ></text>
</g>
<g >
<title>tg/rlp.(*Stream).Decode (3,215 samples, 0.46%)</title><rect x="197.7" y="453" width="5.5" height="15.0" fill="rgb(223,112,14)" rx="2" ry="2" />
<text  x="200.72" y="463.5" ></text>
</g>
<g >
<title>sort.Search (275 samples, 0.04%)</title><rect x="288.1" y="453" width="0.4" height="15.0" fill="rgb(251,199,3)" rx="2" ry="2" />
<text  x="291.07" y="463.5" ></text>
</g>
<g >
<title>runtime.newobject (728 samples, 0.10%)</title><rect x="826.5" y="549" width="1.2" height="15.0" fill="rgb(220,70,20)" rx="2" ry="2" />
<text  x="829.50" y="559.5" ></text>
</g>
<g >
<title>runtime.assertI2I (93 samples, 0.01%)</title><rect x="723.6" y="613" width="0.1" height="15.0" fill="rgb(210,21,45)" rx="2" ry="2" />
<text  x="726.58" y="623.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb._Cfunc_lmdbgo_mdb_cursor_put2 (2,173 samples, 0.31%)</title><rect x="807.7" y="517" width="3.7" height="15.0" fill="rgb(226,134,49)" rx="2" ry="2" />
<text  x="810.72" y="527.5" ></text>
</g>
<g >
<title>sort.Stable (764 samples, 0.11%)</title><rect x="142.9" y="645" width="1.2" height="15.0" fill="rgb(227,10,7)" rx="2" ry="2" />
<text  x="145.85" y="655.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).Get (164 samples, 0.02%)</title><rect x="464.8" y="469" width="0.3" height="15.0" fill="rgb(206,187,5)" rx="2" ry="2" />
<text  x="467.83" y="479.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find.func1 (1,105 samples, 0.16%)</title><rect x="437.2" y="325" width="1.9" height="15.0" fill="rgb(217,164,14)" rx="2" ry="2" />
<text  x="440.22" y="335.5" ></text>
</g>
<g >
<title>tg/p2p.SendItems (118 samples, 0.02%)</title><rect x="1188.0" y="869" width="0.2" height="15.0" fill="rgb(252,85,49)" rx="2" ry="2" />
<text  x="1190.97" y="879.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.(*roaringArray).getIndex (320 samples, 0.05%)</title><rect x="137.1" y="693" width="0.5" height="15.0" fill="rgb(249,196,12)" rx="2" ry="2" />
<text  x="140.10" y="703.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (142 samples, 0.02%)</title><rect x="910.1" y="421" width="0.2" height="15.0" fill="rgb(216,214,28)" rx="2" ry="2" />
<text  x="913.07" y="431.5" ></text>
</g>
<g >
<title>tg/core/vm.opCreate (74 samples, 0.01%)</title><rect x="410.0" y="533" width="0.1" height="15.0" fill="rgb(250,31,17)" rx="2" ry="2" />
<text  x="412.96" y="543.5" ></text>
</g>
<g >
<title>math/big.nat.make (182 samples, 0.03%)</title><rect x="235.1" y="677" width="0.3" height="15.0" fill="rgb(241,129,39)" rx="2" ry="2" />
<text  x="238.12" y="687.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).GetState (66 samples, 0.01%)</title><rect x="376.5" y="453" width="0.1" height="15.0" fill="rgb(217,49,19)" rx="2" ry="2" />
<text  x="379.48" y="463.5" ></text>
</g>
<g >
<title>runtime.mallocgc (219 samples, 0.03%)</title><rect x="210.4" y="341" width="0.3" height="15.0" fill="rgb(233,217,45)" rx="2" ry="2" />
<text  x="213.36" y="351.5" ></text>
</g>
<g >
<title>runtime.growslice (226 samples, 0.03%)</title><rect x="1096.3" y="549" width="0.4" height="15.0" fill="rgb(253,90,47)" rx="2" ry="2" />
<text  x="1099.31" y="559.5" ></text>
</g>
<g >
<title>runtime.mapaccess1_faststr (119 samples, 0.02%)</title><rect x="834.8" y="501" width="0.2" height="15.0" fill="rgb(224,60,1)" rx="2" ry="2" />
<text  x="837.79" y="511.5" ></text>
</g>
<g >
<title>bytes.Compare (124 samples, 0.02%)</title><rect x="1073.4" y="373" width="0.2" height="15.0" fill="rgb(240,21,2)" rx="2" ry="2" />
<text  x="1076.35" y="383.5" ></text>
</g>
<g >
<title>runtime/pprof.(*profileBuilder).addCPUData (77 samples, 0.01%)</title><rect x="127.2" y="853" width="0.1" height="15.0" fill="rgb(234,79,48)" rx="2" ry="2" />
<text  x="130.15" y="863.5" ></text>
</g>
<g >
<title>sort.swapRange (162 samples, 0.02%)</title><rect x="865.3" y="389" width="0.3" height="15.0" fill="rgb(209,45,22)" rx="2" ry="2" />
<text  x="868.28" y="399.5" ></text>
</g>
<g >
<title>tg/ethdb.(*mutation).Get (221 samples, 0.03%)</title><rect x="370.3" y="453" width="0.4" height="15.0" fill="rgb(238,96,11)" rx="2" ry="2" />
<text  x="373.34" y="463.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Env).BeginTxn (6,027 samples, 0.87%)</title><rect x="899.5" y="517" width="10.2" height="15.0" fill="rgb(247,200,53)" rx="2" ry="2" />
<text  x="902.49" y="527.5" ></text>
</g>
<g >
<title>tg/core/state.(*PlainStateReader).ReadAccountCodeSize (249 samples, 0.04%)</title><rect x="423.2" y="501" width="0.4" height="15.0" fill="rgb(217,117,28)" rx="2" ry="2" />
<text  x="426.21" y="511.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVMInterpreter).Run (436 samples, 0.06%)</title><rect x="480.1" y="357" width="0.7" height="15.0" fill="rgb(214,176,5)" rx="2" ry="2" />
<text  x="483.09" y="367.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.keccakF1600 (4,243 samples, 0.61%)</title><rect x="752.7" y="597" width="7.2" height="15.0" fill="rgb(220,94,14)" rx="2" ry="2" />
<text  x="755.71" y="607.5" ></text>
</g>
<g >
<title>tg/core/vm.run (60 samples, 0.01%)</title><rect x="484.5" y="53" width="0.1" height="15.0" fill="rgb(208,148,37)" rx="2" ry="2" />
<text  x="487.49" y="63.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*decRd).readn1 (146 samples, 0.02%)</title><rect x="969.3" y="501" width="0.3" height="15.0" fill="rgb(220,187,49)" rx="2" ry="2" />
<text  x="972.31" y="511.5" ></text>
</g>
<g >
<title>runtime.mapassign (546 samples, 0.08%)</title><rect x="698.4" y="613" width="1.0" height="15.0" fill="rgb(227,226,10)" rx="2" ry="2" />
<text  x="701.44" y="623.5" ></text>
</g>
<g >
<title>context.(*valueCtx).Value (280 samples, 0.04%)</title><rect x="720.9" y="645" width="0.5" height="15.0" fill="rgb(226,11,8)" rx="2" ry="2" />
<text  x="723.94" y="655.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find.func1 (70 samples, 0.01%)</title><rect x="666.1" y="501" width="0.1" height="15.0" fill="rgb(239,110,45)" rx="2" ry="2" />
<text  x="669.09" y="511.5" ></text>
</g>
<g >
<title>runtime.mallocgc (89 samples, 0.01%)</title><rect x="670.7" y="597" width="0.2" height="15.0" fill="rgb(222,97,30)" rx="2" ry="2" />
<text  x="673.72" y="607.5" ></text>
</g>
<g >
<title>bytes.Compare (87 samples, 0.01%)</title><rect x="402.7" y="261" width="0.1" height="15.0" fill="rgb(229,205,33)" rx="2" ry="2" />
<text  x="405.67" y="271.5" ></text>
</g>
<g >
<title>runtime.newobject (97 samples, 0.01%)</title><rect x="1079.8" y="565" width="0.1" height="15.0" fill="rgb(226,55,30)" rx="2" ry="2" />
<text  x="1082.77" y="575.5" ></text>
</g>
<g >
<title>sort.stable (5,727 samples, 0.82%)</title><rect x="1067.9" y="549" width="9.7" height="15.0" fill="rgb(220,195,19)" rx="2" ry="2" />
<text  x="1070.88" y="559.5" ></text>
</g>
<g >
<title>cmpbody (64 samples, 0.01%)</title><rect x="863.3" y="453" width="0.2" height="15.0" fill="rgb(213,28,12)" rx="2" ry="2" />
<text  x="866.35" y="463.5" ></text>
</g>
<g >
<title>tg/core/state.(*journal).append (74 samples, 0.01%)</title><rect x="404.5" y="421" width="0.2" height="15.0" fill="rgb(207,115,7)" rx="2" ry="2" />
<text  x="407.54" y="431.5" ></text>
</g>
<g >
<title>tg/eth/stagedsync.SpawnExecuteBlocksStage (342,368 samples, 49.27%)</title><rect x="233.5" y="741" width="581.4" height="15.0" fill="rgb(240,217,24)" rx="2" ry="2" />
<text  x="236.46" y="751.5" >tg/eth/stagedsync.SpawnExecuteBlocksStage</text>
</g>
<g >
<title>tg/core/vm.(*Memory).Set32 (655 samples, 0.09%)</title><rect x="506.3" y="517" width="1.2" height="15.0" fill="rgb(211,10,38)" rx="2" ry="2" />
<text  x="509.34" y="527.5" ></text>
</g>
<g >
<title>sort.symMerge (496 samples, 0.07%)</title><rect x="871.2" y="197" width="0.8" height="15.0" fill="rgb(230,138,42)" rx="2" ry="2" />
<text  x="874.17" y="207.5" ></text>
</g>
<g >
<title>tg/rlp.cachedDecoder (186 samples, 0.03%)</title><rect x="793.1" y="597" width="0.3" height="15.0" fill="rgb(243,55,2)" rx="2" ry="2" />
<text  x="796.13" y="607.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).getVal1.func1 (1,397 samples, 0.20%)</title><rect x="289.8" y="501" width="2.4" height="15.0" fill="rgb(218,131,28)" rx="2" ry="2" />
<text  x="292.83" y="511.5" ></text>
</g>
<g >
<title>tg/common/etl.loadFilesIntoBucket.func1 (473 samples, 0.07%)</title><rect x="1057.1" y="597" width="0.8" height="15.0" fill="rgb(245,225,31)" rx="2" ry="2" />
<text  x="1060.08" y="607.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (177 samples, 0.03%)</title><rect x="162.7" y="469" width="0.3" height="15.0" fill="rgb(211,30,3)" rx="2" ry="2" />
<text  x="165.69" y="479.5" ></text>
</g>
<g >
<title>runtime.markBits.isMarked (4,917 samples, 0.71%)</title><rect x="80.1" y="789" width="8.3" height="15.0" fill="rgb(249,179,49)" rx="2" ry="2" />
<text  x="83.07" y="799.5" ></text>
</g>
<g >
<title>tg/core/vm.opDiv (110 samples, 0.02%)</title><rect x="396.0" y="469" width="0.2" height="15.0" fill="rgb(254,175,16)" rx="2" ry="2" />
<text  x="399.01" y="479.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.(*state).Read (75 samples, 0.01%)</title><rect x="1029.8" y="629" width="0.1" height="15.0" fill="rgb(206,65,27)" rx="2" ry="2" />
<text  x="1032.75" y="639.5" ></text>
</g>
<g >
<title>runtime.newobject (153 samples, 0.02%)</title><rect x="329.5" y="581" width="0.3" height="15.0" fill="rgb(224,79,21)" rx="2" ry="2" />
<text  x="332.54" y="591.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find (1,662 samples, 0.24%)</title><rect x="673.0" y="533" width="2.8" height="15.0" fill="rgb(242,18,25)" rx="2" ry="2" />
<text  x="676.01" y="543.5" ></text>
</g>
<g >
<title>runtime.mallocgc (72 samples, 0.01%)</title><rect x="1049.1" y="597" width="0.1" height="15.0" fill="rgb(237,121,49)" rx="2" ry="2" />
<text  x="1052.13" y="607.5" ></text>
</g>
<g >
<title>tg/crypto/bn256/cloudflare.(*gfP2).Mul (116 samples, 0.02%)</title><rect x="502.0" y="245" width="0.1" height="15.0" fill="rgb(218,62,29)" rx="2" ry="2" />
<text  x="504.95" y="255.5" ></text>
</g>
<g >
<title>runtime.mallocgc (328 samples, 0.05%)</title><rect x="690.7" y="613" width="0.5" height="15.0" fill="rgb(226,203,33)" rx="2" ry="2" />
<text  x="693.66" y="623.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.(*state).Write (130 samples, 0.02%)</title><rect x="891.6" y="533" width="0.2" height="15.0" fill="rgb(254,9,50)" rx="2" ry="2" />
<text  x="894.61" y="543.5" ></text>
</g>
<g >
<title>reflect.typedmemmove (97 samples, 0.01%)</title><rect x="210.2" y="357" width="0.1" height="15.0" fill="rgb(225,109,51)" rx="2" ry="2" />
<text  x="213.15" y="367.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.(*runContainer16).iand (227 samples, 0.03%)</title><rect x="1052.5" y="581" width="0.4" height="15.0" fill="rgb(212,154,29)" rx="2" ry="2" />
<text  x="1055.52" y="591.5" ></text>
</g>
<g >
<title>tg/rlp.cachedWriter (162 samples, 0.02%)</title><rect x="747.5" y="565" width="0.3" height="15.0" fill="rgb(227,35,7)" rx="2" ry="2" />
<text  x="750.55" y="575.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).StaticCall (111 samples, 0.02%)</title><rect x="604.2" y="325" width="0.2" height="15.0" fill="rgb(247,83,14)" rx="2" ry="2" />
<text  x="607.19" y="335.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (409 samples, 0.06%)</title><rect x="323.1" y="469" width="0.7" height="15.0" fill="rgb(227,133,16)" rx="2" ry="2" />
<text  x="326.13" y="479.5" ></text>
</g>
<g >
<title>aeshashbody (163 samples, 0.02%)</title><rect x="862.2" y="501" width="0.3" height="15.0" fill="rgb(211,185,51)" rx="2" ry="2" />
<text  x="865.19" y="511.5" ></text>
</g>
<g >
<title>reflect.Value.Field (75 samples, 0.01%)</title><rect x="198.7" y="373" width="0.1" height="15.0" fill="rgb(221,178,40)" rx="2" ry="2" />
<text  x="201.68" y="383.5" ></text>
</g>
<g >
<title>runtime.makeslice (68 samples, 0.01%)</title><rect x="1081.3" y="613" width="0.1" height="15.0" fill="rgb(220,124,51)" rx="2" ry="2" />
<text  x="1084.32" y="623.5" ></text>
</g>
<g >
<title>bytes.Compare (179 samples, 0.03%)</title><rect x="1087.5" y="645" width="0.3" height="15.0" fill="rgb(245,144,20)" rx="2" ry="2" />
<text  x="1090.49" y="655.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVMInterpreter).Run (184 samples, 0.03%)</title><rect x="609.1" y="357" width="0.4" height="15.0" fill="rgb(219,211,13)" rx="2" ry="2" />
<text  x="612.15" y="367.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.fastpathT.DecSliceBytesY (1,894 samples, 0.27%)</title><rect x="968.8" y="549" width="3.2" height="15.0" fill="rgb(211,211,29)" rx="2" ry="2" />
<text  x="971.81" y="559.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).getVal1 (74 samples, 0.01%)</title><rect x="321.4" y="469" width="0.1" height="15.0" fill="rgb(224,22,50)" rx="2" ry="2" />
<text  x="324.40" y="479.5" ></text>
</g>
<g >
<title>tg/ethdb.(*mutation).Put (11,544 samples, 1.66%)</title><rect x="671.8" y="645" width="19.6" height="15.0" fill="rgb(236,80,24)" rx="2" ry="2" />
<text  x="674.83" y="655.5" ></text>
</g>
<g >
<title>tg/common/etl.Heap.Less (86 samples, 0.01%)</title><rect x="815.6" y="613" width="0.2" height="15.0" fill="rgb(213,116,32)" rx="2" ry="2" />
<text  x="818.63" y="623.5" ></text>
</g>
<g >
<title>runtime.mallocgc (136 samples, 0.02%)</title><rect x="932.5" y="437" width="0.2" height="15.0" fill="rgb(206,45,6)" rx="2" ry="2" />
<text  x="935.52" y="447.5" ></text>
</g>
<g >
<title>reflect.(*rtype).typeOff (74 samples, 0.01%)</title><rect x="789.2" y="485" width="0.1" height="15.0" fill="rgb(205,37,26)" rx="2" ry="2" />
<text  x="792.19" y="495.5" ></text>
</g>
<g >
<title>runtime.cgocall (490 samples, 0.07%)</title><rect x="1128.8" y="709" width="0.9" height="15.0" fill="rgb(246,63,53)" rx="2" ry="2" />
<text  x="1131.83" y="719.5" ></text>
</g>
<g >
<title>runtime.memmove (71 samples, 0.01%)</title><rect x="1041.4" y="597" width="0.1" height="15.0" fill="rgb(253,180,48)" rx="2" ry="2" />
<text  x="1044.39" y="607.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find.func1 (76 samples, 0.01%)</title><rect x="320.7" y="389" width="0.1" height="15.0" fill="rgb(234,136,30)" rx="2" ry="2" />
<text  x="323.71" y="399.5" ></text>
</g>
<g >
<title>runtime.cgocall (244 samples, 0.04%)</title><rect x="818.7" y="501" width="0.4" height="15.0" fill="rgb(244,42,36)" rx="2" ry="2" />
<text  x="821.70" y="511.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*BTree).Get (63 samples, 0.01%)</title><rect x="460.1" y="485" width="0.1" height="15.0" fill="rgb(226,87,5)" rx="2" ry="2" />
<text  x="463.13" y="495.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (281 samples, 0.04%)</title><rect x="418.9" y="341" width="0.4" height="15.0" fill="rgb(209,200,28)" rx="2" ry="2" />
<text  x="421.86" y="351.5" ></text>
</g>
<g >
<title>tg/eth/stagedsync.promoteLogIndex (18,495 samples, 2.66%)</title><rect x="135.1" y="725" width="31.5" height="15.0" fill="rgb(214,142,31)" rx="2" ry="2" />
<text  x="138.14" y="735.5" >tg..</text>
</g>
<g >
<title>runtime.newobject (96 samples, 0.01%)</title><rect x="1186.0" y="501" width="0.2" height="15.0" fill="rgb(222,5,14)" rx="2" ry="2" />
<text  x="1189.01" y="511.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (172 samples, 0.02%)</title><rect x="286.4" y="549" width="0.3" height="15.0" fill="rgb(205,104,42)" rx="2" ry="2" />
<text  x="289.43" y="559.5" ></text>
</g>
<g >
<title>tg/ethdb.(*MutationItem).Less (170 samples, 0.02%)</title><rect x="439.8" y="325" width="0.3" height="15.0" fill="rgb(236,99,35)" rx="2" ry="2" />
<text  x="442.76" y="335.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (78 samples, 0.01%)</title><rect x="876.1" y="437" width="0.1" height="15.0" fill="rgb(234,105,40)" rx="2" ry="2" />
<text  x="879.10" y="447.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb._Cfunc_lmdbgo_mdb_cursor_put2 (346 samples, 0.05%)</title><rect x="157.6" y="517" width="0.6" height="15.0" fill="rgb(216,93,5)" rx="2" ry="2" />
<text  x="160.62" y="527.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).DelegateCall (441 samples, 0.06%)</title><rect x="415.9" y="453" width="0.8" height="15.0" fill="rgb(247,184,6)" rx="2" ry="2" />
<text  x="418.94" y="463.5" ></text>
</g>
<g >
<title>cmpbody (120 samples, 0.02%)</title><rect x="990.7" y="325" width="0.2" height="15.0" fill="rgb(227,49,12)" rx="2" ry="2" />
<text  x="993.72" y="335.5" ></text>
</g>
<g >
<title>tg/ethdb.(*LmdbCursor).getBothRange (9,536 samples, 1.37%)</title><rect x="911.6" y="517" width="16.2" height="15.0" fill="rgb(205,16,48)" rx="2" ry="2" />
<text  x="914.63" y="527.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (363 samples, 0.05%)</title><rect x="767.7" y="533" width="0.6" height="15.0" fill="rgb(253,19,5)" rx="2" ry="2" />
<text  x="770.66" y="543.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVMInterpreter).Run (336 samples, 0.05%)</title><rect x="608.9" y="421" width="0.6" height="15.0" fill="rgb(230,133,33)" rx="2" ry="2" />
<text  x="611.92" y="431.5" ></text>
</g>
<g >
<title>runtime.typedmemmove (70 samples, 0.01%)</title><rect x="210.2" y="341" width="0.1" height="15.0" fill="rgb(236,56,50)" rx="2" ry="2" />
<text  x="213.20" y="351.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).GetCodeSize (141 samples, 0.02%)</title><rect x="387.8" y="389" width="0.2" height="15.0" fill="rgb(209,129,36)" rx="2" ry="2" />
<text  x="390.79" y="399.5" ></text>
</g>
<g >
<title>tg/ethdb.(*LmdbKV).View (22,523 samples, 3.24%)</title><rect x="176.5" y="661" width="38.3" height="15.0" fill="rgb(224,72,30)" rx="2" ry="2" />
<text  x="179.54" y="671.5" >tg/..</text>
</g>
<g >
<title>tg/core/state.(*stateObject).GetState (185 samples, 0.03%)</title><rect x="501.2" y="437" width="0.3" height="15.0" fill="rgb(237,22,44)" rx="2" ry="2" />
<text  x="504.15" y="447.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*ioDecReader).reset (155 samples, 0.02%)</title><rect x="967.9" y="629" width="0.3" height="15.0" fill="rgb(247,30,11)" rx="2" ry="2" />
<text  x="970.93" y="639.5" ></text>
</g>
<g >
<title>tg/crypto/secp256k1.RecoverPubkey (1,394 samples, 0.20%)</title><rect x="598.6" y="533" width="2.3" height="15.0" fill="rgb(218,176,39)" rx="2" ry="2" />
<text  x="601.58" y="543.5" ></text>
</g>
<g >
<title>tg/core/rawdb.ReadHeaderRLP (438 samples, 0.06%)</title><rect x="230.9" y="709" width="0.8" height="15.0" fill="rgb(206,16,44)" rx="2" ry="2" />
<text  x="233.95" y="719.5" ></text>
</g>
<g >
<title>tg/ethdb/cbor.Unmarshal (2,947 samples, 0.42%)</title><rect x="161.5" y="709" width="5.1" height="15.0" fill="rgb(208,86,23)" rx="2" ry="2" />
<text  x="164.55" y="719.5" ></text>
</g>
<g >
<title>tg/rlp.(*Stream).Bytes (644 samples, 0.09%)</title><rect x="217.9" y="389" width="1.1" height="15.0" fill="rgb(214,185,30)" rx="2" ry="2" />
<text  x="220.91" y="399.5" ></text>
</g>
<g >
<title>tg/core/state.originalAccountData (334 samples, 0.05%)</title><rect x="670.6" y="629" width="0.6" height="15.0" fill="rgb(245,7,30)" rx="2" ry="2" />
<text  x="673.62" y="639.5" ></text>
</g>
<g >
<title>sort.Search (63 samples, 0.01%)</title><rect x="323.2" y="389" width="0.1" height="15.0" fill="rgb(250,83,46)" rx="2" ry="2" />
<text  x="326.18" y="399.5" ></text>
</g>
<g >
<title>tg/common.HashData (9,236 samples, 1.33%)</title><rect x="996.6" y="581" width="15.7" height="15.0" fill="rgb(254,162,30)" rx="2" ry="2" />
<text  x="999.59" y="591.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).Put.func1 (212 samples, 0.03%)</title><rect x="960.6" y="597" width="0.4" height="15.0" fill="rgb(240,78,38)" rx="2" ry="2" />
<text  x="963.65" y="607.5" ></text>
</g>
<g >
<title>tg/rlp.cachedWriter (170 samples, 0.02%)</title><rect x="1125.6" y="645" width="0.3" height="15.0" fill="rgb(225,183,7)" rx="2" ry="2" />
<text  x="1128.61" y="655.5" ></text>
</g>
<g >
<title>tg/common/etl.(*sortableBuffer).Swap (93 samples, 0.01%)</title><rect x="1072.1" y="389" width="0.2" height="15.0" fill="rgb(240,124,24)" rx="2" ry="2" />
<text  x="1075.12" y="399.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (204 samples, 0.03%)</title><rect x="260.5" y="485" width="0.4" height="15.0" fill="rgb(253,226,10)" rx="2" ry="2" />
<text  x="263.55" y="495.5" ></text>
</g>
<g >
<title>tg/ethdb.(*LmdbCursor).putNoOverwrite (80 samples, 0.01%)</title><rect x="814.7" y="581" width="0.1" height="15.0" fill="rgb(236,207,26)" rx="2" ry="2" />
<text  x="817.70" y="591.5" ></text>
</g>
<g >
<title>tg/rlp.makePtrWriter.func1 (162 samples, 0.02%)</title><rect x="1130.3" y="757" width="0.3" height="15.0" fill="rgb(232,144,18)" rx="2" ry="2" />
<text  x="1133.29" y="767.5" ></text>
</g>
<g >
<title>runtime.newobject (146 samples, 0.02%)</title><rect x="196.4" y="533" width="0.3" height="15.0" fill="rgb(209,126,41)" rx="2" ry="2" />
<text  x="199.42" y="543.5" ></text>
</g>
<g >
<title>runtime.newobject (98 samples, 0.01%)</title><rect x="170.7" y="613" width="0.1" height="15.0" fill="rgb(237,223,10)" rx="2" ry="2" />
<text  x="173.66" y="623.5" ></text>
</g>
<g >
<title>tg/common/etl.Transform (84,603 samples, 12.18%)</title><rect x="814.9" y="693" width="143.7" height="15.0" fill="rgb(212,127,27)" rx="2" ry="2" />
<text  x="817.90" y="703.5" >tg/common/etl.Tran..</text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*bufioEncWriter).writestr (969 samples, 0.14%)</title><rect x="873.4" y="405" width="1.7" height="15.0" fill="rgb(205,178,33)" rx="2" ry="2" />
<text  x="876.41" y="415.5" ></text>
</g>
<g >
<title>tg/rlp.(*encbuf).encode (1,829 samples, 0.26%)</title><rect x="224.9" y="581" width="3.1" height="15.0" fill="rgb(240,32,13)" rx="2" ry="2" />
<text  x="227.93" y="591.5" ></text>
</g>
<g >
<title>runtime.cgocall (274 samples, 0.04%)</title><rect x="1127.8" y="613" width="0.4" height="15.0" fill="rgb(250,187,37)" rx="2" ry="2" />
<text  x="1130.77" y="623.5" ></text>
</g>
<g >
<title>runtime.mProf_FlushLocked (1,158 samples, 0.17%)</title><rect x="34.7" y="805" width="2.0" height="15.0" fill="rgb(229,115,14)" rx="2" ry="2" />
<text  x="37.74" y="815.5" ></text>
</g>
<g >
<title>tg/ethdb.(*LmdbKV).Update (337 samples, 0.05%)</title><rect x="1188.8" y="821" width="0.6" height="15.0" fill="rgb(245,58,17)" rx="2" ry="2" />
<text  x="1191.83" y="831.5" ></text>
</g>
<g >
<title>runtime.cgocall (7,780 samples, 1.12%)</title><rect x="835.1" y="453" width="13.2" height="15.0" fill="rgb(225,123,43)" rx="2" ry="2" />
<text  x="838.09" y="463.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*cborDecDriver).ContainerType (63 samples, 0.01%)</title><rect x="817.2" y="517" width="0.1" height="15.0" fill="rgb(253,76,35)" rx="2" ry="2" />
<text  x="820.17" y="527.5" ></text>
</g>
<g >
<title>sort.Search (838 samples, 0.12%)</title><rect x="579.7" y="437" width="1.4" height="15.0" fill="rgb(229,176,54)" rx="2" ry="2" />
<text  x="582.68" y="447.5" ></text>
</g>
<g >
<title>tg/rlp.(*Stream).Kind (61 samples, 0.01%)</title><rect x="788.7" y="485" width="0.1" height="15.0" fill="rgb(229,149,47)" rx="2" ry="2" />
<text  x="791.72" y="495.5" ></text>
</g>
<g >
<title>cmpbody (75 samples, 0.01%)</title><rect x="258.1" y="469" width="0.2" height="15.0" fill="rgb(213,159,31)" rx="2" ry="2" />
<text  x="261.13" y="479.5" ></text>
</g>
<g >
<title>sort.swapRange (191 samples, 0.03%)</title><rect x="987.4" y="453" width="0.3" height="15.0" fill="rgb(237,129,6)" rx="2" ry="2" />
<text  x="990.42" y="463.5" ></text>
</g>
<g >
<title>tg/rlp.makeByteArrayWriter.func1 (138 samples, 0.02%)</title><rect x="211.0" y="389" width="0.2" height="15.0" fill="rgb(238,112,54)" rx="2" ry="2" />
<text  x="213.96" y="399.5" ></text>
</g>
<g >
<title>tg/core/vm.opSload (67 samples, 0.01%)</title><rect x="420.3" y="405" width="0.1" height="15.0" fill="rgb(214,217,4)" rx="2" ry="2" />
<text  x="423.26" y="415.5" ></text>
</g>
<g >
<title>runtime.mallocgc (626 samples, 0.09%)</title><rect x="625.0" y="629" width="1.0" height="15.0" fill="rgb(209,205,3)" rx="2" ry="2" />
<text  x="627.97" y="639.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (61 samples, 0.01%)</title><rect x="631.7" y="517" width="0.1" height="15.0" fill="rgb(237,15,37)" rx="2" ry="2" />
<text  x="634.70" y="527.5" ></text>
</g>
<g >
<title>tg/common/etl.(*sortableBuffer).Sort (200 samples, 0.03%)</title><rect x="1040.2" y="581" width="0.3" height="15.0" fill="rgb(237,118,39)" rx="2" ry="2" />
<text  x="1043.19" y="591.5" ></text>
</g>
<g >
<title>github.com/holiman/uint256.(*Int).Div (529 samples, 0.08%)</title><rect x="520.5" y="581" width="0.9" height="15.0" fill="rgb(237,35,32)" rx="2" ry="2" />
<text  x="523.53" y="591.5" ></text>
</g>
<g >
<title>runtime.newobject (105 samples, 0.02%)</title><rect x="1095.7" y="613" width="0.2" height="15.0" fill="rgb(211,193,54)" rx="2" ry="2" />
<text  x="1098.67" y="623.5" ></text>
</g>
<g >
<title>sort.Search (116 samples, 0.02%)</title><rect x="419.0" y="277" width="0.2" height="15.0" fill="rgb(219,69,41)" rx="2" ry="2" />
<text  x="422.02" y="287.5" ></text>
</g>
<g >
<title>tg/rlp.makeByteArrayWriter.func1 (180 samples, 0.03%)</title><rect x="1124.0" y="581" width="0.3" height="15.0" fill="rgb(211,65,0)" rx="2" ry="2" />
<text  x="1127.02" y="591.5" ></text>
</g>
<g >
<title>tg/core/vm.opSstore (860 samples, 0.12%)</title><rect x="444.4" y="533" width="1.5" height="15.0" fill="rgb(212,99,24)" rx="2" ry="2" />
<text  x="447.41" y="543.5" ></text>
</g>
<g >
<title>tg/rlp.decodeByteSlice (359 samples, 0.05%)</title><rect x="788.3" y="517" width="0.7" height="15.0" fill="rgb(229,194,41)" rx="2" ry="2" />
<text  x="791.35" y="527.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).Get (79 samples, 0.01%)</title><rect x="340.5" y="469" width="0.1" height="15.0" fill="rgb(205,198,36)" rx="2" ry="2" />
<text  x="343.50" y="479.5" ></text>
</g>
<g >
<title>os.(*File).read (169 samples, 0.02%)</title><rect x="970.5" y="437" width="0.3" height="15.0" fill="rgb(216,130,30)" rx="2" ry="2" />
<text  x="973.47" y="447.5" ></text>
</g>
<g >
<title>runtime.mallocgc (205 samples, 0.03%)</title><rect x="1051.8" y="565" width="0.3" height="15.0" fill="rgb(250,178,20)" rx="2" ry="2" />
<text  x="1054.80" y="575.5" ></text>
</g>
<g >
<title>tg/core/vm.makeDup.func1 (1,227 samples, 0.18%)</title><rect x="327.1" y="597" width="2.0" height="15.0" fill="rgb(214,117,38)" rx="2" ry="2" />
<text  x="330.06" y="607.5" ></text>
</g>
<g >
<title>tg/core/state.(*stateObject).GetState (187 samples, 0.03%)</title><rect x="362.5" y="501" width="0.4" height="15.0" fill="rgb(222,22,22)" rx="2" ry="2" />
<text  x="365.54" y="511.5" ></text>
</g>
<g >
<title>cmpbody (94 samples, 0.01%)</title><rect x="989.9" y="357" width="0.1" height="15.0" fill="rgb(224,174,43)" rx="2" ry="2" />
<text  x="992.87" y="367.5" ></text>
</g>
<g >
<title>runtime.mallocgc (126 samples, 0.02%)</title><rect x="196.4" y="517" width="0.2" height="15.0" fill="rgb(233,71,51)" rx="2" ry="2" />
<text  x="199.44" y="527.5" ></text>
</g>
<g >
<title>tg/core/vm.opCall (159 samples, 0.02%)</title><rect x="416.1" y="405" width="0.3" height="15.0" fill="rgb(237,135,17)" rx="2" ry="2" />
<text  x="419.11" y="415.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (198 samples, 0.03%)</title><rect x="1181.4" y="549" width="0.3" height="15.0" fill="rgb(239,184,10)" rx="2" ry="2" />
<text  x="1184.40" y="559.5" ></text>
</g>
<g >
<title>runtime.(*mheap).allocSpan (66 samples, 0.01%)</title><rect x="662.1" y="501" width="0.1" height="15.0" fill="rgb(244,57,31)" rx="2" ry="2" />
<text  x="665.07" y="511.5" ></text>
</g>
<g >
<title>tg/core/rawdb.ReadTransactions.func1 (3,418 samples, 0.49%)</title><rect x="215.2" y="533" width="5.8" height="15.0" fill="rgb(240,135,28)" rx="2" ry="2" />
<text  x="218.18" y="543.5" ></text>
</g>
<g >
<title>runtime.stopm (161 samples, 0.02%)</title><rect x="122.3" y="805" width="0.2" height="15.0" fill="rgb(248,93,27)" rx="2" ry="2" />
<text  x="125.26" y="815.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb._Cfunc_lmdbgo_mdb_cursor_get1 (95 samples, 0.01%)</title><rect x="370.5" y="357" width="0.2" height="15.0" fill="rgb(209,197,15)" rx="2" ry="2" />
<text  x="373.52" y="367.5" ></text>
</g>
<g >
<title>runtime.memhash_varlen (109 samples, 0.02%)</title><rect x="556.4" y="533" width="0.2" height="15.0" fill="rgb(222,161,15)" rx="2" ry="2" />
<text  x="559.39" y="543.5" ></text>
</g>
<g >
<title>tg/core/vm.run (32,460 samples, 4.67%)</title><rect x="465.2" y="565" width="55.2" height="15.0" fill="rgb(236,160,28)" rx="2" ry="2" />
<text  x="468.25" y="575.5" >tg/co..</text>
</g>
<g >
<title>runtime.(*gQueue).pushBack (70 samples, 0.01%)</title><rect x="96.2" y="837" width="0.2" height="15.0" fill="rgb(208,165,27)" rx="2" ry="2" />
<text  x="99.24" y="847.5" ></text>
</g>
<g >
<title>tg/rlp.cachedDecoder (184 samples, 0.03%)</title><rect x="203.3" y="453" width="0.3" height="15.0" fill="rgb(247,186,50)" rx="2" ry="2" />
<text  x="206.29" y="463.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).StaticCall (1,064 samples, 0.15%)</title><rect x="501.9" y="389" width="1.8" height="15.0" fill="rgb(226,6,51)" rx="2" ry="2" />
<text  x="504.93" y="399.5" ></text>
</g>
<g >
<title>runtime.newarray (620 samples, 0.09%)</title><rect x="560.3" y="485" width="1.0" height="15.0" fill="rgb(216,217,8)" rx="2" ry="2" />
<text  x="563.27" y="495.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.keccakF1600 (5,769 samples, 0.83%)</title><rect x="999.3" y="517" width="9.7" height="15.0" fill="rgb(251,85,19)" rx="2" ry="2" />
<text  x="1002.25" y="527.5" ></text>
</g>
<g >
<title>runtime.signalM (93 samples, 0.01%)</title><rect x="51.2" y="757" width="0.2" height="15.0" fill="rgb(242,65,24)" rx="2" ry="2" />
<text  x="54.23" y="767.5" ></text>
</g>
<g >
<title>runtime.convT2I (172 samples, 0.02%)</title><rect x="444.7" y="485" width="0.3" height="15.0" fill="rgb(205,192,13)" rx="2" ry="2" />
<text  x="447.71" y="495.5" ></text>
</g>
<g >
<title>runtime.mapassign_faststr (1,160 samples, 0.17%)</title><rect x="982.1" y="565" width="2.0" height="15.0" fill="rgb(239,70,25)" rx="2" ry="2" />
<text  x="985.08" y="575.5" ></text>
</g>
<g >
<title>tg/ethdb.Walk (4,998 samples, 0.72%)</title><rect x="786.1" y="645" width="8.5" height="15.0" fill="rgb(220,19,9)" rx="2" ry="2" />
<text  x="789.14" y="655.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (184 samples, 0.03%)</title><rect x="504.2" y="405" width="0.3" height="15.0" fill="rgb(248,154,23)" rx="2" ry="2" />
<text  x="507.24" y="415.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb._Cfunc_lmdbgo_mdb_cursor_put2 (365 samples, 0.05%)</title><rect x="730.0" y="565" width="0.6" height="15.0" fill="rgb(235,222,15)" rx="2" ry="2" />
<text  x="733.00" y="575.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (80 samples, 0.01%)</title><rect x="597.4" y="437" width="0.2" height="15.0" fill="rgb(249,142,48)" rx="2" ry="2" />
<text  x="600.41" y="447.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (83 samples, 0.01%)</title><rect x="1067.6" y="485" width="0.1" height="15.0" fill="rgb(251,64,25)" rx="2" ry="2" />
<text  x="1070.59" y="495.5" ></text>
</g>
<g >
<title>runtime.cgocall (170 samples, 0.02%)</title><rect x="492.9" y="341" width="0.3" height="15.0" fill="rgb(247,174,39)" rx="2" ry="2" />
<text  x="495.90" y="351.5" ></text>
</g>
<g >
<title>runtime.unlock2 (94 samples, 0.01%)</title><rect x="1039.4" y="597" width="0.1" height="15.0" fill="rgb(246,130,30)" rx="2" ry="2" />
<text  x="1042.38" y="607.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*encWr).writestr (112 samples, 0.02%)</title><rect x="144.3" y="549" width="0.1" height="15.0" fill="rgb(208,205,19)" rx="2" ry="2" />
<text  x="147.26" y="559.5" ></text>
</g>
<g >
<title>sort.symMerge (2,097 samples, 0.30%)</title><rect x="1073.7" y="373" width="3.6" height="15.0" fill="rgb(252,195,18)" rx="2" ry="2" />
<text  x="1076.73" y="383.5" ></text>
</g>
<g >
<title>tg/ethdb.(*ObjectDatabase).Get (32,459 samples, 4.67%)</title><rect x="896.5" y="565" width="55.1" height="15.0" fill="rgb(211,213,34)" rx="2" ry="2" />
<text  x="899.51" y="575.5" >tg/et..</text>
</g>
<g >
<title>cmpbody (149 samples, 0.02%)</title><rect x="180.6" y="421" width="0.2" height="15.0" fill="rgb(247,151,54)" rx="2" ry="2" />
<text  x="183.57" y="431.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVMInterpreter).Run (431 samples, 0.06%)</title><rect x="416.0" y="421" width="0.7" height="15.0" fill="rgb(246,206,14)" rx="2" ry="2" />
<text  x="418.95" y="431.5" ></text>
</g>
<g >
<title>tg/crypto/bn256/cloudflare.miller (194 samples, 0.03%)</title><rect x="446.6" y="437" width="0.3" height="15.0" fill="rgb(248,128,28)" rx="2" ry="2" />
<text  x="449.58" y="447.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (81 samples, 0.01%)</title><rect x="293.3" y="517" width="0.2" height="15.0" fill="rgb(239,198,43)" rx="2" ry="2" />
<text  x="296.34" y="527.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVMInterpreter).Run (359 samples, 0.05%)</title><rect x="493.2" y="421" width="0.6" height="15.0" fill="rgb(249,197,20)" rx="2" ry="2" />
<text  x="496.19" y="431.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*BTree).ReplaceOrInsert (9,362 samples, 1.35%)</title><rect x="704.1" y="613" width="15.9" height="15.0" fill="rgb(214,93,14)" rx="2" ry="2" />
<text  x="707.10" y="623.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).getStateObject (1,033 samples, 0.15%)</title><rect x="498.5" y="437" width="1.8" height="15.0" fill="rgb(218,4,22)" rx="2" ry="2" />
<text  x="501.55" y="447.5" ></text>
</g>
<g >
<title>sort.Search (496 samples, 0.07%)</title><rect x="689.7" y="581" width="0.8" height="15.0" fill="rgb(241,157,20)" rx="2" ry="2" />
<text  x="692.71" y="591.5" ></text>
</g>
<g >
<title>tg/rlp.cachedTypeInfo (139 samples, 0.02%)</title><rect x="220.8" y="485" width="0.2" height="15.0" fill="rgb(249,150,11)" rx="2" ry="2" />
<text  x="223.75" y="495.5" ></text>
</g>
<g >
<title>tg/core/vm.run (158 samples, 0.02%)</title><rect x="393.7" y="245" width="0.2" height="15.0" fill="rgb(212,173,31)" rx="2" ry="2" />
<text  x="396.66" y="255.5" ></text>
</g>
<g >
<title>sort.quickSort_func (295 samples, 0.04%)</title><rect x="961.4" y="661" width="0.5" height="15.0" fill="rgb(206,85,19)" rx="2" ry="2" />
<text  x="964.38" y="671.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (160 samples, 0.02%)</title><rect x="519.8" y="501" width="0.2" height="15.0" fill="rgb(242,196,5)" rx="2" ry="2" />
<text  x="522.77" y="511.5" ></text>
</g>
<g >
<title>tg/common/etl.NewCollector.func2 (146 samples, 0.02%)</title><rect x="1030.8" y="613" width="0.3" height="15.0" fill="rgb(249,75,6)" rx="2" ry="2" />
<text  x="1033.83" y="623.5" ></text>
</g>
<g >
<title>runtime.mallocgc (78 samples, 0.01%)</title><rect x="1046.1" y="581" width="0.2" height="15.0" fill="rgb(250,43,0)" rx="2" ry="2" />
<text  x="1049.13" y="591.5" ></text>
</g>
<g >
<title>runtime.cgoCheckPointer (336 samples, 0.05%)</title><rect x="905.3" y="469" width="0.6" height="15.0" fill="rgb(227,75,16)" rx="2" ry="2" />
<text  x="908.34" y="479.5" ></text>
</g>
<g >
<title>tg/rlp.(*Stream).Bytes (76 samples, 0.01%)</title><rect x="232.8" y="405" width="0.2" height="15.0" fill="rgb(241,37,37)" rx="2" ry="2" />
<text  x="235.82" y="415.5" ></text>
</g>
<g >
<title>tg/common/etl.Transform (37,785 samples, 5.44%)</title><rect x="961.9" y="693" width="64.2" height="15.0" fill="rgb(250,182,18)" rx="2" ry="2" />
<text  x="964.89" y="703.5" >tg/comm..</text>
</g>
<g >
<title>github.com/google/btree.(*node).get (701 samples, 0.10%)</title><rect x="510.1" y="389" width="1.1" height="15.0" fill="rgb(214,122,20)" rx="2" ry="2" />
<text  x="513.06" y="399.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (87 samples, 0.01%)</title><rect x="1109.6" y="453" width="0.2" height="15.0" fill="rgb(214,200,9)" rx="2" ry="2" />
<text  x="1112.64" y="463.5" ></text>
</g>
<g >
<title>tg/core/vm.opSha3 (132 samples, 0.02%)</title><rect x="606.2" y="533" width="0.3" height="15.0" fill="rgb(218,225,51)" rx="2" ry="2" />
<text  x="609.24" y="543.5" ></text>
</g>
<g >
<title>runtime.newobject (87 samples, 0.01%)</title><rect x="526.8" y="533" width="0.2" height="15.0" fill="rgb(210,57,43)" rx="2" ry="2" />
<text  x="529.82" y="543.5" ></text>
</g>
<g >
<title>tg/core/vm.opCall (89 samples, 0.01%)</title><rect x="484.5" y="149" width="0.1" height="15.0" fill="rgb(251,56,44)" rx="2" ry="2" />
<text  x="487.47" y="159.5" ></text>
</g>
<g >
<title>runtime.mallocgc (85 samples, 0.01%)</title><rect x="1031.9" y="597" width="0.1" height="15.0" fill="rgb(248,166,34)" rx="2" ry="2" />
<text  x="1034.86" y="607.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).Put.func1 (82 samples, 0.01%)</title><rect x="723.4" y="581" width="0.1" height="15.0" fill="rgb(218,86,31)" rx="2" ry="2" />
<text  x="726.41" y="591.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find.func1 (342 samples, 0.05%)</title><rect x="581.4" y="437" width="0.6" height="15.0" fill="rgb(244,158,54)" rx="2" ry="2" />
<text  x="584.39" y="447.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.(*state).padAndPermute (370 samples, 0.05%)</title><rect x="508.8" y="501" width="0.6" height="15.0" fill="rgb(232,59,10)" rx="2" ry="2" />
<text  x="511.75" y="511.5" ></text>
</g>
<g >
<title>tg/core/vm.run (89 samples, 0.01%)</title><rect x="485.9" y="245" width="0.2" height="15.0" fill="rgb(242,137,22)" rx="2" ry="2" />
<text  x="488.92" y="255.5" ></text>
</g>
<g >
<title>runtime.runqempty (370 samples, 0.05%)</title><rect x="111.6" y="805" width="0.6" height="15.0" fill="rgb(234,194,46)" rx="2" ry="2" />
<text  x="114.58" y="815.5" ></text>
</g>
<g >
<title>tg/core/vm.opCall (151 samples, 0.02%)</title><rect x="484.4" y="213" width="0.3" height="15.0" fill="rgb(240,48,10)" rx="2" ry="2" />
<text  x="487.43" y="223.5" ></text>
</g>
<g >
<title>tg/rlp.makeStructWriter.func1 (1,477 samples, 0.21%)</title><rect x="225.3" y="469" width="2.5" height="15.0" fill="rgb(208,194,19)" rx="2" ry="2" />
<text  x="228.30" y="479.5" ></text>
</g>
<g >
<title>tg/core/vm.opStaticCall (590 samples, 0.08%)</title><rect x="515.0" y="405" width="1.0" height="15.0" fill="rgb(252,36,50)" rx="2" ry="2" />
<text  x="518.00" y="415.5" ></text>
</g>
<g >
<title>syscall.Read (507 samples, 0.07%)</title><rect x="1176.6" y="725" width="0.8" height="15.0" fill="rgb(254,166,6)" rx="2" ry="2" />
<text  x="1179.59" y="735.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).DelegateCall (63 samples, 0.01%)</title><rect x="493.4" y="389" width="0.1" height="15.0" fill="rgb(230,129,35)" rx="2" ry="2" />
<text  x="496.43" y="399.5" ></text>
</g>
<g >
<title>runtime.newobject (425 samples, 0.06%)</title><rect x="697.7" y="597" width="0.7" height="15.0" fill="rgb(246,41,32)" rx="2" ry="2" />
<text  x="700.69" y="607.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (299 samples, 0.04%)</title><rect x="389.9" y="277" width="0.5" height="15.0" fill="rgb(247,148,33)" rx="2" ry="2" />
<text  x="392.89" y="287.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).Call (90 samples, 0.01%)</title><rect x="485.9" y="261" width="0.2" height="15.0" fill="rgb(246,62,29)" rx="2" ry="2" />
<text  x="488.92" y="271.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (247 samples, 0.04%)</title><rect x="422.5" y="405" width="0.4" height="15.0" fill="rgb(249,75,27)" rx="2" ry="2" />
<text  x="425.48" y="415.5" ></text>
</g>
<g >
<title>tg/ethdb.(*mutation).Get (78 samples, 0.01%)</title><rect x="460.0" y="517" width="0.1" height="15.0" fill="rgb(208,105,35)" rx="2" ry="2" />
<text  x="462.99" y="527.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).insert (480 samples, 0.07%)</title><rect x="666.0" y="613" width="0.8" height="15.0" fill="rgb(248,193,6)" rx="2" ry="2" />
<text  x="669.02" y="623.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (80 samples, 0.01%)</title><rect x="1096.9" y="485" width="0.2" height="15.0" fill="rgb(233,111,36)" rx="2" ry="2" />
<text  x="1099.94" y="495.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).createObject (222 samples, 0.03%)</title><rect x="270.3" y="613" width="0.4" height="15.0" fill="rgb(221,160,17)" rx="2" ry="2" />
<text  x="273.30" y="623.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (67 samples, 0.01%)</title><rect x="504.8" y="405" width="0.1" height="15.0" fill="rgb(241,23,17)" rx="2" ry="2" />
<text  x="507.76" y="415.5" ></text>
</g>
<g >
<title>tg/core/vm.opDiv (672 samples, 0.10%)</title><rect x="520.4" y="597" width="1.1" height="15.0" fill="rgb(250,168,6)" rx="2" ry="2" />
<text  x="523.39" y="607.5" ></text>
</g>
<g >
<title>runtime.exitsyscallfast (90 samples, 0.01%)</title><rect x="831.0" y="421" width="0.1" height="15.0" fill="rgb(251,24,28)" rx="2" ry="2" />
<text  x="833.97" y="431.5" ></text>
</g>
<g >
<title>tg/core/vm.(*Contract).validJumpdest (441 samples, 0.06%)</title><rect x="424.7" y="517" width="0.7" height="15.0" fill="rgb(231,100,36)" rx="2" ry="2" />
<text  x="427.70" y="527.5" ></text>
</g>
<g >
<title>tg/core/state.(*stateObject).GetState (855 samples, 0.12%)</title><rect x="389.5" y="373" width="1.5" height="15.0" fill="rgb(236,129,39)" rx="2" ry="2" />
<text  x="392.54" y="383.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (646 samples, 0.09%)</title><rect x="621.5" y="565" width="1.1" height="15.0" fill="rgb(220,97,48)" rx="2" ry="2" />
<text  x="624.48" y="575.5" ></text>
</g>
<g >
<title>sort.swapRange (175 samples, 0.03%)</title><rect x="986.5" y="485" width="0.3" height="15.0" fill="rgb(240,98,39)" rx="2" ry="2" />
<text  x="989.54" y="495.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).Put (68 samples, 0.01%)</title><rect x="814.4" y="565" width="0.2" height="15.0" fill="rgb(220,80,40)" rx="2" ry="2" />
<text  x="817.44" y="575.5" ></text>
</g>
<g >
<title>runtime.cgocall (133 samples, 0.02%)</title><rect x="464.1" y="405" width="0.3" height="15.0" fill="rgb(233,146,2)" rx="2" ry="2" />
<text  x="467.14" y="415.5" ></text>
</g>
<g >
<title>tg/core/vm/stack.(*Stack).Push (60 samples, 0.01%)</title><rect x="517.7" y="469" width="0.1" height="15.0" fill="rgb(238,167,42)" rx="2" ry="2" />
<text  x="520.74" y="479.5" ></text>
</g>
<g >
<title>runtime.exitsyscall (125 samples, 0.02%)</title><rect x="1086.3" y="565" width="0.2" height="15.0" fill="rgb(230,90,15)" rx="2" ry="2" />
<text  x="1089.31" y="575.5" ></text>
</g>
<g >
<title>runtime.(*mspan).countAlloc (380 samples, 0.05%)</title><rect x="32.3" y="821" width="0.6" height="15.0" fill="rgb(234,9,25)" rx="2" ry="2" />
<text  x="35.27" y="831.5" ></text>
</g>
<g >
<title>tg/common/dbutils.PlainGenerateCompositeStorageKey (288 samples, 0.04%)</title><rect x="696.7" y="629" width="0.4" height="15.0" fill="rgb(246,170,27)" rx="2" ry="2" />
<text  x="699.66" y="639.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*BTree).Get (74 samples, 0.01%)</title><rect x="363.8" y="437" width="0.1" height="15.0" fill="rgb(212,216,44)" rx="2" ry="2" />
<text  x="366.76" y="447.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (65 samples, 0.01%)</title><rect x="934.9" y="453" width="0.1" height="15.0" fill="rgb(208,122,50)" rx="2" ry="2" />
<text  x="937.92" y="463.5" ></text>
</g>
<g >
<title>github.com/holiman/uint256.udivremKnuth (134 samples, 0.02%)</title><rect x="417.8" y="421" width="0.2" height="15.0" fill="rgb(242,91,53)" rx="2" ry="2" />
<text  x="420.81" y="431.5" ></text>
</g>
<g >
<title>runtime.growslice (180 samples, 0.03%)</title><rect x="974.7" y="597" width="0.3" height="15.0" fill="rgb(220,176,28)" rx="2" ry="2" />
<text  x="977.68" y="607.5" ></text>
</g>
<g >
<title>runtime.systemstack (93 samples, 0.01%)</title><rect x="985.1" y="517" width="0.1" height="15.0" fill="rgb(239,176,39)" rx="2" ry="2" />
<text  x="988.09" y="527.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (110 samples, 0.02%)</title><rect x="197.1" y="357" width="0.2" height="15.0" fill="rgb(207,219,29)" rx="2" ry="2" />
<text  x="200.09" y="367.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (61 samples, 0.01%)</title><rect x="1010.3" y="453" width="0.1" height="15.0" fill="rgb(236,9,48)" rx="2" ry="2" />
<text  x="1013.29" y="463.5" ></text>
</g>
<g >
<title>runtime.newobject (635 samples, 0.09%)</title><rect x="831.6" y="485" width="1.1" height="15.0" fill="rgb(247,53,40)" rx="2" ry="2" />
<text  x="834.62" y="495.5" ></text>
</g>
<g >
<title>sort.rotate (111 samples, 0.02%)</title><rect x="189.8" y="245" width="0.2" height="15.0" fill="rgb(239,156,48)" rx="2" ry="2" />
<text  x="192.81" y="255.5" ></text>
</g>
<g >
<title>sort.symMerge (232 samples, 0.03%)</title><rect x="871.6" y="181" width="0.4" height="15.0" fill="rgb(212,164,3)" rx="2" ry="2" />
<text  x="874.57" y="191.5" ></text>
</g>
<g >
<title>tg/rlp.decodeDecoder (3,461 samples, 0.50%)</title><rect x="787.2" y="581" width="5.8" height="15.0" fill="rgb(250,223,9)" rx="2" ry="2" />
<text  x="790.16" y="591.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (137 samples, 0.02%)</title><rect x="967.1" y="613" width="0.3" height="15.0" fill="rgb(244,174,7)" rx="2" ry="2" />
<text  x="970.12" y="623.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.keccakF1600 (92 samples, 0.01%)</title><rect x="1130.1" y="741" width="0.1" height="15.0" fill="rgb(209,76,5)" rx="2" ry="2" />
<text  x="1133.06" y="751.5" ></text>
</g>
<g >
<title>runtime.mallocgc (88 samples, 0.01%)</title><rect x="1050.8" y="533" width="0.1" height="15.0" fill="rgb(252,23,33)" rx="2" ry="2" />
<text  x="1053.78" y="543.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).Call (245 samples, 0.04%)</title><rect x="383.4" y="197" width="0.4" height="15.0" fill="rgb(209,221,22)" rx="2" ry="2" />
<text  x="386.41" y="207.5" ></text>
</g>
<g >
<title>runtime.makeslicecopy (153 samples, 0.02%)</title><rect x="163.5" y="501" width="0.3" height="15.0" fill="rgb(207,20,17)" rx="2" ry="2" />
<text  x="166.54" y="511.5" ></text>
</g>
<g >
<title>sort.Search (64 samples, 0.01%)</title><rect x="389.9" y="197" width="0.1" height="15.0" fill="rgb(254,81,17)" rx="2" ry="2" />
<text  x="392.93" y="207.5" ></text>
</g>
<g >
<title>runtime.mallocgc (345 samples, 0.05%)</title><rect x="995.9" y="565" width="0.6" height="15.0" fill="rgb(229,1,6)" rx="2" ry="2" />
<text  x="998.88" y="575.5" ></text>
</g>
<g >
<title>runtime.mallocgc (80 samples, 0.01%)</title><rect x="932.3" y="421" width="0.2" height="15.0" fill="rgb(239,64,52)" rx="2" ry="2" />
<text  x="935.33" y="431.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find.func1 (71 samples, 0.01%)</title><rect x="504.3" y="341" width="0.2" height="15.0" fill="rgb(240,215,38)" rx="2" ry="2" />
<text  x="507.33" y="351.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (101 samples, 0.01%)</title><rect x="33.7" y="789" width="0.2" height="15.0" fill="rgb(218,58,13)" rx="2" ry="2" />
<text  x="36.71" y="799.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.(*arrayContainer).getSizeInBytes (423 samples, 0.06%)</title><rect x="159.3" y="677" width="0.7" height="15.0" fill="rgb(229,131,34)" rx="2" ry="2" />
<text  x="162.33" y="687.5" ></text>
</g>
<g >
<title>tg/core/vm.(*Contract).GetByte (270 samples, 0.04%)</title><rect x="293.9" y="613" width="0.4" height="15.0" fill="rgb(249,213,34)" rx="2" ry="2" />
<text  x="296.85" y="623.5" ></text>
</g>
<g >
<title>tg/turbo/trie.(*RootHashAggregator).genStructStorage.func1 (165 samples, 0.02%)</title><rect x="1030.8" y="645" width="0.3" height="15.0" fill="rgb(245,43,14)" rx="2" ry="2" />
<text  x="1033.80" y="655.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).Call (1,186 samples, 0.17%)</title><rect x="382.9" y="325" width="2.0" height="15.0" fill="rgb(215,69,26)" rx="2" ry="2" />
<text  x="385.88" y="335.5" ></text>
</g>
<g >
<title>runtime.cgocall (1,703 samples, 0.25%)</title><rect x="828.2" y="453" width="2.9" height="15.0" fill="rgb(215,35,44)" rx="2" ry="2" />
<text  x="831.23" y="463.5" ></text>
</g>
<g >
<title>tg/core/state.(*stateObject).GetCommittedState (96 samples, 0.01%)</title><rect x="485.5" y="293" width="0.1" height="15.0" fill="rgb(228,39,28)" rx="2" ry="2" />
<text  x="488.46" y="303.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*decRd).readn1 (168 samples, 0.02%)</title><rect x="969.8" y="501" width="0.3" height="15.0" fill="rgb(206,180,16)" rx="2" ry="2" />
<text  x="972.81" y="511.5" ></text>
</g>
<g >
<title>runtime.mallocgc (600 samples, 0.09%)</title><rect x="560.3" y="469" width="1.0" height="15.0" fill="rgb(239,180,29)" rx="2" ry="2" />
<text  x="563.28" y="479.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (120 samples, 0.02%)</title><rect x="434.9" y="389" width="0.2" height="15.0" fill="rgb(216,13,48)" rx="2" ry="2" />
<text  x="437.87" y="399.5" ></text>
</g>
<g >
<title>tg/rlp.(*Stream).Bytes (711 samples, 0.10%)</title><rect x="789.9" y="485" width="1.2" height="15.0" fill="rgb(210,227,44)" rx="2" ry="2" />
<text  x="792.88" y="495.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.(*state).Read (376 samples, 0.05%)</title><rect x="508.7" y="517" width="0.7" height="15.0" fill="rgb(228,78,45)" rx="2" ry="2" />
<text  x="511.75" y="527.5" ></text>
</g>
<g >
<title>tg/rlp.Encode (75 samples, 0.01%)</title><rect x="1119.2" y="757" width="0.1" height="15.0" fill="rgb(252,126,21)" rx="2" ry="2" />
<text  x="1122.20" y="767.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).getVal0.func1 (118 samples, 0.02%)</title><rect x="1026.2" y="645" width="0.2" height="15.0" fill="rgb(222,200,49)" rx="2" ry="2" />
<text  x="1029.17" y="655.5" ></text>
</g>
<g >
<title>runtime.convTslice (135 samples, 0.02%)</title><rect x="761.7" y="645" width="0.3" height="15.0" fill="rgb(222,87,25)" rx="2" ry="2" />
<text  x="764.74" y="655.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (508 samples, 0.07%)</title><rect x="621.5" y="501" width="0.9" height="15.0" fill="rgb(246,63,10)" rx="2" ry="2" />
<text  x="624.54" y="511.5" ></text>
</g>
<g >
<title>tg/crypto/secp256k1.RecoverPubkeyWithContext (84 samples, 0.01%)</title><rect x="608.2" y="453" width="0.2" height="15.0" fill="rgb(206,71,13)" rx="2" ry="2" />
<text  x="611.24" y="463.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).CreateAccount (321 samples, 0.05%)</title><rect x="270.3" y="629" width="0.5" height="15.0" fill="rgb(232,193,1)" rx="2" ry="2" />
<text  x="273.27" y="639.5" ></text>
</g>
<g >
<title>runtime.lock2 (176 samples, 0.03%)</title><rect x="1011.0" y="517" width="0.3" height="15.0" fill="rgb(254,66,43)" rx="2" ry="2" />
<text  x="1013.99" y="527.5" ></text>
</g>
<g >
<title>sort.quickSort (85 samples, 0.01%)</title><rect x="1028.8" y="405" width="0.1" height="15.0" fill="rgb(242,37,16)" rx="2" ry="2" />
<text  x="1031.77" y="415.5" ></text>
</g>
<g >
<title>runtime.mapiterinit (375 samples, 0.05%)</title><rect x="694.2" y="645" width="0.6" height="15.0" fill="rgb(231,191,6)" rx="2" ry="2" />
<text  x="697.17" y="655.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (83 samples, 0.01%)</title><rect x="562.7" y="437" width="0.2" height="15.0" fill="rgb(245,55,7)" rx="2" ry="2" />
<text  x="565.74" y="447.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).Read (517 samples, 0.07%)</title><rect x="1176.6" y="757" width="0.8" height="15.0" fill="rgb(249,59,6)" rx="2" ry="2" />
<text  x="1179.57" y="767.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (219 samples, 0.03%)</title><rect x="561.8" y="437" width="0.4" height="15.0" fill="rgb(249,160,51)" rx="2" ry="2" />
<text  x="564.82" y="447.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (118 samples, 0.02%)</title><rect x="984.5" y="501" width="0.2" height="15.0" fill="rgb(233,127,3)" rx="2" ry="2" />
<text  x="987.48" y="511.5" ></text>
</g>
<g >
<title>runtime.mallocgc (68 samples, 0.01%)</title><rect x="1035.5" y="597" width="0.1" height="15.0" fill="rgb(206,208,30)" rx="2" ry="2" />
<text  x="1038.45" y="607.5" ></text>
</g>
<g >
<title>sort.Search (98 samples, 0.01%)</title><rect x="461.4" y="389" width="0.1" height="15.0" fill="rgb(215,60,19)" rx="2" ry="2" />
<text  x="464.36" y="399.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).DelegateCall (181 samples, 0.03%)</title><rect x="448.8" y="453" width="0.3" height="15.0" fill="rgb(230,108,44)" rx="2" ry="2" />
<text  x="451.79" y="463.5" ></text>
</g>
<g >
<title>reflect.typedmemmove (179 samples, 0.03%)</title><rect x="1109.1" y="485" width="0.3" height="15.0" fill="rgb(205,178,35)" rx="2" ry="2" />
<text  x="1112.08" y="495.5" ></text>
</g>
<g >
<title>tg/core/state.(*ChangeSetWriter).WriteAccountStorage (2,850 samples, 0.41%)</title><rect x="697.1" y="629" width="4.9" height="15.0" fill="rgb(234,119,9)" rx="2" ry="2" />
<text  x="700.15" y="639.5" ></text>
</g>
<g >
<title>sort.symMerge (4,072 samples, 0.59%)</title><rect x="987.3" y="485" width="6.9" height="15.0" fill="rgb(219,121,18)" rx="2" ry="2" />
<text  x="990.30" y="495.5" ></text>
</g>
<g >
<title>tg/core/vm.opMstore (655 samples, 0.09%)</title><rect x="506.3" y="533" width="1.2" height="15.0" fill="rgb(208,174,35)" rx="2" ry="2" />
<text  x="509.34" y="543.5" ></text>
</g>
<g >
<title>sort.doPivot (83 samples, 0.01%)</title><rect x="1028.2" y="453" width="0.2" height="15.0" fill="rgb(243,72,2)" rx="2" ry="2" />
<text  x="1031.22" y="463.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVMInterpreter).Run (831 samples, 0.12%)</title><rect x="478.6" y="357" width="1.4" height="15.0" fill="rgb(237,194,5)" rx="2" ry="2" />
<text  x="481.59" y="367.5" ></text>
</g>
<g >
<title>runtime.entersyscall (94 samples, 0.01%)</title><rect x="948.9" y="437" width="0.2" height="15.0" fill="rgb(231,125,48)" rx="2" ry="2" />
<text  x="951.92" y="447.5" ></text>
</g>
<g >
<title>runtime.makemap_small (167 samples, 0.02%)</title><rect x="643.7" y="661" width="0.3" height="15.0" fill="rgb(242,135,51)" rx="2" ry="2" />
<text  x="646.68" y="671.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (155 samples, 0.02%)</title><rect x="832.1" y="405" width="0.2" height="15.0" fill="rgb(219,141,10)" rx="2" ry="2" />
<text  x="835.07" y="415.5" ></text>
</g>
<g >
<title>tg/core/vm.run (221 samples, 0.03%)</title><rect x="414.4" y="309" width="0.3" height="15.0" fill="rgb(211,190,33)" rx="2" ry="2" />
<text  x="417.35" y="319.5" ></text>
</g>
<g >
<title>tg/core/vm.opCall (65 samples, 0.01%)</title><rect x="416.1" y="341" width="0.2" height="15.0" fill="rgb(228,211,44)" rx="2" ry="2" />
<text  x="419.15" y="351.5" ></text>
</g>
<g >
<title>tg/core/types.NewEIP155Signer (179 samples, 0.03%)</title><rect x="657.1" y="661" width="0.3" height="15.0" fill="rgb(212,53,21)" rx="2" ry="2" />
<text  x="660.10" y="671.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).GetCode (266 samples, 0.04%)</title><rect x="370.3" y="501" width="0.4" height="15.0" fill="rgb(247,32,42)" rx="2" ry="2" />
<text  x="373.26" y="511.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.(*state).permute (249 samples, 0.04%)</title><rect x="1113.7" y="645" width="0.4" height="15.0" fill="rgb(209,86,48)" rx="2" ry="2" />
<text  x="1116.67" y="655.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).Call (592 samples, 0.09%)</title><rect x="462.5" y="501" width="1.0" height="15.0" fill="rgb(228,59,19)" rx="2" ry="2" />
<text  x="465.48" y="511.5" ></text>
</g>
<g >
<title>runtime.mapaccess2 (81 samples, 0.01%)</title><rect x="322.6" y="549" width="0.1" height="15.0" fill="rgb(232,69,8)" rx="2" ry="2" />
<text  x="325.61" y="559.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.(*roaringArray).binarySearch (72 samples, 0.01%)</title><rect x="147.2" y="581" width="0.1" height="15.0" fill="rgb(243,188,53)" rx="2" ry="2" />
<text  x="150.16" y="591.5" ></text>
</g>
<g >
<title>tg/eth/downloader.(*Downloader).SpawnBodyDownloadStage.func3 (7,324 samples, 1.05%)</title><rect x="1106.9" y="853" width="12.5" height="15.0" fill="rgb(227,108,38)" rx="2" ry="2" />
<text  x="1109.93" y="863.5" ></text>
</g>
<g >
<title>aeshashbody (67 samples, 0.01%)</title><rect x="630.4" y="629" width="0.1" height="15.0" fill="rgb(239,181,3)" rx="2" ry="2" />
<text  x="633.41" y="639.5" ></text>
</g>
<g >
<title>tg/ethdb.(*LmdbKV).View (550 samples, 0.08%)</title><rect x="232.5" y="597" width="0.9" height="15.0" fill="rgb(212,75,42)" rx="2" ry="2" />
<text  x="235.52" y="607.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (184 samples, 0.03%)</title><rect x="317.6" y="501" width="0.4" height="15.0" fill="rgb(221,99,16)" rx="2" ry="2" />
<text  x="320.64" y="511.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find.func1 (145 samples, 0.02%)</title><rect x="289.3" y="469" width="0.2" height="15.0" fill="rgb(235,195,48)" rx="2" ry="2" />
<text  x="292.29" y="479.5" ></text>
</g>
<g >
<title>tg/rlp.(*Stream).Decode (246 samples, 0.04%)</title><rect x="232.6" y="469" width="0.5" height="15.0" fill="rgb(249,80,1)" rx="2" ry="2" />
<text  x="235.64" y="479.5" ></text>
</g>
<g >
<title>tg/core/vm.opDelegateCall (326 samples, 0.05%)</title><rect x="485.8" y="405" width="0.6" height="15.0" fill="rgb(223,213,1)" rx="2" ry="2" />
<text  x="488.83" y="415.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).getVal2.func1 (6,345 samples, 0.91%)</title><rect x="582.9" y="437" width="10.8" height="15.0" fill="rgb(246,50,48)" rx="2" ry="2" />
<text  x="585.93" y="447.5" ></text>
</g>
<g >
<title>runtime.typedmemmove (159 samples, 0.02%)</title><rect x="1109.1" y="469" width="0.3" height="15.0" fill="rgb(250,121,48)" rx="2" ry="2" />
<text  x="1112.12" y="479.5" ></text>
</g>
<g >
<title>tg/ethdb.(*MutationItem).Less (184 samples, 0.03%)</title><rect x="524.1" y="389" width="0.3" height="15.0" fill="rgb(236,113,24)" rx="2" ry="2" />
<text  x="527.07" y="399.5" ></text>
</g>
<g >
<title>tg/crypto/secp256k1.RecoverPubkey (170 samples, 0.02%)</title><rect x="492.9" y="405" width="0.3" height="15.0" fill="rgb(240,90,21)" rx="2" ry="2" />
<text  x="495.90" y="415.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find (73 samples, 0.01%)</title><rect x="499.9" y="341" width="0.1" height="15.0" fill="rgb(226,147,9)" rx="2" ry="2" />
<text  x="502.85" y="351.5" ></text>
</g>
<g >
<title>runtime.makeBucketArray (107 samples, 0.02%)</title><rect x="261.6" y="565" width="0.1" height="15.0" fill="rgb(243,105,38)" rx="2" ry="2" />
<text  x="264.56" y="575.5" ></text>
</g>
<g >
<title>runtime.write1 (98 samples, 0.01%)</title><rect x="120.2" y="789" width="0.1" height="15.0" fill="rgb(248,26,27)" rx="2" ry="2" />
<text  x="123.16" y="799.5" ></text>
</g>
<g >
<title>runtime.mapassign (362 samples, 0.05%)</title><rect x="261.2" y="597" width="0.6" height="15.0" fill="rgb(222,118,40)" rx="2" ry="2" />
<text  x="264.20" y="607.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*Encoder).encode (1,079 samples, 0.16%)</title><rect x="193.9" y="501" width="1.9" height="15.0" fill="rgb(225,10,14)" rx="2" ry="2" />
<text  x="196.93" y="511.5" ></text>
</g>
<g >
<title>runtime.futexsleep (172 samples, 0.02%)</title><rect x="123.1" y="757" width="0.3" height="15.0" fill="rgb(248,102,24)" rx="2" ry="2" />
<text  x="126.13" y="767.5" ></text>
</g>
<g >
<title>cmpbody (63 samples, 0.01%)</title><rect x="866.0" y="357" width="0.1" height="15.0" fill="rgb(248,1,30)" rx="2" ry="2" />
<text  x="868.98" y="367.5" ></text>
</g>
<g >
<title>runtime.gcBgMarkWorker (36,307 samples, 5.23%)</title><rect x="34.2" y="869" width="61.6" height="15.0" fill="rgb(251,190,15)" rx="2" ry="2" />
<text  x="37.18" y="879.5" >runtim..</text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (142 samples, 0.02%)</title><rect x="996.1" y="517" width="0.3" height="15.0" fill="rgb(225,115,14)" rx="2" ry="2" />
<text  x="999.13" y="527.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).GetState (1,664 samples, 0.24%)</title><rect x="509.5" y="517" width="2.8" height="15.0" fill="rgb(228,219,17)" rx="2" ry="2" />
<text  x="512.50" y="527.5" ></text>
</g>
<g >
<title>tg/rlp.(*Stream).Bytes (305 samples, 0.04%)</title><rect x="198.9" y="357" width="0.6" height="15.0" fill="rgb(220,80,7)" rx="2" ry="2" />
<text  x="201.94" y="367.5" ></text>
</g>
<g >
<title>sort.swapRange (351 samples, 0.05%)</title><rect x="179.9" y="437" width="0.6" height="15.0" fill="rgb(225,40,53)" rx="2" ry="2" />
<text  x="182.94" y="447.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (335 samples, 0.05%)</title><rect x="658.0" y="613" width="0.5" height="15.0" fill="rgb(253,108,29)" rx="2" ry="2" />
<text  x="660.98" y="623.5" ></text>
</g>
<g >
<title>tg/p2p.(*Peer).readLoop (2,633 samples, 0.38%)</title><rect x="1176.0" y="869" width="4.5" height="15.0" fill="rgb(223,195,48)" rx="2" ry="2" />
<text  x="1178.99" y="879.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb._Cfunc_mdb_cursor_get (855 samples, 0.12%)</title><rect x="1085.1" y="597" width="1.4" height="15.0" fill="rgb(214,81,37)" rx="2" ry="2" />
<text  x="1088.07" y="607.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).getVal2.func1 (825 samples, 0.12%)</title><rect x="798.2" y="517" width="1.4" height="15.0" fill="rgb(229,142,15)" rx="2" ry="2" />
<text  x="801.23" y="527.5" ></text>
</g>
<g >
<title>sort.symMerge (3,735 samples, 0.54%)</title><rect x="866.0" y="389" width="6.3" height="15.0" fill="rgb(218,24,25)" rx="2" ry="2" />
<text  x="868.95" y="399.5" ></text>
</g>
<g >
<title>tg/core/state.accountsEqual (173 samples, 0.02%)</title><rect x="670.3" y="629" width="0.3" height="15.0" fill="rgb(238,194,30)" rx="2" ry="2" />
<text  x="673.33" y="639.5" ></text>
</g>
<g >
<title>runtime.memmove (864 samples, 0.12%)</title><rect x="194.2" y="405" width="1.5" height="15.0" fill="rgb(216,141,31)" rx="2" ry="2" />
<text  x="197.24" y="415.5" ></text>
</g>
<g >
<title>cmpbody (180 samples, 0.03%)</title><rect x="702.6" y="453" width="0.3" height="15.0" fill="rgb(208,44,9)" rx="2" ry="2" />
<text  x="705.60" y="463.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*Encoder).Encode (1,427 samples, 0.21%)</title><rect x="783.1" y="677" width="2.4" height="15.0" fill="rgb(210,32,17)" rx="2" ry="2" />
<text  x="786.11" y="687.5" ></text>
</g>
<g >
<title>tg/core/vm.opDelegateCall (627 samples, 0.09%)</title><rect x="484.2" y="341" width="1.1" height="15.0" fill="rgb(206,126,34)" rx="2" ry="2" />
<text  x="487.19" y="351.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (224 samples, 0.03%)</title><rect x="778.8" y="565" width="0.4" height="15.0" fill="rgb(237,152,14)" rx="2" ry="2" />
<text  x="781.82" y="575.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (2,841 samples, 0.41%)</title><rect x="435.7" y="405" width="4.8" height="15.0" fill="rgb(218,102,33)" rx="2" ry="2" />
<text  x="438.71" y="415.5" ></text>
</g>
<g >
<title>sort.symMerge (190 samples, 0.03%)</title><rect x="143.8" y="453" width="0.3" height="15.0" fill="rgb(253,222,42)" rx="2" ry="2" />
<text  x="146.76" y="463.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (169 samples, 0.02%)</title><rect x="907.7" y="453" width="0.2" height="15.0" fill="rgb(251,166,41)" rx="2" ry="2" />
<text  x="910.66" y="463.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.(*roaringArray).insertNewKeyValueAt (216 samples, 0.03%)</title><rect x="138.0" y="709" width="0.4" height="15.0" fill="rgb(240,178,34)" rx="2" ry="2" />
<text  x="141.03" y="719.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.(*state).permute (4,441 samples, 0.64%)</title><rect x="647.7" y="597" width="7.5" height="15.0" fill="rgb(250,179,45)" rx="2" ry="2" />
<text  x="650.67" y="607.5" ></text>
</g>
<g >
<title>tg/core/vm.run (2,939 samples, 0.42%)</title><rect x="477.7" y="437" width="4.9" height="15.0" fill="rgb(230,13,18)" rx="2" ry="2" />
<text  x="480.65" y="447.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.NewBitmap (141 samples, 0.02%)</title><rect x="1090.6" y="661" width="0.2" height="15.0" fill="rgb(216,228,42)" rx="2" ry="2" />
<text  x="1093.57" y="671.5" ></text>
</g>
<g >
<title>reflect.typedslicecopy (77 samples, 0.01%)</title><rect x="1110.2" y="469" width="0.1" height="15.0" fill="rgb(219,17,37)" rx="2" ry="2" />
<text  x="1113.16" y="479.5" ></text>
</g>
<g >
<title>tg/core/vm.run (389 samples, 0.06%)</title><rect x="517.0" y="437" width="0.7" height="15.0" fill="rgb(239,204,48)" rx="2" ry="2" />
<text  x="520.02" y="447.5" ></text>
</g>
<g >
<title>runtime.makeslice (128 samples, 0.02%)</title><rect x="670.7" y="613" width="0.2" height="15.0" fill="rgb(215,7,41)" rx="2" ry="2" />
<text  x="673.70" y="623.5" ></text>
</g>
<g >
<title>tg/common/etl.NewCollector.func2 (469 samples, 0.07%)</title><rect x="823.9" y="565" width="0.8" height="15.0" fill="rgb(241,49,23)" rx="2" ry="2" />
<text  x="826.86" y="575.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring/roaring64.(*Bitmap).Or (468 samples, 0.07%)</title><rect x="1090.8" y="661" width="0.8" height="15.0" fill="rgb(246,98,20)" rx="2" ry="2" />
<text  x="1093.81" y="671.5" ></text>
</g>
<g >
<title>tg/common/etl.(*Collector).Load (5,883 samples, 0.85%)</title><rect x="166.6" y="693" width="9.9" height="15.0" fill="rgb(247,54,24)" rx="2" ry="2" />
<text  x="169.55" y="703.5" ></text>
</g>
<g >
<title>runtime.cgocall (95 samples, 0.01%)</title><rect x="370.5" y="341" width="0.2" height="15.0" fill="rgb(248,47,50)" rx="2" ry="2" />
<text  x="373.52" y="351.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*bufioEncWriter).flushErr (120 samples, 0.02%)</title><rect x="1079.3" y="517" width="0.2" height="15.0" fill="rgb(238,166,24)" rx="2" ry="2" />
<text  x="1082.30" y="527.5" ></text>
</g>
<g >
<title>runtime.(*mheap).freeSpanLocked (2,530 samples, 0.36%)</title><rect x="26.1" y="773" width="4.3" height="15.0" fill="rgb(240,101,20)" rx="2" ry="2" />
<text  x="29.13" y="783.5" ></text>
</g>
<g >
<title>runtime.mallocgc (993 samples, 0.14%)</title><rect x="897.0" y="533" width="1.7" height="15.0" fill="rgb(229,34,28)" rx="2" ry="2" />
<text  x="900.00" y="543.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*Encoder).encode (137 samples, 0.02%)</title><rect x="144.2" y="613" width="0.3" height="15.0" fill="rgb(251,184,8)" rx="2" ry="2" />
<text  x="147.22" y="623.5" ></text>
</g>
<g >
<title>github.com/holiman/uint256.(*Int).WriteToSlice (194 samples, 0.03%)</title><rect x="388.4" y="373" width="0.3" height="15.0" fill="rgb(251,125,28)" rx="2" ry="2" />
<text  x="391.37" y="383.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVMInterpreter).Run (328 samples, 0.05%)</title><rect x="603.9" y="421" width="0.6" height="15.0" fill="rgb(208,10,29)" rx="2" ry="2" />
<text  x="606.93" y="431.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).GetCode (72 samples, 0.01%)</title><rect x="410.1" y="501" width="0.1" height="15.0" fill="rgb(208,115,34)" rx="2" ry="2" />
<text  x="413.11" y="511.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).GetState (70 samples, 0.01%)</title><rect x="411.9" y="453" width="0.1" height="15.0" fill="rgb(230,15,38)" rx="2" ry="2" />
<text  x="414.91" y="463.5" ></text>
</g>
<g >
<title>github.com/holiman/uint256.(*Int).Bytes32 (96 samples, 0.01%)</title><rect x="554.8" y="581" width="0.2" height="15.0" fill="rgb(249,118,22)" rx="2" ry="2" />
<text  x="557.82" y="591.5" ></text>
</g>
<g >
<title>runtime.newobject (146 samples, 0.02%)</title><rect x="875.5" y="501" width="0.2" height="15.0" fill="rgb(250,136,40)" rx="2" ry="2" />
<text  x="878.48" y="511.5" ></text>
</g>
<g >
<title>runtime.memmove (72 samples, 0.01%)</title><rect x="553.5" y="533" width="0.1" height="15.0" fill="rgb(245,93,5)" rx="2" ry="2" />
<text  x="556.51" y="543.5" ></text>
</g>
<g >
<title>runtime.removespecial (116 samples, 0.02%)</title><rect x="929.8" y="405" width="0.2" height="15.0" fill="rgb(244,126,43)" rx="2" ry="2" />
<text  x="932.78" y="415.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb._Cfunc_lmdbgo_mdb_cursor_put2 (2,063 samples, 0.30%)</title><rect x="1103.2" y="517" width="3.5" height="15.0" fill="rgb(207,18,20)" rx="2" ry="2" />
<text  x="1106.19" y="527.5" ></text>
</g>
<g >
<title>bytes.Compare (101 samples, 0.01%)</title><rect x="866.7" y="341" width="0.2" height="15.0" fill="rgb(226,101,17)" rx="2" ry="2" />
<text  x="869.73" y="351.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (101 samples, 0.01%)</title><rect x="853.0" y="485" width="0.2" height="15.0" fill="rgb(205,91,42)" rx="2" ry="2" />
<text  x="856.01" y="495.5" ></text>
</g>
<g >
<title>reflect.typedslicecopy (199 samples, 0.03%)</title><rect x="765.5" y="309" width="0.4" height="15.0" fill="rgb(211,17,31)" rx="2" ry="2" />
<text  x="768.53" y="319.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).Put.func1 (362 samples, 0.05%)</title><rect x="157.6" y="533" width="0.6" height="15.0" fill="rgb(220,169,54)" rx="2" ry="2" />
<text  x="160.62" y="543.5" ></text>
</g>
<g >
<title>tg/core.GetHashFn.func1 (267 samples, 0.04%)</title><rect x="338.0" y="581" width="0.5" height="15.0" fill="rgb(217,50,2)" rx="2" ry="2" />
<text  x="341.04" y="591.5" ></text>
</g>
<g >
<title>tg/core/types.rlpHash (128 samples, 0.02%)</title><rect x="134.6" y="853" width="0.3" height="15.0" fill="rgb(207,198,17)" rx="2" ry="2" />
<text  x="137.65" y="863.5" ></text>
</g>
<g >
<title>tg/core/types.rlpHash (620 samples, 0.09%)</title><rect x="1130.0" y="805" width="1.1" height="15.0" fill="rgb(229,159,23)" rx="2" ry="2" />
<text  x="1133.05" y="815.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVMInterpreter).Run (791 samples, 0.11%)</title><rect x="405.3" y="421" width="1.3" height="15.0" fill="rgb(244,113,43)" rx="2" ry="2" />
<text  x="408.29" y="431.5" ></text>
</g>
<g >
<title>tg/core/vm.opDelegateCall (286 samples, 0.04%)</title><rect x="515.4" y="341" width="0.5" height="15.0" fill="rgb(235,205,10)" rx="2" ry="2" />
<text  x="518.37" y="351.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find.func1 (168 samples, 0.02%)</title><rect x="323.3" y="389" width="0.3" height="15.0" fill="rgb(238,17,40)" rx="2" ry="2" />
<text  x="326.30" y="399.5" ></text>
</g>
<g >
<title>tg/core/state.(*journal).append (312 samples, 0.04%)</title><rect x="269.7" y="565" width="0.6" height="15.0" fill="rgb(211,204,42)" rx="2" ry="2" />
<text  x="272.74" y="575.5" ></text>
</g>
<g >
<title>reflect.Value.Addr (131 samples, 0.02%)</title><rect x="199.6" y="357" width="0.2" height="15.0" fill="rgb(247,71,6)" rx="2" ry="2" />
<text  x="202.56" y="367.5" ></text>
</g>
<g >
<title>sort.Search (64 samples, 0.01%)</title><rect x="340.3" y="421" width="0.1" height="15.0" fill="rgb(233,115,28)" rx="2" ry="2" />
<text  x="343.34" y="431.5" ></text>
</g>
<g >
<title>runtime.mallocgc (270 samples, 0.04%)</title><rect x="1097.8" y="565" width="0.5" height="15.0" fill="rgb(230,172,10)" rx="2" ry="2" />
<text  x="1100.80" y="575.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).getVal1.func1 (68 samples, 0.01%)</title><rect x="423.0" y="389" width="0.1" height="15.0" fill="rgb(246,44,13)" rx="2" ry="2" />
<text  x="426.00" y="399.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).GetCodeSize (90 samples, 0.01%)</title><rect x="488.6" y="453" width="0.1" height="15.0" fill="rgb(213,51,6)" rx="2" ry="2" />
<text  x="491.57" y="463.5" ></text>
</g>
<g >
<title>tg/common/dbutils.GenerateCompositeStorageKey (544 samples, 0.08%)</title><rect x="1012.3" y="581" width="0.9" height="15.0" fill="rgb(209,90,26)" rx="2" ry="2" />
<text  x="1015.28" y="591.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (243 samples, 0.03%)</title><rect x="461.2" y="437" width="0.4" height="15.0" fill="rgb(224,185,2)" rx="2" ry="2" />
<text  x="464.23" y="447.5" ></text>
</g>
<g >
<title>runtime.cgocall (65 samples, 0.01%)</title><rect x="487.2" y="213" width="0.1" height="15.0" fill="rgb(226,7,31)" rx="2" ry="2" />
<text  x="490.16" y="223.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).insert (449 samples, 0.06%)</title><rect x="666.0" y="597" width="0.8" height="15.0" fill="rgb(245,72,39)" rx="2" ry="2" />
<text  x="669.04" y="607.5" ></text>
</g>
<g >
<title>tg/ethdb/bitmapdb.WalkChunkWithKeys64.func1 (682 samples, 0.10%)</title><rect x="1056.7" y="629" width="1.2" height="15.0" fill="rgb(221,95,54)" rx="2" ry="2" />
<text  x="1059.73" y="639.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (160 samples, 0.02%)</title><rect x="286.4" y="501" width="0.3" height="15.0" fill="rgb(227,73,27)" rx="2" ry="2" />
<text  x="289.44" y="511.5" ></text>
</g>
<g >
<title>tg/ethdb.(*MutationItem).Less (69 samples, 0.01%)</title><rect x="258.3" y="485" width="0.1" height="15.0" fill="rgb(205,203,24)" rx="2" ry="2" />
<text  x="261.28" y="495.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*Decoder).decode (832 samples, 0.12%)</title><rect x="169.2" y="597" width="1.4" height="15.0" fill="rgb(251,204,13)" rx="2" ry="2" />
<text  x="172.21" y="607.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (73 samples, 0.01%)</title><rect x="876.1" y="421" width="0.1" height="15.0" fill="rgb(249,181,37)" rx="2" ry="2" />
<text  x="879.10" y="431.5" ></text>
</g>
<g >
<title>runtime.casgstatus (62 samples, 0.01%)</title><rect x="949.2" y="421" width="0.1" height="15.0" fill="rgb(211,144,22)" rx="2" ry="2" />
<text  x="952.17" y="431.5" ></text>
</g>
<g >
<title>tg/rlp.decodeByteArray (233 samples, 0.03%)</title><rect x="202.2" y="357" width="0.4" height="15.0" fill="rgb(214,80,44)" rx="2" ry="2" />
<text  x="205.16" y="367.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).GetNonce (10,536 samples, 1.52%)</title><rect x="243.9" y="629" width="17.9" height="15.0" fill="rgb(251,133,22)" rx="2" ry="2" />
<text  x="246.94" y="639.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find.func1 (80 samples, 0.01%)</title><rect x="452.6" y="325" width="0.2" height="15.0" fill="rgb(237,51,0)" rx="2" ry="2" />
<text  x="455.62" y="335.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVMInterpreter).Run (223 samples, 0.03%)</title><rect x="487.7" y="293" width="0.4" height="15.0" fill="rgb(206,120,27)" rx="2" ry="2" />
<text  x="490.71" y="303.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (69 samples, 0.01%)</title><rect x="691.0" y="597" width="0.2" height="15.0" fill="rgb(238,62,52)" rx="2" ry="2" />
<text  x="694.04" y="607.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.(*state).Read (1,841 samples, 0.26%)</title><rect x="429.5" y="517" width="3.1" height="15.0" fill="rgb(209,229,24)" rx="2" ry="2" />
<text  x="432.50" y="527.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVMInterpreter).Run (94 samples, 0.01%)</title><rect x="386.9" y="229" width="0.2" height="15.0" fill="rgb(252,13,46)" rx="2" ry="2" />
<text  x="389.90" y="239.5" ></text>
</g>
<g >
<title>runtime.mapassign (74 samples, 0.01%)</title><rect x="325.6" y="533" width="0.2" height="15.0" fill="rgb(220,27,3)" rx="2" ry="2" />
<text  x="328.64" y="543.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.(*state).Read (119 samples, 0.02%)</title><rect x="606.3" y="517" width="0.2" height="15.0" fill="rgb(215,75,49)" rx="2" ry="2" />
<text  x="609.25" y="527.5" ></text>
</g>
<g >
<title>bytes.Compare (154 samples, 0.02%)</title><rect x="1070.0" y="469" width="0.3" height="15.0" fill="rgb(234,50,26)" rx="2" ry="2" />
<text  x="1073.04" y="479.5" ></text>
</g>
<g >
<title>sort.Search (76 samples, 0.01%)</title><rect x="320.7" y="405" width="0.1" height="15.0" fill="rgb(241,193,54)" rx="2" ry="2" />
<text  x="323.71" y="415.5" ></text>
</g>
<g >
<title>runtime.mapaccess1 (70 samples, 0.01%)</title><rect x="266.3" y="597" width="0.1" height="15.0" fill="rgb(224,202,52)" rx="2" ry="2" />
<text  x="269.26" y="607.5" ></text>
</g>
<g >
<title>tg/ethdb.(*LmdbKV).Begin (158 samples, 0.02%)</title><rect x="230.2" y="677" width="0.3" height="15.0" fill="rgb(223,102,53)" rx="2" ry="2" />
<text  x="233.20" y="687.5" ></text>
</g>
<g >
<title>tg/core/vm/stack.(*Stack).Pop (594 samples, 0.09%)</title><rect x="454.0" y="533" width="1.0" height="15.0" fill="rgb(211,224,54)" rx="2" ry="2" />
<text  x="457.03" y="543.5" ></text>
</g>
<g >
<title>tg/common/changeset.Walk.func1 (15,889 samples, 2.29%)</title><rect x="1057.9" y="661" width="27.0" height="15.0" fill="rgb(233,144,37)" rx="2" ry="2" />
<text  x="1060.91" y="671.5" >t..</text>
</g>
<g >
<title>tg/ethdb.(*LmdbCursor).getBothRange (633 samples, 0.09%)</title><rect x="403.3" y="357" width="1.0" height="15.0" fill="rgb(225,48,5)" rx="2" ry="2" />
<text  x="406.26" y="367.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb._Cfunc_mdb_cursor_close (542 samples, 0.08%)</title><rect x="928.5" y="437" width="0.9" height="15.0" fill="rgb(233,10,21)" rx="2" ry="2" />
<text  x="931.46" y="447.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).Empty (627 samples, 0.09%)</title><rect x="320.6" y="581" width="1.0" height="15.0" fill="rgb(237,184,37)" rx="2" ry="2" />
<text  x="323.57" y="591.5" ></text>
</g>
<g >
<title>reflect.Value.Slice (145 samples, 0.02%)</title><rect x="791.9" y="485" width="0.3" height="15.0" fill="rgb(232,163,6)" rx="2" ry="2" />
<text  x="794.91" y="495.5" ></text>
</g>
<g >
<title>runtime.mallocgc (67 samples, 0.01%)</title><rect x="1180.2" y="789" width="0.1" height="15.0" fill="rgb(250,214,20)" rx="2" ry="2" />
<text  x="1183.23" y="799.5" ></text>
</g>
<g >
<title>runtime.assertI2I2 (149 samples, 0.02%)</title><rect x="967.9" y="613" width="0.3" height="15.0" fill="rgb(253,59,37)" rx="2" ry="2" />
<text  x="970.94" y="623.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (69 samples, 0.01%)</title><rect x="199.0" y="261" width="0.1" height="15.0" fill="rgb(247,227,45)" rx="2" ry="2" />
<text  x="202.03" y="271.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (63 samples, 0.01%)</title><rect x="218.3" y="325" width="0.1" height="15.0" fill="rgb(216,172,15)" rx="2" ry="2" />
<text  x="221.26" y="335.5" ></text>
</g>
<g >
<title>tg/core/vm.run (80 samples, 0.01%)</title><rect x="480.6" y="309" width="0.2" height="15.0" fill="rgb(211,189,9)" rx="2" ry="2" />
<text  x="483.64" y="319.5" ></text>
</g>
<g >
<title>tg/ethdb.(*mutation).Get (69 samples, 0.01%)</title><rect x="451.1" y="325" width="0.1" height="15.0" fill="rgb(224,41,29)" rx="2" ry="2" />
<text  x="454.09" y="335.5" ></text>
</g>
<g >
<title>tg/core/vm.gasSStore (94 samples, 0.01%)</title><rect x="376.4" y="469" width="0.2" height="15.0" fill="rgb(218,84,6)" rx="2" ry="2" />
<text  x="379.43" y="479.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).getVal2.func1 (351 samples, 0.05%)</title><rect x="492.1" y="309" width="0.6" height="15.0" fill="rgb(234,128,46)" rx="2" ry="2" />
<text  x="495.06" y="319.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).setStateObject (73 samples, 0.01%)</title><rect x="500.3" y="437" width="0.1" height="15.0" fill="rgb(207,171,10)" rx="2" ry="2" />
<text  x="503.30" y="447.5" ></text>
</g>
<g >
<title>runtime.mallocgc (177 samples, 0.03%)</title><rect x="629.5" y="629" width="0.3" height="15.0" fill="rgb(228,213,42)" rx="2" ry="2" />
<text  x="632.45" y="639.5" ></text>
</g>
<g >
<title>tg/core/vm.makeSwap.func1 (157 samples, 0.02%)</title><rect x="378.1" y="469" width="0.3" height="15.0" fill="rgb(244,56,42)" rx="2" ry="2" />
<text  x="381.10" y="479.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb._Cfunc_lmdbgo_mdb_cursor_get1 (4,744 samples, 0.68%)</title><rect x="1013.6" y="517" width="8.0" height="15.0" fill="rgb(238,211,31)" rx="2" ry="2" />
<text  x="1016.59" y="527.5" ></text>
</g>
<g >
<title>aeshashbody (131 samples, 0.02%)</title><rect x="1037.0" y="613" width="0.2" height="15.0" fill="rgb(220,229,4)" rx="2" ry="2" />
<text  x="1039.98" y="623.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).getStateObject (455 samples, 0.07%)</title><rect x="422.4" y="501" width="0.8" height="15.0" fill="rgb(228,39,43)" rx="2" ry="2" />
<text  x="425.40" y="511.5" ></text>
</g>
<g >
<title>bytes.Compare (174 samples, 0.03%)</title><rect x="1026.7" y="533" width="0.3" height="15.0" fill="rgb(209,187,41)" rx="2" ry="2" />
<text  x="1029.67" y="543.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (95 samples, 0.01%)</title><rect x="385.8" y="229" width="0.2" height="15.0" fill="rgb(228,184,16)" rx="2" ry="2" />
<text  x="388.80" y="239.5" ></text>
</g>
<g >
<title>tg/rlp.makeStructDecoder.func1 (171 samples, 0.02%)</title><rect x="338.2" y="501" width="0.3" height="15.0" fill="rgb(215,192,0)" rx="2" ry="2" />
<text  x="341.19" y="511.5" ></text>
</g>
<g >
<title>runtime.selectnbrecv (144 samples, 0.02%)</title><rect x="166.2" y="677" width="0.3" height="15.0" fill="rgb(218,174,46)" rx="2" ry="2" />
<text  x="169.22" y="687.5" ></text>
</g>
<g >
<title>tg/p2p/dnsdisc.(*clientTree).syncRandom (72 samples, 0.01%)</title><rect x="1189.9" y="821" width="0.1" height="15.0" fill="rgb(225,176,33)" rx="2" ry="2" />
<text  x="1192.87" y="831.5" ></text>
</g>
<g >
<title>cmpbody (488 samples, 0.07%)</title><rect x="437.6" y="293" width="0.8" height="15.0" fill="rgb(241,195,12)" rx="2" ry="2" />
<text  x="440.56" y="303.5" ></text>
</g>
<g >
<title>runtime.cgoCheckUnknownPointer (165 samples, 0.02%)</title><rect x="927.0" y="421" width="0.2" height="15.0" fill="rgb(235,56,54)" rx="2" ry="2" />
<text  x="929.96" y="431.5" ></text>
</g>
<g >
<title>sort.symMerge (1,032 samples, 0.15%)</title><rect x="1075.4" y="309" width="1.8" height="15.0" fill="rgb(209,17,10)" rx="2" ry="2" />
<text  x="1078.41" y="319.5" ></text>
</g>
<g >
<title>cmpbody (140 samples, 0.02%)</title><rect x="402.1" y="229" width="0.2" height="15.0" fill="rgb(213,69,2)" rx="2" ry="2" />
<text  x="405.10" y="239.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Txn).Abort (2,546 samples, 0.37%)</title><rect x="947.1" y="517" width="4.3" height="15.0" fill="rgb(232,78,13)" rx="2" ry="2" />
<text  x="950.12" y="527.5" ></text>
</g>
<g >
<title>tg/core/state.(*PlainStateReader).ReadAccountStorage (686 samples, 0.10%)</title><rect x="389.8" y="341" width="1.2" height="15.0" fill="rgb(238,75,3)" rx="2" ry="2" />
<text  x="392.83" y="351.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).Get (68 samples, 0.01%)</title><rect x="423.0" y="421" width="0.1" height="15.0" fill="rgb(238,130,13)" rx="2" ry="2" />
<text  x="426.00" y="431.5" ></text>
</g>
<g >
<title>sort.doPivot (89 samples, 0.01%)</title><rect x="1028.1" y="469" width="0.1" height="15.0" fill="rgb(247,91,28)" rx="2" ry="2" />
<text  x="1031.06" y="479.5" ></text>
</g>
<g >
<title>tg/core/vm.run (110 samples, 0.02%)</title><rect x="497.1" y="309" width="0.2" height="15.0" fill="rgb(220,1,44)" rx="2" ry="2" />
<text  x="500.10" y="319.5" ></text>
</g>
<g >
<title>runtime/pprof.(*profMap).lookup (71 samples, 0.01%)</title><rect x="127.2" y="837" width="0.1" height="15.0" fill="rgb(247,198,16)" rx="2" ry="2" />
<text  x="130.16" y="847.5" ></text>
</g>
<g >
<title>runtime.cgoIsGoPointer (68 samples, 0.01%)</title><rect x="848.6" y="437" width="0.1" height="15.0" fill="rgb(208,91,39)" rx="2" ry="2" />
<text  x="851.55" y="447.5" ></text>
</g>
<g >
<title>reflect.typedslicecopy (156 samples, 0.02%)</title><rect x="745.0" y="453" width="0.3" height="15.0" fill="rgb(211,129,16)" rx="2" ry="2" />
<text  x="748.00" y="463.5" ></text>
</g>
<g >
<title>tg/core/types.(*Log).CodecDecodeSelf (1,398 samples, 0.20%)</title><rect x="163.2" y="565" width="2.4" height="15.0" fill="rgb(233,133,1)" rx="2" ry="2" />
<text  x="166.19" y="575.5" ></text>
</g>
<g >
<title>runtime.mallocgc (65 samples, 0.01%)</title><rect x="779.8" y="677" width="0.1" height="15.0" fill="rgb(221,36,39)" rx="2" ry="2" />
<text  x="782.76" y="687.5" ></text>
</g>
<g >
<title>runtime.mallocgc (176 samples, 0.03%)</title><rect x="200.4" y="309" width="0.3" height="15.0" fill="rgb(250,195,49)" rx="2" ry="2" />
<text  x="203.40" y="319.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).DelegateCall (4,874 samples, 0.70%)</title><rect x="495.7" y="517" width="8.2" height="15.0" fill="rgb(233,193,41)" rx="2" ry="2" />
<text  x="498.67" y="527.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.(*runContainer16).toArrayContainer (1,162 samples, 0.17%)</title><rect x="1100.0" y="533" width="1.9" height="15.0" fill="rgb(239,145,19)" rx="2" ry="2" />
<text  x="1102.95" y="543.5" ></text>
</g>
<g >
<title>tg/rlp.Encode (2,569 samples, 0.37%)</title><rect x="1122.1" y="741" width="4.4" height="15.0" fill="rgb(217,56,19)" rx="2" ry="2" />
<text  x="1125.10" y="751.5" ></text>
</g>
<g >
<title>runtime.cgoCheckArg (258 samples, 0.04%)</title><rect x="946.4" y="453" width="0.5" height="15.0" fill="rgb(219,139,8)" rx="2" ry="2" />
<text  x="949.42" y="463.5" ></text>
</g>
<g >
<title>tg/rlp.makeStructDecoder.func1 (133 samples, 0.02%)</title><rect x="794.8" y="645" width="0.2" height="15.0" fill="rgb(226,132,14)" rx="2" ry="2" />
<text  x="797.80" y="655.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).Call (223 samples, 0.03%)</title><rect x="414.4" y="325" width="0.3" height="15.0" fill="rgb(234,171,10)" rx="2" ry="2" />
<text  x="417.35" y="335.5" ></text>
</g>
<g >
<title>sync.(*RWMutex).Lock (72 samples, 0.01%)</title><rect x="331.0" y="549" width="0.1" height="15.0" fill="rgb(236,171,52)" rx="2" ry="2" />
<text  x="333.98" y="559.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (66 samples, 0.01%)</title><rect x="271.6" y="549" width="0.1" height="15.0" fill="rgb(212,133,3)" rx="2" ry="2" />
<text  x="274.63" y="559.5" ></text>
</g>
<g >
<title>tg/common/etl.(*sortableBuffer).Less (59 samples, 0.01%)</title><rect x="1068.3" y="517" width="0.1" height="15.0" fill="rgb(248,13,46)" rx="2" ry="2" />
<text  x="1071.28" y="527.5" ></text>
</g>
<g >
<title>tg/ethdb.(*mutation).Get (121 samples, 0.02%)</title><rect x="362.6" y="453" width="0.3" height="15.0" fill="rgb(223,15,51)" rx="2" ry="2" />
<text  x="365.65" y="463.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVMInterpreter).Run (62,828 samples, 9.04%)</title><rect x="351.3" y="549" width="106.7" height="15.0" fill="rgb(246,106,48)" rx="2" ry="2" />
<text  x="354.35" y="559.5" >tg/core/vm.(*..</text>
</g>
<g >
<title>tg/core/vm.opMstore (1,372 samples, 0.20%)</title><rect x="425.8" y="533" width="2.3" height="15.0" fill="rgb(250,115,29)" rx="2" ry="2" />
<text  x="428.80" y="543.5" ></text>
</g>
<g >
<title>runtime.selectgo (164 samples, 0.02%)</title><rect x="141.9" y="709" width="0.3" height="15.0" fill="rgb(229,25,18)" rx="2" ry="2" />
<text  x="144.88" y="719.5" ></text>
</g>
<g >
<title>runtime.systemstack (86 samples, 0.01%)</title><rect x="1067.6" y="549" width="0.1" height="15.0" fill="rgb(242,42,40)" rx="2" ry="2" />
<text  x="1070.59" y="559.5" ></text>
</g>
<g >
<title>tg/rlp.decodeByteArray (283 samples, 0.04%)</title><rect x="791.9" y="501" width="0.4" height="15.0" fill="rgb(220,182,9)" rx="2" ry="2" />
<text  x="794.87" y="511.5" ></text>
</g>
<g >
<title>runtime.cgocall (198 samples, 0.03%)</title><rect x="960.2" y="549" width="0.3" height="15.0" fill="rgb(219,223,52)" rx="2" ry="2" />
<text  x="963.17" y="559.5" ></text>
</g>
<g >
<title>tg/ethdb/bitmapdb.CutLeft (6,043 samples, 0.87%)</title><rect x="147.1" y="629" width="10.2" height="15.0" fill="rgb(241,218,50)" rx="2" ry="2" />
<text  x="150.06" y="639.5" ></text>
</g>
<g >
<title>sort.symMerge (4,349 samples, 0.63%)</title><rect x="986.8" y="501" width="7.4" height="15.0" fill="rgb(249,153,28)" rx="2" ry="2" />
<text  x="989.84" y="511.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.fastpathEncodeTypeSwitch (130 samples, 0.02%)</title><rect x="144.2" y="597" width="0.2" height="15.0" fill="rgb(229,171,54)" rx="2" ry="2" />
<text  x="147.23" y="607.5" ></text>
</g>
<g >
<title>tg/core/vm/stack.(*Stack).Push (77 samples, 0.01%)</title><rect x="482.4" y="405" width="0.1" height="15.0" fill="rgb(236,50,16)" rx="2" ry="2" />
<text  x="485.40" y="415.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*cborDecDriver).DecodeBytes (284 samples, 0.04%)</title><rect x="163.3" y="533" width="0.5" height="15.0" fill="rgb(237,208,52)" rx="2" ry="2" />
<text  x="166.32" y="543.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).Get (97 samples, 0.01%)</title><rect x="481.8" y="277" width="0.1" height="15.0" fill="rgb(246,216,5)" rx="2" ry="2" />
<text  x="484.77" y="287.5" ></text>
</g>
<g >
<title>tg/crypto/secp256k1.RecoverPubkeyWithContext (144 samples, 0.02%)</title><rect x="447.0" y="453" width="0.3" height="15.0" fill="rgb(227,155,26)" rx="2" ry="2" />
<text  x="450.01" y="463.5" ></text>
</g>
<g >
<title>tg/ethdb.(*TxDb).Get (228 samples, 0.03%)</title><rect x="1049.5" y="645" width="0.4" height="15.0" fill="rgb(249,47,5)" rx="2" ry="2" />
<text  x="1052.53" y="655.5" ></text>
</g>
<g >
<title>math/big.(*Int).Cmp (186 samples, 0.03%)</title><rect x="663.3" y="661" width="0.3" height="15.0" fill="rgb(206,128,46)" rx="2" ry="2" />
<text  x="666.25" y="671.5" ></text>
</g>
<g >
<title>tg/p2p/enode.(*DB).storeUint64 (341 samples, 0.05%)</title><rect x="1188.8" y="837" width="0.6" height="15.0" fill="rgb(238,186,40)" rx="2" ry="2" />
<text  x="1191.82" y="847.5" ></text>
</g>
<g >
<title>runtime.mallocgc (85 samples, 0.01%)</title><rect x="1058.0" y="613" width="0.1" height="15.0" fill="rgb(245,17,19)" rx="2" ry="2" />
<text  x="1060.98" y="623.5" ></text>
</g>
<g >
<title>sort.quickSort_func (101 samples, 0.01%)</title><rect x="961.7" y="613" width="0.2" height="15.0" fill="rgb(212,202,38)" rx="2" ry="2" />
<text  x="964.71" y="623.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (63 samples, 0.01%)</title><rect x="387.8" y="309" width="0.1" height="15.0" fill="rgb(223,212,10)" rx="2" ry="2" />
<text  x="390.82" y="319.5" ></text>
</g>
<g >
<title>runtime.newMarkBits (132 samples, 0.02%)</title><rect x="33.7" y="821" width="0.2" height="15.0" fill="rgb(227,2,37)" rx="2" ry="2" />
<text  x="36.66" y="831.5" ></text>
</g>
<g >
<title>tg/core/vm.opMstore (3,133 samples, 0.45%)</title><rect x="535.8" y="597" width="5.3" height="15.0" fill="rgb(209,61,50)" rx="2" ry="2" />
<text  x="538.77" y="607.5" ></text>
</g>
<g >
<title>runtime.resetspinning (249 samples, 0.04%)</title><rect x="120.6" y="821" width="0.5" height="15.0" fill="rgb(247,144,38)" rx="2" ry="2" />
<text  x="123.65" y="831.5" ></text>
</g>
<g >
<title>cmpbody (240 samples, 0.03%)</title><rect x="188.6" y="245" width="0.4" height="15.0" fill="rgb(248,64,28)" rx="2" ry="2" />
<text  x="191.63" y="255.5" ></text>
</g>
<g >
<title>tg/ethdb.(*LmdbCursor).set (122 samples, 0.02%)</title><rect x="504.9" y="437" width="0.2" height="15.0" fill="rgb(221,100,52)" rx="2" ry="2" />
<text  x="507.89" y="447.5" ></text>
</g>
<g >
<title>runtime.mallocgc (89 samples, 0.01%)</title><rect x="318.2" y="581" width="0.1" height="15.0" fill="rgb(225,120,53)" rx="2" ry="2" />
<text  x="321.18" y="591.5" ></text>
</g>
<g >
<title>tg/ethdb.(*ObjectDatabase).Walk (4,052 samples, 0.58%)</title><rect x="215.1" y="597" width="6.9" height="15.0" fill="rgb(243,119,49)" rx="2" ry="2" />
<text  x="218.12" y="607.5" ></text>
</g>
<g >
<title>bytes.Compare (71 samples, 0.01%)</title><rect x="722.4" y="597" width="0.1" height="15.0" fill="rgb(244,33,10)" rx="2" ry="2" />
<text  x="725.39" y="607.5" ></text>
</g>
<g >
<title>runtime.mallocgc (89 samples, 0.01%)</title><rect x="927.6" y="437" width="0.2" height="15.0" fill="rgb(237,168,48)" rx="2" ry="2" />
<text  x="930.60" y="447.5" ></text>
</g>
<g >
<title>tg/ethdb.(*LmdbCursor).set (194 samples, 0.03%)</title><rect x="341.2" y="485" width="0.4" height="15.0" fill="rgb(238,9,14)" rx="2" ry="2" />
<text  x="344.22" y="495.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.(*roaringArray).writeTo (120 samples, 0.02%)</title><rect x="1056.8" y="581" width="0.2" height="15.0" fill="rgb(247,108,18)" rx="2" ry="2" />
<text  x="1059.80" y="591.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).GetState (218 samples, 0.03%)</title><rect x="362.5" y="517" width="0.4" height="15.0" fill="rgb(232,122,21)" rx="2" ry="2" />
<text  x="365.48" y="527.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVMInterpreter).Run (155 samples, 0.02%)</title><rect x="393.7" y="229" width="0.2" height="15.0" fill="rgb(225,57,26)" rx="2" ry="2" />
<text  x="396.67" y="239.5" ></text>
</g>
<g >
<title>cmpbody (877 samples, 0.13%)</title><rect x="576.8" y="373" width="1.5" height="15.0" fill="rgb(206,177,31)" rx="2" ry="2" />
<text  x="579.78" y="383.5" ></text>
</g>
<g >
<title>runtime.cgocall (71 samples, 0.01%)</title><rect x="230.2" y="597" width="0.1" height="15.0" fill="rgb(242,28,31)" rx="2" ry="2" />
<text  x="233.21" y="607.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*Decoder).mustDecode (636 samples, 0.09%)</title><rect x="817.0" y="597" width="1.1" height="15.0" fill="rgb(232,145,33)" rx="2" ry="2" />
<text  x="819.98" y="607.5" ></text>
</g>
<g >
<title>sort.rotate (91 samples, 0.01%)</title><rect x="869.1" y="261" width="0.1" height="15.0" fill="rgb(214,56,43)" rx="2" ry="2" />
<text  x="872.08" y="271.5" ></text>
</g>
<g >
<title>reflect.Copy (78 samples, 0.01%)</title><rect x="211.0" y="357" width="0.1" height="15.0" fill="rgb(209,203,46)" rx="2" ry="2" />
<text  x="213.99" y="367.5" ></text>
</g>
<g >
<title>tg/p2p/rlpx.initiatorEncHandshake (308 samples, 0.04%)</title><rect x="1187.2" y="757" width="0.5" height="15.0" fill="rgb(245,124,10)" rx="2" ry="2" />
<text  x="1190.22" y="767.5" ></text>
</g>
<g >
<title>runtime.growWork_faststr (378 samples, 0.05%)</title><rect x="699.8" y="597" width="0.7" height="15.0" fill="rgb(216,87,43)" rx="2" ry="2" />
<text  x="702.84" y="607.5" ></text>
</g>
<g >
<title>tg/core/vm.opSload (60 samples, 0.01%)</title><rect x="515.7" y="213" width="0.1" height="15.0" fill="rgb(242,16,13)" rx="2" ry="2" />
<text  x="518.69" y="223.5" ></text>
</g>
<g >
<title>tg/crypto/bn256/cloudflare.(*gfP12).Square (96 samples, 0.01%)</title><rect x="502.7" y="277" width="0.1" height="15.0" fill="rgb(223,213,22)" rx="2" ry="2" />
<text  x="505.67" y="287.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).Put (578 samples, 0.08%)</title><rect x="1126.7" y="645" width="1.0" height="15.0" fill="rgb(224,6,13)" rx="2" ry="2" />
<text  x="1129.74" y="655.5" ></text>
</g>
<g >
<title>runtime.selectnbrecv (106 samples, 0.02%)</title><rect x="822.9" y="581" width="0.2" height="15.0" fill="rgb(216,97,42)" rx="2" ry="2" />
<text  x="825.90" y="591.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (292 samples, 0.04%)</title><rect x="560.3" y="373" width="0.5" height="15.0" fill="rgb(207,111,20)" rx="2" ry="2" />
<text  x="563.35" y="383.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (64 samples, 0.01%)</title><rect x="720.4" y="581" width="0.1" height="15.0" fill="rgb(239,62,2)" rx="2" ry="2" />
<text  x="723.42" y="591.5" ></text>
</g>
<g >
<title>tg/rlp.Encode (2,346 samples, 0.34%)</title><rect x="763.2" y="549" width="4.0" height="15.0" fill="rgb(249,214,32)" rx="2" ry="2" />
<text  x="766.22" y="559.5" ></text>
</g>
<g >
<title>tg/core/state.(*stateObject).GetState (63 samples, 0.01%)</title><rect x="479.7" y="309" width="0.2" height="15.0" fill="rgb(212,30,42)" rx="2" ry="2" />
<text  x="482.74" y="319.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (60 samples, 0.01%)</title><rect x="892.2" y="501" width="0.1" height="15.0" fill="rgb(206,212,12)" rx="2" ry="2" />
<text  x="895.19" y="511.5" ></text>
</g>
<g >
<title>tg/ethdb.(*LmdbKV).View (405 samples, 0.06%)</title><rect x="230.2" y="693" width="0.7" height="15.0" fill="rgb(245,147,8)" rx="2" ry="2" />
<text  x="233.19" y="703.5" ></text>
</g>
<g >
<title>runtime.heapBits.initSpan (243 samples, 0.03%)</title><rect x="154.3" y="421" width="0.4" height="15.0" fill="rgb(240,58,20)" rx="2" ry="2" />
<text  x="157.28" y="431.5" ></text>
</g>
<g >
<title>runtime.mallocgc (384 samples, 0.06%)</title><rect x="697.7" y="581" width="0.7" height="15.0" fill="rgb(211,152,9)" rx="2" ry="2" />
<text  x="700.72" y="591.5" ></text>
</g>
<g >
<title>tg/ethdb.(*LmdbCursor).set (200 samples, 0.03%)</title><rect x="1049.5" y="629" width="0.4" height="15.0" fill="rgb(230,29,21)" rx="2" ry="2" />
<text  x="1052.54" y="639.5" ></text>
</g>
<g >
<title>internal/reflectlite.(*rtype).Comparable (75 samples, 0.01%)</title><rect x="660.7" y="645" width="0.2" height="15.0" fill="rgb(222,25,12)" rx="2" ry="2" />
<text  x="663.73" y="655.5" ></text>
</g>
<g >
<title>cmpbody (113 samples, 0.02%)</title><rect x="992.9" y="229" width="0.2" height="15.0" fill="rgb(247,12,31)" rx="2" ry="2" />
<text  x="995.89" y="239.5" ></text>
</g>
<g >
<title>runtime.makeslice (136 samples, 0.02%)</title><rect x="1092.1" y="597" width="0.2" height="15.0" fill="rgb(219,169,7)" rx="2" ry="2" />
<text  x="1095.10" y="607.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*Decoder).decode (2,562 samples, 0.37%)</title><rect x="161.7" y="661" width="4.3" height="15.0" fill="rgb(248,62,41)" rx="2" ry="2" />
<text  x="164.66" y="671.5" ></text>
</g>
<g >
<title>runtime.mallocgc (104 samples, 0.01%)</title><rect x="750.7" y="661" width="0.2" height="15.0" fill="rgb(238,99,43)" rx="2" ry="2" />
<text  x="753.72" y="671.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb._Cfunc_lmdbgo_mdb_cursor_put2 (2,122 samples, 0.31%)</title><rect x="803.5" y="517" width="3.6" height="15.0" fill="rgb(222,130,3)" rx="2" ry="2" />
<text  x="806.52" y="527.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (76 samples, 0.01%)</title><rect x="597.7" y="469" width="0.2" height="15.0" fill="rgb(228,222,15)" rx="2" ry="2" />
<text  x="600.73" y="479.5" ></text>
</g>
<g >
<title>runtime.mapassign_faststr (569 samples, 0.08%)</title><rect x="1064.9" y="629" width="1.0" height="15.0" fill="rgb(219,191,53)" rx="2" ry="2" />
<text  x="1067.94" y="639.5" ></text>
</g>
<g >
<title>runtime.convT2E (102 samples, 0.01%)</title><rect x="1088.5" y="677" width="0.2" height="15.0" fill="rgb(224,25,21)" rx="2" ry="2" />
<text  x="1091.50" y="687.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*BTree).Get (90 samples, 0.01%)</title><rect x="501.2" y="373" width="0.2" height="15.0" fill="rgb(252,183,25)" rx="2" ry="2" />
<text  x="504.22" y="383.5" ></text>
</g>
<g >
<title>tg/core/vm.makePush.func1 (125 samples, 0.02%)</title><rect x="412.2" y="469" width="0.2" height="15.0" fill="rgb(218,6,29)" rx="2" ry="2" />
<text  x="415.23" y="479.5" ></text>
</g>
<g >
<title>cmpbody (273 samples, 0.04%)</title><rect x="177.7" y="469" width="0.4" height="15.0" fill="rgb(247,83,29)" rx="2" ry="2" />
<text  x="180.67" y="479.5" ></text>
</g>
<g >
<title>runtime.typedmemmove (62 samples, 0.01%)</title><rect x="893.7" y="485" width="0.1" height="15.0" fill="rgb(206,50,32)" rx="2" ry="2" />
<text  x="896.74" y="495.5" ></text>
</g>
<g >
<title>sort.swapRange (165 samples, 0.02%)</title><rect x="1070.9" y="437" width="0.3" height="15.0" fill="rgb(231,83,44)" rx="2" ry="2" />
<text  x="1073.94" y="447.5" ></text>
</g>
<g >
<title>cmpbody (141 samples, 0.02%)</title><rect x="1075.5" y="277" width="0.2" height="15.0" fill="rgb(212,115,4)" rx="2" ry="2" />
<text  x="1078.46" y="287.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (83 samples, 0.01%)</title><rect x="788.5" y="453" width="0.1" height="15.0" fill="rgb(246,104,28)" rx="2" ry="2" />
<text  x="791.50" y="463.5" ></text>
</g>
<g >
<title>tg/eth.(*ProtocolManager).handleMsg (3,765 samples, 0.54%)</title><rect x="1180.7" y="805" width="6.3" height="15.0" fill="rgb(236,77,8)" rx="2" ry="2" />
<text  x="1183.65" y="815.5" ></text>
</g>
<g >
<title>bytes.Compare (199 samples, 0.03%)</title><rect x="184.9" y="341" width="0.4" height="15.0" fill="rgb(208,213,0)" rx="2" ry="2" />
<text  x="187.93" y="351.5" ></text>
</g>
<g >
<title>tg/core/vm.opSha3 (416 samples, 0.06%)</title><rect x="508.7" y="533" width="0.7" height="15.0" fill="rgb(212,65,25)" rx="2" ry="2" />
<text  x="511.72" y="543.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (83 samples, 0.01%)</title><rect x="696.9" y="581" width="0.1" height="15.0" fill="rgb(222,194,33)" rx="2" ry="2" />
<text  x="699.88" y="591.5" ></text>
</g>
<g >
<title>tg/ethdb.(*mutation).Get (240 samples, 0.03%)</title><rect x="395.2" y="325" width="0.4" height="15.0" fill="rgb(254,45,48)" rx="2" ry="2" />
<text  x="398.19" y="335.5" ></text>
</g>
<g >
<title>tg/ethdb.(*TxDb).Walk (17,094 samples, 2.46%)</title><rect x="1057.9" y="693" width="29.0" height="15.0" fill="rgb(243,152,51)" rx="2" ry="2" />
<text  x="1060.89" y="703.5" >tg..</text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*cborDecDriver).ContainerType (184 samples, 0.03%)</title><rect x="969.2" y="517" width="0.4" height="15.0" fill="rgb(246,123,19)" rx="2" ry="2" />
<text  x="972.25" y="527.5" ></text>
</g>
<g >
<title>runtime.cgocall (1,694 samples, 0.24%)</title><rect x="811.5" y="517" width="2.9" height="15.0" fill="rgb(254,96,25)" rx="2" ry="2" />
<text  x="814.50" y="527.5" ></text>
</g>
<g >
<title>tg/rlp.decodeUint (205 samples, 0.03%)</title><rect x="219.0" y="421" width="0.4" height="15.0" fill="rgb(243,47,48)" rx="2" ry="2" />
<text  x="222.00" y="431.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVMInterpreter).Run (771 samples, 0.11%)</title><rect x="462.4" y="533" width="1.3" height="15.0" fill="rgb(208,45,34)" rx="2" ry="2" />
<text  x="465.35" y="543.5" ></text>
</g>
<g >
<title>syscall.Syscall (66 samples, 0.01%)</title><rect x="195.8" y="357" width="0.1" height="15.0" fill="rgb(219,132,26)" rx="2" ry="2" />
<text  x="198.80" y="367.5" ></text>
</g>
<g >
<title>tg/core/state.(*stateObject).GetState (277 samples, 0.04%)</title><rect x="481.5" y="373" width="0.4" height="15.0" fill="rgb(208,195,9)" rx="2" ry="2" />
<text  x="484.46" y="383.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVMInterpreter).Run (497 samples, 0.07%)</title><rect x="386.7" y="357" width="0.9" height="15.0" fill="rgb(210,70,29)" rx="2" ry="2" />
<text  x="389.74" y="367.5" ></text>
</g>
<g >
<title>runtime.growslice (156 samples, 0.02%)</title><rect x="1098.7" y="581" width="0.3" height="15.0" fill="rgb(205,155,14)" rx="2" ry="2" />
<text  x="1101.69" y="591.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (76 samples, 0.01%)</title><rect x="1119.6" y="645" width="0.2" height="15.0" fill="rgb(214,116,39)" rx="2" ry="2" />
<text  x="1122.63" y="655.5" ></text>
</g>
<g >
<title>runtime.newobject (226 samples, 0.03%)</title><rect x="147.6" y="565" width="0.4" height="15.0" fill="rgb(212,26,6)" rx="2" ry="2" />
<text  x="150.58" y="575.5" ></text>
</g>
<g >
<title>tg/ethdb.(*LmdbCursor).next (3,995 samples, 0.57%)</title><rect x="951.8" y="597" width="6.8" height="15.0" fill="rgb(234,97,8)" rx="2" ry="2" />
<text  x="954.79" y="607.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (120 samples, 0.02%)</title><rect x="965.4" y="517" width="0.2" height="15.0" fill="rgb(208,189,30)" rx="2" ry="2" />
<text  x="968.35" y="527.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVMInterpreter).Run (71 samples, 0.01%)</title><rect x="479.5" y="293" width="0.1" height="15.0" fill="rgb(239,90,49)" rx="2" ry="2" />
<text  x="482.47" y="303.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.copyOutUnaligned (91 samples, 0.01%)</title><rect x="553.5" y="549" width="0.1" height="15.0" fill="rgb(229,98,1)" rx="2" ry="2" />
<text  x="556.48" y="559.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.decByteSlice (225 samples, 0.03%)</title><rect x="163.4" y="517" width="0.4" height="15.0" fill="rgb(237,17,13)" rx="2" ry="2" />
<text  x="166.42" y="527.5" ></text>
</g>
<g >
<title>runtime.scanobject (19,626 samples, 2.82%)</title><rect x="62.4" y="805" width="33.3" height="15.0" fill="rgb(206,138,45)" rx="2" ry="2" />
<text  x="65.36" y="815.5" >ru..</text>
</g>
<g >
<title>runtime.slicebytetostring (99 samples, 0.01%)</title><rect x="824.5" y="533" width="0.2" height="15.0" fill="rgb(207,95,19)" rx="2" ry="2" />
<text  x="827.48" y="543.5" ></text>
</g>
<g >
<title>runtime.growWork (95 samples, 0.01%)</title><rect x="287.0" y="581" width="0.2" height="15.0" fill="rgb(220,12,20)" rx="2" ry="2" />
<text  x="289.99" y="591.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).getVal0.func1 (1,107 samples, 0.16%)</title><rect x="1085.0" y="613" width="1.9" height="15.0" fill="rgb(251,217,9)" rx="2" ry="2" />
<text  x="1088.02" y="623.5" ></text>
</g>
<g >
<title>tg/rlp.(*Stream).Decode (142 samples, 0.02%)</title><rect x="794.8" y="661" width="0.2" height="15.0" fill="rgb(205,119,19)" rx="2" ry="2" />
<text  x="797.79" y="671.5" ></text>
</g>
<g >
<title>sort.symMerge (82 samples, 0.01%)</title><rect x="871.8" y="165" width="0.1" height="15.0" fill="rgb(210,186,33)" rx="2" ry="2" />
<text  x="874.80" y="175.5" ></text>
</g>
<g >
<title>tg/turbo/trie.(*FlatDBTrieLoader).CalcTrieRoot.func1 (1,497 samples, 0.22%)</title><rect x="1026.4" y="677" width="2.5" height="15.0" fill="rgb(244,134,36)" rx="2" ry="2" />
<text  x="1029.39" y="687.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring/internal.(*ByteInputAdapter).Next (149 samples, 0.02%)</title><rect x="1048.5" y="613" width="0.3" height="15.0" fill="rgb(247,184,53)" rx="2" ry="2" />
<text  x="1051.55" y="623.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb._Cfunc_mdb_txn_begin (1,709 samples, 0.25%)</title><rect x="828.2" y="469" width="2.9" height="15.0" fill="rgb(219,81,5)" rx="2" ry="2" />
<text  x="831.22" y="479.5" ></text>
</g>
<g >
<title>tg/core/vm.run (116 samples, 0.02%)</title><rect x="451.2" y="373" width="0.2" height="15.0" fill="rgb(221,111,50)" rx="2" ry="2" />
<text  x="454.23" y="383.5" ></text>
</g>
<g >
<title>tg/core/types.(*Transaction).DecodeRLP (3,358 samples, 0.48%)</title><rect x="787.3" y="565" width="5.7" height="15.0" fill="rgb(252,186,18)" rx="2" ry="2" />
<text  x="790.31" y="575.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring/roaring64.New (101 samples, 0.01%)</title><rect x="1058.0" y="645" width="0.1" height="15.0" fill="rgb(254,122,34)" rx="2" ry="2" />
<text  x="1060.96" y="655.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (425 samples, 0.06%)</title><rect x="498.8" y="325" width="0.7" height="15.0" fill="rgb(205,15,16)" rx="2" ry="2" />
<text  x="501.79" y="335.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).getVal2 (276 samples, 0.04%)</title><rect x="818.7" y="549" width="0.5" height="15.0" fill="rgb(223,17,17)" rx="2" ry="2" />
<text  x="821.68" y="559.5" ></text>
</g>
<g >
<title>tg/core/rawdb.ReadHeader (249 samples, 0.04%)</title><rect x="338.1" y="549" width="0.4" height="15.0" fill="rgb(219,71,3)" rx="2" ry="2" />
<text  x="341.07" y="559.5" ></text>
</g>
<g >
<title>runtime.(*mheap).nextSpanForSweep (910 samples, 0.13%)</title><rect x="21.1" y="837" width="1.5" height="15.0" fill="rgb(231,163,25)" rx="2" ry="2" />
<text  x="24.06" y="847.5" ></text>
</g>
<g >
<title>tg/core/vm.opStaticCall (3,652 samples, 0.53%)</title><rect x="445.9" y="533" width="6.2" height="15.0" fill="rgb(247,22,45)" rx="2" ry="2" />
<text  x="448.87" y="543.5" ></text>
</g>
<g >
<title>tg/rlp.(*encbuf).toWriter (1,094 samples, 0.16%)</title><rect x="212.5" y="533" width="1.9" height="15.0" fill="rgb(253,95,33)" rx="2" ry="2" />
<text  x="215.54" y="543.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring/roaring64.(*Bitmap).AddRange (1,813 samples, 0.26%)</title><rect x="1095.9" y="613" width="3.1" height="15.0" fill="rgb(249,227,11)" rx="2" ry="2" />
<text  x="1098.90" y="623.5" ></text>
</g>
<g >
<title>runtime.makeslice (72 samples, 0.01%)</title><rect x="959.9" y="645" width="0.1" height="15.0" fill="rgb(222,69,40)" rx="2" ry="2" />
<text  x="962.88" y="655.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).getStateObject (9,306 samples, 1.34%)</title><rect x="271.0" y="613" width="15.8" height="15.0" fill="rgb(226,22,2)" rx="2" ry="2" />
<text  x="274.03" y="623.5" ></text>
</g>
<g >
<title>tg/core/types.(*Transaction).Hash (71 samples, 0.01%)</title><rect x="645.1" y="677" width="0.1" height="15.0" fill="rgb(227,21,13)" rx="2" ry="2" />
<text  x="648.07" y="687.5" ></text>
</g>
<g >
<title>container/heap.Pop (200 samples, 0.03%)</title><rect x="958.6" y="677" width="0.4" height="15.0" fill="rgb(234,210,35)" rx="2" ry="2" />
<text  x="961.63" y="687.5" ></text>
</g>
<g >
<title>tg/core/vm.(*ecrecover).Run (296 samples, 0.04%)</title><rect x="371.0" y="485" width="0.5" height="15.0" fill="rgb(213,67,53)" rx="2" ry="2" />
<text  x="373.96" y="495.5" ></text>
</g>
<g >
<title>runtime.convT64 (129 samples, 0.02%)</title><rect x="949.6" y="469" width="0.2" height="15.0" fill="rgb(249,117,11)" rx="2" ry="2" />
<text  x="952.57" y="479.5" ></text>
</g>
<g >
<title>tg/ethdb.(*TxDb).Get (86 samples, 0.01%)</title><rect x="395.5" y="309" width="0.1" height="15.0" fill="rgb(206,100,39)" rx="2" ry="2" />
<text  x="398.45" y="319.5" ></text>
</g>
<g >
<title>runtime.growWork (411 samples, 0.06%)</title><rect x="559.5" y="517" width="0.7" height="15.0" fill="rgb(215,29,37)" rx="2" ry="2" />
<text  x="562.54" y="527.5" ></text>
</g>
<g >
<title>tg/turbo/trie.(*RootHashAggregator).genStructStorage (886 samples, 0.13%)</title><rect x="1029.6" y="677" width="1.5" height="15.0" fill="rgb(254,49,51)" rx="2" ry="2" />
<text  x="1032.59" y="687.5" ></text>
</g>
<g >
<title>sort.Search (210 samples, 0.03%)</title><rect x="491.4" y="277" width="0.3" height="15.0" fill="rgb(239,127,31)" rx="2" ry="2" />
<text  x="494.37" y="287.5" ></text>
</g>
<g >
<title>tg/consensus/ethash.(*Ethash).VerifySeal (3,084 samples, 0.44%)</title><rect x="129.2" y="837" width="5.2" height="15.0" fill="rgb(225,92,41)" rx="2" ry="2" />
<text  x="132.17" y="847.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).getVal1 (68 samples, 0.01%)</title><rect x="423.0" y="405" width="0.1" height="15.0" fill="rgb(231,99,44)" rx="2" ry="2" />
<text  x="426.00" y="415.5" ></text>
</g>
<g >
<title>cmpbody (242 samples, 0.03%)</title><rect x="190.7" y="197" width="0.4" height="15.0" fill="rgb(215,143,6)" rx="2" ry="2" />
<text  x="193.69" y="207.5" ></text>
</g>
<g >
<title>tg/rlp.cachedTypeInfo (128 samples, 0.02%)</title><rect x="1133.5" y="725" width="0.2" height="15.0" fill="rgb(211,145,2)" rx="2" ry="2" />
<text  x="1136.46" y="735.5" ></text>
</g>
<g >
<title>tg/core/vm.run (228 samples, 0.03%)</title><rect x="386.9" y="309" width="0.4" height="15.0" fill="rgb(211,78,53)" rx="2" ry="2" />
<text  x="389.87" y="319.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (193 samples, 0.03%)</title><rect x="510.1" y="357" width="0.4" height="15.0" fill="rgb(241,54,22)" rx="2" ry="2" />
<text  x="513.13" y="367.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc.func1 (78 samples, 0.01%)</title><rect x="779.2" y="549" width="0.1" height="15.0" fill="rgb(205,147,43)" rx="2" ry="2" />
<text  x="782.20" y="559.5" ></text>
</g>
<g >
<title>tg/ethdb.(*TxDb).Get (1,958 samples, 0.28%)</title><rect x="441.0" y="437" width="3.4" height="15.0" fill="rgb(213,141,5)" rx="2" ry="2" />
<text  x="444.03" y="447.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).getVal1 (174 samples, 0.03%)</title><rect x="461.7" y="437" width="0.3" height="15.0" fill="rgb(219,148,27)" rx="2" ry="2" />
<text  x="464.71" y="447.5" ></text>
</g>
<g >
<title>runtime.duffcopy (106 samples, 0.02%)</title><rect x="626.9" y="661" width="0.2" height="15.0" fill="rgb(224,53,32)" rx="2" ry="2" />
<text  x="629.93" y="671.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVMInterpreter).Run (2,880 samples, 0.41%)</title><rect x="477.7" y="421" width="4.9" height="15.0" fill="rgb(225,106,35)" rx="2" ry="2" />
<text  x="480.68" y="431.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).getVal2 (292 samples, 0.04%)</title><rect x="326.4" y="453" width="0.5" height="15.0" fill="rgb(241,65,40)" rx="2" ry="2" />
<text  x="329.43" y="463.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (90 samples, 0.01%)</title><rect x="972.8" y="517" width="0.1" height="15.0" fill="rgb(215,61,43)" rx="2" ry="2" />
<text  x="975.77" y="527.5" ></text>
</g>
<g >
<title>tg/eth/stagedsync.promoteHistory (15,659 samples, 2.25%)</title><rect x="1031.3" y="725" width="26.6" height="15.0" fill="rgb(245,149,50)" rx="2" ry="2" />
<text  x="1034.29" y="735.5" >t..</text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (90 samples, 0.01%)</title><rect x="985.1" y="453" width="0.1" height="15.0" fill="rgb(238,169,54)" rx="2" ry="2" />
<text  x="988.09" y="463.5" ></text>
</g>
<g >
<title>tg/rlp.(*Stream).Kind (68 samples, 0.01%)</title><rect x="1186.3" y="581" width="0.1" height="15.0" fill="rgb(227,209,31)" rx="2" ry="2" />
<text  x="1189.28" y="591.5" ></text>
</g>
<g >
<title>runtime.cgoIsGoPointer (189 samples, 0.03%)</title><rect x="905.6" y="453" width="0.3" height="15.0" fill="rgb(216,96,12)" rx="2" ry="2" />
<text  x="908.59" y="463.5" ></text>
</g>
<g >
<title>tg/ethdb.Walk (80,097 samples, 11.53%)</title><rect x="822.5" y="613" width="136.1" height="15.0" fill="rgb(251,222,33)" rx="2" ry="2" />
<text  x="825.55" y="623.5" >tg/ethdb.Walk</text>
</g>
<g >
<title>github.com/holiman/uint256.(*Int).Div (77 samples, 0.01%)</title><rect x="387.6" y="389" width="0.1" height="15.0" fill="rgb(211,120,38)" rx="2" ry="2" />
<text  x="390.61" y="399.5" ></text>
</g>
<g >
<title>runtime.nanotime (61 samples, 0.01%)</title><rect x="120.5" y="821" width="0.1" height="15.0" fill="rgb(205,220,11)" rx="2" ry="2" />
<text  x="123.50" y="831.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).insert (931 samples, 0.13%)</title><rect x="1120.1" y="693" width="1.6" height="15.0" fill="rgb(228,193,24)" rx="2" ry="2" />
<text  x="1123.13" y="703.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (99 samples, 0.01%)</title><rect x="1010.3" y="485" width="0.2" height="15.0" fill="rgb(207,36,13)" rx="2" ry="2" />
<text  x="1013.29" y="495.5" ></text>
</g>
<g >
<title>runtime.mapassign_faststr (1,212 samples, 0.17%)</title><rect x="858.3" y="533" width="2.0" height="15.0" fill="rgb(209,168,53)" rx="2" ry="2" />
<text  x="861.25" y="543.5" ></text>
</g>
<g >
<title>runtime.exitsyscall (71 samples, 0.01%)</title><rect x="794.1" y="533" width="0.2" height="15.0" fill="rgb(251,6,14)" rx="2" ry="2" />
<text  x="797.13" y="543.5" ></text>
</g>
<g >
<title>sort.Search (142 samples, 0.02%)</title><rect x="1121.4" y="661" width="0.3" height="15.0" fill="rgb(240,54,15)" rx="2" ry="2" />
<text  x="1124.44" y="671.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.openCursor.func1 (1,284 samples, 0.18%)</title><rect x="930.3" y="453" width="2.2" height="15.0" fill="rgb(241,146,7)" rx="2" ry="2" />
<text  x="933.30" y="463.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*Decoder).decSliceHelperStart (269 samples, 0.04%)</title><rect x="969.1" y="533" width="0.5" height="15.0" fill="rgb(244,143,11)" rx="2" ry="2" />
<text  x="972.10" y="543.5" ></text>
</g>
<g >
<title>github.com/holiman/uint256.(*Int).WriteToSlice (146 samples, 0.02%)</title><rect x="605.8" y="501" width="0.3" height="15.0" fill="rgb(248,213,1)" rx="2" ry="2" />
<text  x="608.82" y="511.5" ></text>
</g>
<g >
<title>runtime.newobject (62 samples, 0.01%)</title><rect x="522.7" y="533" width="0.1" height="15.0" fill="rgb(218,61,16)" rx="2" ry="2" />
<text  x="525.69" y="543.5" ></text>
</g>
<g >
<title>tg/core/vm.makePush.func1 (169 samples, 0.02%)</title><rect x="381.5" y="405" width="0.3" height="15.0" fill="rgb(241,194,39)" rx="2" ry="2" />
<text  x="384.53" y="415.5" ></text>
</g>
<g >
<title>runtime.slicebytetostring (352 samples, 0.05%)</title><rect x="142.2" y="709" width="0.6" height="15.0" fill="rgb(207,34,31)" rx="2" ry="2" />
<text  x="145.16" y="719.5" ></text>
</g>
<g >
<title>tg/common/etl.(*Collector).Collect (7,648 samples, 1.10%)</title><rect x="1067.0" y="629" width="12.9" height="15.0" fill="rgb(210,33,51)" rx="2" ry="2" />
<text  x="1069.95" y="639.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (76 samples, 0.01%)</title><rect x="597.4" y="421" width="0.2" height="15.0" fill="rgb(223,23,44)" rx="2" ry="2" />
<text  x="600.42" y="431.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.(*state).permute (64 samples, 0.01%)</title><rect x="385.6" y="293" width="0.1" height="15.0" fill="rgb(221,25,44)" rx="2" ry="2" />
<text  x="388.57" y="303.5" ></text>
</g>
<g >
<title>tg/core/vm.opMstore (362 samples, 0.05%)</title><rect x="489.1" y="469" width="0.7" height="15.0" fill="rgb(214,42,6)" rx="2" ry="2" />
<text  x="492.14" y="479.5" ></text>
</g>
<g >
<title>tg/eth/downloader.(*Downloader).syncWithPeer.func3 (105 samples, 0.02%)</title><rect x="1129.9" y="853" width="0.1" height="15.0" fill="rgb(234,89,15)" rx="2" ry="2" />
<text  x="1132.86" y="863.5" ></text>
</g>
<g >
<title>tg/common/etl.(*sortableBuffer).Swap (152 samples, 0.02%)</title><rect x="185.3" y="309" width="0.3" height="15.0" fill="rgb(219,155,50)" rx="2" ry="2" />
<text  x="188.34" y="319.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (77 samples, 0.01%)</title><rect x="318.4" y="533" width="0.1" height="15.0" fill="rgb(252,153,24)" rx="2" ry="2" />
<text  x="321.39" y="543.5" ></text>
</g>
<g >
<title>tg/core/vm.run (850 samples, 0.12%)</title><rect x="478.6" y="373" width="1.4" height="15.0" fill="rgb(213,98,41)" rx="2" ry="2" />
<text  x="481.58" y="383.5" ></text>
</g>
<g >
<title>tg/crypto/bn256/cloudflare.PairingCheck (162 samples, 0.02%)</title><rect x="405.0" y="389" width="0.2" height="15.0" fill="rgb(229,213,29)" rx="2" ry="2" />
<text  x="407.95" y="399.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVMInterpreter).Run (594 samples, 0.09%)</title><rect x="484.2" y="293" width="1.0" height="15.0" fill="rgb(222,176,49)" rx="2" ry="2" />
<text  x="487.23" y="303.5" ></text>
</g>
<g >
<title>tg/crypto/secp256k1.RecoverPubkeyWithContext.func1 (84 samples, 0.01%)</title><rect x="608.2" y="437" width="0.2" height="15.0" fill="rgb(209,123,8)" rx="2" ry="2" />
<text  x="611.24" y="447.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*BTree).Get (70 samples, 0.01%)</title><rect x="464.0" y="501" width="0.1" height="15.0" fill="rgb(212,205,17)" rx="2" ry="2" />
<text  x="467.01" y="511.5" ></text>
</g>
<g >
<title>runtime.checkTimers (81 samples, 0.01%)</title><rect x="97.1" y="805" width="0.2" height="15.0" fill="rgb(207,50,37)" rx="2" ry="2" />
<text  x="100.12" y="815.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (99 samples, 0.01%)</title><rect x="166.3" y="661" width="0.1" height="15.0" fill="rgb(239,167,27)" rx="2" ry="2" />
<text  x="169.27" y="671.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (65 samples, 0.01%)</title><rect x="972.8" y="501" width="0.1" height="15.0" fill="rgb(224,183,36)" rx="2" ry="2" />
<text  x="975.78" y="511.5" ></text>
</g>
<g >
<title>runtime.mallocgc (80 samples, 0.01%)</title><rect x="526.8" y="517" width="0.2" height="15.0" fill="rgb(206,123,9)" rx="2" ry="2" />
<text  x="529.82" y="527.5" ></text>
</g>
<g >
<title>tg/ethdb.(*MutationItem).Less (93 samples, 0.01%)</title><rect x="510.8" y="309" width="0.2" height="15.0" fill="rgb(216,117,5)" rx="2" ry="2" />
<text  x="513.83" y="319.5" ></text>
</g>
<g >
<title>runtime.mapaccess1 (129 samples, 0.02%)</title><rect x="203.4" y="421" width="0.2" height="15.0" fill="rgb(228,229,52)" rx="2" ry="2" />
<text  x="206.39" y="431.5" ></text>
</g>
<g >
<title>tg/core/state.(*stateObject).GetCommittedState (544 samples, 0.08%)</title><rect x="418.7" y="421" width="1.0" height="15.0" fill="rgb(245,207,20)" rx="2" ry="2" />
<text  x="421.74" y="431.5" ></text>
</g>
<g >
<title>tg/eth/downloader.(*Downloader).SpawnBodyDownloadStage (98 samples, 0.01%)</title><rect x="232.3" y="725" width="0.2" height="15.0" fill="rgb(225,140,30)" rx="2" ry="2" />
<text  x="235.32" y="735.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (130 samples, 0.02%)</title><rect x="1010.2" y="533" width="0.3" height="15.0" fill="rgb(253,167,20)" rx="2" ry="2" />
<text  x="1013.25" y="543.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*BTree).Get (11,102 samples, 1.60%)</title><rect x="563.2" y="501" width="18.8" height="15.0" fill="rgb(207,165,27)" rx="2" ry="2" />
<text  x="566.17" y="511.5" ></text>
</g>
<g >
<title>runtime.cgocall (132 samples, 0.02%)</title><rect x="1049.6" y="549" width="0.2" height="15.0" fill="rgb(226,188,28)" rx="2" ry="2" />
<text  x="1052.57" y="559.5" ></text>
</g>
<g >
<title>sort.Search (98 samples, 0.01%)</title><rect x="491.2" y="261" width="0.2" height="15.0" fill="rgb(253,180,23)" rx="2" ry="2" />
<text  x="494.20" y="271.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).AddLog (101 samples, 0.01%)</title><rect x="377.3" y="453" width="0.2" height="15.0" fill="rgb(250,134,6)" rx="2" ry="2" />
<text  x="380.28" y="463.5" ></text>
</g>
<g >
<title>runtime.makeslice (83 samples, 0.01%)</title><rect x="234.9" y="645" width="0.2" height="15.0" fill="rgb(229,133,19)" rx="2" ry="2" />
<text  x="237.95" y="655.5" ></text>
</g>
<g >
<title>sync.(*Pool).Get (68 samples, 0.01%)</title><rect x="623.6" y="597" width="0.2" height="15.0" fill="rgb(212,173,25)" rx="2" ry="2" />
<text  x="626.64" y="607.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVMInterpreter).Run (470 samples, 0.07%)</title><rect x="450.7" y="421" width="0.8" height="15.0" fill="rgb(223,184,15)" rx="2" ry="2" />
<text  x="453.70" y="431.5" ></text>
</g>
<g >
<title>runtime.mallocgc (98 samples, 0.01%)</title><rect x="239.4" y="597" width="0.2" height="15.0" fill="rgb(230,174,38)" rx="2" ry="2" />
<text  x="242.44" y="607.5" ></text>
</g>
<g >
<title>sort.symMerge (243 samples, 0.03%)</title><rect x="143.7" y="469" width="0.4" height="15.0" fill="rgb(248,228,15)" rx="2" ry="2" />
<text  x="146.68" y="479.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).DelegateCall (522 samples, 0.08%)</title><rect x="414.2" y="389" width="0.9" height="15.0" fill="rgb(238,30,0)" rx="2" ry="2" />
<text  x="417.23" y="399.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).Call (164 samples, 0.02%)</title><rect x="393.7" y="261" width="0.2" height="15.0" fill="rgb(224,103,33)" rx="2" ry="2" />
<text  x="396.65" y="271.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).GetOrNewStateObject (167 samples, 0.02%)</title><rect x="266.1" y="629" width="0.3" height="15.0" fill="rgb(246,80,19)" rx="2" ry="2" />
<text  x="269.09" y="639.5" ></text>
</g>
<g >
<title>sort.Search (2,317 samples, 0.33%)</title><rect x="683.3" y="549" width="4.0" height="15.0" fill="rgb(249,168,18)" rx="2" ry="2" />
<text  x="686.33" y="559.5" ></text>
</g>
<g >
<title>runtime.mallocgc (83 samples, 0.01%)</title><rect x="1031.4" y="613" width="0.2" height="15.0" fill="rgb(252,57,3)" rx="2" ry="2" />
<text  x="1034.43" y="623.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).StaticCall (7,354 samples, 1.06%)</title><rect x="597.9" y="581" width="12.5" height="15.0" fill="rgb(244,91,41)" rx="2" ry="2" />
<text  x="600.92" y="591.5" ></text>
</g>
<g >
<title>tg/core/types.traverseInLexOrder (7,009 samples, 1.01%)</title><rect x="1107.2" y="725" width="11.9" height="15.0" fill="rgb(239,17,31)" rx="2" ry="2" />
<text  x="1110.18" y="735.5" ></text>
</g>
<g >
<title>tg/eth/stagedsync.transformContractCodeKey (931 samples, 0.13%)</title><rect x="824.8" y="565" width="1.6" height="15.0" fill="rgb(249,61,52)" rx="2" ry="2" />
<text  x="827.79" y="575.5" ></text>
</g>
<g >
<title>bytes.Compare (98 samples, 0.01%)</title><rect x="993.2" y="229" width="0.1" height="15.0" fill="rgb(242,157,17)" rx="2" ry="2" />
<text  x="996.16" y="239.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find.func1 (142 samples, 0.02%)</title><rect x="527.4" y="405" width="0.3" height="15.0" fill="rgb(227,122,33)" rx="2" ry="2" />
<text  x="530.41" y="415.5" ></text>
</g>
<g >
<title>runtime.exitsyscallfast (93 samples, 0.01%)</title><rect x="926.6" y="405" width="0.2" height="15.0" fill="rgb(206,22,45)" rx="2" ry="2" />
<text  x="929.62" y="415.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (66 samples, 0.01%)</title><rect x="696.9" y="565" width="0.1" height="15.0" fill="rgb(206,148,49)" rx="2" ry="2" />
<text  x="699.88" y="575.5" ></text>
</g>
<g >
<title>tg/rlp.(*Stream).readFull (110 samples, 0.02%)</title><rect x="790.9" y="469" width="0.2" height="15.0" fill="rgb(241,189,30)" rx="2" ry="2" />
<text  x="793.87" y="479.5" ></text>
</g>
<g >
<title>tg/ethdb.(*mutation).Get (79 samples, 0.01%)</title><rect x="623.9" y="565" width="0.2" height="15.0" fill="rgb(229,97,31)" rx="2" ry="2" />
<text  x="626.95" y="575.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.(*state).padAndPermute (97 samples, 0.01%)</title><rect x="769.3" y="597" width="0.2" height="15.0" fill="rgb(240,199,51)" rx="2" ry="2" />
<text  x="772.33" y="607.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).GetNonce (184 samples, 0.03%)</title><rect x="265.6" y="645" width="0.4" height="15.0" fill="rgb(214,173,53)" rx="2" ry="2" />
<text  x="268.65" y="655.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).CreateAccount (93 samples, 0.01%)</title><rect x="460.0" y="549" width="0.1" height="15.0" fill="rgb(247,140,15)" rx="2" ry="2" />
<text  x="462.96" y="559.5" ></text>
</g>
<g >
<title>tg/core/vm.opPush1 (455 samples, 0.07%)</title><rect x="428.5" y="533" width="0.8" height="15.0" fill="rgb(231,124,52)" rx="2" ry="2" />
<text  x="431.54" y="543.5" ></text>
</g>
<g >
<title>runtime.mallocgc (174 samples, 0.03%)</title><rect x="170.8" y="613" width="0.3" height="15.0" fill="rgb(242,226,9)" rx="2" ry="2" />
<text  x="173.84" y="623.5" ></text>
</g>
<g >
<title>runtime.slicebytetostring (180 samples, 0.03%)</title><rect x="1039.5" y="629" width="0.3" height="15.0" fill="rgb(216,112,37)" rx="2" ry="2" />
<text  x="1042.54" y="639.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (114 samples, 0.02%)</title><rect x="340.1" y="437" width="0.2" height="15.0" fill="rgb(234,119,2)" rx="2" ry="2" />
<text  x="343.15" y="447.5" ></text>
</g>
<g >
<title>sort.swapRange (224 samples, 0.03%)</title><rect x="986.9" y="469" width="0.4" height="15.0" fill="rgb(208,93,8)" rx="2" ry="2" />
<text  x="989.92" y="479.5" ></text>
</g>
<g >
<title>tg/eth/stagedsync.promoteLogIndex.func1.1 (388 samples, 0.06%)</title><rect x="157.6" y="613" width="0.6" height="15.0" fill="rgb(246,195,23)" rx="2" ry="2" />
<text  x="160.59" y="623.5" ></text>
</g>
<g >
<title>tg/core/vm.(*Memory).GetPtr (86 samples, 0.01%)</title><rect x="320.2" y="597" width="0.2" height="15.0" fill="rgb(236,121,54)" rx="2" ry="2" />
<text  x="323.22" y="607.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (170 samples, 0.02%)</title><rect x="460.6" y="469" width="0.3" height="15.0" fill="rgb(245,155,51)" rx="2" ry="2" />
<text  x="463.63" y="479.5" ></text>
</g>
<g >
<title>runtime.mapassign (64 samples, 0.01%)</title><rect x="445.2" y="469" width="0.1" height="15.0" fill="rgb(232,50,53)" rx="2" ry="2" />
<text  x="448.16" y="479.5" ></text>
</g>
<g >
<title>runtime.systemstack (127 samples, 0.02%)</title><rect x="36.7" y="821" width="0.2" height="15.0" fill="rgb(235,90,23)" rx="2" ry="2" />
<text  x="39.71" y="831.5" ></text>
</g>
<g >
<title>reflect.Value.Field (116 samples, 0.02%)</title><rect x="1108.8" y="533" width="0.2" height="15.0" fill="rgb(248,1,14)" rx="2" ry="2" />
<text  x="1111.76" y="543.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find (249 samples, 0.04%)</title><rect x="282.5" y="533" width="0.5" height="15.0" fill="rgb(238,110,47)" rx="2" ry="2" />
<text  x="285.55" y="543.5" ></text>
</g>
<g >
<title>tg/common/etl.(*oldestEntrySortableBuffer).Swap (131 samples, 0.02%)</title><rect x="865.3" y="373" width="0.3" height="15.0" fill="rgb(207,59,40)" rx="2" ry="2" />
<text  x="868.33" y="383.5" ></text>
</g>
<g >
<title>tg/core/vm/stack.New (69 samples, 0.01%)</title><rect x="623.6" y="613" width="0.2" height="15.0" fill="rgb(233,31,14)" rx="2" ry="2" />
<text  x="626.64" y="623.5" ></text>
</g>
<g >
<title>bytes.Compare (144 samples, 0.02%)</title><rect x="1070.7" y="453" width="0.2" height="15.0" fill="rgb(208,105,30)" rx="2" ry="2" />
<text  x="1073.68" y="463.5" ></text>
</g>
<g >
<title>runtime.resettimer (70 samples, 0.01%)</title><rect x="10.7" y="853" width="0.1" height="15.0" fill="rgb(253,71,39)" rx="2" ry="2" />
<text  x="13.68" y="863.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).GetOrNewStateObject (216 samples, 0.03%)</title><rect x="594.3" y="565" width="0.4" height="15.0" fill="rgb(242,179,29)" rx="2" ry="2" />
<text  x="597.33" y="575.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (69 samples, 0.01%)</title><rect x="788.5" y="421" width="0.1" height="15.0" fill="rgb(238,17,53)" rx="2" ry="2" />
<text  x="791.51" y="431.5" ></text>
</g>
<g >
<title>sort.rotate (299 samples, 0.04%)</title><rect x="180.8" y="437" width="0.5" height="15.0" fill="rgb(232,18,34)" rx="2" ry="2" />
<text  x="183.82" y="447.5" ></text>
</g>
<g >
<title>runtime.convT64 (83 samples, 0.01%)</title><rect x="929.4" y="437" width="0.1" height="15.0" fill="rgb(215,62,21)" rx="2" ry="2" />
<text  x="932.40" y="447.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).iterate (64 samples, 0.01%)</title><rect x="1131.4" y="725" width="0.1" height="15.0" fill="rgb(212,57,5)" rx="2" ry="2" />
<text  x="1134.40" y="735.5" ></text>
</g>
<g >
<title>runtime.newobject (93 samples, 0.01%)</title><rect x="1099.6" y="549" width="0.1" height="15.0" fill="rgb(216,163,26)" rx="2" ry="2" />
<text  x="1102.59" y="559.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).AddRefund (67 samples, 0.01%)</title><rect x="363.2" y="517" width="0.1" height="15.0" fill="rgb(210,67,38)" rx="2" ry="2" />
<text  x="366.18" y="527.5" ></text>
</g>
<g >
<title>tg/core/vm.opSload (583 samples, 0.08%)</title><rect x="418.7" y="469" width="1.0" height="15.0" fill="rgb(226,180,2)" rx="2" ry="2" />
<text  x="421.67" y="479.5" ></text>
</g>
<g >
<title>runtime.mapassign (97 samples, 0.01%)</title><rect x="490.9" y="405" width="0.2" height="15.0" fill="rgb(245,97,7)" rx="2" ry="2" />
<text  x="493.89" y="415.5" ></text>
</g>
<g >
<title>tg/ethdb.(*TxDb).Get (484 samples, 0.07%)</title><rect x="511.5" y="437" width="0.8" height="15.0" fill="rgb(254,14,19)" rx="2" ry="2" />
<text  x="514.49" y="447.5" ></text>
</g>
<g >
<title>tg/ethdb.(*LmdbCursor).set (1,519 samples, 0.22%)</title><rect x="283.2" y="549" width="2.5" height="15.0" fill="rgb(253,33,34)" rx="2" ry="2" />
<text  x="286.17" y="559.5" ></text>
</g>
<g >
<title>bytes.Compare (1,036 samples, 0.15%)</title><rect x="565.3" y="357" width="1.8" height="15.0" fill="rgb(236,150,30)" rx="2" ry="2" />
<text  x="568.32" y="367.5" ></text>
</g>
<g >
<title>crypto/aes.(*aesCipherAsm).Encrypt (385 samples, 0.06%)</title><rect x="1177.7" y="773" width="0.6" height="15.0" fill="rgb(247,104,48)" rx="2" ry="2" />
<text  x="1180.66" y="783.5" ></text>
</g>
<g >
<title>tg/common/etl.NewCollector.func1 (493 samples, 0.07%)</title><rect x="1040.2" y="597" width="0.8" height="15.0" fill="rgb(245,216,23)" rx="2" ry="2" />
<text  x="1043.19" y="607.5" ></text>
</g>
<g >
<title>tg/core/vm.opStaticCall (352 samples, 0.05%)</title><rect x="608.9" y="469" width="0.6" height="15.0" fill="rgb(214,23,10)" rx="2" ry="2" />
<text  x="611.89" y="479.5" ></text>
</g>
<g >
<title>runtime.add (65 samples, 0.01%)</title><rect x="36.6" y="789" width="0.1" height="15.0" fill="rgb(210,81,54)" rx="2" ry="2" />
<text  x="39.60" y="799.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find.func1 (2,986 samples, 0.43%)</title><rect x="708.6" y="501" width="5.1" height="15.0" fill="rgb(207,197,47)" rx="2" ry="2" />
<text  x="711.59" y="511.5" ></text>
</g>
<g >
<title>tg/ethdb.(*LmdbCursor).Delete (492 samples, 0.07%)</title><rect x="797.3" y="581" width="0.9" height="15.0" fill="rgb(233,222,22)" rx="2" ry="2" />
<text  x="800.32" y="591.5" ></text>
</g>
<g >
<title>tg/common/changeset.Walk (8,837 samples, 1.27%)</title><rect x="1031.3" y="709" width="15.0" height="15.0" fill="rgb(217,69,11)" rx="2" ry="2" />
<text  x="1034.29" y="719.5" ></text>
</g>
<g >
<title>github.com/holiman/uint256.udivrem (231 samples, 0.03%)</title><rect x="417.6" y="437" width="0.4" height="15.0" fill="rgb(210,17,28)" rx="2" ry="2" />
<text  x="420.64" y="447.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.keccakF1600 (369 samples, 0.05%)</title><rect x="749.0" y="613" width="0.6" height="15.0" fill="rgb(234,48,23)" rx="2" ry="2" />
<text  x="751.98" y="623.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*bufioEncWriter).writestr (119 samples, 0.02%)</title><rect x="1040.7" y="453" width="0.2" height="15.0" fill="rgb(230,56,48)" rx="2" ry="2" />
<text  x="1043.67" y="463.5" ></text>
</g>
<g >
<title>bytes.Compare (1,024 samples, 0.15%)</title><rect x="684.2" y="517" width="1.7" height="15.0" fill="rgb(233,38,16)" rx="2" ry="2" />
<text  x="687.17" y="527.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (260 samples, 0.04%)</title><rect x="323.2" y="437" width="0.4" height="15.0" fill="rgb(254,95,19)" rx="2" ry="2" />
<text  x="326.15" y="447.5" ></text>
</g>
<g >
<title>tg/eth/stagedsync.needFlush (1,064 samples, 0.15%)</title><rect x="158.3" y="709" width="1.8" height="15.0" fill="rgb(249,184,54)" rx="2" ry="2" />
<text  x="161.33" y="719.5" ></text>
</g>
<g >
<title>runtime.cgocall (204 samples, 0.03%)</title><rect x="960.7" y="565" width="0.3" height="15.0" fill="rgb(239,41,42)" rx="2" ry="2" />
<text  x="963.65" y="575.5" ></text>
</g>
<g >
<title>runtime.newobject (237 samples, 0.03%)</title><rect x="626.5" y="645" width="0.4" height="15.0" fill="rgb(241,21,18)" rx="2" ry="2" />
<text  x="629.51" y="655.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (83 samples, 0.01%)</title><rect x="329.6" y="549" width="0.1" height="15.0" fill="rgb(249,85,37)" rx="2" ry="2" />
<text  x="332.59" y="559.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (110 samples, 0.02%)</title><rect x="720.1" y="549" width="0.2" height="15.0" fill="rgb(206,32,7)" rx="2" ry="2" />
<text  x="723.15" y="559.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.(*state).padAndPermute (129 samples, 0.02%)</title><rect x="449.8" y="437" width="0.2" height="15.0" fill="rgb(223,89,8)" rx="2" ry="2" />
<text  x="452.82" y="447.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (266 samples, 0.04%)</title><rect x="461.2" y="453" width="0.5" height="15.0" fill="rgb(240,179,11)" rx="2" ry="2" />
<text  x="464.23" y="463.5" ></text>
</g>
<g >
<title>runtime.convT2E (151 samples, 0.02%)</title><rect x="816.4" y="645" width="0.2" height="15.0" fill="rgb(232,124,48)" rx="2" ry="2" />
<text  x="819.38" y="655.5" ></text>
</g>
<g >
<title>sort.symMerge (1,508 samples, 0.22%)</title><rect x="991.4" y="325" width="2.6" height="15.0" fill="rgb(254,150,0)" rx="2" ry="2" />
<text  x="994.43" y="335.5" ></text>
</g>
<g >
<title>runtime.getitab (62 samples, 0.01%)</title><rect x="554.2" y="565" width="0.1" height="15.0" fill="rgb(237,201,4)" rx="2" ry="2" />
<text  x="557.18" y="575.5" ></text>
</g>
<g >
<title>tg/core/state.(*stateObject).GetState (64 samples, 0.01%)</title><rect x="420.3" y="373" width="0.1" height="15.0" fill="rgb(246,144,35)" rx="2" ry="2" />
<text  x="423.26" y="383.5" ></text>
</g>
<g >
<title>tg/core/vm.makeDup.func1 (77 samples, 0.01%)</title><rect x="381.3" y="405" width="0.2" height="15.0" fill="rgb(237,108,40)" rx="2" ry="2" />
<text  x="384.34" y="415.5" ></text>
</g>
<g >
<title>bytes.Compare (192 samples, 0.03%)</title><rect x="183.5" y="373" width="0.4" height="15.0" fill="rgb(218,116,52)" rx="2" ry="2" />
<text  x="186.54" y="383.5" ></text>
</g>
<g >
<title>sort.Search (763 samples, 0.11%)</title><rect x="256.6" y="501" width="1.3" height="15.0" fill="rgb(208,150,50)" rx="2" ry="2" />
<text  x="259.61" y="511.5" ></text>
</g>
<g >
<title>runtime.scanstack (204 samples, 0.03%)</title><rect x="60.0" y="773" width="0.4" height="15.0" fill="rgb(247,208,47)" rx="2" ry="2" />
<text  x="63.04" y="783.5" ></text>
</g>
<g >
<title>runtime.cgoCheckPointer (130 samples, 0.02%)</title><rect x="932.1" y="437" width="0.2" height="15.0" fill="rgb(249,163,2)" rx="2" ry="2" />
<text  x="935.06" y="447.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring/roaring64.(*roaringArray64).insertNewKeyValueAt (70 samples, 0.01%)</title><rect x="1052.3" y="597" width="0.1" height="15.0" fill="rgb(242,224,12)" rx="2" ry="2" />
<text  x="1055.31" y="607.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).Get (75 samples, 0.01%)</title><rect x="321.4" y="485" width="0.1" height="15.0" fill="rgb(227,150,32)" rx="2" ry="2" />
<text  x="324.40" y="495.5" ></text>
</g>
<g >
<title>runtime.cgocall (934 samples, 0.13%)</title><rect x="930.5" y="421" width="1.6" height="15.0" fill="rgb(217,118,4)" rx="2" ry="2" />
<text  x="933.47" y="431.5" ></text>
</g>
<g >
<title>runtime.(*itabTableType).find (96 samples, 0.01%)</title><rect x="656.1" y="597" width="0.1" height="15.0" fill="rgb(230,85,9)" rx="2" ry="2" />
<text  x="659.07" y="607.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).Put (1,016 samples, 0.15%)</title><rect x="820.6" y="565" width="1.7" height="15.0" fill="rgb(235,217,39)" rx="2" ry="2" />
<text  x="823.55" y="575.5" ></text>
</g>
<g >
<title>tg/core/types.(*Log).EncodeRLP (1,539 samples, 0.22%)</title><rect x="764.2" y="437" width="2.6" height="15.0" fill="rgb(234,115,11)" rx="2" ry="2" />
<text  x="767.18" y="447.5" ></text>
</g>
<g >
<title>tg/core/state.(*stateObject).GetCommittedState (63 samples, 0.01%)</title><rect x="384.6" y="229" width="0.1" height="15.0" fill="rgb(205,178,13)" rx="2" ry="2" />
<text  x="387.56" y="239.5" ></text>
</g>
<g >
<title>tg/rlp.(*Stream).readFull (74 samples, 0.01%)</title><rect x="199.3" y="341" width="0.2" height="15.0" fill="rgb(209,106,41)" rx="2" ry="2" />
<text  x="202.32" y="351.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*BTree).Get (290 samples, 0.04%)</title><rect x="418.9" y="373" width="0.5" height="15.0" fill="rgb(249,184,32)" rx="2" ry="2" />
<text  x="421.86" y="383.5" ></text>
</g>
<g >
<title>runtime.growslice (436 samples, 0.06%)</title><rect x="1097.6" y="581" width="0.8" height="15.0" fill="rgb(232,8,6)" rx="2" ry="2" />
<text  x="1100.65" y="591.5" ></text>
</g>
<g >
<title>tg/core/state.(*stateObject).Code (229 samples, 0.03%)</title><rect x="370.3" y="485" width="0.4" height="15.0" fill="rgb(214,113,38)" rx="2" ry="2" />
<text  x="373.32" y="495.5" ></text>
</g>
<g >
<title>tg/ethdb.(*mutation).Get (853 samples, 0.12%)</title><rect x="527.2" y="533" width="1.4" height="15.0" fill="rgb(251,112,19)" rx="2" ry="2" />
<text  x="530.17" y="543.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.fastpathDecodeTypeSwitch (1,923 samples, 0.28%)</title><rect x="968.8" y="565" width="3.2" height="15.0" fill="rgb(209,20,36)" rx="2" ry="2" />
<text  x="971.76" y="575.5" ></text>
</g>
<g >
<title>sort.Search (254 samples, 0.04%)</title><rect x="440.1" y="373" width="0.4" height="15.0" fill="rgb(209,163,4)" rx="2" ry="2" />
<text  x="443.09" y="383.5" ></text>
</g>
<g >
<title>tg/core/vm/stack.(*Stack).Push (126 samples, 0.02%)</title><rect x="609.8" y="533" width="0.3" height="15.0" fill="rgb(229,161,44)" rx="2" ry="2" />
<text  x="612.84" y="543.5" ></text>
</g>
<g >
<title>tg/crypto/secp256k1.(*BitCurve).ScalarMult.func1 (60 samples, 0.01%)</title><rect x="1187.5" y="677" width="0.1" height="15.0" fill="rgb(228,138,40)" rx="2" ry="2" />
<text  x="1190.51" y="687.5" ></text>
</g>
<g >
<title>runtime.newobject (71 samples, 0.01%)</title><rect x="656.7" y="645" width="0.1" height="15.0" fill="rgb(229,97,34)" rx="2" ry="2" />
<text  x="659.68" y="655.5" ></text>
</g>
<g >
<title>runtime.growslice (86 samples, 0.01%)</title><rect x="1059.8" y="581" width="0.2" height="15.0" fill="rgb(216,171,48)" rx="2" ry="2" />
<text  x="1062.84" y="591.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.(*roaringArray).insertNewKeyValueAt (244 samples, 0.04%)</title><rect x="1091.2" y="645" width="0.4" height="15.0" fill="rgb(210,16,38)" rx="2" ry="2" />
<text  x="1094.19" y="655.5" ></text>
</g>
<g >
<title>sort.quickSort_func (187 samples, 0.03%)</title><rect x="961.6" y="645" width="0.3" height="15.0" fill="rgb(218,96,15)" rx="2" ry="2" />
<text  x="964.57" y="655.5" ></text>
</g>
<g >
<title>runtime.startm (277 samples, 0.04%)</title><rect x="122.6" y="757" width="0.5" height="15.0" fill="rgb(227,212,37)" rx="2" ry="2" />
<text  x="125.63" y="767.5" ></text>
</g>
<g >
<title>sort.Search (131 samples, 0.02%)</title><rect x="607.1" y="341" width="0.2" height="15.0" fill="rgb(216,161,24)" rx="2" ry="2" />
<text  x="610.08" y="351.5" ></text>
</g>
<g >
<title>bytes.Compare (191 samples, 0.03%)</title><rect x="815.3" y="613" width="0.3" height="15.0" fill="rgb(243,14,37)" rx="2" ry="2" />
<text  x="818.30" y="623.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).AddBalance (83 samples, 0.01%)</title><rect x="598.0" y="565" width="0.2" height="15.0" fill="rgb(235,189,47)" rx="2" ry="2" />
<text  x="601.04" y="575.5" ></text>
</g>
<g >
<title>sort.swapRange (356 samples, 0.05%)</title><rect x="179.1" y="453" width="0.6" height="15.0" fill="rgb(229,191,26)" rx="2" ry="2" />
<text  x="182.11" y="463.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb._Cfunc_lmdbgo_mdb_cursor_put2 (204 samples, 0.03%)</title><rect x="960.7" y="581" width="0.3" height="15.0" fill="rgb(209,30,45)" rx="2" ry="2" />
<text  x="963.65" y="591.5" ></text>
</g>
<g >
<title>tg/core/vm.opCreate2 (166 samples, 0.02%)</title><rect x="409.7" y="533" width="0.3" height="15.0" fill="rgb(242,151,27)" rx="2" ry="2" />
<text  x="412.68" y="543.5" ></text>
</g>
<g >
<title>runtime.mallocgc (257 samples, 0.04%)</title><rect x="243.3" y="533" width="0.4" height="15.0" fill="rgb(237,71,3)" rx="2" ry="2" />
<text  x="246.26" y="543.5" ></text>
</g>
<g >
<title>tg/core/vm.opPush1 (90 samples, 0.01%)</title><rect x="388.8" y="405" width="0.1" height="15.0" fill="rgb(222,92,44)" rx="2" ry="2" />
<text  x="391.79" y="415.5" ></text>
</g>
<g >
<title>tg/ethdb.(*mutation).Get (660 samples, 0.09%)</title><rect x="323.1" y="517" width="1.1" height="15.0" fill="rgb(216,179,8)" rx="2" ry="2" />
<text  x="326.12" y="527.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).Put (1,730 samples, 0.25%)</title><rect x="780.1" y="661" width="2.9" height="15.0" fill="rgb(250,111,21)" rx="2" ry="2" />
<text  x="783.08" y="671.5" ></text>
</g>
<g >
<title>tg/crypto/bn256/cloudflare.miller (120 samples, 0.02%)</title><rect x="405.0" y="373" width="0.2" height="15.0" fill="rgb(245,0,48)" rx="2" ry="2" />
<text  x="408.02" y="383.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (119 samples, 0.02%)</title><rect x="644.1" y="629" width="0.2" height="15.0" fill="rgb(248,219,0)" rx="2" ry="2" />
<text  x="647.07" y="639.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (163 samples, 0.02%)</title><rect x="996.1" y="549" width="0.3" height="15.0" fill="rgb(215,179,31)" rx="2" ry="2" />
<text  x="999.13" y="559.5" ></text>
</g>
<g >
<title>runtime.exitsyscall (234 samples, 0.03%)</title><rect x="782.6" y="597" width="0.4" height="15.0" fill="rgb(226,166,2)" rx="2" ry="2" />
<text  x="785.57" y="607.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).GetOrNewStateObject (174 samples, 0.03%)</title><rect x="269.3" y="597" width="0.3" height="15.0" fill="rgb(234,128,6)" rx="2" ry="2" />
<text  x="272.27" y="607.5" ></text>
</g>
<g >
<title>cmpbody (71 samples, 0.01%)</title><rect x="523.2" y="357" width="0.1" height="15.0" fill="rgb(230,120,22)" rx="2" ry="2" />
<text  x="526.18" y="367.5" ></text>
</g>
<g >
<title>runtime.evacuate (108 samples, 0.02%)</title><rect x="261.4" y="565" width="0.2" height="15.0" fill="rgb(219,183,4)" rx="2" ry="2" />
<text  x="264.37" y="575.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVMInterpreter).Run (69 samples, 0.01%)</title><rect x="493.3" y="293" width="0.1" height="15.0" fill="rgb(210,107,21)" rx="2" ry="2" />
<text  x="496.31" y="303.5" ></text>
</g>
<g >
<title>runtime.growslice (277 samples, 0.04%)</title><rect x="807.2" y="549" width="0.4" height="15.0" fill="rgb(206,35,11)" rx="2" ry="2" />
<text  x="810.16" y="559.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).getStateObject (191 samples, 0.03%)</title><rect x="264.5" y="613" width="0.3" height="15.0" fill="rgb(252,81,42)" rx="2" ry="2" />
<text  x="267.50" y="623.5" ></text>
</g>
<g >
<title>runtime.mapaccess2_faststr (66 samples, 0.01%)</title><rect x="1022.1" y="565" width="0.1" height="15.0" fill="rgb(248,131,40)" rx="2" ry="2" />
<text  x="1025.06" y="575.5" ></text>
</g>
<g >
<title>tg/core/vm.opSload (73 samples, 0.01%)</title><rect x="608.8" y="469" width="0.1" height="15.0" fill="rgb(205,101,48)" rx="2" ry="2" />
<text  x="611.77" y="479.5" ></text>
</g>
<g >
<title>reflect.valueInterface (855 samples, 0.12%)</title><rect x="743.1" y="501" width="1.5" height="15.0" fill="rgb(211,226,28)" rx="2" ry="2" />
<text  x="746.12" y="511.5" ></text>
</g>
<g >
<title>runtime.exitsyscallfast (157 samples, 0.02%)</title><rect x="1127.4" y="565" width="0.2" height="15.0" fill="rgb(215,163,44)" rx="2" ry="2" />
<text  x="1130.37" y="575.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).GetBalance (81 samples, 0.01%)</title><rect x="268.1" y="613" width="0.1" height="15.0" fill="rgb(234,162,13)" rx="2" ry="2" />
<text  x="271.06" y="623.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Txn).Get (125 samples, 0.02%)</title><rect x="231.4" y="629" width="0.2" height="15.0" fill="rgb(221,125,18)" rx="2" ry="2" />
<text  x="234.35" y="639.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVMInterpreter).Run (60 samples, 0.01%)</title><rect x="391.6" y="293" width="0.1" height="15.0" fill="rgb(209,182,26)" rx="2" ry="2" />
<text  x="394.62" y="303.5" ></text>
</g>
<g >
<title>tg/crypto/bn256/cloudflare.miller (467 samples, 0.07%)</title><rect x="502.9" y="309" width="0.8" height="15.0" fill="rgb(235,85,43)" rx="2" ry="2" />
<text  x="505.88" y="319.5" ></text>
</g>
<g >
<title>runtime.(*mheap).allocSpan (66 samples, 0.01%)</title><rect x="658.3" y="517" width="0.2" height="15.0" fill="rgb(221,52,13)" rx="2" ry="2" />
<text  x="661.34" y="527.5" ></text>
</g>
<g >
<title>runtime.newobject (385 samples, 0.06%)</title><rect x="696.0" y="613" width="0.7" height="15.0" fill="rgb(226,209,27)" rx="2" ry="2" />
<text  x="699.00" y="623.5" ></text>
</g>
<g >
<title>tg/core/vm.opExtCodeSize (92 samples, 0.01%)</title><rect x="488.6" y="469" width="0.1" height="15.0" fill="rgb(210,181,32)" rx="2" ry="2" />
<text  x="491.56" y="479.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (77 samples, 0.01%)</title><rect x="226.1" y="309" width="0.1" height="15.0" fill="rgb(242,74,15)" rx="2" ry="2" />
<text  x="229.11" y="319.5" ></text>
</g>
<g >
<title>tg/ethdb.(*TxDb).Get (74 samples, 0.01%)</title><rect x="423.0" y="453" width="0.1" height="15.0" fill="rgb(249,16,26)" rx="2" ry="2" />
<text  x="425.99" y="463.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (107 samples, 0.02%)</title><rect x="967.1" y="549" width="0.2" height="15.0" fill="rgb(206,211,24)" rx="2" ry="2" />
<text  x="970.14" y="559.5" ></text>
</g>
<g >
<title>runtime.mapaccess1 (75 samples, 0.01%)</title><rect x="229.9" y="549" width="0.2" height="15.0" fill="rgb(250,23,2)" rx="2" ry="2" />
<text  x="232.94" y="559.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (223 samples, 0.03%)</title><rect x="464.4" y="485" width="0.4" height="15.0" fill="rgb(229,56,46)" rx="2" ry="2" />
<text  x="467.45" y="495.5" ></text>
</g>
<g >
<title>runtime.(*mheap).freeSpan (3,777 samples, 0.54%)</title><rect x="25.9" y="821" width="6.4" height="15.0" fill="rgb(233,111,24)" rx="2" ry="2" />
<text  x="28.86" y="831.5" ></text>
</g>
<g >
<title>tg/crypto/secp256k1.RecoverPubkeyWithContext (18,547 samples, 2.67%)</title><rect x="1134.6" y="805" width="31.5" height="15.0" fill="rgb(212,190,24)" rx="2" ry="2" />
<text  x="1137.64" y="815.5" >tg..</text>
</g>
<g >
<title>runtime.mallocgc (103 samples, 0.01%)</title><rect x="1090.6" y="629" width="0.2" height="15.0" fill="rgb(235,61,17)" rx="2" ry="2" />
<text  x="1093.60" y="639.5" ></text>
</g>
<g >
<title>runtime.(*mspan).sweep (59 samples, 0.01%)</title><rect x="36.8" y="709" width="0.1" height="15.0" fill="rgb(226,0,12)" rx="2" ry="2" />
<text  x="39.81" y="719.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).getStateObject (82 samples, 0.01%)</title><rect x="623.9" y="597" width="0.2" height="15.0" fill="rgb(213,173,36)" rx="2" ry="2" />
<text  x="626.94" y="607.5" ></text>
</g>
<g >
<title>runtime.newarray (297 samples, 0.04%)</title><rect x="669.6" y="581" width="0.5" height="15.0" fill="rgb(210,20,14)" rx="2" ry="2" />
<text  x="672.62" y="591.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (166 samples, 0.02%)</title><rect x="627.5" y="565" width="0.3" height="15.0" fill="rgb(240,134,24)" rx="2" ry="2" />
<text  x="630.54" y="575.5" ></text>
</g>
<g >
<title>tg/core/vm.opSload (1,708 samples, 0.25%)</title><rect x="509.4" y="533" width="2.9" height="15.0" fill="rgb(238,98,48)" rx="2" ry="2" />
<text  x="512.42" y="543.5" ></text>
</g>
<g >
<title>tg/common.Stopped (186 samples, 0.03%)</title><rect x="823.1" y="581" width="0.3" height="15.0" fill="rgb(222,151,3)" rx="2" ry="2" />
<text  x="826.08" y="591.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (117 samples, 0.02%)</title><rect x="972.8" y="565" width="0.2" height="15.0" fill="rgb(237,147,12)" rx="2" ry="2" />
<text  x="975.75" y="575.5" ></text>
</g>
<g >
<title>tg/ethdb.(*LmdbKV).View (9,003 samples, 1.30%)</title><rect x="214.8" y="693" width="15.3" height="15.0" fill="rgb(228,219,45)" rx="2" ry="2" />
<text  x="217.79" y="703.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (95 samples, 0.01%)</title><rect x="977.5" y="501" width="0.2" height="15.0" fill="rgb(211,137,15)" rx="2" ry="2" />
<text  x="980.54" y="511.5" ></text>
</g>
<g >
<title>sort.rotate (203 samples, 0.03%)</title><rect x="184.5" y="357" width="0.4" height="15.0" fill="rgb(216,44,28)" rx="2" ry="2" />
<text  x="187.53" y="367.5" ></text>
</g>
<g >
<title>tg/ethdb.(*mutation).Get (85 samples, 0.01%)</title><rect x="598.2" y="517" width="0.2" height="15.0" fill="rgb(238,115,20)" rx="2" ry="2" />
<text  x="601.22" y="527.5" ></text>
</g>
<g >
<title>runtime.(*mheap).allocSpan (63 samples, 0.01%)</title><rect x="897.9" y="405" width="0.1" height="15.0" fill="rgb(234,212,32)" rx="2" ry="2" />
<text  x="900.87" y="415.5" ></text>
</g>
<g >
<title>runtime.growWork_faststr (889 samples, 0.13%)</title><rect x="982.2" y="549" width="1.6" height="15.0" fill="rgb(231,206,17)" rx="2" ry="2" />
<text  x="985.24" y="559.5" ></text>
</g>
<g >
<title>sort.symMerge (2,236 samples, 0.32%)</title><rect x="990.3" y="373" width="3.8" height="15.0" fill="rgb(236,127,17)" rx="2" ry="2" />
<text  x="993.25" y="383.5" ></text>
</g>
<g >
<title>tg/core/state.(*stateObject).AddBalance (452 samples, 0.07%)</title><rect x="262.8" y="613" width="0.8" height="15.0" fill="rgb(235,163,43)" rx="2" ry="2" />
<text  x="265.82" y="623.5" ></text>
</g>
<g >
<title>runtime.bgscavenge.func2 (1,228 samples, 0.18%)</title><rect x="10.8" y="837" width="2.1" height="15.0" fill="rgb(232,4,49)" rx="2" ry="2" />
<text  x="13.81" y="847.5" ></text>
</g>
<g >
<title>cmpbody (93 samples, 0.01%)</title><rect x="719.5" y="517" width="0.2" height="15.0" fill="rgb(211,133,41)" rx="2" ry="2" />
<text  x="722.52" y="527.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Txn).Get.func1 (8,186 samples, 1.18%)</title><rect x="835.0" y="485" width="13.9" height="15.0" fill="rgb(241,8,19)" rx="2" ry="2" />
<text  x="838.03" y="495.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (89 samples, 0.01%)</title><rect x="146.8" y="501" width="0.2" height="15.0" fill="rgb(242,119,50)" rx="2" ry="2" />
<text  x="149.81" y="511.5" ></text>
</g>
<g >
<title>tg/core/vm.RunPrecompiledContract (338 samples, 0.05%)</title><rect x="512.7" y="501" width="0.6" height="15.0" fill="rgb(221,95,7)" rx="2" ry="2" />
<text  x="515.72" y="511.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (376 samples, 0.05%)</title><rect x="661.6" y="597" width="0.7" height="15.0" fill="rgb(247,50,53)" rx="2" ry="2" />
<text  x="664.65" y="607.5" ></text>
</g>
<g >
<title>tg/rlp.EncodeToBytes (3,105 samples, 0.45%)</title><rect x="1107.8" y="677" width="5.3" height="15.0" fill="rgb(218,49,28)" rx="2" ry="2" />
<text  x="1110.84" y="687.5" ></text>
</g>
<g >
<title>github.com/holiman/uint256.(*Int).WriteToSlice (458 samples, 0.07%)</title><rect x="398.1" y="437" width="0.8" height="15.0" fill="rgb(240,228,2)" rx="2" ry="2" />
<text  x="401.13" y="447.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*Decoder).mustDecode (273 samples, 0.04%)</title><rect x="1047.1" y="629" width="0.5" height="15.0" fill="rgb(206,174,46)" rx="2" ry="2" />
<text  x="1050.10" y="639.5" ></text>
</g>
<g >
<title>tg/eth/downloader.(*queue).DeliverBodies.func1 (7,030 samples, 1.01%)</title><rect x="1107.2" y="757" width="11.9" height="15.0" fill="rgb(232,7,28)" rx="2" ry="2" />
<text  x="1110.16" y="767.5" ></text>
</g>
<g >
<title>runtime.mallocgc (74 samples, 0.01%)</title><rect x="1060.8" y="581" width="0.1" height="15.0" fill="rgb(250,3,14)" rx="2" ry="2" />
<text  x="1063.80" y="591.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (60 samples, 0.01%)</title><rect x="641.5" y="549" width="0.1" height="15.0" fill="rgb(247,54,48)" rx="2" ry="2" />
<text  x="644.50" y="559.5" ></text>
</g>
<g >
<title>tg/crypto/secp256k1.RecoverPubkeyWithContext (5,425 samples, 0.78%)</title><rect x="1166.7" y="789" width="9.2" height="15.0" fill="rgb(229,229,21)" rx="2" ry="2" />
<text  x="1169.73" y="799.5" ></text>
</g>
<g >
<title>reflect.valueInterface (554 samples, 0.08%)</title><rect x="1123.0" y="581" width="0.9" height="15.0" fill="rgb(240,204,22)" rx="2" ry="2" />
<text  x="1126.00" y="591.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (102 samples, 0.01%)</title><rect x="662.9" y="629" width="0.2" height="15.0" fill="rgb(251,213,36)" rx="2" ry="2" />
<text  x="665.92" y="639.5" ></text>
</g>
<g >
<title>tg/ethdb.(*mutation).Get (229 samples, 0.03%)</title><rect x="464.0" y="517" width="0.4" height="15.0" fill="rgb(213,172,0)" rx="2" ry="2" />
<text  x="467.01" y="527.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (102 samples, 0.01%)</title><rect x="561.1" y="405" width="0.2" height="15.0" fill="rgb(216,163,50)" rx="2" ry="2" />
<text  x="564.11" y="415.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.keccakF1600 (1,015 samples, 0.15%)</title><rect x="739.0" y="613" width="1.8" height="15.0" fill="rgb(222,169,3)" rx="2" ry="2" />
<text  x="742.05" y="623.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (124 samples, 0.02%)</title><rect x="317.6" y="469" width="0.3" height="15.0" fill="rgb(248,0,7)" rx="2" ry="2" />
<text  x="320.65" y="479.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).GetState (301 samples, 0.04%)</title><rect x="363.5" y="517" width="0.5" height="15.0" fill="rgb(230,124,54)" rx="2" ry="2" />
<text  x="366.48" y="527.5" ></text>
</g>
<g >
<title>tg/core/state.newObject (157 samples, 0.02%)</title><rect x="526.7" y="549" width="0.3" height="15.0" fill="rgb(220,185,32)" rx="2" ry="2" />
<text  x="529.70" y="559.5" ></text>
</g>
<g >
<title>sort.insertionSort (73 samples, 0.01%)</title><rect x="723.1" y="581" width="0.1" height="15.0" fill="rgb(251,122,45)" rx="2" ry="2" />
<text  x="726.12" y="591.5" ></text>
</g>
<g >
<title>runtime.makeslice (92 samples, 0.01%)</title><rect x="329.4" y="581" width="0.1" height="15.0" fill="rgb(241,153,18)" rx="2" ry="2" />
<text  x="332.39" y="591.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*encWr).writestr (885 samples, 0.13%)</title><rect x="194.2" y="437" width="1.5" height="15.0" fill="rgb(214,131,27)" rx="2" ry="2" />
<text  x="197.20" y="447.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (66 samples, 0.01%)</title><rect x="1109.7" y="405" width="0.1" height="15.0" fill="rgb(254,63,12)" rx="2" ry="2" />
<text  x="1112.66" y="415.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).GetCodeHash (59 samples, 0.01%)</title><rect x="341.6" y="565" width="0.1" height="15.0" fill="rgb(238,17,29)" rx="2" ry="2" />
<text  x="344.58" y="575.5" ></text>
</g>
<g >
<title>tg/rlp.(*Stream).Kind (67 samples, 0.01%)</title><rect x="219.1" y="389" width="0.1" height="15.0" fill="rgb(224,123,7)" rx="2" ry="2" />
<text  x="222.07" y="399.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVMInterpreter).Run (99 samples, 0.01%)</title><rect x="393.7" y="165" width="0.2" height="15.0" fill="rgb(253,191,31)" rx="2" ry="2" />
<text  x="396.70" y="175.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.(*state).padAndPermute (302 samples, 0.04%)</title><rect x="490.1" y="437" width="0.5" height="15.0" fill="rgb(205,84,17)" rx="2" ry="2" />
<text  x="493.06" y="447.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.fastpathDecodeTypeSwitch (213 samples, 0.03%)</title><rect x="959.4" y="597" width="0.4" height="15.0" fill="rgb(220,157,51)" rx="2" ry="2" />
<text  x="962.44" y="607.5" ></text>
</g>
<g >
<title>sync.(*Pool).Get (129 samples, 0.02%)</title><rect x="656.2" y="629" width="0.3" height="15.0" fill="rgb(220,205,7)" rx="2" ry="2" />
<text  x="659.24" y="639.5" ></text>
</g>
<g >
<title>tg/ethdb.(*mutation).Put (206 samples, 0.03%)</title><rect x="665.3" y="629" width="0.4" height="15.0" fill="rgb(226,155,1)" rx="2" ry="2" />
<text  x="668.32" y="639.5" ></text>
</g>
<g >
<title>runtime.spanOf (232 samples, 0.03%)</title><rect x="95.3" y="789" width="0.4" height="15.0" fill="rgb(210,228,9)" rx="2" ry="2" />
<text  x="98.29" y="799.5" ></text>
</g>
<g >
<title>runtime.convT64 (303 samples, 0.04%)</title><rect x="958.0" y="533" width="0.5" height="15.0" fill="rgb(237,62,16)" rx="2" ry="2" />
<text  x="961.00" y="543.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Env).BeginTxn (3,230 samples, 0.46%)</title><rect x="828.1" y="517" width="5.4" height="15.0" fill="rgb(252,221,46)" rx="2" ry="2" />
<text  x="831.05" y="527.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (238 samples, 0.03%)</title><rect x="934.5" y="405" width="0.4" height="15.0" fill="rgb(237,84,10)" rx="2" ry="2" />
<text  x="937.46" y="415.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (78 samples, 0.01%)</title><rect x="318.4" y="549" width="0.1" height="15.0" fill="rgb(232,202,3)" rx="2" ry="2" />
<text  x="321.39" y="559.5" ></text>
</g>
<g >
<title>reflect.New (79 samples, 0.01%)</title><rect x="791.5" y="501" width="0.2" height="15.0" fill="rgb(210,199,51)" rx="2" ry="2" />
<text  x="794.52" y="511.5" ></text>
</g>
<g >
<title>tg/core/vm.(*Memory).Resize (101 samples, 0.01%)</title><rect x="610.1" y="549" width="0.2" height="15.0" fill="rgb(228,41,51)" rx="2" ry="2" />
<text  x="613.14" y="559.5" ></text>
</g>
<g >
<title>runtime.convT2E (438 samples, 0.06%)</title><rect x="965.1" y="613" width="0.8" height="15.0" fill="rgb(252,200,41)" rx="2" ry="2" />
<text  x="968.13" y="623.5" ></text>
</g>
<g >
<title>runtime.mallocgc (3,380 samples, 0.49%)</title><rect x="150.0" y="501" width="5.7" height="15.0" fill="rgb(225,70,47)" rx="2" ry="2" />
<text  x="152.96" y="511.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (83 samples, 0.01%)</title><rect x="1067.6" y="501" width="0.1" height="15.0" fill="rgb(247,179,18)" rx="2" ry="2" />
<text  x="1070.59" y="511.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find (79 samples, 0.01%)</title><rect x="464.6" y="421" width="0.1" height="15.0" fill="rgb(222,122,21)" rx="2" ry="2" />
<text  x="467.56" y="431.5" ></text>
</g>
<g >
<title>tg/core/vm.opCall (368 samples, 0.05%)</title><rect x="602.8" y="533" width="0.7" height="15.0" fill="rgb(225,179,32)" rx="2" ry="2" />
<text  x="605.83" y="543.5" ></text>
</g>
<g >
<title>sort.Search (83 samples, 0.01%)</title><rect x="452.6" y="341" width="0.2" height="15.0" fill="rgb(211,149,23)" rx="2" ry="2" />
<text  x="455.61" y="351.5" ></text>
</g>
<g >
<title>runtime.selectgo (607 samples, 0.09%)</title><rect x="1038.5" y="629" width="1.0" height="15.0" fill="rgb(206,54,47)" rx="2" ry="2" />
<text  x="1041.51" y="639.5" ></text>
</g>
<g >
<title>tg/eth/stagedsync.promoteHistory.func2 (5,974 samples, 0.86%)</title><rect x="1047.7" y="677" width="10.2" height="15.0" fill="rgb(217,30,33)" rx="2" ry="2" />
<text  x="1050.74" y="687.5" ></text>
</g>
<g >
<title>runtime.mapaccess1 (355 samples, 0.05%)</title><rect x="693.0" y="645" width="0.6" height="15.0" fill="rgb(219,227,29)" rx="2" ry="2" />
<text  x="695.99" y="655.5" ></text>
</g>
<g >
<title>runtime.cgocall (1,697 samples, 0.24%)</title><rect x="780.1" y="613" width="2.9" height="15.0" fill="rgb(241,80,13)" rx="2" ry="2" />
<text  x="783.10" y="623.5" ></text>
</g>
<g >
<title>bytes.(*Reader).Read (62 samples, 0.01%)</title><rect x="199.3" y="325" width="0.2" height="15.0" fill="rgb(211,148,3)" rx="2" ry="2" />
<text  x="202.35" y="335.5" ></text>
</g>
<g >
<title>tg/core/vm.opAdd (74 samples, 0.01%)</title><rect x="378.5" y="469" width="0.1" height="15.0" fill="rgb(246,182,18)" rx="2" ry="2" />
<text  x="381.50" y="479.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).Get (571 samples, 0.08%)</title><rect x="793.5" y="613" width="1.0" height="15.0" fill="rgb(235,157,44)" rx="2" ry="2" />
<text  x="796.55" y="623.5" ></text>
</g>
<g >
<title>runtime.unlockWithRank (68 samples, 0.01%)</title><rect x="951.0" y="437" width="0.2" height="15.0" fill="rgb(229,109,14)" rx="2" ry="2" />
<text  x="954.04" y="447.5" ></text>
</g>
<g >
<title>bytes.Compare (107 samples, 0.02%)</title><rect x="991.1" y="325" width="0.2" height="15.0" fill="rgb(242,29,28)" rx="2" ry="2" />
<text  x="994.12" y="335.5" ></text>
</g>
<g >
<title>bytes.Compare (471 samples, 0.07%)</title><rect x="273.5" y="421" width="0.8" height="15.0" fill="rgb(218,63,46)" rx="2" ry="2" />
<text  x="276.51" y="431.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).insert (636 samples, 0.09%)</title><rect x="702.1" y="533" width="1.1" height="15.0" fill="rgb(208,147,13)" rx="2" ry="2" />
<text  x="705.07" y="543.5" ></text>
</g>
<g >
<title>tg/ethdb.(*LmdbCursor).set (164 samples, 0.02%)</title><rect x="464.8" y="485" width="0.3" height="15.0" fill="rgb(210,107,3)" rx="2" ry="2" />
<text  x="467.83" y="495.5" ></text>
</g>
<g >
<title>tg/crypto/secp256k1._Cfunc_secp256k1_ext_ecdsa_recover (4,919 samples, 0.71%)</title><rect x="342.4" y="485" width="8.4" height="15.0" fill="rgb(249,30,17)" rx="2" ry="2" />
<text  x="345.41" y="495.5" ></text>
</g>
<g >
<title>cmpbody (96 samples, 0.01%)</title><rect x="491.4" y="229" width="0.2" height="15.0" fill="rgb(206,142,12)" rx="2" ry="2" />
<text  x="494.44" y="239.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).GetOrNewStateObject (191 samples, 0.03%)</title><rect x="268.3" y="597" width="0.4" height="15.0" fill="rgb(244,134,29)" rx="2" ry="2" />
<text  x="271.34" y="607.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).Put (2,201 samples, 0.32%)</title><rect x="807.7" y="549" width="3.8" height="15.0" fill="rgb(244,207,39)" rx="2" ry="2" />
<text  x="810.71" y="559.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (299 samples, 0.04%)</title><rect x="625.2" y="613" width="0.5" height="15.0" fill="rgb(205,130,22)" rx="2" ry="2" />
<text  x="628.16" y="623.5" ></text>
</g>
<g >
<title>runtime.mapaccess1 (99 samples, 0.01%)</title><rect x="268.5" y="565" width="0.2" height="15.0" fill="rgb(252,141,19)" rx="2" ry="2" />
<text  x="271.50" y="575.5" ></text>
</g>
<g >
<title>tg/ethdb.(*mutation).Get (99 samples, 0.01%)</title><rect x="406.0" y="325" width="0.2" height="15.0" fill="rgb(223,77,30)" rx="2" ry="2" />
<text  x="409.02" y="335.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.(*state).Write (1,102 samples, 0.16%)</title><rect x="747.9" y="629" width="1.8" height="15.0" fill="rgb(248,70,17)" rx="2" ry="2" />
<text  x="750.87" y="639.5" ></text>
</g>
<g >
<title>tg/ethdb.(*TxDb).Get (147 samples, 0.02%)</title><rect x="460.9" y="501" width="0.3" height="15.0" fill="rgb(227,15,19)" rx="2" ry="2" />
<text  x="463.93" y="511.5" ></text>
</g>
<g >
<title>tg/core/vm.(*Contract).validJumpdest (257 samples, 0.04%)</title><rect x="397.4" y="453" width="0.5" height="15.0" fill="rgb(235,34,46)" rx="2" ry="2" />
<text  x="400.42" y="463.5" ></text>
</g>
<g >
<title>tg/core/vm.opSha3 (282 samples, 0.04%)</title><rect x="418.2" y="469" width="0.5" height="15.0" fill="rgb(227,27,1)" rx="2" ry="2" />
<text  x="421.19" y="479.5" ></text>
</g>
<g >
<title>tg/common/dbutils.GenerateStoragePrefix (365 samples, 0.05%)</title><rect x="895.1" y="533" width="0.6" height="15.0" fill="rgb(240,95,38)" rx="2" ry="2" />
<text  x="898.10" y="543.5" ></text>
</g>
<g >
<title>runtime.evacuate (97 samples, 0.01%)</title><rect x="434.7" y="437" width="0.2" height="15.0" fill="rgb(235,41,3)" rx="2" ry="2" />
<text  x="437.69" y="447.5" ></text>
</g>
<g >
<title>tg/consensus/ethash.(*Ethash).verifyHeaderWorker (3,142 samples, 0.45%)</title><rect x="129.2" y="853" width="5.3" height="15.0" fill="rgb(246,176,31)" rx="2" ry="2" />
<text  x="132.17" y="863.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (73 samples, 0.01%)</title><rect x="164.4" y="453" width="0.1" height="15.0" fill="rgb(217,150,6)" rx="2" ry="2" />
<text  x="167.39" y="463.5" ></text>
</g>
<g >
<title>tg/core/state.(*stateObject).setState (154 samples, 0.02%)</title><rect x="445.6" y="501" width="0.3" height="15.0" fill="rgb(221,205,37)" rx="2" ry="2" />
<text  x="448.60" y="511.5" ></text>
</g>
<g >
<title>tg/core/vm.makeDup.func1 (60 samples, 0.01%)</title><rect x="602.3" y="533" width="0.1" height="15.0" fill="rgb(254,42,24)" rx="2" ry="2" />
<text  x="605.29" y="543.5" ></text>
</g>
<g >
<title>tg/ethdb.(*mutation).Get (18,212 samples, 2.62%)</title><rect x="563.1" y="517" width="31.0" height="15.0" fill="rgb(215,199,43)" rx="2" ry="2" />
<text  x="566.13" y="527.5" >tg..</text>
</g>
<g >
<title>runtime.memmove (135 samples, 0.02%)</title><rect x="852.5" y="549" width="0.2" height="15.0" fill="rgb(244,3,53)" rx="2" ry="2" />
<text  x="855.48" y="559.5" ></text>
</g>
<g >
<title>sort.rotate (127 samples, 0.02%)</title><rect x="1072.1" y="421" width="0.2" height="15.0" fill="rgb(221,36,0)" rx="2" ry="2" />
<text  x="1075.07" y="431.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.keccakF1600 (115 samples, 0.02%)</title><rect x="1132.5" y="741" width="0.1" height="15.0" fill="rgb(233,157,36)" rx="2" ry="2" />
<text  x="1135.45" y="751.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).Put (1,697 samples, 0.24%)</title><rect x="811.5" y="565" width="2.9" height="15.0" fill="rgb(246,112,41)" rx="2" ry="2" />
<text  x="814.50" y="575.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (161 samples, 0.02%)</title><rect x="197.1" y="373" width="0.3" height="15.0" fill="rgb(233,20,48)" rx="2" ry="2" />
<text  x="200.08" y="383.5" ></text>
</g>
<g >
<title>runtime.unlock2 (107 samples, 0.02%)</title><rect x="1011.3" y="517" width="0.2" height="15.0" fill="rgb(230,168,40)" rx="2" ry="2" />
<text  x="1014.29" y="527.5" ></text>
</g>
<g >
<title>bytes.Compare (1,362 samples, 0.20%)</title><rect x="709.5" y="485" width="2.3" height="15.0" fill="rgb(238,187,13)" rx="2" ry="2" />
<text  x="712.49" y="495.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.keccakF1600 (423 samples, 0.06%)</title><rect x="1118.2" y="581" width="0.7" height="15.0" fill="rgb(208,224,6)" rx="2" ry="2" />
<text  x="1121.22" y="591.5" ></text>
</g>
<g >
<title>tg/core/types.DeriveSha.func1 (10,188 samples, 1.47%)</title><rect x="761.4" y="661" width="17.3" height="15.0" fill="rgb(248,71,34)" rx="2" ry="2" />
<text  x="764.35" y="671.5" ></text>
</g>
<g >
<title>runtime.evacuated (81 samples, 0.01%)</title><rect x="138.6" y="709" width="0.1" height="15.0" fill="rgb(239,89,5)" rx="2" ry="2" />
<text  x="141.59" y="719.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).getStateObject (438 samples, 0.06%)</title><rect x="464.4" y="549" width="0.8" height="15.0" fill="rgb(205,187,36)" rx="2" ry="2" />
<text  x="467.41" y="559.5" ></text>
</g>
<g >
<title>tg/rlp.decodeByteSlice (246 samples, 0.04%)</title><rect x="216.8" y="421" width="0.5" height="15.0" fill="rgb(219,120,17)" rx="2" ry="2" />
<text  x="219.84" y="431.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVMInterpreter).Run (113 samples, 0.02%)</title><rect x="451.2" y="357" width="0.2" height="15.0" fill="rgb(213,120,51)" rx="2" ry="2" />
<text  x="454.23" y="367.5" ></text>
</g>
<g >
<title>runtime.futex (59 samples, 0.01%)</title><rect x="1177.3" y="581" width="0.1" height="15.0" fill="rgb(243,203,2)" rx="2" ry="2" />
<text  x="1180.31" y="591.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).getVal0 (1,118 samples, 0.16%)</title><rect x="1085.0" y="629" width="1.9" height="15.0" fill="rgb(225,124,30)" rx="2" ry="2" />
<text  x="1088.00" y="639.5" ></text>
</g>
<g >
<title>tg/ethdb.(*mutation).Get (244 samples, 0.04%)</title><rect x="423.2" y="469" width="0.4" height="15.0" fill="rgb(249,21,7)" rx="2" ry="2" />
<text  x="426.22" y="479.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring/roaring64.(*Bitmap).GetSizeInBytes (1,170 samples, 0.17%)</title><rect x="1041.6" y="613" width="2.0" height="15.0" fill="rgb(232,137,16)" rx="2" ry="2" />
<text  x="1044.57" y="623.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (229 samples, 0.03%)</title><rect x="369.7" y="405" width="0.4" height="15.0" fill="rgb(246,191,9)" rx="2" ry="2" />
<text  x="372.68" y="415.5" ></text>
</g>
<g >
<title>runtime.mallocgc (72 samples, 0.01%)</title><rect x="266.4" y="597" width="0.1" height="15.0" fill="rgb(215,112,49)" rx="2" ry="2" />
<text  x="269.43" y="607.5" ></text>
</g>
<g >
<title>tg/core/vm.opBlockhash (269 samples, 0.04%)</title><rect x="338.0" y="597" width="0.5" height="15.0" fill="rgb(254,134,31)" rx="2" ry="2" />
<text  x="341.04" y="607.5" ></text>
</g>
<g >
<title>runtime.cgocall (86 samples, 0.01%)</title><rect x="516.8" y="277" width="0.2" height="15.0" fill="rgb(233,199,1)" rx="2" ry="2" />
<text  x="519.81" y="287.5" ></text>
</g>
<g >
<title>runtime.newobject (62 samples, 0.01%)</title><rect x="176.6" y="581" width="0.1" height="15.0" fill="rgb(250,38,31)" rx="2" ry="2" />
<text  x="179.57" y="591.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc.func1 (115 samples, 0.02%)</title><rect x="622.2" y="469" width="0.2" height="15.0" fill="rgb(221,127,26)" rx="2" ry="2" />
<text  x="625.21" y="479.5" ></text>
</g>
<g >
<title>cmpbody (154 samples, 0.02%)</title><rect x="1087.5" y="629" width="0.3" height="15.0" fill="rgb(222,11,25)" rx="2" ry="2" />
<text  x="1090.51" y="639.5" ></text>
</g>
<g >
<title>bytes.Compare (122 samples, 0.02%)</title><rect x="1071.9" y="421" width="0.2" height="15.0" fill="rgb(212,214,46)" rx="2" ry="2" />
<text  x="1074.86" y="431.5" ></text>
</g>
<g >
<title>tg/core/state.(*PlainStateReader).ReadAccountStorage (18,693 samples, 2.69%)</title><rect x="562.3" y="533" width="31.8" height="15.0" fill="rgb(215,33,34)" rx="2" ry="2" />
<text  x="565.31" y="543.5" >tg..</text>
</g>
<g >
<title>github.com/google/btree.(*node).get (303 samples, 0.04%)</title><rect x="422.5" y="437" width="0.5" height="15.0" fill="rgb(232,177,39)" rx="2" ry="2" />
<text  x="425.47" y="447.5" ></text>
</g>
<g >
<title>tg/core/types.recoverPlain (90 samples, 0.01%)</title><rect x="1166.6" y="805" width="0.1" height="15.0" fill="rgb(249,88,39)" rx="2" ry="2" />
<text  x="1169.57" y="815.5" ></text>
</g>
<g >
<title>tg/rlp.(*Stream).Kind (60 samples, 0.01%)</title><rect x="199.2" y="341" width="0.1" height="15.0" fill="rgb(219,103,21)" rx="2" ry="2" />
<text  x="202.22" y="351.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find (74 samples, 0.01%)</title><rect x="666.1" y="533" width="0.1" height="15.0" fill="rgb(220,211,38)" rx="2" ry="2" />
<text  x="669.08" y="543.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (763 samples, 0.11%)</title><rect x="1100.3" y="437" width="1.3" height="15.0" fill="rgb(237,218,21)" rx="2" ry="2" />
<text  x="1103.30" y="447.5" ></text>
</g>
<g >
<title>runtime.newobject (337 samples, 0.05%)</title><rect x="694.9" y="645" width="0.6" height="15.0" fill="rgb(216,119,43)" rx="2" ry="2" />
<text  x="697.88" y="655.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*BTree).Get (63 samples, 0.01%)</title><rect x="387.8" y="325" width="0.1" height="15.0" fill="rgb(232,182,7)" rx="2" ry="2" />
<text  x="390.82" y="335.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).Call (72 samples, 0.01%)</title><rect x="394.2" y="261" width="0.1" height="15.0" fill="rgb(212,34,22)" rx="2" ry="2" />
<text  x="397.21" y="271.5" ></text>
</g>
<g >
<title>math/big.(*Int).Mul (261 samples, 0.04%)</title><rect x="240.9" y="613" width="0.4" height="15.0" fill="rgb(233,102,14)" rx="2" ry="2" />
<text  x="243.91" y="623.5" ></text>
</g>
<g >
<title>sort.Search (2,260 samples, 0.33%)</title><rect x="275.0" y="469" width="3.9" height="15.0" fill="rgb(208,74,28)" rx="2" ry="2" />
<text  x="278.02" y="479.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find (3,645 samples, 0.52%)</title><rect x="676.3" y="549" width="6.2" height="15.0" fill="rgb(225,7,20)" rx="2" ry="2" />
<text  x="679.31" y="559.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find (833 samples, 0.12%)</title><rect x="717.5" y="565" width="1.4" height="15.0" fill="rgb(225,63,52)" rx="2" ry="2" />
<text  x="720.53" y="575.5" ></text>
</g>
<g >
<title>tg/core/vm.opCall (1,054 samples, 0.15%)</title><rect x="496.4" y="469" width="1.8" height="15.0" fill="rgb(243,114,45)" rx="2" ry="2" />
<text  x="499.44" y="479.5" ></text>
</g>
<g >
<title>sort.rotate (133 samples, 0.02%)</title><rect x="866.5" y="357" width="0.2" height="15.0" fill="rgb(205,200,17)" rx="2" ry="2" />
<text  x="869.47" y="367.5" ></text>
</g>
<g >
<title>runtime.mallocgc (166 samples, 0.02%)</title><rect x="147.6" y="549" width="0.3" height="15.0" fill="rgb(252,49,32)" rx="2" ry="2" />
<text  x="150.63" y="559.5" ></text>
</g>
<g >
<title>runtime.sysUnused (1,120 samples, 0.16%)</title><rect x="10.9" y="773" width="1.9" height="15.0" fill="rgb(205,196,29)" rx="2" ry="2" />
<text  x="13.87" y="783.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).Put (2,141 samples, 0.31%)</title><rect x="803.5" y="549" width="3.6" height="15.0" fill="rgb(226,198,11)" rx="2" ry="2" />
<text  x="806.51" y="559.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (104 samples, 0.01%)</title><rect x="226.1" y="357" width="0.2" height="15.0" fill="rgb(223,141,41)" rx="2" ry="2" />
<text  x="229.11" y="367.5" ></text>
</g>
<g >
<title>sort.Slice (513 samples, 0.07%)</title><rect x="961.0" y="693" width="0.9" height="15.0" fill="rgb(216,3,42)" rx="2" ry="2" />
<text  x="964.01" y="703.5" ></text>
</g>
<g >
<title>cmpbody (72 samples, 0.01%)</title><rect x="178.3" y="469" width="0.1" height="15.0" fill="rgb(229,202,22)" rx="2" ry="2" />
<text  x="181.32" y="479.5" ></text>
</g>
<g >
<title>tg/rlp.(*Stream).Kind (71 samples, 0.01%)</title><rect x="201.5" y="341" width="0.1" height="15.0" fill="rgb(253,22,3)" rx="2" ry="2" />
<text  x="204.45" y="351.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find.func1 (201 samples, 0.03%)</title><rect x="258.1" y="501" width="0.3" height="15.0" fill="rgb(221,103,27)" rx="2" ry="2" />
<text  x="261.06" y="511.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (62 samples, 0.01%)</title><rect x="764.4" y="357" width="0.1" height="15.0" fill="rgb(242,127,0)" rx="2" ry="2" />
<text  x="767.41" y="367.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).Get (390 samples, 0.06%)</title><rect x="527.9" y="485" width="0.7" height="15.0" fill="rgb(248,65,31)" rx="2" ry="2" />
<text  x="530.89" y="495.5" ></text>
</g>
<g >
<title>runtime.memmove (82 samples, 0.01%)</title><rect x="745.7" y="485" width="0.2" height="15.0" fill="rgb(241,48,5)" rx="2" ry="2" />
<text  x="748.74" y="495.5" ></text>
</g>
<g >
<title>sort.insertionSort (227 samples, 0.03%)</title><rect x="986.0" y="517" width="0.4" height="15.0" fill="rgb(251,36,45)" rx="2" ry="2" />
<text  x="989.04" y="527.5" ></text>
</g>
<g >
<title>runtime.mapiterinit (159 samples, 0.02%)</title><rect x="632.4" y="661" width="0.3" height="15.0" fill="rgb(242,91,28)" rx="2" ry="2" />
<text  x="635.41" y="671.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (341 samples, 0.05%)</title><rect x="325.8" y="485" width="0.6" height="15.0" fill="rgb(209,171,3)" rx="2" ry="2" />
<text  x="328.81" y="495.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.(*state).permute (607 samples, 0.09%)</title><rect x="1117.2" y="581" width="1.0" height="15.0" fill="rgb(239,147,43)" rx="2" ry="2" />
<text  x="1120.19" y="591.5" ></text>
</g>
<g >
<title>os.(*File).write (105 samples, 0.02%)</title><rect x="1079.3" y="469" width="0.2" height="15.0" fill="rgb(235,39,28)" rx="2" ry="2" />
<text  x="1082.32" y="479.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*BTree).Get (136 samples, 0.02%)</title><rect x="396.4" y="389" width="0.2" height="15.0" fill="rgb(210,180,10)" rx="2" ry="2" />
<text  x="399.39" y="399.5" ></text>
</g>
<g >
<title>tg/turbo/trie.(*RetainList).ensureInited (1,497 samples, 0.22%)</title><rect x="1026.4" y="645" width="2.5" height="15.0" fill="rgb(213,214,13)" rx="2" ry="2" />
<text  x="1029.39" y="655.5" ></text>
</g>
<g >
<title>tg/core/state.(*PlainStateReader).ReadAccountStorage (69 samples, 0.01%)</title><rect x="498.0" y="341" width="0.1" height="15.0" fill="rgb(235,95,6)" rx="2" ry="2" />
<text  x="500.95" y="351.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).GetState (70 samples, 0.01%)</title><rect x="384.6" y="261" width="0.1" height="15.0" fill="rgb(225,148,52)" rx="2" ry="2" />
<text  x="387.55" y="271.5" ></text>
</g>
<g >
<title>runtime.makemap_small (91 samples, 0.01%)</title><rect x="293.1" y="613" width="0.2" height="15.0" fill="rgb(223,102,23)" rx="2" ry="2" />
<text  x="296.13" y="623.5" ></text>
</g>
<g >
<title>runtime.newobject (138 samples, 0.02%)</title><rect x="1090.6" y="645" width="0.2" height="15.0" fill="rgb(239,80,52)" rx="2" ry="2" />
<text  x="1093.58" y="655.5" ></text>
</g>
<g >
<title>runtime.unlockWithRank (93 samples, 0.01%)</title><rect x="893.3" y="501" width="0.2" height="15.0" fill="rgb(245,197,33)" rx="2" ry="2" />
<text  x="896.34" y="511.5" ></text>
</g>
<g >
<title>runtime.makeslice (102 samples, 0.01%)</title><rect x="1049.3" y="645" width="0.2" height="15.0" fill="rgb(226,10,8)" rx="2" ry="2" />
<text  x="1052.35" y="655.5" ></text>
</g>
<g >
<title>sort.symMerge (2,022 samples, 0.29%)</title><rect x="868.7" y="277" width="3.5" height="15.0" fill="rgb(217,57,11)" rx="2" ry="2" />
<text  x="871.75" y="287.5" ></text>
</g>
<g >
<title>bytes.Compare (91 samples, 0.01%)</title><rect x="525.2" y="421" width="0.1" height="15.0" fill="rgb(227,219,20)" rx="2" ry="2" />
<text  x="528.17" y="431.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb._Cfunc_lmdbgo_mdb_cursor_get2 (162 samples, 0.02%)</title><rect x="419.4" y="293" width="0.2" height="15.0" fill="rgb(242,113,50)" rx="2" ry="2" />
<text  x="422.37" y="303.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.(*roaringArray).writeTo (237 samples, 0.03%)</title><rect x="1102.5" y="581" width="0.4" height="15.0" fill="rgb(234,196,48)" rx="2" ry="2" />
<text  x="1105.49" y="591.5" ></text>
</g>
<g >
<title>sort.rotate (119 samples, 0.02%)</title><rect x="868.1" y="293" width="0.2" height="15.0" fill="rgb(232,158,6)" rx="2" ry="2" />
<text  x="871.10" y="303.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.(*state).padAndPermute (5,325 samples, 0.77%)</title><rect x="544.6" y="565" width="9.0" height="15.0" fill="rgb(228,86,9)" rx="2" ry="2" />
<text  x="547.59" y="575.5" ></text>
</g>
<g >
<title>tg/core.InsertBodies (5,222 samples, 0.75%)</title><rect x="1119.4" y="789" width="8.9" height="15.0" fill="rgb(229,97,44)" rx="2" ry="2" />
<text  x="1122.43" y="799.5" ></text>
</g>
<g >
<title>runtime.mallocgc (123 samples, 0.02%)</title><rect x="196.2" y="517" width="0.2" height="15.0" fill="rgb(219,181,41)" rx="2" ry="2" />
<text  x="199.19" y="527.5" ></text>
</g>
<g >
<title>runtime.memmove (98 samples, 0.01%)</title><rect x="622.7" y="581" width="0.2" height="15.0" fill="rgb(221,216,28)" rx="2" ry="2" />
<text  x="625.72" y="591.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).StaticCall (80 samples, 0.01%)</title><rect x="487.9" y="261" width="0.2" height="15.0" fill="rgb(234,155,15)" rx="2" ry="2" />
<text  x="490.94" y="271.5" ></text>
</g>
<g >
<title>tg/core/vm.opCall (1,361 samples, 0.20%)</title><rect x="483.5" y="405" width="2.3" height="15.0" fill="rgb(209,110,50)" rx="2" ry="2" />
<text  x="486.51" y="415.5" ></text>
</g>
<g >
<title>runtime.duffcopy (133 samples, 0.02%)</title><rect x="236.8" y="677" width="0.2" height="15.0" fill="rgb(225,19,2)" rx="2" ry="2" />
<text  x="239.75" y="687.5" ></text>
</g>
<g >
<title>tg/core/types.Receipts.GetRlp (4,151 samples, 0.60%)</title><rect x="762.0" y="645" width="7.0" height="15.0" fill="rgb(231,219,30)" rx="2" ry="2" />
<text  x="764.96" y="655.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (67 samples, 0.01%)</title><rect x="623.0" y="597" width="0.1" height="15.0" fill="rgb(221,82,24)" rx="2" ry="2" />
<text  x="626.00" y="607.5" ></text>
</g>
<g >
<title>sort.Search (75 samples, 0.01%)</title><rect x="460.7" y="405" width="0.1" height="15.0" fill="rgb(217,132,18)" rx="2" ry="2" />
<text  x="463.72" y="415.5" ></text>
</g>
<g >
<title>tg/ethdb.(*LmdbCursor).getBothRange (97 samples, 0.01%)</title><rect x="481.8" y="293" width="0.1" height="15.0" fill="rgb(215,115,15)" rx="2" ry="2" />
<text  x="484.77" y="303.5" ></text>
</g>
<g >
<title>tg/rlp.(*Stream).Decode (2,751 samples, 0.40%)</title><rect x="787.7" y="549" width="4.7" height="15.0" fill="rgb(250,19,22)" rx="2" ry="2" />
<text  x="790.69" y="559.5" ></text>
</g>
<g >
<title>tg/ethdb.(*LmdbCursor).put (212 samples, 0.03%)</title><rect x="960.6" y="629" width="0.4" height="15.0" fill="rgb(221,117,14)" rx="2" ry="2" />
<text  x="963.65" y="639.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVMInterpreter).Run (12,642 samples, 1.82%)</title><rect x="473.5" y="485" width="21.4" height="15.0" fill="rgb(223,187,26)" rx="2" ry="2" />
<text  x="476.45" y="495.5" >t..</text>
</g>
<g >
<title>tg/rlp.makeStructWriter.func1 (1,591 samples, 0.23%)</title><rect x="209.6" y="421" width="2.7" height="15.0" fill="rgb(243,61,12)" rx="2" ry="2" />
<text  x="212.61" y="431.5" ></text>
</g>
<g >
<title>tg/rlp.(*encbuf).encode (3,595 samples, 0.52%)</title><rect x="741.7" y="645" width="6.1" height="15.0" fill="rgb(210,113,53)" rx="2" ry="2" />
<text  x="744.72" y="655.5" ></text>
</g>
<g >
<title>sort.swapRange (85 samples, 0.01%)</title><rect x="869.1" y="245" width="0.1" height="15.0" fill="rgb(236,18,42)" rx="2" ry="2" />
<text  x="872.09" y="255.5" ></text>
</g>
<g >
<title>bytes.Compare (129 samples, 0.02%)</title><rect x="1027.4" y="501" width="0.2" height="15.0" fill="rgb(250,126,17)" rx="2" ry="2" />
<text  x="1030.37" y="511.5" ></text>
</g>
<g >
<title>runtime.schedule (184 samples, 0.03%)</title><rect x="95.9" y="837" width="0.3" height="15.0" fill="rgb(223,170,18)" rx="2" ry="2" />
<text  x="98.86" y="847.5" ></text>
</g>
<g >
<title>tg/core/state.(*PlainStateReader).ReadAccountStorage (237 samples, 0.03%)</title><rect x="481.5" y="341" width="0.4" height="15.0" fill="rgb(252,141,53)" rx="2" ry="2" />
<text  x="484.53" y="351.5" ></text>
</g>
<g >
<title>runtime.mallocgc (71 samples, 0.01%)</title><rect x="268.7" y="549" width="0.1" height="15.0" fill="rgb(239,95,18)" rx="2" ry="2" />
<text  x="271.68" y="559.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).insert (195 samples, 0.03%)</title><rect x="665.3" y="597" width="0.4" height="15.0" fill="rgb(213,135,18)" rx="2" ry="2" />
<text  x="668.32" y="607.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (241 samples, 0.03%)</title><rect x="401.6" y="293" width="0.4" height="15.0" fill="rgb(245,32,25)" rx="2" ry="2" />
<text  x="404.56" y="303.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.(*arrayContainer).getSizeInBytes (372 samples, 0.05%)</title><rect x="1084.0" y="581" width="0.7" height="15.0" fill="rgb(250,13,5)" rx="2" ry="2" />
<text  x="1087.03" y="591.5" ></text>
</g>
<g >
<title>tg/core/vm.(*Contract).GetByte (148 samples, 0.02%)</title><rect x="319.5" y="597" width="0.3" height="15.0" fill="rgb(249,1,16)" rx="2" ry="2" />
<text  x="322.52" y="607.5" ></text>
</g>
<g >
<title>sort.stable (9,237 samples, 1.33%)</title><rect x="177.6" y="517" width="15.7" height="15.0" fill="rgb(242,25,44)" rx="2" ry="2" />
<text  x="180.57" y="527.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).getVal2 (668 samples, 0.10%)</title><rect x="819.3" y="549" width="1.1" height="15.0" fill="rgb(253,20,22)" rx="2" ry="2" />
<text  x="822.31" y="559.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*Encoder).mustEncode (307 samples, 0.04%)</title><rect x="994.5" y="533" width="0.5" height="15.0" fill="rgb(225,123,49)" rx="2" ry="2" />
<text  x="997.46" y="543.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (81 samples, 0.01%)</title><rect x="481.5" y="245" width="0.2" height="15.0" fill="rgb(252,209,17)" rx="2" ry="2" />
<text  x="484.54" y="255.5" ></text>
</g>
<g >
<title>tg/core/vm.run (799 samples, 0.11%)</title><rect x="462.3" y="549" width="1.4" height="15.0" fill="rgb(234,228,12)" rx="2" ry="2" />
<text  x="465.35" y="559.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (128 samples, 0.02%)</title><rect x="984.5" y="533" width="0.2" height="15.0" fill="rgb(249,76,28)" rx="2" ry="2" />
<text  x="987.48" y="543.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (78 samples, 0.01%)</title><rect x="396.4" y="325" width="0.1" height="15.0" fill="rgb(237,168,33)" rx="2" ry="2" />
<text  x="399.40" y="335.5" ></text>
</g>
<g >
<title>tg/rlp.makeSimplePtrDecoder.func1 (3,632 samples, 0.52%)</title><rect x="1180.9" y="709" width="6.1" height="15.0" fill="rgb(230,10,5)" rx="2" ry="2" />
<text  x="1183.87" y="719.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.(*arrayContainer).iaddRange (1,153 samples, 0.17%)</title><rect x="1100.0" y="517" width="1.9" height="15.0" fill="rgb(252,188,1)" rx="2" ry="2" />
<text  x="1102.97" y="527.5" ></text>
</g>
<g >
<title>runtime.convT2I (386 samples, 0.06%)</title><rect x="594.8" y="549" width="0.6" height="15.0" fill="rgb(230,160,5)" rx="2" ry="2" />
<text  x="597.76" y="559.5" ></text>
</g>
<g >
<title>tg/common/etl.(*oldestEntrySortableBuffer).Swap (120 samples, 0.02%)</title><rect x="865.8" y="357" width="0.2" height="15.0" fill="rgb(242,156,44)" rx="2" ry="2" />
<text  x="868.75" y="367.5" ></text>
</g>
<g >
<title>runtime.newarray (100 samples, 0.01%)</title><rect x="330.3" y="517" width="0.2" height="15.0" fill="rgb(242,36,25)" rx="2" ry="2" />
<text  x="333.32" y="527.5" ></text>
</g>
<g >
<title>tg/ethdb.(*LmdbCursor).append (1,731 samples, 0.25%)</title><rect x="780.1" y="677" width="2.9" height="15.0" fill="rgb(232,228,30)" rx="2" ry="2" />
<text  x="783.08" y="687.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).StaticCall (215 samples, 0.03%)</title><rect x="420.4" y="389" width="0.3" height="15.0" fill="rgb(223,10,17)" rx="2" ry="2" />
<text  x="423.37" y="399.5" ></text>
</g>
<g >
<title>runtime.inHeapOrStack (123 samples, 0.02%)</title><rect x="957.4" y="485" width="0.2" height="15.0" fill="rgb(228,229,32)" rx="2" ry="2" />
<text  x="960.37" y="495.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.(*state).Write (3,471 samples, 0.50%)</title><rect x="772.7" y="549" width="5.9" height="15.0" fill="rgb(220,163,20)" rx="2" ry="2" />
<text  x="775.72" y="559.5" ></text>
</g>
<g >
<title>aeshashbody (123 samples, 0.02%)</title><rect x="700.1" y="565" width="0.3" height="15.0" fill="rgb(234,179,34)" rx="2" ry="2" />
<text  x="703.15" y="575.5" ></text>
</g>
<g >
<title>sort.rotate (75 samples, 0.01%)</title><rect x="190.5" y="229" width="0.1" height="15.0" fill="rgb(239,203,53)" rx="2" ry="2" />
<text  x="193.49" y="239.5" ></text>
</g>
<g >
<title>tg/ethdb.(*TxDb).Get (305 samples, 0.04%)</title><rect x="326.4" y="501" width="0.5" height="15.0" fill="rgb(250,104,41)" rx="2" ry="2" />
<text  x="329.42" y="511.5" ></text>
</g>
<g >
<title>runtime.mallocgc.func1 (82 samples, 0.01%)</title><rect x="1176.4" y="757" width="0.1" height="15.0" fill="rgb(235,8,5)" rx="2" ry="2" />
<text  x="1179.40" y="767.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.(*roaringArray).writeTo (187 samples, 0.03%)</title><rect x="1080.7" y="597" width="0.3" height="15.0" fill="rgb(209,102,8)" rx="2" ry="2" />
<text  x="1083.71" y="607.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.(*state).Read (1,265 samples, 0.18%)</title><rect x="770.2" y="581" width="2.2" height="15.0" fill="rgb(254,117,1)" rx="2" ry="2" />
<text  x="773.24" y="591.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (65 samples, 0.01%)</title><rect x="464.0" y="469" width="0.1" height="15.0" fill="rgb(252,205,0)" rx="2" ry="2" />
<text  x="467.01" y="479.5" ></text>
</g>
<g >
<title>tg/core/state.(*PlainStateReader).ReadAccountData (107 samples, 0.02%)</title><rect x="410.2" y="469" width="0.2" height="15.0" fill="rgb(227,76,15)" rx="2" ry="2" />
<text  x="413.25" y="479.5" ></text>
</g>
<g >
<title>runtime.removefinalizer (288 samples, 0.04%)</title><rect x="850.6" y="453" width="0.5" height="15.0" fill="rgb(209,48,32)" rx="2" ry="2" />
<text  x="853.65" y="463.5" ></text>
</g>
<g >
<title>tg/ethdb.(*mutation).Put (193 samples, 0.03%)</title><rect x="665.7" y="645" width="0.3" height="15.0" fill="rgb(205,56,53)" rx="2" ry="2" />
<text  x="668.67" y="655.5" ></text>
</g>
<g >
<title>bufio.(*Writer).Write (160 samples, 0.02%)</title><rect x="875.2" y="453" width="0.2" height="15.0" fill="rgb(247,82,46)" rx="2" ry="2" />
<text  x="878.15" y="463.5" ></text>
</g>
<g >
<title>sort.quickSort (328 samples, 0.05%)</title><rect x="1028.4" y="453" width="0.5" height="15.0" fill="rgb(247,190,8)" rx="2" ry="2" />
<text  x="1031.37" y="463.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*Decoder).decSliceHelperStart (83 samples, 0.01%)</title><rect x="817.1" y="533" width="0.2" height="15.0" fill="rgb(229,148,42)" rx="2" ry="2" />
<text  x="820.13" y="543.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).getVal0.func1 (3,866 samples, 0.56%)</title><rect x="952.0" y="549" width="6.5" height="15.0" fill="rgb(249,7,51)" rx="2" ry="2" />
<text  x="954.95" y="559.5" ></text>
</g>
<g >
<title>tg/core/vm/stack.(*Stack).Len (231 samples, 0.03%)</title><rect x="611.8" y="597" width="0.4" height="15.0" fill="rgb(235,158,50)" rx="2" ry="2" />
<text  x="614.79" y="607.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).StaticCall (229 samples, 0.03%)</title><rect x="487.7" y="325" width="0.4" height="15.0" fill="rgb(209,18,22)" rx="2" ry="2" />
<text  x="490.71" y="335.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find (281 samples, 0.04%)</title><rect x="288.1" y="469" width="0.4" height="15.0" fill="rgb(249,97,31)" rx="2" ry="2" />
<text  x="291.07" y="479.5" ></text>
</g>
<g >
<title>tg/core/vm.run (72 samples, 0.01%)</title><rect x="483.9" y="245" width="0.1" height="15.0" fill="rgb(244,51,8)" rx="2" ry="2" />
<text  x="486.88" y="255.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb._Cfunc_mdb_cursor_get (81 samples, 0.01%)</title><rect x="1026.2" y="629" width="0.1" height="15.0" fill="rgb(222,187,23)" rx="2" ry="2" />
<text  x="1029.18" y="639.5" ></text>
</g>
<g >
<title>tg/core/vm.opStaticCall (104 samples, 0.01%)</title><rect x="416.5" y="405" width="0.1" height="15.0" fill="rgb(248,57,35)" rx="2" ry="2" />
<text  x="419.47" y="415.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).setStateObject (99 samples, 0.01%)</title><rect x="527.0" y="565" width="0.1" height="15.0" fill="rgb(205,167,18)" rx="2" ry="2" />
<text  x="529.97" y="575.5" ></text>
</g>
<g >
<title>math/big.nat.make (87 samples, 0.01%)</title><rect x="234.9" y="661" width="0.2" height="15.0" fill="rgb(231,205,4)" rx="2" ry="2" />
<text  x="237.94" y="671.5" ></text>
</g>
<g >
<title>tg/rlp.makeStructDecoder.func1 (2,474 samples, 0.36%)</title><rect x="198.4" y="389" width="4.2" height="15.0" fill="rgb(253,126,17)" rx="2" ry="2" />
<text  x="201.35" y="399.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find (219 samples, 0.03%)</title><rect x="703.2" y="533" width="0.4" height="15.0" fill="rgb(252,139,2)" rx="2" ry="2" />
<text  x="706.23" y="543.5" ></text>
</g>
<g >
<title>runtime.newobject (132 samples, 0.02%)</title><rect x="202.2" y="325" width="0.2" height="15.0" fill="rgb(222,133,6)" rx="2" ry="2" />
<text  x="205.22" y="335.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).StaticCall (153 samples, 0.02%)</title><rect x="386.1" y="325" width="0.3" height="15.0" fill="rgb(244,125,50)" rx="2" ry="2" />
<text  x="389.15" y="335.5" ></text>
</g>
<g >
<title>runtime.newobject (110 samples, 0.02%)</title><rect x="597.7" y="549" width="0.2" height="15.0" fill="rgb(250,190,16)" rx="2" ry="2" />
<text  x="600.69" y="559.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (64 samples, 0.01%)</title><rect x="978.3" y="469" width="0.1" height="15.0" fill="rgb(224,137,50)" rx="2" ry="2" />
<text  x="981.32" y="479.5" ></text>
</g>
<g >
<title>runtime.mapassign (1,084 samples, 0.16%)</title><rect x="668.4" y="629" width="1.9" height="15.0" fill="rgb(230,88,32)" rx="2" ry="2" />
<text  x="671.44" y="639.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (83 samples, 0.01%)</title><rect x="701.7" y="533" width="0.1" height="15.0" fill="rgb(254,3,44)" rx="2" ry="2" />
<text  x="704.69" y="543.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (99 samples, 0.01%)</title><rect x="487.0" y="277" width="0.1" height="15.0" fill="rgb(238,171,45)" rx="2" ry="2" />
<text  x="489.98" y="287.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).Snapshot (70 samples, 0.01%)</title><rect x="341.7" y="565" width="0.1" height="15.0" fill="rgb(217,161,8)" rx="2" ry="2" />
<text  x="344.70" y="575.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (89 samples, 0.01%)</title><rect x="1012.4" y="517" width="0.2" height="15.0" fill="rgb(215,30,36)" rx="2" ry="2" />
<text  x="1015.45" y="527.5" ></text>
</g>
<g >
<title>tg/ethdb/bitmapdb.WalkChunkWithKeys64 (6,842 samples, 0.98%)</title><rect x="1095.2" y="661" width="11.6" height="15.0" fill="rgb(232,21,13)" rx="2" ry="2" />
<text  x="1098.21" y="671.5" ></text>
</g>
<g >
<title>tg/rlp.Encode (72 samples, 0.01%)</title><rect x="1128.5" y="757" width="0.1" height="15.0" fill="rgb(245,63,19)" rx="2" ry="2" />
<text  x="1131.46" y="767.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find.func1 (186 samples, 0.03%)</title><rect x="499.5" y="293" width="0.3" height="15.0" fill="rgb(242,43,3)" rx="2" ry="2" />
<text  x="502.53" y="303.5" ></text>
</g>
<g >
<title>runtime.mapassign (113 samples, 0.02%)</title><rect x="509.8" y="469" width="0.2" height="15.0" fill="rgb(229,185,52)" rx="2" ry="2" />
<text  x="512.80" y="479.5" ></text>
</g>
<g >
<title>cmpbody (61 samples, 0.01%)</title><rect x="729.1" y="565" width="0.1" height="15.0" fill="rgb(233,151,21)" rx="2" ry="2" />
<text  x="732.09" y="575.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.newRunContainer16FromContainer (204 samples, 0.03%)</title><rect x="156.9" y="533" width="0.3" height="15.0" fill="rgb(250,214,17)" rx="2" ry="2" />
<text  x="159.89" y="543.5" ></text>
</g>
<g >
<title>tg/core/vm.opDelegateCall (84 samples, 0.01%)</title><rect x="413.7" y="341" width="0.2" height="15.0" fill="rgb(228,186,42)" rx="2" ry="2" />
<text  x="416.71" y="351.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.(*Bitmap).WriteTo (196 samples, 0.03%)</title><rect x="1080.7" y="613" width="0.3" height="15.0" fill="rgb(235,146,41)" rx="2" ry="2" />
<text  x="1083.70" y="623.5" ></text>
</g>
<g >
<title>runtime.duffzero (232 samples, 0.03%)</title><rect x="692.6" y="645" width="0.4" height="15.0" fill="rgb(225,91,30)" rx="2" ry="2" />
<text  x="695.57" y="655.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).getVal2 (85 samples, 0.01%)</title><rect x="450.4" y="325" width="0.1" height="15.0" fill="rgb(210,90,26)" rx="2" ry="2" />
<text  x="453.38" y="335.5" ></text>
</g>
<g >
<title>tg/rlp.(*listhead).encode (85 samples, 0.01%)</title><rect x="768.6" y="613" width="0.1" height="15.0" fill="rgb(226,1,23)" rx="2" ry="2" />
<text  x="771.59" y="623.5" ></text>
</g>
<g >
<title>tg/rlp.(*Stream).Decode (2,273 samples, 0.33%)</title><rect x="1182.4" y="581" width="3.9" height="15.0" fill="rgb(223,20,44)" rx="2" ry="2" />
<text  x="1185.42" y="591.5" ></text>
</g>
<g >
<title>runtime.selectnbrecv (77 samples, 0.01%)</title><rect x="1066.8" y="613" width="0.2" height="15.0" fill="rgb(230,228,41)" rx="2" ry="2" />
<text  x="1069.82" y="623.5" ></text>
</g>
<g >
<title>tg/core/vm.opSstore (124 samples, 0.02%)</title><rect x="512.3" y="533" width="0.2" height="15.0" fill="rgb(243,137,15)" rx="2" ry="2" />
<text  x="515.33" y="543.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Txn).Get (6,987 samples, 1.01%)</title><rect x="935.1" y="501" width="11.9" height="15.0" fill="rgb(250,58,38)" rx="2" ry="2" />
<text  x="938.14" y="511.5" ></text>
</g>
<g >
<title>tg/turbo/rlphacks.RlpEncodedBytes.ToDoubleRLP (1,174 samples, 0.17%)</title><rect x="1117.0" y="629" width="2.0" height="15.0" fill="rgb(244,115,11)" rx="2" ry="2" />
<text  x="1120.04" y="639.5" ></text>
</g>
<g >
<title>tg/crypto/bn256/cloudflare.(*G2).Unmarshal (123 samples, 0.02%)</title><rect x="446.3" y="437" width="0.2" height="15.0" fill="rgb(239,14,36)" rx="2" ry="2" />
<text  x="449.27" y="447.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (110 samples, 0.02%)</title><rect x="690.8" y="565" width="0.1" height="15.0" fill="rgb(236,10,43)" rx="2" ry="2" />
<text  x="693.76" y="575.5" ></text>
</g>
<g >
<title>runtime.addfinalizer (428 samples, 0.06%)</title><rect x="908.6" y="453" width="0.8" height="15.0" fill="rgb(216,30,8)" rx="2" ry="2" />
<text  x="911.64" y="463.5" ></text>
</g>
<g >
<title>runtime.procyield (708 samples, 0.10%)</title><rect x="60.6" y="757" width="1.2" height="15.0" fill="rgb(252,10,46)" rx="2" ry="2" />
<text  x="63.55" y="767.5" ></text>
</g>
<g >
<title>sort.swapRange (131 samples, 0.02%)</title><rect x="988.8" y="405" width="0.2" height="15.0" fill="rgb(250,145,0)" rx="2" ry="2" />
<text  x="991.82" y="415.5" ></text>
</g>
<g >
<title>tg/rlp.cachedTypeInfo (148 samples, 0.02%)</title><rect x="1186.5" y="565" width="0.3" height="15.0" fill="rgb(241,130,4)" rx="2" ry="2" />
<text  x="1189.53" y="575.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).getVal1.func1 (389 samples, 0.06%)</title><rect x="527.9" y="453" width="0.7" height="15.0" fill="rgb(233,216,7)" rx="2" ry="2" />
<text  x="530.89" y="463.5" ></text>
</g>
<g >
<title>tg/core/state.(*PlainStateReader).ReadAccountStorage (60 samples, 0.01%)</title><rect x="608.8" y="405" width="0.1" height="15.0" fill="rgb(226,42,39)" rx="2" ry="2" />
<text  x="611.79" y="415.5" ></text>
</g>
<g >
<title>runtime.mapaccess1 (78 samples, 0.01%)</title><rect x="269.4" y="565" width="0.2" height="15.0" fill="rgb(234,165,30)" rx="2" ry="2" />
<text  x="272.44" y="575.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*bufioEncWriter).writestr (616 samples, 0.09%)</title><rect x="1078.2" y="453" width="1.0" height="15.0" fill="rgb(207,159,34)" rx="2" ry="2" />
<text  x="1081.20" y="463.5" ></text>
</g>
<g >
<title>runtime.typedmemmove (63 samples, 0.01%)</title><rect x="560.1" y="485" width="0.1" height="15.0" fill="rgb(216,165,21)" rx="2" ry="2" />
<text  x="563.12" y="495.5" ></text>
</g>
<g >
<title>runtime.wakeScavenger (518 samples, 0.07%)</title><rect x="108.1" y="741" width="0.9" height="15.0" fill="rgb(253,165,30)" rx="2" ry="2" />
<text  x="111.11" y="751.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.decByteSlice (322 samples, 0.05%)</title><rect x="817.4" y="517" width="0.6" height="15.0" fill="rgb(212,190,37)" rx="2" ry="2" />
<text  x="820.43" y="527.5" ></text>
</g>
<g >
<title>bytes.Compare (97 samples, 0.01%)</title><rect x="491.4" y="245" width="0.2" height="15.0" fill="rgb(205,159,8)" rx="2" ry="2" />
<text  x="494.44" y="255.5" ></text>
</g>
<g >
<title>tg/rlp.(*Stream).readFull (112 samples, 0.02%)</title><rect x="1184.9" y="501" width="0.2" height="15.0" fill="rgb(215,179,41)" rx="2" ry="2" />
<text  x="1187.95" y="511.5" ></text>
</g>
<g >
<title>math/big.nat.make (67 samples, 0.01%)</title><rect x="239.7" y="613" width="0.1" height="15.0" fill="rgb(223,82,42)" rx="2" ry="2" />
<text  x="242.65" y="623.5" ></text>
</g>
<g >
<title>tg/ethdb.(*mutation).Get (62 samples, 0.01%)</title><rect x="477.4" y="389" width="0.1" height="15.0" fill="rgb(240,114,47)" rx="2" ry="2" />
<text  x="480.35" y="399.5" ></text>
</g>
<g >
<title>runtime.mallocgc (79 samples, 0.01%)</title><rect x="1079.8" y="549" width="0.1" height="15.0" fill="rgb(209,166,35)" rx="2" ry="2" />
<text  x="1082.78" y="559.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*BTree).Get (98 samples, 0.01%)</title><rect x="516.6" y="373" width="0.2" height="15.0" fill="rgb(227,113,5)" rx="2" ry="2" />
<text  x="519.63" y="383.5" ></text>
</g>
<g >
<title>tg/common/etl.(*sortableBuffer).Swap (147 samples, 0.02%)</title><rect x="183.9" y="341" width="0.3" height="15.0" fill="rgb(253,209,19)" rx="2" ry="2" />
<text  x="186.95" y="351.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (64 samples, 0.01%)</title><rect x="218.3" y="341" width="0.1" height="15.0" fill="rgb(224,32,36)" rx="2" ry="2" />
<text  x="221.26" y="351.5" ></text>
</g>
<g >
<title>runtime.memmove (217 samples, 0.03%)</title><rect x="1081.7" y="597" width="0.3" height="15.0" fill="rgb(240,48,28)" rx="2" ry="2" />
<text  x="1084.65" y="607.5" ></text>
</g>
<g >
<title>runtime.mapaccess1 (92 samples, 0.01%)</title><rect x="212.4" y="421" width="0.1" height="15.0" fill="rgb(237,69,46)" rx="2" ry="2" />
<text  x="215.39" y="431.5" ></text>
</g>
<g >
<title>runtime.systemstack (116 samples, 0.02%)</title><rect x="177.2" y="517" width="0.2" height="15.0" fill="rgb(205,162,46)" rx="2" ry="2" />
<text  x="180.16" y="527.5" ></text>
</g>
<g >
<title>tg/core/vm.opDelegateCall (78 samples, 0.01%)</title><rect x="405.6" y="405" width="0.1" height="15.0" fill="rgb(211,226,53)" rx="2" ry="2" />
<text  x="408.57" y="415.5" ></text>
</g>
<g >
<title>github.com/holiman/uint256.udivremKnuth (213 samples, 0.03%)</title><rect x="507.8" y="485" width="0.4" height="15.0" fill="rgb(207,208,48)" rx="2" ry="2" />
<text  x="510.84" y="495.5" ></text>
</g>
<g >
<title>tg/core/vm.opMstore (77 samples, 0.01%)</title><rect x="481.1" y="405" width="0.1" height="15.0" fill="rgb(220,45,49)" rx="2" ry="2" />
<text  x="484.10" y="415.5" ></text>
</g>
<g >
<title>internal/poll.ignoringEINTR (137 samples, 0.02%)</title><rect x="875.2" y="389" width="0.2" height="15.0" fill="rgb(254,122,43)" rx="2" ry="2" />
<text  x="878.17" y="399.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb._Cfunc_lmdbgo_mdb_cursor_get1 (67 samples, 0.01%)</title><rect x="423.0" y="373" width="0.1" height="15.0" fill="rgb(235,222,50)" rx="2" ry="2" />
<text  x="426.00" y="383.5" ></text>
</g>
<g >
<title>tg/rlp.Encode (1,665 samples, 0.24%)</title><rect x="225.2" y="517" width="2.8" height="15.0" fill="rgb(236,74,46)" rx="2" ry="2" />
<text  x="228.21" y="527.5" ></text>
</g>
<g >
<title>tg/common/etl.loadFilesIntoBucket.func1 (386 samples, 0.06%)</title><rect x="157.6" y="597" width="0.6" height="15.0" fill="rgb(235,11,14)" rx="2" ry="2" />
<text  x="160.59" y="607.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).Call (588 samples, 0.08%)</title><rect x="383.2" y="261" width="1.0" height="15.0" fill="rgb(247,72,46)" rx="2" ry="2" />
<text  x="386.25" y="271.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).Call (62 samples, 0.01%)</title><rect x="603.1" y="453" width="0.1" height="15.0" fill="rgb(251,19,21)" rx="2" ry="2" />
<text  x="606.09" y="463.5" ></text>
</g>
<g >
<title>runtime.mapiternext (67 samples, 0.01%)</title><rect x="632.7" y="661" width="0.1" height="15.0" fill="rgb(215,13,19)" rx="2" ry="2" />
<text  x="635.68" y="671.5" ></text>
</g>
<g >
<title>bytes.NewReader (121 samples, 0.02%)</title><rect x="1087.0" y="677" width="0.2" height="15.0" fill="rgb(241,59,23)" rx="2" ry="2" />
<text  x="1090.03" y="687.5" ></text>
</g>
<g >
<title>tg/core/vm.opSub (114 samples, 0.02%)</title><rect x="610.5" y="597" width="0.1" height="15.0" fill="rgb(224,183,11)" rx="2" ry="2" />
<text  x="613.45" y="607.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*Decoder).mustDecode (857 samples, 0.12%)</title><rect x="169.2" y="613" width="1.4" height="15.0" fill="rgb(212,85,24)" rx="2" ry="2" />
<text  x="172.17" y="623.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (157 samples, 0.02%)</title><rect x="1181.4" y="517" width="0.3" height="15.0" fill="rgb(235,144,9)" rx="2" ry="2" />
<text  x="1184.44" y="527.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.(*state).padAndPermute (5,399 samples, 0.78%)</title><rect x="646.2" y="613" width="9.2" height="15.0" fill="rgb(229,183,5)" rx="2" ry="2" />
<text  x="649.21" y="623.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.(*roaringArray).readFrom (201 samples, 0.03%)</title><rect x="145.7" y="645" width="0.3" height="15.0" fill="rgb(215,177,31)" rx="2" ry="2" />
<text  x="148.66" y="655.5" ></text>
</g>
<g >
<title>cmpbody (1,001 samples, 0.14%)</title><rect x="684.2" y="501" width="1.7" height="15.0" fill="rgb(253,34,12)" rx="2" ry="2" />
<text  x="687.19" y="511.5" ></text>
</g>
<g >
<title>runtime.mallocgc (368 samples, 0.05%)</title><rect x="851.9" y="549" width="0.6" height="15.0" fill="rgb(246,202,26)" rx="2" ry="2" />
<text  x="854.86" y="559.5" ></text>
</g>
<g >
<title>runtime.mallocgc (113 samples, 0.02%)</title><rect x="271.6" y="565" width="0.2" height="15.0" fill="rgb(214,152,40)" rx="2" ry="2" />
<text  x="274.56" y="575.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find (1,661 samples, 0.24%)</title><rect x="705.1" y="517" width="2.8" height="15.0" fill="rgb(252,217,37)" rx="2" ry="2" />
<text  x="708.10" y="527.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (75 samples, 0.01%)</title><rect x="1176.4" y="709" width="0.1" height="15.0" fill="rgb(226,32,20)" rx="2" ry="2" />
<text  x="1179.41" y="719.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (73 samples, 0.01%)</title><rect x="389.9" y="229" width="0.1" height="15.0" fill="rgb(224,128,38)" rx="2" ry="2" />
<text  x="392.91" y="239.5" ></text>
</g>
<g >
<title>tg/core/vm/stack.(*Stack).Swap (799 samples, 0.11%)</title><rect x="619.6" y="597" width="1.4" height="15.0" fill="rgb(213,69,10)" rx="2" ry="2" />
<text  x="622.60" y="607.5" ></text>
</g>
<g >
<title>runtime.slicebytetostring (694 samples, 0.10%)</title><rect x="860.3" y="533" width="1.2" height="15.0" fill="rgb(210,163,31)" rx="2" ry="2" />
<text  x="863.32" y="543.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).StaticCall (127 samples, 0.02%)</title><rect x="451.2" y="389" width="0.2" height="15.0" fill="rgb(212,214,12)" rx="2" ry="2" />
<text  x="454.21" y="399.5" ></text>
</g>
<g >
<title>tg/common/etl.readElementFromDisk (409 samples, 0.06%)</title><rect x="1047.0" y="661" width="0.7" height="15.0" fill="rgb(222,194,52)" rx="2" ry="2" />
<text  x="1050.05" y="671.5" ></text>
</g>
<g >
<title>tg/ethdb.(*TxDb).Get (203 samples, 0.03%)</title><rect x="323.9" y="501" width="0.3" height="15.0" fill="rgb(229,93,20)" rx="2" ry="2" />
<text  x="326.89" y="511.5" ></text>
</g>
<g >
<title>tg/core/state.(*stateObject).Code (239 samples, 0.03%)</title><rect x="464.0" y="549" width="0.4" height="15.0" fill="rgb(249,137,12)" rx="2" ry="2" />
<text  x="466.99" y="559.5" ></text>
</g>
<g >
<title>tg/core/types.NewReceipt (584 samples, 0.08%)</title><rect x="778.7" y="693" width="0.9" height="15.0" fill="rgb(240,225,15)" rx="2" ry="2" />
<text  x="781.66" y="703.5" ></text>
</g>
<g >
<title>aeshashbody (313 samples, 0.05%)</title><rect x="141.1" y="661" width="0.5" height="15.0" fill="rgb(243,224,38)" rx="2" ry="2" />
<text  x="144.10" y="671.5" ></text>
</g>
<g >
<title>runtime.mapaccess1 (135 samples, 0.02%)</title><rect x="202.7" y="373" width="0.3" height="15.0" fill="rgb(248,51,36)" rx="2" ry="2" />
<text  x="205.73" y="383.5" ></text>
</g>
<g >
<title>sort.swapRange (86 samples, 0.01%)</title><rect x="990.9" y="325" width="0.2" height="15.0" fill="rgb(245,209,35)" rx="2" ry="2" />
<text  x="993.94" y="335.5" ></text>
</g>
<g >
<title>tg/core/vm.opCreate (129 samples, 0.02%)</title><rect x="495.5" y="533" width="0.2" height="15.0" fill="rgb(250,18,38)" rx="2" ry="2" />
<text  x="498.45" y="543.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.(*Bitmap).WriteTo (67 samples, 0.01%)</title><rect x="1041.2" y="613" width="0.1" height="15.0" fill="rgb(217,150,24)" rx="2" ry="2" />
<text  x="1044.17" y="623.5" ></text>
</g>
<g >
<title>runtime.evacuate (88 samples, 0.01%)</title><rect x="287.0" y="565" width="0.1" height="15.0" fill="rgb(254,11,46)" rx="2" ry="2" />
<text  x="290.00" y="575.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (71 samples, 0.01%)</title><rect x="266.8" y="565" width="0.2" height="15.0" fill="rgb(210,168,15)" rx="2" ry="2" />
<text  x="269.85" y="575.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVMInterpreter).Run (696 samples, 0.10%)</title><rect x="393.5" y="357" width="1.2" height="15.0" fill="rgb(209,61,51)" rx="2" ry="2" />
<text  x="396.50" y="367.5" ></text>
</g>
<g >
<title>tg/consensus/ethash.hashimotoLight (3,058 samples, 0.44%)</title><rect x="129.2" y="805" width="5.2" height="15.0" fill="rgb(237,63,30)" rx="2" ry="2" />
<text  x="132.22" y="815.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*BTree).Get (213 samples, 0.03%)</title><rect x="504.2" y="453" width="0.4" height="15.0" fill="rgb(207,191,32)" rx="2" ry="2" />
<text  x="507.24" y="463.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (90 samples, 0.01%)</title><rect x="501.2" y="357" width="0.2" height="15.0" fill="rgb(219,150,42)" rx="2" ry="2" />
<text  x="504.22" y="367.5" ></text>
</g>
<g >
<title>sort.symMerge (2,490 samples, 0.36%)</title><rect x="989.8" y="389" width="4.3" height="15.0" fill="rgb(229,186,47)" rx="2" ry="2" />
<text  x="992.84" y="399.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVMInterpreter).Run (146 samples, 0.02%)</title><rect x="448.5" y="421" width="0.3" height="15.0" fill="rgb(217,92,44)" rx="2" ry="2" />
<text  x="451.50" y="431.5" ></text>
</g>
<g >
<title>runtime.SetFinalizer (346 samples, 0.05%)</title><rect x="929.5" y="469" width="0.6" height="15.0" fill="rgb(225,145,32)" rx="2" ry="2" />
<text  x="932.54" y="479.5" ></text>
</g>
<g >
<title>runtime.evacuate (406 samples, 0.06%)</title><rect x="668.9" y="597" width="0.7" height="15.0" fill="rgb(213,182,10)" rx="2" ry="2" />
<text  x="671.90" y="607.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*decRd).readn1 (235 samples, 0.03%)</title><rect x="165.6" y="597" width="0.4" height="15.0" fill="rgb(206,144,33)" rx="2" ry="2" />
<text  x="168.59" y="607.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find.func1 (224 samples, 0.03%)</title><rect x="440.1" y="357" width="0.4" height="15.0" fill="rgb(245,178,4)" rx="2" ry="2" />
<text  x="443.14" y="367.5" ></text>
</g>
<g >
<title>runtime.convT2I (91 samples, 0.01%)</title><rect x="269.6" y="565" width="0.1" height="15.0" fill="rgb(211,141,1)" rx="2" ry="2" />
<text  x="272.58" y="575.5" ></text>
</g>
<g >
<title>tg/ethdb/cbor.Marshal (1,588 samples, 0.23%)</title><rect x="783.1" y="693" width="2.7" height="15.0" fill="rgb(216,203,8)" rx="2" ry="2" />
<text  x="786.09" y="703.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb._Cfunc_lmdbgo_mdb_cursor_put2 (2,835 samples, 0.41%)</title><rect x="171.6" y="565" width="4.8" height="15.0" fill="rgb(215,125,43)" rx="2" ry="2" />
<text  x="174.57" y="575.5" ></text>
</g>
<g >
<title>sort.symMerge (1,542 samples, 0.22%)</title><rect x="190.0" y="245" width="2.6" height="15.0" fill="rgb(205,188,19)" rx="2" ry="2" />
<text  x="193.00" y="255.5" ></text>
</g>
<g >
<title>runtime.mallocgc (103 samples, 0.01%)</title><rect x="241.1" y="549" width="0.1" height="15.0" fill="rgb(238,208,4)" rx="2" ry="2" />
<text  x="244.07" y="559.5" ></text>
</g>
<g >
<title>tg/turbo/trie.(*HashBuilder).accountLeafHashWithKey (175 samples, 0.03%)</title><rect x="1029.1" y="629" width="0.3" height="15.0" fill="rgb(236,134,29)" rx="2" ry="2" />
<text  x="1032.11" y="639.5" ></text>
</g>
<g >
<title>tg/core/vm.opStaticCall (59 samples, 0.01%)</title><rect x="497.4" y="341" width="0.1" height="15.0" fill="rgb(214,225,35)" rx="2" ry="2" />
<text  x="500.42" y="351.5" ></text>
</g>
<g >
<title>runtime.makeslice (236 samples, 0.03%)</title><rect x="978.2" y="581" width="0.4" height="15.0" fill="rgb(213,98,27)" rx="2" ry="2" />
<text  x="981.16" y="591.5" ></text>
</g>
<g >
<title>runtime.growWork (116 samples, 0.02%)</title><rect x="261.4" y="581" width="0.2" height="15.0" fill="rgb(224,45,10)" rx="2" ry="2" />
<text  x="264.36" y="591.5" ></text>
</g>
<g >
<title>runtime.mallocgc (488 samples, 0.07%)</title><rect x="909.8" y="501" width="0.8" height="15.0" fill="rgb(243,67,2)" rx="2" ry="2" />
<text  x="912.82" y="511.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (6,332 samples, 0.91%)</title><rect x="272.2" y="549" width="10.8" height="15.0" fill="rgb(253,61,54)" rx="2" ry="2" />
<text  x="275.22" y="559.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*Decoder).decodeValueNoCheckNil (2,186 samples, 0.31%)</title><rect x="161.9" y="629" width="3.7" height="15.0" fill="rgb(224,76,37)" rx="2" ry="2" />
<text  x="164.86" y="639.5" ></text>
</g>
<g >
<title>bytes.Compare (169 samples, 0.02%)</title><rect x="871.2" y="181" width="0.3" height="15.0" fill="rgb(238,216,44)" rx="2" ry="2" />
<text  x="874.21" y="191.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (81 samples, 0.01%)</title><rect x="1097.9" y="517" width="0.2" height="15.0" fill="rgb(232,66,32)" rx="2" ry="2" />
<text  x="1100.94" y="527.5" ></text>
</g>
<g >
<title>github.com/holiman/uint256.(*Int).SetBytes32 (70 samples, 0.01%)</title><rect x="535.1" y="565" width="0.1" height="15.0" fill="rgb(212,156,4)" rx="2" ry="2" />
<text  x="538.11" y="575.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb._Cfunc_lmdbgo_mdb_cursor_put2 (80 samples, 0.01%)</title><rect x="814.7" y="533" width="0.1" height="15.0" fill="rgb(212,172,8)" rx="2" ry="2" />
<text  x="817.70" y="543.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVMInterpreter).Run (226 samples, 0.03%)</title><rect x="383.4" y="165" width="0.4" height="15.0" fill="rgb(237,8,39)" rx="2" ry="2" />
<text  x="386.44" y="175.5" ></text>
</g>
<g >
<title>runtime.selectnbsend (458 samples, 0.07%)</title><rect x="1011.5" y="549" width="0.8" height="15.0" fill="rgb(235,119,38)" rx="2" ry="2" />
<text  x="1014.50" y="559.5" ></text>
</g>
<g >
<title>bytes.Compare (61 samples, 0.01%)</title><rect x="607.1" y="309" width="0.1" height="15.0" fill="rgb(212,49,4)" rx="2" ry="2" />
<text  x="610.13" y="319.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*bufioEncWriter).writestr (111 samples, 0.02%)</title><rect x="144.3" y="533" width="0.1" height="15.0" fill="rgb(209,148,12)" rx="2" ry="2" />
<text  x="147.26" y="543.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.beginTxn (5,104 samples, 0.73%)</title><rect x="899.5" y="501" width="8.7" height="15.0" fill="rgb(221,84,53)" rx="2" ry="2" />
<text  x="902.54" y="511.5" ></text>
</g>
<g >
<title>tg/ethdb.(*lmdbTx).get (154 samples, 0.02%)</title><rect x="230.5" y="661" width="0.3" height="15.0" fill="rgb(228,62,41)" rx="2" ry="2" />
<text  x="233.49" y="671.5" ></text>
</g>
<g >
<title>tg/ethdb.(*LmdbCursor).getBothRange (852 samples, 0.12%)</title><rect x="798.2" y="565" width="1.5" height="15.0" fill="rgb(252,118,37)" rx="2" ry="2" />
<text  x="801.20" y="575.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (74 samples, 0.01%)</title><rect x="450.2" y="325" width="0.1" height="15.0" fill="rgb(239,194,48)" rx="2" ry="2" />
<text  x="453.21" y="335.5" ></text>
</g>
<g >
<title>reflect.Value.Field (117 samples, 0.02%)</title><rect x="742.9" y="517" width="0.2" height="15.0" fill="rgb(223,229,16)" rx="2" ry="2" />
<text  x="745.91" y="527.5" ></text>
</g>
<g >
<title>tg/core/vm.opStaticCall (108 samples, 0.02%)</title><rect x="609.3" y="341" width="0.2" height="15.0" fill="rgb(249,126,50)" rx="2" ry="2" />
<text  x="612.27" y="351.5" ></text>
</g>
<g >
<title>sort.Search (250 samples, 0.04%)</title><rect x="258.0" y="517" width="0.4" height="15.0" fill="rgb(242,156,26)" rx="2" ry="2" />
<text  x="260.97" y="527.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.decByteSlice (435 samples, 0.06%)</title><rect x="169.8" y="533" width="0.7" height="15.0" fill="rgb(243,113,16)" rx="2" ry="2" />
<text  x="172.79" y="543.5" ></text>
</g>
<g >
<title>tg/core/vm.(*Memory).Set32 (215 samples, 0.03%)</title><rect x="388.3" y="389" width="0.4" height="15.0" fill="rgb(245,209,44)" rx="2" ry="2" />
<text  x="391.35" y="399.5" ></text>
</g>
<g >
<title>tg/core/vm.opJumpi (594 samples, 0.09%)</title><rect x="424.4" y="533" width="1.0" height="15.0" fill="rgb(226,54,30)" rx="2" ry="2" />
<text  x="427.44" y="543.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).GetCodeSize (71 samples, 0.01%)</title><rect x="604.7" y="517" width="0.1" height="15.0" fill="rgb(248,68,20)" rx="2" ry="2" />
<text  x="607.66" y="527.5" ></text>
</g>
<g >
<title>runtime.mallocgc (143 samples, 0.02%)</title><rect x="1093.5" y="629" width="0.3" height="15.0" fill="rgb(217,11,16)" rx="2" ry="2" />
<text  x="1096.51" y="639.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.(*arrayContainer).clone (118 samples, 0.02%)</title><rect x="1052.5" y="565" width="0.2" height="15.0" fill="rgb(221,102,41)" rx="2" ry="2" />
<text  x="1055.54" y="575.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.(*roaringArray).getWritableContainerAtIndex (149 samples, 0.02%)</title><rect x="1060.1" y="597" width="0.2" height="15.0" fill="rgb(247,109,46)" rx="2" ry="2" />
<text  x="1063.08" y="607.5" ></text>
</g>
<g >
<title>runtime.makeslice (159 samples, 0.02%)</title><rect x="818.2" y="613" width="0.3" height="15.0" fill="rgb(208,73,50)" rx="2" ry="2" />
<text  x="821.23" y="623.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).DelegateCall (3,324 samples, 0.48%)</title><rect x="482.7" y="453" width="5.7" height="15.0" fill="rgb(227,223,14)" rx="2" ry="2" />
<text  x="485.72" y="463.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (141 samples, 0.02%)</title><rect x="519.8" y="453" width="0.2" height="15.0" fill="rgb(205,163,52)" rx="2" ry="2" />
<text  x="522.78" y="463.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).SetCode (125 samples, 0.02%)</title><rect x="462.0" y="549" width="0.3" height="15.0" fill="rgb(222,182,40)" rx="2" ry="2" />
<text  x="465.04" y="559.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.(*state).padAndPermute (81 samples, 0.01%)</title><rect x="385.5" y="309" width="0.2" height="15.0" fill="rgb(246,214,18)" rx="2" ry="2" />
<text  x="388.54" y="319.5" ></text>
</g>
<g >
<title>sort.doPivot (65 samples, 0.01%)</title><rect x="1028.4" y="437" width="0.1" height="15.0" fill="rgb(227,67,3)" rx="2" ry="2" />
<text  x="1031.37" y="447.5" ></text>
</g>
<g >
<title>context.(*valueCtx).Value (157 samples, 0.02%)</title><rect x="721.0" y="597" width="0.3" height="15.0" fill="rgb(207,125,29)" rx="2" ry="2" />
<text  x="724.02" y="607.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb._Cfunc_lmdbgo_mdb_get (134 samples, 0.02%)</title><rect x="230.5" y="613" width="0.2" height="15.0" fill="rgb(216,208,10)" rx="2" ry="2" />
<text  x="233.50" y="623.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (138 samples, 0.02%)</title><rect x="464.5" y="437" width="0.2" height="15.0" fill="rgb(253,115,18)" rx="2" ry="2" />
<text  x="467.46" y="447.5" ></text>
</g>
<g >
<title>runtime.newobject (241 samples, 0.03%)</title><rect x="629.4" y="645" width="0.4" height="15.0" fill="rgb(246,93,15)" rx="2" ry="2" />
<text  x="632.39" y="655.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*BTree).Get (434 samples, 0.06%)</title><rect x="323.1" y="501" width="0.8" height="15.0" fill="rgb(250,150,1)" rx="2" ry="2" />
<text  x="326.13" y="511.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (203 samples, 0.03%)</title><rect x="389.9" y="245" width="0.3" height="15.0" fill="rgb(218,117,22)" rx="2" ry="2" />
<text  x="392.90" y="255.5" ></text>
</g>
<g >
<title>runtime.hashGrow (110 samples, 0.02%)</title><rect x="261.6" y="581" width="0.1" height="15.0" fill="rgb(233,134,21)" rx="2" ry="2" />
<text  x="264.56" y="591.5" ></text>
</g>
<g >
<title>sort.Search (3,575 samples, 0.51%)</title><rect x="676.4" y="533" width="6.1" height="15.0" fill="rgb(226,144,5)" rx="2" ry="2" />
<text  x="679.39" y="543.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (406 samples, 0.06%)</title><rect x="778.7" y="629" width="0.7" height="15.0" fill="rgb(243,114,5)" rx="2" ry="2" />
<text  x="781.75" y="639.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find (426 samples, 0.06%)</title><rect x="702.4" y="517" width="0.8" height="15.0" fill="rgb(205,165,48)" rx="2" ry="2" />
<text  x="705.43" y="527.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).getVal2 (84 samples, 0.01%)</title><rect x="395.5" y="261" width="0.1" height="15.0" fill="rgb(245,201,33)" rx="2" ry="2" />
<text  x="398.45" y="271.5" ></text>
</g>
<g >
<title>tg/ethdb.(*LmdbCursor).set (182 samples, 0.03%)</title><rect x="461.7" y="469" width="0.3" height="15.0" fill="rgb(230,53,2)" rx="2" ry="2" />
<text  x="464.70" y="479.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (76 samples, 0.01%)</title><rect x="1051.9" y="501" width="0.1" height="15.0" fill="rgb(238,24,20)" rx="2" ry="2" />
<text  x="1054.90" y="511.5" ></text>
</g>
<g >
<title>tg/rlp.makePtrWriter.func1 (455 samples, 0.07%)</title><rect x="744.7" y="517" width="0.8" height="15.0" fill="rgb(233,89,20)" rx="2" ry="2" />
<text  x="747.70" y="527.5" ></text>
</g>
<g >
<title>runtime.growslice (93 samples, 0.01%)</title><rect x="329.9" y="565" width="0.2" height="15.0" fill="rgb(232,202,15)" rx="2" ry="2" />
<text  x="332.93" y="575.5" ></text>
</g>
<g >
<title>tg/core/state.(*stateObject).GetState (76 samples, 0.01%)</title><rect x="451.1" y="373" width="0.1" height="15.0" fill="rgb(234,153,29)" rx="2" ry="2" />
<text  x="454.08" y="383.5" ></text>
</g>
<g >
<title>tg/ethdb.(*lmdbTx).get (8,222 samples, 1.18%)</title><rect x="835.0" y="517" width="14.0" height="15.0" fill="rgb(223,191,37)" rx="2" ry="2" />
<text  x="837.99" y="527.5" ></text>
</g>
<g >
<title>github.com/holiman/uint256.(*Int).SetBytes2 (77 samples, 0.01%)</title><rect x="334.3" y="581" width="0.1" height="15.0" fill="rgb(246,226,44)" rx="2" ry="2" />
<text  x="337.29" y="591.5" ></text>
</g>
<g >
<title>tg/ethdb.(*LmdbCursor).put (362 samples, 0.05%)</title><rect x="157.6" y="565" width="0.6" height="15.0" fill="rgb(245,54,33)" rx="2" ry="2" />
<text  x="160.62" y="575.5" ></text>
</g>
<g >
<title>tg/eth/stagedsync.SpawnStorageHistoryIndex (28,821 samples, 4.15%)</title><rect x="1057.9" y="741" width="48.9" height="15.0" fill="rgb(238,124,11)" rx="2" ry="2" />
<text  x="1060.89" y="751.5" >tg/e..</text>
</g>
<g >
<title>tg/eth/stagedsync.TxLookupTransform.func1 (22,465 samples, 3.23%)</title><rect x="176.6" y="597" width="38.1" height="15.0" fill="rgb(248,200,13)" rx="2" ry="2" />
<text  x="179.56" y="607.5" >tg/..</text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).SubBalance (209 samples, 0.03%)</title><rect x="339.6" y="549" width="0.3" height="15.0" fill="rgb(240,160,42)" rx="2" ry="2" />
<text  x="342.56" y="559.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.fastpathT.EncSliceBytesV (1,059 samples, 0.15%)</title><rect x="873.3" y="453" width="1.8" height="15.0" fill="rgb(218,130,18)" rx="2" ry="2" />
<text  x="876.26" y="463.5" ></text>
</g>
<g >
<title>tg/core/vm.opSload (281 samples, 0.04%)</title><rect x="450.0" y="469" width="0.5" height="15.0" fill="rgb(231,168,33)" rx="2" ry="2" />
<text  x="453.05" y="479.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (73 samples, 0.01%)</title><rect x="950.5" y="437" width="0.1" height="15.0" fill="rgb(229,91,13)" rx="2" ry="2" />
<text  x="953.45" y="447.5" ></text>
</g>
<g >
<title>tg/core/vm.opStaticCall (1,064 samples, 0.15%)</title><rect x="501.9" y="405" width="1.8" height="15.0" fill="rgb(215,120,44)" rx="2" ry="2" />
<text  x="504.93" y="415.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.xorInUnaligned (153 samples, 0.02%)</title><rect x="1009.0" y="517" width="0.3" height="15.0" fill="rgb(214,136,50)" rx="2" ry="2" />
<text  x="1012.05" y="527.5" ></text>
</g>
<g >
<title>tg/common/dbutils.PlainGenerateCompositeStorageKey (259 samples, 0.04%)</title><rect x="701.5" y="597" width="0.5" height="15.0" fill="rgb(252,40,45)" rx="2" ry="2" />
<text  x="704.55" y="607.5" ></text>
</g>
<g >
<title>tg/consensus/ethash.fnvHash (2,183 samples, 0.31%)</title><rect x="130.3" y="741" width="3.7" height="15.0" fill="rgb(243,125,16)" rx="2" ry="2" />
<text  x="133.28" y="751.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.(*runContainer16).toEfficientContainer (4,390 samples, 0.63%)</title><rect x="149.0" y="565" width="7.5" height="15.0" fill="rgb(236,64,30)" rx="2" ry="2" />
<text  x="152.01" y="575.5" ></text>
</g>
<g >
<title>runtime.makeslice (269 samples, 0.04%)</title><rect x="218.0" y="373" width="0.5" height="15.0" fill="rgb(234,82,51)" rx="2" ry="2" />
<text  x="221.00" y="383.5" ></text>
</g>
<g >
<title>tg/common.ReturnHasherToPool (489 samples, 0.07%)</title><rect x="893.5" y="533" width="0.8" height="15.0" fill="rgb(208,88,16)" rx="2" ry="2" />
<text  x="896.50" y="543.5" ></text>
</g>
<g >
<title>runtime.makemap_small (373 samples, 0.05%)</title><rect x="259.8" y="581" width="0.6" height="15.0" fill="rgb(226,138,53)" rx="2" ry="2" />
<text  x="262.78" y="591.5" ></text>
</g>
<g >
<title>tg/turbo/trie.(*HashBuilder).accountLeafHash (179 samples, 0.03%)</title><rect x="1029.1" y="645" width="0.3" height="15.0" fill="rgb(246,2,6)" rx="2" ry="2" />
<text  x="1032.11" y="655.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (5,360 samples, 0.77%)</title><rect x="272.3" y="517" width="9.1" height="15.0" fill="rgb(216,208,20)" rx="2" ry="2" />
<text  x="275.29" y="527.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.(*state).padAndPermute (1,362 samples, 0.20%)</title><rect x="1114.4" y="613" width="2.3" height="15.0" fill="rgb(208,39,29)" rx="2" ry="2" />
<text  x="1117.44" y="623.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (701 samples, 0.10%)</title><rect x="435.9" y="357" width="1.2" height="15.0" fill="rgb(205,104,34)" rx="2" ry="2" />
<text  x="438.93" y="367.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (382 samples, 0.05%)</title><rect x="767.7" y="549" width="0.6" height="15.0" fill="rgb(211,149,53)" rx="2" ry="2" />
<text  x="770.66" y="559.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (63 samples, 0.01%)</title><rect x="330.3" y="453" width="0.1" height="15.0" fill="rgb(228,40,27)" rx="2" ry="2" />
<text  x="333.33" y="463.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find (914 samples, 0.13%)</title><rect x="579.6" y="453" width="1.5" height="15.0" fill="rgb(252,197,21)" rx="2" ry="2" />
<text  x="582.59" y="463.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (246 samples, 0.04%)</title><rect x="561.8" y="453" width="0.4" height="15.0" fill="rgb(234,45,24)" rx="2" ry="2" />
<text  x="564.81" y="463.5" ></text>
</g>
<g >
<title>tg/common/etl.(*currentTableReader).Get (817 samples, 0.12%)</title><rect x="1093.8" y="661" width="1.4" height="15.0" fill="rgb(251,40,6)" rx="2" ry="2" />
<text  x="1096.83" y="671.5" ></text>
</g>
<g >
<title>bytes.Compare (171 samples, 0.02%)</title><rect x="961.0" y="645" width="0.3" height="15.0" fill="rgb(216,215,40)" rx="2" ry="2" />
<text  x="964.03" y="655.5" ></text>
</g>
<g >
<title>tg/ethdb.(*ObjectDatabase).Walk.func1 (5,378 samples, 0.77%)</title><rect x="196.9" y="517" width="9.1" height="15.0" fill="rgb(222,23,26)" rx="2" ry="2" />
<text  x="199.88" y="527.5" ></text>
</g>
<g >
<title>tg/core/vm.(*Contract).validJumpdest (481 samples, 0.07%)</title><rect x="529.6" y="581" width="0.9" height="15.0" fill="rgb(213,23,49)" rx="2" ry="2" />
<text  x="532.65" y="591.5" ></text>
</g>
<g >
<title>runtime.mapaccess1 (126 samples, 0.02%)</title><rect x="792.6" y="517" width="0.2" height="15.0" fill="rgb(237,93,15)" rx="2" ry="2" />
<text  x="795.56" y="527.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (102 samples, 0.01%)</title><rect x="244.7" y="533" width="0.1" height="15.0" fill="rgb(250,45,39)" rx="2" ry="2" />
<text  x="247.66" y="543.5" ></text>
</g>
<g >
<title>runtime.mapassign (340 samples, 0.05%)</title><rect x="693.6" y="645" width="0.6" height="15.0" fill="rgb(215,108,31)" rx="2" ry="2" />
<text  x="696.59" y="655.5" ></text>
</g>
<g >
<title>github.com/holiman/uint256.(*Int).Div (66 samples, 0.01%)</title><rect x="488.4" y="453" width="0.1" height="15.0" fill="rgb(234,122,14)" rx="2" ry="2" />
<text  x="491.38" y="463.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).GetState (229 samples, 0.03%)</title><rect x="486.9" y="389" width="0.4" height="15.0" fill="rgb(219,97,21)" rx="2" ry="2" />
<text  x="489.89" y="399.5" ></text>
</g>
<g >
<title>tg/core/state.(*stateObject).GetCommittedState (814 samples, 0.12%)</title><rect x="606.6" y="485" width="1.4" height="15.0" fill="rgb(222,16,33)" rx="2" ry="2" />
<text  x="609.62" y="495.5" ></text>
</g>
<g >
<title>sort.symMerge (133 samples, 0.02%)</title><rect x="1040.3" y="341" width="0.2" height="15.0" fill="rgb(249,172,50)" rx="2" ry="2" />
<text  x="1043.30" y="351.5" ></text>
</g>
<g >
<title>runtime.mallocgc (84 samples, 0.01%)</title><rect x="735.2" y="629" width="0.2" height="15.0" fill="rgb(225,115,43)" rx="2" ry="2" />
<text  x="738.23" y="639.5" ></text>
</g>
<g >
<title>tg/core/vm/stack.(*Stack).Push (583 samples, 0.08%)</title><rect x="407.5" y="469" width="1.0" height="15.0" fill="rgb(241,11,10)" rx="2" ry="2" />
<text  x="410.51" y="479.5" ></text>
</g>
<g >
<title>bytes.Compare (180 samples, 0.03%)</title><rect x="1068.0" y="517" width="0.3" height="15.0" fill="rgb(214,111,50)" rx="2" ry="2" />
<text  x="1070.97" y="527.5" ></text>
</g>
<g >
<title>runtime.exitsyscallfast (84 samples, 0.01%)</title><rect x="593.1" y="373" width="0.1" height="15.0" fill="rgb(243,132,19)" rx="2" ry="2" />
<text  x="596.09" y="383.5" ></text>
</g>
<g >
<title>tg/core/vm.opMstore (70 samples, 0.01%)</title><rect x="385.4" y="341" width="0.1" height="15.0" fill="rgb(245,31,21)" rx="2" ry="2" />
<text  x="388.36" y="351.5" ></text>
</g>
<g >
<title>tg/core/vm.RunPrecompiledContract (635 samples, 0.09%)</title><rect x="472.3" y="501" width="1.1" height="15.0" fill="rgb(220,207,26)" rx="2" ry="2" />
<text  x="475.28" y="511.5" ></text>
</g>
<g >
<title>runtime.notesleep (995 samples, 0.14%)</title><rect x="118.5" y="789" width="1.6" height="15.0" fill="rgb(212,206,47)" rx="2" ry="2" />
<text  x="121.46" y="799.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.keccakF1600 (100 samples, 0.01%)</title><rect x="1134.4" y="741" width="0.2" height="15.0" fill="rgb(222,156,26)" rx="2" ry="2" />
<text  x="1137.39" y="751.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).Read (169 samples, 0.02%)</title><rect x="970.5" y="421" width="0.3" height="15.0" fill="rgb(220,225,41)" rx="2" ry="2" />
<text  x="973.47" y="431.5" ></text>
</g>
<g >
<title>bytes.Compare (129 samples, 0.02%)</title><rect x="1074.2" y="341" width="0.2" height="15.0" fill="rgb(222,150,45)" rx="2" ry="2" />
<text  x="1077.21" y="351.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.(*state).permute (95 samples, 0.01%)</title><rect x="1130.1" y="757" width="0.1" height="15.0" fill="rgb(232,53,28)" rx="2" ry="2" />
<text  x="1133.06" y="767.5" ></text>
</g>
<g >
<title>context.(*valueCtx).Value (524 samples, 0.08%)</title><rect x="642.5" y="629" width="0.9" height="15.0" fill="rgb(219,202,24)" rx="2" ry="2" />
<text  x="645.52" y="639.5" ></text>
</g>
<g >
<title>sort.rotate (218 samples, 0.03%)</title><rect x="183.1" y="389" width="0.4" height="15.0" fill="rgb(232,161,0)" rx="2" ry="2" />
<text  x="186.12" y="399.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find (72 samples, 0.01%)</title><rect x="418.9" y="277" width="0.1" height="15.0" fill="rgb(208,45,35)" rx="2" ry="2" />
<text  x="421.89" y="287.5" ></text>
</g>
<g >
<title>tg/core/vm.(*Memory).Resize (216 samples, 0.03%)</title><rect x="494.9" y="485" width="0.4" height="15.0" fill="rgb(225,147,8)" rx="2" ry="2" />
<text  x="497.93" y="495.5" ></text>
</g>
<g >
<title>tg/core/vm.opPush1 (172 samples, 0.02%)</title><rect x="399.1" y="469" width="0.3" height="15.0" fill="rgb(247,7,43)" rx="2" ry="2" />
<text  x="402.11" y="479.5" ></text>
</g>
<g >
<title>sort.Search (1,637 samples, 0.24%)</title><rect x="673.0" y="517" width="2.8" height="15.0" fill="rgb(232,191,43)" rx="2" ry="2" />
<text  x="676.04" y="527.5" ></text>
</g>
<g >
<title>runtime.mapaccess1_faststr (142 samples, 0.02%)</title><rect x="934.0" y="485" width="0.3" height="15.0" fill="rgb(250,111,37)" rx="2" ry="2" />
<text  x="937.02" y="495.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).getStateObject (112 samples, 0.02%)</title><rect x="262.6" y="597" width="0.2" height="15.0" fill="rgb(229,195,47)" rx="2" ry="2" />
<text  x="265.63" y="607.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.NewBitmap (128 samples, 0.02%)</title><rect x="1058.9" y="629" width="0.2" height="15.0" fill="rgb(247,23,13)" rx="2" ry="2" />
<text  x="1061.92" y="639.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Txn).abort.func1 (824 samples, 0.12%)</title><rect x="849.0" y="485" width="1.4" height="15.0" fill="rgb(223,205,2)" rx="2" ry="2" />
<text  x="852.02" y="495.5" ></text>
</g>
<g >
<title>runtime.makeslice (65 samples, 0.01%)</title><rect x="239.7" y="597" width="0.1" height="15.0" fill="rgb(246,120,39)" rx="2" ry="2" />
<text  x="242.65" y="607.5" ></text>
</g>
<g >
<title>tg/core/state.(*PlainStateWriter).DeleteAccount (402 samples, 0.06%)</title><rect x="665.3" y="661" width="0.7" height="15.0" fill="rgb(222,111,33)" rx="2" ry="2" />
<text  x="668.32" y="671.5" ></text>
</g>
<g >
<title>tg/core/vm.pureMemoryGascost (166 samples, 0.02%)</title><rect x="453.2" y="533" width="0.2" height="15.0" fill="rgb(236,161,54)" rx="2" ry="2" />
<text  x="456.17" y="543.5" ></text>
</g>
<g >
<title>runtime.exitsyscall (408 samples, 0.06%)</title><rect x="955.4" y="501" width="0.7" height="15.0" fill="rgb(220,5,35)" rx="2" ry="2" />
<text  x="958.45" y="511.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).getVal1 (164 samples, 0.02%)</title><rect x="464.8" y="453" width="0.3" height="15.0" fill="rgb(206,69,54)" rx="2" ry="2" />
<text  x="467.83" y="463.5" ></text>
</g>
<g >
<title>tg/ethdb.(*ObjectDatabase).Walk.func1 (65 samples, 0.01%)</title><rect x="1180.7" y="693" width="0.1" height="15.0" fill="rgb(212,85,33)" rx="2" ry="2" />
<text  x="1183.67" y="703.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*decRd).readn1 (86 samples, 0.01%)</title><rect x="164.9" y="469" width="0.1" height="15.0" fill="rgb(249,1,48)" rx="2" ry="2" />
<text  x="167.89" y="479.5" ></text>
</g>
<g >
<title>runtime.casgstatus (189 samples, 0.03%)</title><rect x="96.4" y="821" width="0.3" height="15.0" fill="rgb(211,214,7)" rx="2" ry="2" />
<text  x="99.42" y="831.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*Encoder).Encode (1,631 samples, 0.23%)</title><rect x="873.0" y="517" width="2.7" height="15.0" fill="rgb(224,150,28)" rx="2" ry="2" />
<text  x="875.96" y="527.5" ></text>
</g>
<g >
<title>runtime.(*memRecordCycle).add (293 samples, 0.04%)</title><rect x="34.2" y="805" width="0.5" height="15.0" fill="rgb(205,7,17)" rx="2" ry="2" />
<text  x="37.24" y="815.5" ></text>
</g>
<g >
<title>reflect.Copy (78 samples, 0.01%)</title><rect x="226.6" y="405" width="0.1" height="15.0" fill="rgb(244,76,6)" rx="2" ry="2" />
<text  x="229.56" y="415.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (221 samples, 0.03%)</title><rect x="826.9" y="469" width="0.4" height="15.0" fill="rgb(222,46,8)" rx="2" ry="2" />
<text  x="829.89" y="479.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (173 samples, 0.02%)</title><rect x="658.9" y="597" width="0.3" height="15.0" fill="rgb(242,221,2)" rx="2" ry="2" />
<text  x="661.94" y="607.5" ></text>
</g>
<g >
<title>runtime.mapaccess2 (352 samples, 0.05%)</title><rect x="558.3" y="533" width="0.6" height="15.0" fill="rgb(229,180,8)" rx="2" ry="2" />
<text  x="561.32" y="543.5" ></text>
</g>
<g >
<title>sync/atomic.(*Value).Load (125 samples, 0.02%)</title><rect x="234.0" y="693" width="0.3" height="15.0" fill="rgb(221,117,14)" rx="2" ry="2" />
<text  x="237.05" y="703.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.(*roaringArray).binarySearch (89 samples, 0.01%)</title><rect x="1050.4" y="565" width="0.2" height="15.0" fill="rgb(235,212,3)" rx="2" ry="2" />
<text  x="1053.43" y="575.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find.func1 (156 samples, 0.02%)</title><rect x="666.2" y="517" width="0.3" height="15.0" fill="rgb(235,209,30)" rx="2" ry="2" />
<text  x="669.25" y="527.5" ></text>
</g>
<g >
<title>runtime.exitsyscall (159 samples, 0.02%)</title><rect x="830.8" y="437" width="0.3" height="15.0" fill="rgb(246,228,20)" rx="2" ry="2" />
<text  x="833.85" y="447.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (59 samples, 0.01%)</title><rect x="218.3" y="309" width="0.1" height="15.0" fill="rgb(232,69,54)" rx="2" ry="2" />
<text  x="221.27" y="319.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (69 samples, 0.01%)</title><rect x="622.9" y="581" width="0.1" height="15.0" fill="rgb(254,137,27)" rx="2" ry="2" />
<text  x="625.88" y="591.5" ></text>
</g>
<g >
<title>tg/ethdb.(*TxDb).Get (262 samples, 0.04%)</title><rect x="607.6" y="437" width="0.4" height="15.0" fill="rgb(244,141,40)" rx="2" ry="2" />
<text  x="610.55" y="447.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (83 samples, 0.01%)</title><rect x="1051.9" y="533" width="0.1" height="15.0" fill="rgb(211,8,44)" rx="2" ry="2" />
<text  x="1054.89" y="543.5" ></text>
</g>
<g >
<title>sort.symMerge (112 samples, 0.02%)</title><rect x="1040.3" y="293" width="0.2" height="15.0" fill="rgb(226,106,11)" rx="2" ry="2" />
<text  x="1043.34" y="303.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (67 samples, 0.01%)</title><rect x="764.4" y="389" width="0.1" height="15.0" fill="rgb(220,151,1)" rx="2" ry="2" />
<text  x="767.40" y="399.5" ></text>
</g>
<g >
<title>tg/rlp.(*Stream).readKind (61 samples, 0.01%)</title><rect x="1186.3" y="565" width="0.1" height="15.0" fill="rgb(208,182,21)" rx="2" ry="2" />
<text  x="1189.29" y="575.5" ></text>
</g>
<g >
<title>tg/core/vm.opCall (90 samples, 0.01%)</title><rect x="485.9" y="277" width="0.2" height="15.0" fill="rgb(249,98,47)" rx="2" ry="2" />
<text  x="488.92" y="287.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).insert (8,462 samples, 1.22%)</title><rect x="704.6" y="581" width="14.3" height="15.0" fill="rgb(251,155,19)" rx="2" ry="2" />
<text  x="707.58" y="591.5" ></text>
</g>
<g >
<title>runtime.cgocall (720 samples, 0.10%)</title><rect x="849.0" y="453" width="1.3" height="15.0" fill="rgb(226,212,13)" rx="2" ry="2" />
<text  x="852.04" y="463.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (788 samples, 0.11%)</title><rect x="1100.3" y="469" width="1.3" height="15.0" fill="rgb(232,221,13)" rx="2" ry="2" />
<text  x="1103.29" y="479.5" ></text>
</g>
<g >
<title>tg/core/vm.(*Contract).UseGas (191 samples, 0.03%)</title><rect x="294.3" y="613" width="0.3" height="15.0" fill="rgb(215,144,37)" rx="2" ry="2" />
<text  x="297.31" y="623.5" ></text>
</g>
<g >
<title>tg/rlp.writeBytes (269 samples, 0.04%)</title><rect x="745.5" y="517" width="0.4" height="15.0" fill="rgb(240,218,3)" rx="2" ry="2" />
<text  x="748.47" y="527.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.keccakF1600 (308 samples, 0.04%)</title><rect x="508.8" y="469" width="0.6" height="15.0" fill="rgb(211,34,3)" rx="2" ry="2" />
<text  x="511.83" y="479.5" ></text>
</g>
<g >
<title>tg/core/vm.makeSwap.func1 (335 samples, 0.05%)</title><rect x="367.7" y="533" width="0.5" height="15.0" fill="rgb(209,71,46)" rx="2" ry="2" />
<text  x="370.67" y="543.5" ></text>
</g>
<g >
<title>tg/core/state.(*stateObject).GetState (834 samples, 0.12%)</title><rect x="606.6" y="501" width="1.4" height="15.0" fill="rgb(251,120,24)" rx="2" ry="2" />
<text  x="609.59" y="511.5" ></text>
</g>
<g >
<title>sync.(*Mutex).Unlock (75 samples, 0.01%)</title><rect x="555.1" y="565" width="0.1" height="15.0" fill="rgb(232,123,47)" rx="2" ry="2" />
<text  x="558.08" y="575.5" ></text>
</g>
<g >
<title>sort.Search (1,678 samples, 0.24%)</title><rect x="253.7" y="485" width="2.9" height="15.0" fill="rgb(253,20,35)" rx="2" ry="2" />
<text  x="256.71" y="495.5" ></text>
</g>
<g >
<title>runtime.convT2Enoptr (72 samples, 0.01%)</title><rect x="206.2" y="565" width="0.1" height="15.0" fill="rgb(237,210,14)" rx="2" ry="2" />
<text  x="209.18" y="575.5" ></text>
</g>
<g >
<title>tg/core/state.(*stateObject).GetState (257 samples, 0.04%)</title><rect x="596.6" y="549" width="0.5" height="15.0" fill="rgb(211,150,43)" rx="2" ry="2" />
<text  x="599.65" y="559.5" ></text>
</g>
<g >
<title>runtime.mapassign (123 samples, 0.02%)</title><rect x="596.0" y="533" width="0.2" height="15.0" fill="rgb(241,135,0)" rx="2" ry="2" />
<text  x="599.00" y="543.5" ></text>
</g>
<g >
<title>runtime.makeBucketArray (161 samples, 0.02%)</title><rect x="434.9" y="437" width="0.2" height="15.0" fill="rgb(208,90,21)" rx="2" ry="2" />
<text  x="437.86" y="447.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).Get (538 samples, 0.08%)</title><rect x="221.0" y="517" width="0.9" height="15.0" fill="rgb(241,109,16)" rx="2" ry="2" />
<text  x="224.03" y="527.5" ></text>
</g>
<g >
<title>sort.quickSort (1,497 samples, 0.22%)</title><rect x="1026.4" y="613" width="2.5" height="15.0" fill="rgb(223,46,13)" rx="2" ry="2" />
<text  x="1029.39" y="623.5" ></text>
</g>
<g >
<title>tg/common/etl.NewCollector.func1 (11,249 samples, 1.62%)</title><rect x="177.6" y="565" width="19.1" height="15.0" fill="rgb(237,177,21)" rx="2" ry="2" />
<text  x="180.57" y="575.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.(*state).permute (6,347 samples, 0.91%)</title><rect x="880.3" y="501" width="10.8" height="15.0" fill="rgb(226,131,47)" rx="2" ry="2" />
<text  x="883.31" y="511.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (185 samples, 0.03%)</title><rect x="627.5" y="581" width="0.4" height="15.0" fill="rgb(241,77,52)" rx="2" ry="2" />
<text  x="630.54" y="591.5" ></text>
</g>
<g >
<title>tg/core/vm.opMstore (211 samples, 0.03%)</title><rect x="417.2" y="469" width="0.4" height="15.0" fill="rgb(207,89,24)" rx="2" ry="2" />
<text  x="420.21" y="479.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.(*state).Read (97 samples, 0.01%)</title><rect x="769.3" y="613" width="0.2" height="15.0" fill="rgb(234,71,15)" rx="2" ry="2" />
<text  x="772.33" y="623.5" ></text>
</g>
<g >
<title>tg/core/types.(*Transaction).DecodeRLP (2,713 samples, 0.39%)</title><rect x="216.0" y="469" width="4.6" height="15.0" fill="rgb(243,170,31)" rx="2" ry="2" />
<text  x="219.02" y="479.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (268 samples, 0.04%)</title><rect x="389.9" y="261" width="0.4" height="15.0" fill="rgb(244,0,41)" rx="2" ry="2" />
<text  x="392.89" y="271.5" ></text>
</g>
<g >
<title>tg/rlp.decodeSliceElems (3,636 samples, 0.52%)</title><rect x="1180.9" y="725" width="6.1" height="15.0" fill="rgb(217,80,45)" rx="2" ry="2" />
<text  x="1183.86" y="735.5" ></text>
</g>
<g >
<title>sort.symMerge (88 samples, 0.01%)</title><rect x="1076.9" y="229" width="0.1" height="15.0" fill="rgb(238,64,53)" rx="2" ry="2" />
<text  x="1079.89" y="239.5" ></text>
</g>
<g >
<title>tg/ethdb.(*LmdbKV).Update (363 samples, 0.05%)</title><rect x="1188.2" y="837" width="0.6" height="15.0" fill="rgb(244,85,21)" rx="2" ry="2" />
<text  x="1191.17" y="847.5" ></text>
</g>
<g >
<title>bytes.Compare (129 samples, 0.02%)</title><rect x="510.6" y="309" width="0.2" height="15.0" fill="rgb(246,118,38)" rx="2" ry="2" />
<text  x="513.60" y="319.5" ></text>
</g>
<g >
<title>cmpbody (151 samples, 0.02%)</title><rect x="1068.0" y="501" width="0.3" height="15.0" fill="rgb(247,57,31)" rx="2" ry="2" />
<text  x="1071.00" y="511.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (75 samples, 0.01%)</title><rect x="628.6" y="597" width="0.1" height="15.0" fill="rgb(205,52,1)" rx="2" ry="2" />
<text  x="631.60" y="607.5" ></text>
</g>
<g >
<title>tg/core/state.(*stateObject).GetCommittedState (180 samples, 0.03%)</title><rect x="501.2" y="421" width="0.3" height="15.0" fill="rgb(248,3,26)" rx="2" ry="2" />
<text  x="504.16" y="431.5" ></text>
</g>
<g >
<title>tg/rlp.makePtrWriter.func1 (192 samples, 0.03%)</title><rect x="1124.0" y="597" width="0.3" height="15.0" fill="rgb(232,222,17)" rx="2" ry="2" />
<text  x="1127.00" y="607.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (179 samples, 0.03%)</title><rect x="832.0" y="453" width="0.3" height="15.0" fill="rgb(232,167,30)" rx="2" ry="2" />
<text  x="835.05" y="463.5" ></text>
</g>
<g >
<title>tg/ethdb.(*LmdbCursor).set (79 samples, 0.01%)</title><rect x="340.5" y="485" width="0.1" height="15.0" fill="rgb(241,2,46)" rx="2" ry="2" />
<text  x="343.50" y="495.5" ></text>
</g>
<g >
<title>tg/rlp.makeStructDecoder.func1 (243 samples, 0.03%)</title><rect x="232.6" y="453" width="0.5" height="15.0" fill="rgb(232,213,33)" rx="2" ry="2" />
<text  x="235.65" y="463.5" ></text>
</g>
<g >
<title>tg/common/etl.readElementFromDisk (966 samples, 0.14%)</title><rect x="1088.9" y="661" width="1.6" height="15.0" fill="rgb(254,167,16)" rx="2" ry="2" />
<text  x="1091.85" y="671.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).getVal2 (825 samples, 0.12%)</title><rect x="798.2" y="533" width="1.4" height="15.0" fill="rgb(206,75,15)" rx="2" ry="2" />
<text  x="801.23" y="543.5" ></text>
</g>
<g >
<title>tg/core/vm.(*ecrecover).Run (86 samples, 0.01%)</title><rect x="608.2" y="485" width="0.2" height="15.0" fill="rgb(242,29,8)" rx="2" ry="2" />
<text  x="611.24" y="495.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVMInterpreter).Run (5,349 samples, 0.77%)</title><rect x="601.0" y="549" width="9.1" height="15.0" fill="rgb(246,178,34)" rx="2" ry="2" />
<text  x="604.05" y="559.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find.func1 (59 samples, 0.01%)</title><rect x="326.2" y="405" width="0.1" height="15.0" fill="rgb(229,210,27)" rx="2" ry="2" />
<text  x="329.21" y="415.5" ></text>
</g>
<g >
<title>tg/common/etl.(*sortableBuffer).Put (417 samples, 0.06%)</title><rect x="1067.2" y="597" width="0.7" height="15.0" fill="rgb(207,19,42)" rx="2" ry="2" />
<text  x="1070.18" y="607.5" ></text>
</g>
<g >
<title>tg/rlp.makeSliceWriter.func1 (131 samples, 0.02%)</title><rect x="1166.3" y="741" width="0.2" height="15.0" fill="rgb(226,210,6)" rx="2" ry="2" />
<text  x="1169.29" y="751.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb._Cfunc_mdb_txn_commit (490 samples, 0.07%)</title><rect x="1128.8" y="725" width="0.9" height="15.0" fill="rgb(220,1,43)" rx="2" ry="2" />
<text  x="1131.83" y="735.5" ></text>
</g>
<g >
<title>aeshashbody (78 samples, 0.01%)</title><rect x="556.4" y="517" width="0.2" height="15.0" fill="rgb(254,64,9)" rx="2" ry="2" />
<text  x="559.43" y="527.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.NewBitmap (90 samples, 0.01%)</title><rect x="1098.4" y="597" width="0.2" height="15.0" fill="rgb(253,50,50)" rx="2" ry="2" />
<text  x="1101.44" y="607.5" ></text>
</g>
<g >
<title>sort.Search (123 samples, 0.02%)</title><rect x="525.5" y="469" width="0.2" height="15.0" fill="rgb(252,172,30)" rx="2" ry="2" />
<text  x="528.49" y="479.5" ></text>
</g>
<g >
<title>tg/core/vm/stack.(*Stack).Swap (157 samples, 0.02%)</title><rect x="408.5" y="469" width="0.3" height="15.0" fill="rgb(244,79,13)" rx="2" ry="2" />
<text  x="411.50" y="479.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).getVal2.func1 (84 samples, 0.01%)</title><rect x="395.5" y="245" width="0.1" height="15.0" fill="rgb(211,150,1)" rx="2" ry="2" />
<text  x="398.45" y="255.5" ></text>
</g>
<g >
<title>tg/rlp.(*Stream).Decode (369 samples, 0.05%)</title><rect x="232.6" y="517" width="0.6" height="15.0" fill="rgb(223,37,15)" rx="2" ry="2" />
<text  x="235.59" y="527.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (68 samples, 0.01%)</title><rect x="463.2" y="325" width="0.1" height="15.0" fill="rgb(228,207,6)" rx="2" ry="2" />
<text  x="466.21" y="335.5" ></text>
</g>
<g >
<title>tg/rlp.cachedTypeInfo (123 samples, 0.02%)</title><rect x="1125.7" y="629" width="0.2" height="15.0" fill="rgb(241,85,28)" rx="2" ry="2" />
<text  x="1128.69" y="639.5" ></text>
</g>
<g >
<title>tg/rlp.makePtrWriter.func1 (1,940 samples, 0.28%)</title><rect x="209.2" y="517" width="3.3" height="15.0" fill="rgb(207,67,17)" rx="2" ry="2" />
<text  x="212.25" y="527.5" ></text>
</g>
<g >
<title>tg/rlp.writeBytes (76 samples, 0.01%)</title><rect x="211.2" y="405" width="0.1" height="15.0" fill="rgb(223,29,47)" rx="2" ry="2" />
<text  x="214.19" y="415.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (60 samples, 0.01%)</title><rect x="967.4" y="613" width="0.1" height="15.0" fill="rgb(211,169,54)" rx="2" ry="2" />
<text  x="970.38" y="623.5" ></text>
</g>
<g >
<title>tg/ethdb.Walk (17,093 samples, 2.46%)</title><rect x="1057.9" y="677" width="29.0" height="15.0" fill="rgb(216,214,5)" rx="2" ry="2" />
<text  x="1060.89" y="687.5" >tg..</text>
</g>
<g >
<title>runtime.spanOf (64 samples, 0.01%)</title><rect x="957.6" y="485" width="0.1" height="15.0" fill="rgb(208,45,2)" rx="2" ry="2" />
<text  x="960.58" y="495.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (777 samples, 0.11%)</title><rect x="510.1" y="405" width="1.3" height="15.0" fill="rgb(241,172,10)" rx="2" ry="2" />
<text  x="513.05" y="415.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (213 samples, 0.03%)</title><rect x="504.2" y="437" width="0.4" height="15.0" fill="rgb(218,58,48)" rx="2" ry="2" />
<text  x="507.24" y="447.5" ></text>
</g>
<g >
<title>runtime.cgoCheckArg (128 samples, 0.02%)</title><rect x="593.4" y="405" width="0.2" height="15.0" fill="rgb(241,11,49)" rx="2" ry="2" />
<text  x="596.35" y="415.5" ></text>
</g>
<g >
<title>tg/core/types.(*Bloom).add (6,345 samples, 0.91%)</title><rect x="645.9" y="661" width="10.8" height="15.0" fill="rgb(215,191,13)" rx="2" ry="2" />
<text  x="648.88" y="671.5" ></text>
</g>
<g >
<title>tg/core/vm.run (304 samples, 0.04%)</title><rect x="484.4" y="245" width="0.5" height="15.0" fill="rgb(235,209,49)" rx="2" ry="2" />
<text  x="487.39" y="255.5" ></text>
</g>
<g >
<title>tg/core/state.(*stateObject).empty (275 samples, 0.04%)</title><rect x="664.4" y="677" width="0.5" height="15.0" fill="rgb(244,94,25)" rx="2" ry="2" />
<text  x="667.40" y="687.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*BTree).Get (341 samples, 0.05%)</title><rect x="325.8" y="501" width="0.6" height="15.0" fill="rgb(246,181,14)" rx="2" ry="2" />
<text  x="328.81" y="511.5" ></text>
</g>
<g >
<title>tg/core/state.(*PlainStateReader).ReadAccountData (319 samples, 0.05%)</title><rect x="369.6" y="469" width="0.6" height="15.0" fill="rgb(245,219,45)" rx="2" ry="2" />
<text  x="372.64" y="479.5" ></text>
</g>
<g >
<title>sort.symMerge (3,043 samples, 0.44%)</title><rect x="867.1" y="341" width="5.1" height="15.0" fill="rgb(238,216,6)" rx="2" ry="2" />
<text  x="870.08" y="351.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find (1,174 samples, 0.17%)</title><rect x="437.1" y="357" width="2.0" height="15.0" fill="rgb(243,167,45)" rx="2" ry="2" />
<text  x="440.12" y="367.5" ></text>
</g>
<g >
<title>tg/ethdb.(*LmdbKV).View (405 samples, 0.06%)</title><rect x="231.0" y="677" width="0.7" height="15.0" fill="rgb(211,94,52)" rx="2" ry="2" />
<text  x="234.00" y="687.5" ></text>
</g>
<g >
<title>tg/p2p.Msg.Decode (3,641 samples, 0.52%)</title><rect x="1180.9" y="789" width="6.1" height="15.0" fill="rgb(229,209,27)" rx="2" ry="2" />
<text  x="1183.86" y="799.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb._Cfunc_lmdbgo_mdb_cursor_get1 (156 samples, 0.02%)</title><rect x="464.8" y="421" width="0.3" height="15.0" fill="rgb(235,166,42)" rx="2" ry="2" />
<text  x="467.83" y="431.5" ></text>
</g>
<g >
<title>tg/core/vm.(*Memory).Set32 (193 samples, 0.03%)</title><rect x="417.2" y="453" width="0.4" height="15.0" fill="rgb(239,216,34)" rx="2" ry="2" />
<text  x="420.24" y="463.5" ></text>
</g>
<g >
<title>runtime.mallocgc (161 samples, 0.02%)</title><rect x="266.7" y="581" width="0.3" height="15.0" fill="rgb(244,132,7)" rx="2" ry="2" />
<text  x="269.71" y="591.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (67 samples, 0.01%)</title><rect x="370.3" y="373" width="0.2" height="15.0" fill="rgb(244,190,40)" rx="2" ry="2" />
<text  x="373.34" y="383.5" ></text>
</g>
<g >
<title>runtime.growWork (88 samples, 0.01%)</title><rect x="597.2" y="533" width="0.2" height="15.0" fill="rgb(243,49,16)" rx="2" ry="2" />
<text  x="600.25" y="543.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find.func1 (355 samples, 0.05%)</title><rect x="402.0" y="261" width="0.6" height="15.0" fill="rgb(218,136,24)" rx="2" ry="2" />
<text  x="405.00" y="271.5" ></text>
</g>
<g >
<title>tg/ethdb.(*mutation).Get (384 samples, 0.06%)</title><rect x="422.5" y="469" width="0.6" height="15.0" fill="rgb(228,151,5)" rx="2" ry="2" />
<text  x="425.47" y="479.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).setStateObject (406 samples, 0.06%)</title><rect x="261.1" y="613" width="0.7" height="15.0" fill="rgb(214,129,28)" rx="2" ry="2" />
<text  x="264.14" y="623.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (96 samples, 0.01%)</title><rect x="434.9" y="325" width="0.2" height="15.0" fill="rgb(207,133,50)" rx="2" ry="2" />
<text  x="437.89" y="335.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (74 samples, 0.01%)</title><rect x="318.4" y="517" width="0.1" height="15.0" fill="rgb(213,102,37)" rx="2" ry="2" />
<text  x="321.39" y="527.5" ></text>
</g>
<g >
<title>sort.symMerge (1,724 samples, 0.25%)</title><rect x="991.1" y="341" width="2.9" height="15.0" fill="rgb(243,9,17)" rx="2" ry="2" />
<text  x="994.08" y="351.5" ></text>
</g>
<g >
<title>tg/ethdb.(*mutation).Get (272 samples, 0.04%)</title><rect x="504.2" y="469" width="0.5" height="15.0" fill="rgb(215,170,52)" rx="2" ry="2" />
<text  x="507.24" y="479.5" ></text>
</g>
<g >
<title>io.ReadFull (546 samples, 0.08%)</title><rect x="1176.5" y="821" width="1.0" height="15.0" fill="rgb(228,2,12)" rx="2" ry="2" />
<text  x="1179.54" y="831.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb._Cfunc_lmdbgo_mdb_cursor_put2 (1,952 samples, 0.28%)</title><rect x="723.8" y="565" width="3.3" height="15.0" fill="rgb(249,60,39)" rx="2" ry="2" />
<text  x="726.80" y="575.5" ></text>
</g>
<g >
<title>tg/ethdb.(*LmdbCursor).appendDup (1,865 samples, 0.27%)</title><rect x="730.9" y="613" width="3.2" height="15.0" fill="rgb(239,6,50)" rx="2" ry="2" />
<text  x="733.90" y="623.5" ></text>
</g>
<g >
<title>runtime.memmove (80 samples, 0.01%)</title><rect x="655.2" y="581" width="0.2" height="15.0" fill="rgb(245,33,9)" rx="2" ry="2" />
<text  x="658.24" y="591.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (253 samples, 0.04%)</title><rect x="662.4" y="613" width="0.4" height="15.0" fill="rgb(227,39,33)" rx="2" ry="2" />
<text  x="665.42" y="623.5" ></text>
</g>
<g >
<title>runtime.growslice (75 samples, 0.01%)</title><rect x="233.9" y="693" width="0.1" height="15.0" fill="rgb(228,153,50)" rx="2" ry="2" />
<text  x="236.92" y="703.5" ></text>
</g>
<g >
<title>tg/core/state.(*PlainStateReader).ReadAccountData (101 samples, 0.01%)</title><rect x="460.1" y="517" width="0.2" height="15.0" fill="rgb(230,206,44)" rx="2" ry="2" />
<text  x="463.13" y="527.5" ></text>
</g>
<g >
<title>tg/common/etl.writeToDisk (1,189 samples, 0.17%)</title><rect x="1077.9" y="581" width="2.0" height="15.0" fill="rgb(238,163,35)" rx="2" ry="2" />
<text  x="1080.92" y="591.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.(*state).padAndPermute (217 samples, 0.03%)</title><rect x="134.0" y="709" width="0.4" height="15.0" fill="rgb(241,130,6)" rx="2" ry="2" />
<text  x="137.00" y="719.5" ></text>
</g>
<g >
<title>tg/ethdb.(*LmdbCursor).getBothRange (473 samples, 0.07%)</title><rect x="511.5" y="421" width="0.8" height="15.0" fill="rgb(237,217,54)" rx="2" ry="2" />
<text  x="514.50" y="431.5" ></text>
</g>
<g >
<title>tg/ethdb.(*LmdbCursor).getBothRange (166 samples, 0.02%)</title><rect x="419.4" y="357" width="0.3" height="15.0" fill="rgb(222,0,9)" rx="2" ry="2" />
<text  x="422.37" y="367.5" ></text>
</g>
<g >
<title>sort.doPivot (175 samples, 0.03%)</title><rect x="1027.3" y="517" width="0.3" height="15.0" fill="rgb(239,227,6)" rx="2" ry="2" />
<text  x="1030.35" y="527.5" ></text>
</g>
<g >
<title>tg/rlp.(*encbuf).toWriter (293 samples, 0.04%)</title><rect x="1130.6" y="773" width="0.5" height="15.0" fill="rgb(208,179,3)" rx="2" ry="2" />
<text  x="1133.57" y="783.5" ></text>
</g>
<g >
<title>runtime.cgoCheckArg (171 samples, 0.02%)</title><rect x="205.5" y="405" width="0.3" height="15.0" fill="rgb(234,116,44)" rx="2" ry="2" />
<text  x="208.51" y="415.5" ></text>
</g>
<g >
<title>runtime.memmove (110 samples, 0.02%)</title><rect x="1040.7" y="437" width="0.2" height="15.0" fill="rgb(232,19,14)" rx="2" ry="2" />
<text  x="1043.69" y="447.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (74 samples, 0.01%)</title><rect x="1066.3" y="613" width="0.1" height="15.0" fill="rgb(214,185,17)" rx="2" ry="2" />
<text  x="1069.28" y="623.5" ></text>
</g>
<g >
<title>tg/core/vm.makeSwap.func1 (103 samples, 0.01%)</title><rect x="470.9" y="533" width="0.2" height="15.0" fill="rgb(219,27,42)" rx="2" ry="2" />
<text  x="473.90" y="543.5" ></text>
</g>
<g >
<title>cmpbody (101 samples, 0.01%)</title><rect x="178.9" y="453" width="0.2" height="15.0" fill="rgb(212,194,15)" rx="2" ry="2" />
<text  x="181.93" y="463.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (146 samples, 0.02%)</title><rect x="395.2" y="277" width="0.2" height="15.0" fill="rgb(215,222,53)" rx="2" ry="2" />
<text  x="398.19" y="287.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*BTree).Get (435 samples, 0.06%)</title><rect x="320.7" y="517" width="0.7" height="15.0" fill="rgb(214,152,50)" rx="2" ry="2" />
<text  x="323.65" y="527.5" ></text>
</g>
<g >
<title>runtime.arenaIndex (60 samples, 0.01%)</title><rect x="68.8" y="789" width="0.1" height="15.0" fill="rgb(216,25,32)" rx="2" ry="2" />
<text  x="71.83" y="799.5" ></text>
</g>
<g >
<title>tg/rlp.cachedTypeInfo (155 samples, 0.02%)</title><rect x="203.3" y="437" width="0.3" height="15.0" fill="rgb(222,103,4)" rx="2" ry="2" />
<text  x="206.34" y="447.5" ></text>
</g>
<g >
<title>runtime.newobject (308 samples, 0.04%)</title><rect x="644.0" y="661" width="0.5" height="15.0" fill="rgb(229,203,23)" rx="2" ry="2" />
<text  x="646.97" y="671.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*Decoder).decode (620 samples, 0.09%)</title><rect x="817.0" y="581" width="1.1" height="15.0" fill="rgb(222,221,23)" rx="2" ry="2" />
<text  x="820.01" y="591.5" ></text>
</g>
<g >
<title>sort.Search (102 samples, 0.01%)</title><rect x="422.6" y="357" width="0.2" height="15.0" fill="rgb(251,92,34)" rx="2" ry="2" />
<text  x="425.61" y="367.5" ></text>
</g>
<g >
<title>cmpbody (113 samples, 0.02%)</title><rect x="1076.2" y="245" width="0.2" height="15.0" fill="rgb(225,185,4)" rx="2" ry="2" />
<text  x="1079.21" y="255.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (166 samples, 0.02%)</title><rect x="215.3" y="437" width="0.3" height="15.0" fill="rgb(253,2,1)" rx="2" ry="2" />
<text  x="218.31" y="447.5" ></text>
</g>
<g >
<title>runtime.handoffp (284 samples, 0.04%)</title><rect x="122.6" y="773" width="0.5" height="15.0" fill="rgb(232,37,24)" rx="2" ry="2" />
<text  x="125.63" y="783.5" ></text>
</g>
<g >
<title>reflect.valueInterface (460 samples, 0.07%)</title><rect x="225.7" y="437" width="0.7" height="15.0" fill="rgb(238,83,27)" rx="2" ry="2" />
<text  x="228.65" y="447.5" ></text>
</g>
<g >
<title>tg/core/vm.(*Contract).isCode (319 samples, 0.05%)</title><rect x="505.6" y="501" width="0.5" height="15.0" fill="rgb(242,92,20)" rx="2" ry="2" />
<text  x="508.57" y="511.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.(*state).Reset (69 samples, 0.01%)</title><rect x="655.5" y="629" width="0.1" height="15.0" fill="rgb(218,224,28)" rx="2" ry="2" />
<text  x="658.47" y="639.5" ></text>
</g>
<g >
<title>sort.swapRange (121 samples, 0.02%)</title><rect x="990.0" y="357" width="0.3" height="15.0" fill="rgb(212,38,39)" rx="2" ry="2" />
<text  x="993.05" y="367.5" ></text>
</g>
<g >
<title>runtime.mallocgc (78 samples, 0.01%)</title><rect x="1098.5" y="565" width="0.1" height="15.0" fill="rgb(212,146,38)" rx="2" ry="2" />
<text  x="1101.45" y="575.5" ></text>
</g>
<g >
<title>bytes.Compare (153 samples, 0.02%)</title><rect x="1074.6" y="325" width="0.3" height="15.0" fill="rgb(218,49,16)" rx="2" ry="2" />
<text  x="1077.59" y="335.5" ></text>
</g>
<g >
<title>runtime.trygetfull (1,075 samples, 0.15%)</title><rect x="57.3" y="789" width="1.9" height="15.0" fill="rgb(252,67,36)" rx="2" ry="2" />
<text  x="60.33" y="799.5" ></text>
</g>
<g >
<title>runtime.futex (954 samples, 0.14%)</title><rect x="118.5" y="757" width="1.6" height="15.0" fill="rgb(208,199,50)" rx="2" ry="2" />
<text  x="121.53" y="767.5" ></text>
</g>
<g >
<title>tg/ethdb.(*LmdbKV).Update (96 samples, 0.01%)</title><rect x="1131.4" y="789" width="0.1" height="15.0" fill="rgb(234,152,54)" rx="2" ry="2" />
<text  x="1134.35" y="799.5" ></text>
</g>
<g >
<title>tg/core/vm/stack.(*Stack).Pop (110 samples, 0.02%)</title><rect x="391.9" y="405" width="0.2" height="15.0" fill="rgb(206,154,23)" rx="2" ry="2" />
<text  x="394.90" y="415.5" ></text>
</g>
<g >
<title>github.com/holiman/uint256.(*Int).WriteToSlice (181 samples, 0.03%)</title><rect x="417.3" y="437" width="0.3" height="15.0" fill="rgb(223,84,52)" rx="2" ry="2" />
<text  x="420.26" y="447.5" ></text>
</g>
<g >
<title>tg/core/vm.opStaticCall (116 samples, 0.02%)</title><rect x="515.6" y="277" width="0.2" height="15.0" fill="rgb(243,55,25)" rx="2" ry="2" />
<text  x="518.63" y="287.5" ></text>
</g>
<g >
<title>reflect.unsafe_New (304 samples, 0.04%)</title><rect x="210.3" y="357" width="0.5" height="15.0" fill="rgb(243,33,44)" rx="2" ry="2" />
<text  x="213.32" y="367.5" ></text>
</g>
<g >
<title>context.(*valueCtx).Value (223 samples, 0.03%)</title><rect x="721.0" y="629" width="0.4" height="15.0" fill="rgb(212,220,38)" rx="2" ry="2" />
<text  x="723.98" y="639.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (2,799 samples, 0.40%)</title><rect x="150.3" y="469" width="4.7" height="15.0" fill="rgb(212,19,43)" rx="2" ry="2" />
<text  x="153.25" y="479.5" ></text>
</g>
<g >
<title>tg/core/vm.opCall (69 samples, 0.01%)</title><rect x="493.3" y="341" width="0.1" height="15.0" fill="rgb(224,20,9)" rx="2" ry="2" />
<text  x="496.31" y="351.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.(*roaringArray).insertNewKeyValueAt (186 samples, 0.03%)</title><rect x="1048.1" y="645" width="0.3" height="15.0" fill="rgb(237,128,12)" rx="2" ry="2" />
<text  x="1051.08" y="655.5" ></text>
</g>
<g >
<title>runtime.largeAlloc (116 samples, 0.02%)</title><rect x="177.2" y="485" width="0.2" height="15.0" fill="rgb(242,42,40)" rx="2" ry="2" />
<text  x="180.16" y="495.5" ></text>
</g>
<g >
<title>runtime.memmove (210 samples, 0.03%)</title><rect x="165.6" y="517" width="0.4" height="15.0" fill="rgb(211,40,4)" rx="2" ry="2" />
<text  x="168.63" y="527.5" ></text>
</g>
<g >
<title>tg/ethdb.(*mutation).Get (5,135 samples, 0.74%)</title><rect x="435.7" y="453" width="8.7" height="15.0" fill="rgb(230,54,6)" rx="2" ry="2" />
<text  x="438.67" y="463.5" ></text>
</g>
<g >
<title>sync.(*RWMutex).Unlock (201 samples, 0.03%)</title><rect x="555.5" y="565" width="0.4" height="15.0" fill="rgb(236,164,43)" rx="2" ry="2" />
<text  x="558.52" y="575.5" ></text>
</g>
<g >
<title>tg/core/state.(*PlainStateReader).ReadAccountIncarnation (71 samples, 0.01%)</title><rect x="623.8" y="597" width="0.1" height="15.0" fill="rgb(207,181,24)" rx="2" ry="2" />
<text  x="626.82" y="607.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).getStateObject (66 samples, 0.01%)</title><rect x="409.8" y="469" width="0.1" height="15.0" fill="rgb(244,164,8)" rx="2" ry="2" />
<text  x="412.77" y="479.5" ></text>
</g>
<g >
<title>tg/rlp.decodeListSlice (3,637 samples, 0.52%)</title><rect x="1180.9" y="741" width="6.1" height="15.0" fill="rgb(220,217,3)" rx="2" ry="2" />
<text  x="1183.86" y="751.5" ></text>
</g>
<g >
<title>tg/rlp.makePtrWriter.func1 (1,511 samples, 0.22%)</title><rect x="225.2" y="485" width="2.6" height="15.0" fill="rgb(230,202,18)" rx="2" ry="2" />
<text  x="228.24" y="495.5" ></text>
</g>
<g >
<title>runtime.(*gcWork).balance (3,240 samples, 0.47%)</title><rect x="51.2" y="805" width="5.5" height="15.0" fill="rgb(234,198,35)" rx="2" ry="2" />
<text  x="54.16" y="815.5" ></text>
</g>
<g >
<title>tg/common/etl.Heap.Less (75 samples, 0.01%)</title><rect x="1087.8" y="645" width="0.1" height="15.0" fill="rgb(244,92,4)" rx="2" ry="2" />
<text  x="1090.79" y="655.5" ></text>
</g>
<g >
<title>tg/rlp.decodeByteArray (185 samples, 0.03%)</title><rect x="219.7" y="405" width="0.3" height="15.0" fill="rgb(206,79,9)" rx="2" ry="2" />
<text  x="222.72" y="415.5" ></text>
</g>
<g >
<title>runtime.mallocgc (281 samples, 0.04%)</title><rect x="669.6" y="565" width="0.5" height="15.0" fill="rgb(211,189,37)" rx="2" ry="2" />
<text  x="672.62" y="575.5" ></text>
</g>
<g >
<title>tg/crypto/bn256/cloudflare.PairingCheck (255 samples, 0.04%)</title><rect x="446.5" y="453" width="0.4" height="15.0" fill="rgb(240,55,32)" rx="2" ry="2" />
<text  x="449.48" y="463.5" ></text>
</g>
<g >
<title>sort.Search (180 samples, 0.03%)</title><rect x="402.6" y="293" width="0.3" height="15.0" fill="rgb(250,178,4)" rx="2" ry="2" />
<text  x="405.61" y="303.5" ></text>
</g>
<g >
<title>bytes.Compare (554 samples, 0.08%)</title><rect x="963.5" y="613" width="0.9" height="15.0" fill="rgb(213,100,30)" rx="2" ry="2" />
<text  x="966.50" y="623.5" ></text>
</g>
<g >
<title>tg/rlp.(*encbuf).encodeString (105 samples, 0.02%)</title><rect x="1110.5" y="517" width="0.2" height="15.0" fill="rgb(222,199,24)" rx="2" ry="2" />
<text  x="1113.51" y="527.5" ></text>
</g>
<g >
<title>tg/turbo/trie.(*HashBuilder).branchHash (159 samples, 0.02%)</title><rect x="1029.7" y="645" width="0.3" height="15.0" fill="rgb(211,11,37)" rx="2" ry="2" />
<text  x="1032.72" y="655.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (90 samples, 0.01%)</title><rect x="199.0" y="309" width="0.2" height="15.0" fill="rgb(238,102,9)" rx="2" ry="2" />
<text  x="202.02" y="319.5" ></text>
</g>
<g >
<title>runtime.mallocgc (67 samples, 0.01%)</title><rect x="136.8" y="661" width="0.1" height="15.0" fill="rgb(206,43,37)" rx="2" ry="2" />
<text  x="139.81" y="671.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.(*arrayContainer).toEfficientContainer (107 samples, 0.02%)</title><rect x="1035.1" y="581" width="0.2" height="15.0" fill="rgb(212,185,52)" rx="2" ry="2" />
<text  x="1038.14" y="591.5" ></text>
</g>
<g >
<title>tg/rlp.writeUint (74 samples, 0.01%)</title><rect x="1111.8" y="533" width="0.1" height="15.0" fill="rgb(207,89,23)" rx="2" ry="2" />
<text  x="1114.77" y="543.5" ></text>
</g>
<g >
<title>tg/core.(*TxPool).RemoveTx (114 samples, 0.02%)</title><rect x="214.8" y="629" width="0.2" height="15.0" fill="rgb(234,120,19)" rx="2" ry="2" />
<text  x="217.81" y="639.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (62 samples, 0.01%)</title><rect x="226.3" y="389" width="0.1" height="15.0" fill="rgb(227,135,25)" rx="2" ry="2" />
<text  x="229.32" y="399.5" ></text>
</g>
<g >
<title>runtime.growslice (1,023 samples, 0.15%)</title><rect x="621.3" y="597" width="1.7" height="15.0" fill="rgb(215,11,23)" rx="2" ry="2" />
<text  x="624.26" y="607.5" ></text>
</g>
<g >
<title>runtime.memmove (71 samples, 0.01%)</title><rect x="1110.5" y="501" width="0.2" height="15.0" fill="rgb(226,134,40)" rx="2" ry="2" />
<text  x="1113.53" y="511.5" ></text>
</g>
<g >
<title>runtime.mallocgc (234 samples, 0.03%)</title><rect x="1051.0" y="533" width="0.4" height="15.0" fill="rgb(237,159,22)" rx="2" ry="2" />
<text  x="1054.04" y="543.5" ></text>
</g>
<g >
<title>sort.Search (212 samples, 0.03%)</title><rect x="703.2" y="517" width="0.4" height="15.0" fill="rgb(243,106,16)" rx="2" ry="2" />
<text  x="706.24" y="527.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring/roaring64.(*Bitmap).GetSizeInBytes (1,466 samples, 0.21%)</title><rect x="1082.2" y="613" width="2.5" height="15.0" fill="rgb(209,202,13)" rx="2" ry="2" />
<text  x="1085.17" y="623.5" ></text>
</g>
<g >
<title>runtime.largeAlloc (109 samples, 0.02%)</title><rect x="561.1" y="421" width="0.2" height="15.0" fill="rgb(233,59,1)" rx="2" ry="2" />
<text  x="564.11" y="431.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find (521 samples, 0.07%)</title><rect x="581.1" y="469" width="0.9" height="15.0" fill="rgb(219,225,50)" rx="2" ry="2" />
<text  x="584.14" y="479.5" ></text>
</g>
<g >
<title>runtime.mallocgc (62 samples, 0.01%)</title><rect x="1088.5" y="661" width="0.1" height="15.0" fill="rgb(205,225,30)" rx="2" ry="2" />
<text  x="1091.51" y="671.5" ></text>
</g>
<g >
<title>runtime.systemstack (64 samples, 0.01%)</title><rect x="625.5" y="533" width="0.1" height="15.0" fill="rgb(242,162,31)" rx="2" ry="2" />
<text  x="628.48" y="543.5" ></text>
</g>
<g >
<title>runtime.mallocgc (925 samples, 0.13%)</title><rect x="1100.2" y="485" width="1.6" height="15.0" fill="rgb(225,141,7)" rx="2" ry="2" />
<text  x="1103.20" y="495.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.(*state).permute (119 samples, 0.02%)</title><rect x="1132.5" y="757" width="0.2" height="15.0" fill="rgb(241,111,45)" rx="2" ry="2" />
<text  x="1135.45" y="767.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (81 samples, 0.01%)</title><rect x="1109.6" y="437" width="0.2" height="15.0" fill="rgb(248,4,9)" rx="2" ry="2" />
<text  x="1112.64" y="447.5" ></text>
</g>
<g >
<title>tg/turbo/trie.(*HashBuilder).leafHash (473 samples, 0.07%)</title><rect x="1030.0" y="645" width="0.8" height="15.0" fill="rgb(210,191,42)" rx="2" ry="2" />
<text  x="1032.99" y="655.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (219 samples, 0.03%)</title><rect x="162.7" y="533" width="0.3" height="15.0" fill="rgb(253,124,21)" rx="2" ry="2" />
<text  x="165.67" y="543.5" ></text>
</g>
<g >
<title>runtime.mapiterinit (144 samples, 0.02%)</title><rect x="639.6" y="629" width="0.2" height="15.0" fill="rgb(206,48,36)" rx="2" ry="2" />
<text  x="642.60" y="639.5" ></text>
</g>
<g >
<title>sort.symMerge (3,283 samples, 0.47%)</title><rect x="866.7" y="357" width="5.6" height="15.0" fill="rgb(232,20,6)" rx="2" ry="2" />
<text  x="869.70" y="367.5" ></text>
</g>
<g >
<title>tg/ethdb.(*LmdbCursor).put (68 samples, 0.01%)</title><rect x="814.4" y="581" width="0.2" height="15.0" fill="rgb(224,114,20)" rx="2" ry="2" />
<text  x="817.44" y="591.5" ></text>
</g>
<g >
<title>tg/rlp.decodeUint (230 samples, 0.03%)</title><rect x="1185.2" y="549" width="0.4" height="15.0" fill="rgb(222,144,33)" rx="2" ry="2" />
<text  x="1188.19" y="559.5" ></text>
</g>
<g >
<title>runtime.cgoCheckPointer (115 samples, 0.02%)</title><rect x="794.3" y="565" width="0.1" height="15.0" fill="rgb(216,196,45)" rx="2" ry="2" />
<text  x="797.25" y="575.5" ></text>
</g>
<g >
<title>tg/core/vm.run (473 samples, 0.07%)</title><rect x="487.3" y="373" width="0.8" height="15.0" fill="rgb(247,177,42)" rx="2" ry="2" />
<text  x="490.33" y="383.5" ></text>
</g>
<g >
<title>runtime.growslice (184 samples, 0.03%)</title><rect x="1050.7" y="549" width="0.3" height="15.0" fill="rgb(253,15,51)" rx="2" ry="2" />
<text  x="1053.68" y="559.5" ></text>
</g>
<g >
<title>tg/core/types.Logs.CodecEncodeSelf (741 samples, 0.11%)</title><rect x="783.3" y="597" width="1.3" height="15.0" fill="rgb(242,94,32)" rx="2" ry="2" />
<text  x="786.35" y="607.5" ></text>
</g>
<g >
<title>sort.symMerge (183 samples, 0.03%)</title><rect x="1040.2" y="485" width="0.3" height="15.0" fill="rgb(205,70,38)" rx="2" ry="2" />
<text  x="1043.22" y="495.5" ></text>
</g>
<g >
<title>reflect.Value.Slice (148 samples, 0.02%)</title><rect x="202.2" y="341" width="0.2" height="15.0" fill="rgb(208,120,6)" rx="2" ry="2" />
<text  x="205.19" y="351.5" ></text>
</g>
<g >
<title>tg/core/vm.(*bn256PairingIstanbul).Run (86 samples, 0.01%)</title><rect x="608.1" y="485" width="0.1" height="15.0" fill="rgb(236,2,5)" rx="2" ry="2" />
<text  x="611.07" y="495.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.(*state).Read (5,370 samples, 0.77%)</title><rect x="751.2" y="645" width="9.1" height="15.0" fill="rgb(216,124,42)" rx="2" ry="2" />
<text  x="754.17" y="655.5" ></text>
</g>
<g >
<title>tg/eth/stagedsync.DefaultStages.func8.1 (15,659 samples, 2.25%)</title><rect x="1031.3" y="757" width="26.6" height="15.0" fill="rgb(229,197,44)" rx="2" ry="2" />
<text  x="1034.29" y="767.5" >t..</text>
</g>
<g >
<title>runtime.mallocgc (335 samples, 0.05%)</title><rect x="720.0" y="597" width="0.6" height="15.0" fill="rgb(240,31,39)" rx="2" ry="2" />
<text  x="723.03" y="607.5" ></text>
</g>
<g >
<title>bytes.Compare (191 samples, 0.03%)</title><rect x="182.8" y="389" width="0.3" height="15.0" fill="rgb(207,111,3)" rx="2" ry="2" />
<text  x="185.80" y="399.5" ></text>
</g>
<g >
<title>bytes.makeSlice (95 samples, 0.01%)</title><rect x="761.5" y="613" width="0.1" height="15.0" fill="rgb(219,201,28)" rx="2" ry="2" />
<text  x="764.47" y="623.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).getStateObject (183 samples, 0.03%)</title><rect x="433.4" y="501" width="0.3" height="15.0" fill="rgb(219,8,20)" rx="2" ry="2" />
<text  x="436.36" y="511.5" ></text>
</g>
<g >
<title>tg/core/vm.(*Memory).Set32 (3,125 samples, 0.45%)</title><rect x="535.8" y="581" width="5.3" height="15.0" fill="rgb(232,132,24)" rx="2" ry="2" />
<text  x="538.77" y="591.5" ></text>
</g>
<g >
<title>runtime.mallocgc (68 samples, 0.01%)</title><rect x="783.9" y="517" width="0.1" height="15.0" fill="rgb(227,147,8)" rx="2" ry="2" />
<text  x="786.90" y="527.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).GetState (570 samples, 0.08%)</title><rect x="418.7" y="453" width="1.0" height="15.0" fill="rgb(226,125,13)" rx="2" ry="2" />
<text  x="421.69" y="463.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.(*state).permute (59 samples, 0.01%)</title><rect x="1029.2" y="565" width="0.1" height="15.0" fill="rgb(252,163,20)" rx="2" ry="2" />
<text  x="1032.22" y="575.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find (177 samples, 0.03%)</title><rect x="1121.4" y="677" width="0.3" height="15.0" fill="rgb(248,54,27)" rx="2" ry="2" />
<text  x="1124.42" y="687.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (309 samples, 0.04%)</title><rect x="606.9" y="389" width="0.5" height="15.0" fill="rgb(229,90,50)" rx="2" ry="2" />
<text  x="609.88" y="399.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (107 samples, 0.02%)</title><rect x="1112.3" y="549" width="0.2" height="15.0" fill="rgb(240,188,12)" rx="2" ry="2" />
<text  x="1115.29" y="559.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (183 samples, 0.03%)</title><rect x="973.0" y="581" width="0.3" height="15.0" fill="rgb(250,117,54)" rx="2" ry="2" />
<text  x="975.98" y="591.5" ></text>
</g>
<g >
<title>tg/core/vm.(*ecrecover).Run (327 samples, 0.05%)</title><rect x="512.7" y="485" width="0.6" height="15.0" fill="rgb(219,58,45)" rx="2" ry="2" />
<text  x="515.73" y="495.5" ></text>
</g>
<g >
<title>bytes.Compare (90 samples, 0.01%)</title><rect x="703.3" y="485" width="0.2" height="15.0" fill="rgb(224,77,27)" rx="2" ry="2" />
<text  x="706.32" y="495.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).DelegateCall (78 samples, 0.01%)</title><rect x="405.6" y="389" width="0.1" height="15.0" fill="rgb(235,131,10)" rx="2" ry="2" />
<text  x="408.57" y="399.5" ></text>
</g>
<g >
<title>tg/core/state.updateAccount (33,309 samples, 4.79%)</title><rect x="664.9" y="677" width="56.5" height="15.0" fill="rgb(229,228,10)" rx="2" ry="2" />
<text  x="667.87" y="687.5" >tg/co..</text>
</g>
<g >
<title>runtime.wirep (67 samples, 0.01%)</title><rect x="956.0" y="469" width="0.1" height="15.0" fill="rgb(234,107,49)" rx="2" ry="2" />
<text  x="959.03" y="479.5" ></text>
</g>
<g >
<title>tg/rlp.cachedWriter (163 samples, 0.02%)</title><rect x="214.4" y="533" width="0.3" height="15.0" fill="rgb(223,115,2)" rx="2" ry="2" />
<text  x="217.43" y="543.5" ></text>
</g>
<g >
<title>tg/ethdb.Walk (5,373 samples, 0.77%)</title><rect x="196.9" y="501" width="9.1" height="15.0" fill="rgb(209,63,3)" rx="2" ry="2" />
<text  x="199.89" y="511.5" ></text>
</g>
<g >
<title>github.com/holiman/uint256.(*Int).SetOne (60 samples, 0.01%)</title><rect x="316.9" y="597" width="0.1" height="15.0" fill="rgb(215,38,11)" rx="2" ry="2" />
<text  x="319.89" y="607.5" ></text>
</g>
<g >
<title>sync/atomic.(*Value).Store (112 samples, 0.02%)</title><rect x="222.2" y="613" width="0.2" height="15.0" fill="rgb(206,132,42)" rx="2" ry="2" />
<text  x="225.21" y="623.5" ></text>
</g>
<g >
<title>runtime.mallocgc (129 samples, 0.02%)</title><rect x="341.9" y="533" width="0.2" height="15.0" fill="rgb(225,112,43)" rx="2" ry="2" />
<text  x="344.90" y="543.5" ></text>
</g>
<g >
<title>tg/core/vm.RunPrecompiledContract (163 samples, 0.02%)</title><rect x="515.0" y="373" width="0.3" height="15.0" fill="rgb(242,182,29)" rx="2" ry="2" />
<text  x="518.02" y="383.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (392 samples, 0.06%)</title><rect x="560.3" y="421" width="0.7" height="15.0" fill="rgb(254,212,41)" rx="2" ry="2" />
<text  x="563.31" y="431.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (140 samples, 0.02%)</title><rect x="1112.3" y="581" width="0.2" height="15.0" fill="rgb(212,206,49)" rx="2" ry="2" />
<text  x="1115.27" y="591.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).getVal1.func1 (136 samples, 0.02%)</title><rect x="460.9" y="437" width="0.3" height="15.0" fill="rgb(221,159,15)" rx="2" ry="2" />
<text  x="463.94" y="447.5" ></text>
</g>
<g >
<title>runtime.convT2I (177 samples, 0.03%)</title><rect x="656.8" y="661" width="0.3" height="15.0" fill="rgb(242,212,33)" rx="2" ry="2" />
<text  x="659.80" y="671.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).getVal1 (4,987 samples, 0.72%)</title><rect x="1013.5" y="549" width="8.5" height="15.0" fill="rgb(218,54,14)" rx="2" ry="2" />
<text  x="1016.54" y="559.5" ></text>
</g>
<g >
<title>reflect.Copy (68 samples, 0.01%)</title><rect x="764.9" y="341" width="0.1" height="15.0" fill="rgb(224,190,40)" rx="2" ry="2" />
<text  x="767.91" y="351.5" ></text>
</g>
<g >
<title>tg/ethdb.(*MutationItem).Less (66 samples, 0.01%)</title><rect x="323.5" y="373" width="0.1" height="15.0" fill="rgb(237,12,24)" rx="2" ry="2" />
<text  x="326.48" y="383.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).getStateObject (330 samples, 0.05%)</title><rect x="504.2" y="501" width="0.5" height="15.0" fill="rgb(239,88,1)" rx="2" ry="2" />
<text  x="507.17" y="511.5" ></text>
</g>
<g >
<title>runtime.mallocgc (187 samples, 0.03%)</title><rect x="293.3" y="597" width="0.3" height="15.0" fill="rgb(206,31,52)" rx="2" ry="2" />
<text  x="296.30" y="607.5" ></text>
</g>
<g >
<title>tg/core/vm.opSload (200 samples, 0.03%)</title><rect x="501.1" y="469" width="0.4" height="15.0" fill="rgb(206,107,3)" rx="2" ry="2" />
<text  x="504.13" y="479.5" ></text>
</g>
<g >
<title>runtime.forEachP (112 samples, 0.02%)</title><rect x="36.7" y="789" width="0.2" height="15.0" fill="rgb(239,210,53)" rx="2" ry="2" />
<text  x="39.73" y="799.5" ></text>
</g>
<g >
<title>runtime.makeslice (228 samples, 0.03%)</title><rect x="1112.2" y="645" width="0.4" height="15.0" fill="rgb(217,166,16)" rx="2" ry="2" />
<text  x="1115.19" y="655.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*Decoder).decSliceHelperStart (104 samples, 0.01%)</title><rect x="1089.1" y="565" width="0.2" height="15.0" fill="rgb(248,26,22)" rx="2" ry="2" />
<text  x="1092.10" y="575.5" ></text>
</g>
<g >
<title>tg/core/vm.run (102 samples, 0.01%)</title><rect x="393.7" y="181" width="0.2" height="15.0" fill="rgb(251,48,36)" rx="2" ry="2" />
<text  x="396.70" y="191.5" ></text>
</g>
<g >
<title>container/heap.Pop (2,016 samples, 0.29%)</title><rect x="962.5" y="645" width="3.4" height="15.0" fill="rgb(213,195,41)" rx="2" ry="2" />
<text  x="965.51" y="655.5" ></text>
</g>
<g >
<title>bytes.Compare (64 samples, 0.01%)</title><rect x="865.2" y="405" width="0.1" height="15.0" fill="rgb(250,228,2)" rx="2" ry="2" />
<text  x="868.16" y="415.5" ></text>
</g>
<g >
<title>tg/ethdb.(*TxDb).Get (364 samples, 0.05%)</title><rect x="492.1" y="373" width="0.6" height="15.0" fill="rgb(236,148,30)" rx="2" ry="2" />
<text  x="495.06" y="383.5" ></text>
</g>
<g >
<title>tg/core/vm.opDelegateCall (115 samples, 0.02%)</title><rect x="497.6" y="405" width="0.2" height="15.0" fill="rgb(205,217,25)" rx="2" ry="2" />
<text  x="500.57" y="415.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*BTree).ReplaceOrInsert (482 samples, 0.07%)</title><rect x="666.0" y="629" width="0.8" height="15.0" fill="rgb(244,83,5)" rx="2" ry="2" />
<text  x="669.02" y="639.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (722 samples, 0.10%)</title><rect x="498.8" y="357" width="1.2" height="15.0" fill="rgb(245,209,43)" rx="2" ry="2" />
<text  x="501.75" y="367.5" ></text>
</g>
<g >
<title>syscall.Write (66 samples, 0.01%)</title><rect x="195.8" y="389" width="0.1" height="15.0" fill="rgb(249,107,37)" rx="2" ry="2" />
<text  x="198.80" y="399.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).Get (304 samples, 0.04%)</title><rect x="390.5" y="277" width="0.5" height="15.0" fill="rgb(219,131,5)" rx="2" ry="2" />
<text  x="393.47" y="287.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (161 samples, 0.02%)</title><rect x="340.9" y="469" width="0.3" height="15.0" fill="rgb(213,163,6)" rx="2" ry="2" />
<text  x="343.92" y="479.5" ></text>
</g>
<g >
<title>context.(*valueCtx).Value (195 samples, 0.03%)</title><rect x="721.0" y="613" width="0.3" height="15.0" fill="rgb(253,216,19)" rx="2" ry="2" />
<text  x="723.99" y="623.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).Put.func1 (2,104 samples, 0.30%)</title><rect x="1103.2" y="533" width="3.6" height="15.0" fill="rgb(238,140,33)" rx="2" ry="2" />
<text  x="1106.19" y="543.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (393 samples, 0.06%)</title><rect x="897.4" y="517" width="0.7" height="15.0" fill="rgb(231,102,46)" rx="2" ry="2" />
<text  x="900.40" y="527.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.newRunContainer16FromArray (70 samples, 0.01%)</title><rect x="1056.6" y="501" width="0.1" height="15.0" fill="rgb(246,112,43)" rx="2" ry="2" />
<text  x="1059.56" y="511.5" ></text>
</g>
<g >
<title>sort.Search (164 samples, 0.02%)</title><rect x="523.1" y="405" width="0.3" height="15.0" fill="rgb(226,19,3)" rx="2" ry="2" />
<text  x="526.12" y="415.5" ></text>
</g>
<g >
<title>sort.rotate (172 samples, 0.02%)</title><rect x="1070.9" y="453" width="0.3" height="15.0" fill="rgb(242,136,33)" rx="2" ry="2" />
<text  x="1073.92" y="463.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.(*state).Write (299 samples, 0.04%)</title><rect x="1113.6" y="661" width="0.5" height="15.0" fill="rgb(233,141,14)" rx="2" ry="2" />
<text  x="1116.61" y="671.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.fastpathT.DecSliceBytesY (247 samples, 0.04%)</title><rect x="1047.1" y="581" width="0.5" height="15.0" fill="rgb(253,197,12)" rx="2" ry="2" />
<text  x="1050.14" y="591.5" ></text>
</g>
<g >
<title>tg/core/vm.run (80 samples, 0.01%)</title><rect x="487.9" y="245" width="0.2" height="15.0" fill="rgb(221,11,0)" rx="2" ry="2" />
<text  x="490.94" y="255.5" ></text>
</g>
<g >
<title>sort.rotate (363 samples, 0.05%)</title><rect x="179.1" y="469" width="0.6" height="15.0" fill="rgb(252,0,46)" rx="2" ry="2" />
<text  x="182.10" y="479.5" ></text>
</g>
<g >
<title>runtime.newobject (69 samples, 0.01%)</title><rect x="561.5" y="517" width="0.1" height="15.0" fill="rgb(231,66,14)" rx="2" ry="2" />
<text  x="564.51" y="527.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (64 samples, 0.01%)</title><rect x="1097.9" y="485" width="0.2" height="15.0" fill="rgb(252,47,46)" rx="2" ry="2" />
<text  x="1100.95" y="495.5" ></text>
</g>
<g >
<title>tg/ethdb.(*LmdbKV).View (70 samples, 0.01%)</title><rect x="1131.2" y="757" width="0.1" height="15.0" fill="rgb(223,42,34)" rx="2" ry="2" />
<text  x="1134.17" y="767.5" ></text>
</g>
<g >
<title>syscall.Read (169 samples, 0.02%)</title><rect x="970.5" y="389" width="0.3" height="15.0" fill="rgb(229,80,23)" rx="2" ry="2" />
<text  x="973.47" y="399.5" ></text>
</g>
<g >
<title>runtime.cgocall (2,172 samples, 0.31%)</title><rect x="807.7" y="501" width="3.7" height="15.0" fill="rgb(207,142,8)" rx="2" ry="2" />
<text  x="810.72" y="511.5" ></text>
</g>
<g >
<title>tg/core/types.HomesteadSigner.SenderWithContext (5,770 samples, 0.83%)</title><rect x="1166.1" y="821" width="9.8" height="15.0" fill="rgb(216,160,27)" rx="2" ry="2" />
<text  x="1169.14" y="831.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVMInterpreter).Run (139 samples, 0.02%)</title><rect x="394.2" y="293" width="0.2" height="15.0" fill="rgb(218,36,45)" rx="2" ry="2" />
<text  x="397.18" y="303.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (216 samples, 0.03%)</title><rect x="162.7" y="517" width="0.3" height="15.0" fill="rgb(207,194,46)" rx="2" ry="2" />
<text  x="165.67" y="527.5" ></text>
</g>
<g >
<title>tg/core/types.DeriveSha (7,012 samples, 1.01%)</title><rect x="1107.2" y="741" width="11.9" height="15.0" fill="rgb(237,33,36)" rx="2" ry="2" />
<text  x="1110.18" y="751.5" ></text>
</g>
<g >
<title>tg/p2p/rlpx.(*handshakeState).writeFrame (63 samples, 0.01%)</title><rect x="1188.0" y="805" width="0.1" height="15.0" fill="rgb(244,4,50)" rx="2" ry="2" />
<text  x="1191.03" y="815.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).StaticCall (489 samples, 0.07%)</title><rect x="487.3" y="389" width="0.8" height="15.0" fill="rgb(227,51,45)" rx="2" ry="2" />
<text  x="490.30" y="399.5" ></text>
</g>
<g >
<title>tg/core/state.(*stateObject).GetCommittedState (226 samples, 0.03%)</title><rect x="516.6" y="421" width="0.4" height="15.0" fill="rgb(242,22,16)" rx="2" ry="2" />
<text  x="519.58" y="431.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (71 samples, 0.01%)</title><rect x="330.3" y="469" width="0.2" height="15.0" fill="rgb(253,116,30)" rx="2" ry="2" />
<text  x="333.33" y="479.5" ></text>
</g>
<g >
<title>runtime.mallocgc (124 samples, 0.02%)</title><rect x="242.3" y="549" width="0.3" height="15.0" fill="rgb(226,155,31)" rx="2" ry="2" />
<text  x="245.34" y="559.5" ></text>
</g>
<g >
<title>tg/rlp.(*encbuf).encodeString (116 samples, 0.02%)</title><rect x="1124.4" y="581" width="0.2" height="15.0" fill="rgb(228,37,47)" rx="2" ry="2" />
<text  x="1127.37" y="591.5" ></text>
</g>
<g >
<title>cmpbody (150 samples, 0.02%)</title><rect x="868.3" y="261" width="0.3" height="15.0" fill="rgb(240,131,22)" rx="2" ry="2" />
<text  x="871.34" y="271.5" ></text>
</g>
<g >
<title>tg/core/state.(*journal).append (336 samples, 0.05%)</title><rect x="265.1" y="597" width="0.5" height="15.0" fill="rgb(215,137,24)" rx="2" ry="2" />
<text  x="268.08" y="607.5" ></text>
</g>
<g >
<title>tg/core/vm/stack.(*Stack).Push (2,777 samples, 0.40%)</title><rect x="614.9" y="597" width="4.7" height="15.0" fill="rgb(234,122,35)" rx="2" ry="2" />
<text  x="617.88" y="607.5" ></text>
</g>
<g >
<title>tg/common/etl.(*fileDataProvider).Next (1,137 samples, 0.16%)</title><rect x="816.7" y="645" width="1.9" height="15.0" fill="rgb(215,130,25)" rx="2" ry="2" />
<text  x="819.67" y="655.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVMInterpreter).Run (315 samples, 0.05%)</title><rect x="485.8" y="357" width="0.6" height="15.0" fill="rgb(220,91,35)" rx="2" ry="2" />
<text  x="488.84" y="367.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Txn).commit (331 samples, 0.05%)</title><rect x="1188.2" y="789" width="0.5" height="15.0" fill="rgb(247,208,17)" rx="2" ry="2" />
<text  x="1191.19" y="799.5" ></text>
</g>
<g >
<title>tg/p2p/dnsdisc.(*randomIterator).Next (74 samples, 0.01%)</title><rect x="1189.9" y="853" width="0.1" height="15.0" fill="rgb(239,174,42)" rx="2" ry="2" />
<text  x="1192.87" y="863.5" ></text>
</g>
<g >
<title>tg/rlp.makeByteArrayWriter.func1 (429 samples, 0.06%)</title><rect x="744.7" y="501" width="0.8" height="15.0" fill="rgb(221,13,46)" rx="2" ry="2" />
<text  x="747.74" y="511.5" ></text>
</g>
<g >
<title>runtime.growslice (233 samples, 0.03%)</title><rect x="595.6" y="533" width="0.4" height="15.0" fill="rgb(230,208,34)" rx="2" ry="2" />
<text  x="598.60" y="543.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (366 samples, 0.05%)</title><rect x="320.7" y="469" width="0.6" height="15.0" fill="rgb(222,112,28)" rx="2" ry="2" />
<text  x="323.66" y="479.5" ></text>
</g>
<g >
<title>tg/ethdb.(*ObjectDatabase).Walk.func1 (574 samples, 0.08%)</title><rect x="232.5" y="693" width="1.0" height="15.0" fill="rgb(225,22,10)" rx="2" ry="2" />
<text  x="235.49" y="703.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.keccakF1600 (206 samples, 0.03%)</title><rect x="418.3" y="405" width="0.3" height="15.0" fill="rgb(211,45,40)" rx="2" ry="2" />
<text  x="421.28" y="415.5" ></text>
</g>
<g >
<title>runtime.cgocall (68 samples, 0.01%)</title><rect x="486.2" y="213" width="0.1" height="15.0" fill="rgb(252,167,24)" rx="2" ry="2" />
<text  x="489.23" y="223.5" ></text>
</g>
<g >
<title>runtime.getitab (123 samples, 0.02%)</title><rect x="968.0" y="597" width="0.2" height="15.0" fill="rgb(228,214,12)" rx="2" ry="2" />
<text  x="970.98" y="607.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.(*roaringArray).writeTo (67 samples, 0.01%)</title><rect x="1041.2" y="597" width="0.1" height="15.0" fill="rgb(215,102,51)" rx="2" ry="2" />
<text  x="1044.17" y="607.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).StaticCall (114 samples, 0.02%)</title><rect x="515.6" y="261" width="0.2" height="15.0" fill="rgb(231,0,34)" rx="2" ry="2" />
<text  x="518.63" y="271.5" ></text>
</g>
<g >
<title>tg/core/state.(*PlainStateReader).ReadAccountData (312 samples, 0.04%)</title><rect x="340.1" y="533" width="0.5" height="15.0" fill="rgb(212,51,13)" rx="2" ry="2" />
<text  x="343.11" y="543.5" ></text>
</g>
<g >
<title>sort.Search (2,409 samples, 0.35%)</title><rect x="564.5" y="389" width="4.1" height="15.0" fill="rgb(208,201,54)" rx="2" ry="2" />
<text  x="567.46" y="399.5" ></text>
</g>
<g >
<title>runtime.newobject (437 samples, 0.06%)</title><rect x="891.8" y="533" width="0.8" height="15.0" fill="rgb(208,214,16)" rx="2" ry="2" />
<text  x="894.83" y="543.5" ></text>
</g>
<g >
<title>tg/core/types.Sender (141 samples, 0.02%)</title><rect x="644.7" y="661" width="0.3" height="15.0" fill="rgb(215,225,46)" rx="2" ry="2" />
<text  x="647.75" y="671.5" ></text>
</g>
<g >
<title>tg/ethdb.(*MutationItem).Less (148 samples, 0.02%)</title><rect x="402.4" y="245" width="0.2" height="15.0" fill="rgb(235,40,32)" rx="2" ry="2" />
<text  x="405.35" y="255.5" ></text>
</g>
<g >
<title>reflect.packEface (516 samples, 0.07%)</title><rect x="1123.1" y="565" width="0.8" height="15.0" fill="rgb(233,63,31)" rx="2" ry="2" />
<text  x="1126.06" y="575.5" ></text>
</g>
<g >
<title>math/big.nat.make (73 samples, 0.01%)</title><rect x="657.5" y="661" width="0.2" height="15.0" fill="rgb(229,225,17)" rx="2" ry="2" />
<text  x="660.53" y="671.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVMInterpreter).Run (1,760 samples, 0.25%)</title><rect x="393.0" y="421" width="3.0" height="15.0" fill="rgb(214,190,24)" rx="2" ry="2" />
<text  x="395.98" y="431.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (778 samples, 0.11%)</title><rect x="1053.7" y="389" width="1.3" height="15.0" fill="rgb(238,116,3)" rx="2" ry="2" />
<text  x="1056.66" y="399.5" ></text>
</g>
<g >
<title>runtime.newobject (308 samples, 0.04%)</title><rect x="833.6" y="517" width="0.5" height="15.0" fill="rgb(214,197,20)" rx="2" ry="2" />
<text  x="836.56" y="527.5" ></text>
</g>
<g >
<title>bytes.Compare (182 samples, 0.03%)</title><rect x="191.3" y="197" width="0.3" height="15.0" fill="rgb(230,118,40)" rx="2" ry="2" />
<text  x="194.26" y="207.5" ></text>
</g>
<g >
<title>sort.doPivot (151 samples, 0.02%)</title><rect x="1026.4" y="565" width="0.2" height="15.0" fill="rgb(233,104,33)" rx="2" ry="2" />
<text  x="1029.39" y="575.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.(*state).permute (566 samples, 0.08%)</title><rect x="748.0" y="613" width="1.0" height="15.0" fill="rgb(243,25,45)" rx="2" ry="2" />
<text  x="751.02" y="623.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*ioDecReader).readn1 (141 samples, 0.02%)</title><rect x="969.9" y="469" width="0.2" height="15.0" fill="rgb(206,135,4)" rx="2" ry="2" />
<text  x="972.86" y="479.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*BTree).Get (317 samples, 0.05%)</title><rect x="389.9" y="309" width="0.5" height="15.0" fill="rgb(228,194,49)" rx="2" ry="2" />
<text  x="392.89" y="319.5" ></text>
</g>
<g >
<title>runtime.newobject (265 samples, 0.04%)</title><rect x="973.4" y="613" width="0.4" height="15.0" fill="rgb(218,120,6)" rx="2" ry="2" />
<text  x="976.37" y="623.5" ></text>
</g>
<g >
<title>sort.Search (412 samples, 0.06%)</title><rect x="702.4" y="501" width="0.7" height="15.0" fill="rgb(207,210,43)" rx="2" ry="2" />
<text  x="705.45" y="511.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).StaticCall (591 samples, 0.09%)</title><rect x="450.5" y="453" width="1.0" height="15.0" fill="rgb(212,17,19)" rx="2" ry="2" />
<text  x="453.53" y="463.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).maybeSplitChild (438 samples, 0.06%)</title><rect x="682.5" y="565" width="0.7" height="15.0" fill="rgb(230,75,9)" rx="2" ry="2" />
<text  x="685.50" y="575.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.(*roaringArray).insertNewKeyValueAt (633 samples, 0.09%)</title><rect x="1097.4" y="597" width="1.0" height="15.0" fill="rgb(211,161,29)" rx="2" ry="2" />
<text  x="1100.37" y="607.5" ></text>
</g>
<g >
<title>tg/rlp.(*encbuf).encode (1,523 samples, 0.22%)</title><rect x="225.2" y="501" width="2.6" height="15.0" fill="rgb(212,213,27)" rx="2" ry="2" />
<text  x="228.22" y="511.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb._Cfunc_lmdbgo_mdb_cursor_get1 (65 samples, 0.01%)</title><rect x="396.8" y="309" width="0.1" height="15.0" fill="rgb(207,36,30)" rx="2" ry="2" />
<text  x="399.82" y="319.5" ></text>
</g>
<g >
<title>tg/eth/stagedsync.flushBitmaps64 (296 samples, 0.04%)</title><rect x="1041.0" y="629" width="0.5" height="15.0" fill="rgb(211,62,51)" rx="2" ry="2" />
<text  x="1044.03" y="639.5" ></text>
</g>
<g >
<title>runtime.gcMarkDone (1,609 samples, 0.23%)</title><rect x="34.2" y="853" width="2.8" height="15.0" fill="rgb(249,83,45)" rx="2" ry="2" />
<text  x="37.24" y="863.5" ></text>
</g>
<g >
<title>tg/common/etl.(*sortableBuffer).Sort (764 samples, 0.11%)</title><rect x="142.9" y="661" width="1.2" height="15.0" fill="rgb(221,189,16)" rx="2" ry="2" />
<text  x="145.85" y="671.5" ></text>
</g>
<g >
<title>tg/ethdb.(*mutation).Get (203 samples, 0.03%)</title><rect x="504.8" y="469" width="0.3" height="15.0" fill="rgb(222,105,54)" rx="2" ry="2" />
<text  x="507.76" y="479.5" ></text>
</g>
<g >
<title>runtime.scanframeworker (151 samples, 0.02%)</title><rect x="60.1" y="725" width="0.3" height="15.0" fill="rgb(238,115,12)" rx="2" ry="2" />
<text  x="63.09" y="735.5" ></text>
</g>
<g >
<title>cmpbody (70 samples, 0.01%)</title><rect x="527.4" y="373" width="0.1" height="15.0" fill="rgb(227,55,11)" rx="2" ry="2" />
<text  x="530.43" y="383.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.NewBitmap (61 samples, 0.01%)</title><rect x="1047.8" y="661" width="0.1" height="15.0" fill="rgb(245,96,9)" rx="2" ry="2" />
<text  x="1050.76" y="671.5" ></text>
</g>
<g >
<title>tg/eth/downloader.(*Downloader).fetchParts (7,323 samples, 1.05%)</title><rect x="1106.9" y="821" width="12.5" height="15.0" fill="rgb(233,77,26)" rx="2" ry="2" />
<text  x="1109.93" y="831.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*Decoder).mustDecode (2,009 samples, 0.29%)</title><rect x="968.6" y="597" width="3.4" height="15.0" fill="rgb(240,182,35)" rx="2" ry="2" />
<text  x="971.61" y="607.5" ></text>
</g>
<g >
<title>syscall.write (137 samples, 0.02%)</title><rect x="875.2" y="357" width="0.2" height="15.0" fill="rgb(210,46,50)" rx="2" ry="2" />
<text  x="878.17" y="367.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*Decoder).decSliceHelperStart (88 samples, 0.01%)</title><rect x="163.9" y="517" width="0.1" height="15.0" fill="rgb(233,75,51)" rx="2" ry="2" />
<text  x="166.88" y="527.5" ></text>
</g>
<g >
<title>tg/core/vm.opJump (131 samples, 0.02%)</title><rect x="505.2" y="533" width="0.2" height="15.0" fill="rgb(230,89,35)" rx="2" ry="2" />
<text  x="508.16" y="543.5" ></text>
</g>
<g >
<title>sort.doPivot_func (108 samples, 0.02%)</title><rect x="961.4" y="645" width="0.2" height="15.0" fill="rgb(222,63,13)" rx="2" ry="2" />
<text  x="964.38" y="655.5" ></text>
</g>
<g >
<title>runtime.newobject (359 samples, 0.05%)</title><rect x="259.8" y="565" width="0.6" height="15.0" fill="rgb(223,119,5)" rx="2" ry="2" />
<text  x="262.80" y="575.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).Get (6,390 samples, 0.92%)</title><rect x="582.9" y="469" width="10.8" height="15.0" fill="rgb(241,199,35)" rx="2" ry="2" />
<text  x="585.87" y="479.5" ></text>
</g>
<g >
<title>tg/core/vm.opCreate (2,016 samples, 0.29%)</title><rect x="460.5" y="597" width="3.4" height="15.0" fill="rgb(217,141,0)" rx="2" ry="2" />
<text  x="463.48" y="607.5" ></text>
</g>
<g >
<title>tg/ethdb/bitmapdb.CutLeft64 (3,814 samples, 0.55%)</title><rect x="1095.9" y="629" width="6.4" height="15.0" fill="rgb(225,126,12)" rx="2" ry="2" />
<text  x="1098.85" y="639.5" ></text>
</g>
<g >
<title>reflect.valueInterface (80 samples, 0.01%)</title><rect x="1183.7" y="517" width="0.1" height="15.0" fill="rgb(233,43,32)" rx="2" ry="2" />
<text  x="1186.69" y="527.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).Create (360 samples, 0.05%)</title><rect x="623.8" y="645" width="0.6" height="15.0" fill="rgb(224,120,53)" rx="2" ry="2" />
<text  x="626.79" y="655.5" ></text>
</g>
<g >
<title>math/big.(*Int).SetUint64 (134 samples, 0.02%)</title><rect x="234.9" y="677" width="0.2" height="15.0" fill="rgb(253,114,46)" rx="2" ry="2" />
<text  x="237.89" y="687.5" ></text>
</g>
<g >
<title>runtime.newobject (76 samples, 0.01%)</title><rect x="818.1" y="597" width="0.1" height="15.0" fill="rgb(210,77,34)" rx="2" ry="2" />
<text  x="821.10" y="607.5" ></text>
</g>
<g >
<title>tg/core/vm.run (146 samples, 0.02%)</title><rect x="386.2" y="309" width="0.2" height="15.0" fill="rgb(249,149,14)" rx="2" ry="2" />
<text  x="389.16" y="319.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (275 samples, 0.04%)</title><rect x="122.6" y="725" width="0.5" height="15.0" fill="rgb(248,204,41)" rx="2" ry="2" />
<text  x="125.64" y="735.5" ></text>
</g>
<g >
<title>sort.Search (72 samples, 0.01%)</title><rect x="666.1" y="517" width="0.1" height="15.0" fill="rgb(236,161,33)" rx="2" ry="2" />
<text  x="669.09" y="527.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).Put.func1 (80 samples, 0.01%)</title><rect x="814.7" y="549" width="0.1" height="15.0" fill="rgb(216,49,49)" rx="2" ry="2" />
<text  x="817.70" y="559.5" ></text>
</g>
<g >
<title>tg/ethdb.(*LmdbCursor).Put (7,858 samples, 1.13%)</title><rect x="798.2" y="581" width="13.3" height="15.0" fill="rgb(226,166,20)" rx="2" ry="2" />
<text  x="801.15" y="591.5" ></text>
</g>
<g >
<title>tg/core/vm.run (22,339 samples, 3.22%)</title><rect x="371.5" y="501" width="37.9" height="15.0" fill="rgb(224,118,51)" rx="2" ry="2" />
<text  x="374.47" y="511.5" >tg/..</text>
</g>
<g >
<title>runtime.mallocgc (284 samples, 0.04%)</title><rect x="317.6" y="565" width="0.5" height="15.0" fill="rgb(216,20,39)" rx="2" ry="2" />
<text  x="320.58" y="575.5" ></text>
</g>
<g >
<title>runtime.runqsteal (3,607 samples, 0.52%)</title><rect x="112.2" y="805" width="6.2" height="15.0" fill="rgb(244,141,54)" rx="2" ry="2" />
<text  x="115.23" y="815.5" ></text>
</g>
<g >
<title>sync/atomic.StorePointer (59 samples, 0.01%)</title><rect x="738.5" y="661" width="0.1" height="15.0" fill="rgb(213,87,26)" rx="2" ry="2" />
<text  x="741.47" y="671.5" ></text>
</g>
<g >
<title>runtime.mallocgc (77 samples, 0.01%)</title><rect x="1186.0" y="485" width="0.2" height="15.0" fill="rgb(242,2,18)" rx="2" ry="2" />
<text  x="1189.03" y="495.5" ></text>
</g>
<g >
<title>runtime.newobject (141 samples, 0.02%)</title><rect x="322.0" y="581" width="0.2" height="15.0" fill="rgb(238,142,15)" rx="2" ry="2" />
<text  x="325.00" y="591.5" ></text>
</g>
<g >
<title>tg/core/vm.opSload (235 samples, 0.03%)</title><rect x="486.9" y="405" width="0.4" height="15.0" fill="rgb(231,19,8)" rx="2" ry="2" />
<text  x="489.88" y="415.5" ></text>
</g>
<g >
<title>tg/core/state.(*PlainStateReader).ReadAccountCode (248 samples, 0.04%)</title><rect x="423.2" y="485" width="0.4" height="15.0" fill="rgb(229,220,10)" rx="2" ry="2" />
<text  x="426.21" y="495.5" ></text>
</g>
<g >
<title>runtime.(*randomEnum).done (134 samples, 0.02%)</title><rect x="101.3" y="821" width="0.2" height="15.0" fill="rgb(219,183,2)" rx="2" ry="2" />
<text  x="104.29" y="831.5" ></text>
</g>
<g >
<title>runtime.newobject (409 samples, 0.06%)</title><rect x="786.2" y="613" width="0.7" height="15.0" fill="rgb(212,66,41)" rx="2" ry="2" />
<text  x="789.22" y="623.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find (2,774 samples, 0.40%)</title><rect x="249.0" y="485" width="4.7" height="15.0" fill="rgb(206,30,36)" rx="2" ry="2" />
<text  x="251.97" y="495.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (121 samples, 0.02%)</title><rect x="562.7" y="469" width="0.2" height="15.0" fill="rgb(251,12,37)" rx="2" ry="2" />
<text  x="565.73" y="479.5" ></text>
</g>
<g >
<title>cmpbody (171 samples, 0.02%)</title><rect x="191.3" y="181" width="0.3" height="15.0" fill="rgb(229,66,29)" rx="2" ry="2" />
<text  x="194.27" y="191.5" ></text>
</g>
<g >
<title>tg/core/vm.codeBitmap (413 samples, 0.06%)</title><rect x="605.0" y="485" width="0.7" height="15.0" fill="rgb(247,125,37)" rx="2" ry="2" />
<text  x="608.00" y="495.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).SetState (118 samples, 0.02%)</title><rect x="512.3" y="517" width="0.2" height="15.0" fill="rgb(247,208,45)" rx="2" ry="2" />
<text  x="515.34" y="527.5" ></text>
</g>
<g >
<title>runtime.cgoCheckPointer (462 samples, 0.07%)</title><rect x="926.8" y="453" width="0.8" height="15.0" fill="rgb(251,78,17)" rx="2" ry="2" />
<text  x="929.78" y="463.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find (187 samples, 0.03%)</title><rect x="402.6" y="309" width="0.3" height="15.0" fill="rgb(222,184,53)" rx="2" ry="2" />
<text  x="405.60" y="319.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (75 samples, 0.01%)</title><rect x="385.8" y="197" width="0.1" height="15.0" fill="rgb(242,46,8)" rx="2" ry="2" />
<text  x="388.80" y="207.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.(*roaringArray).runOptimize (191 samples, 0.03%)</title><rect x="1035.0" y="597" width="0.3" height="15.0" fill="rgb(250,202,54)" rx="2" ry="2" />
<text  x="1038.00" y="607.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring/roaring64.(*Bitmap).And (292 samples, 0.04%)</title><rect x="1052.4" y="613" width="0.5" height="15.0" fill="rgb(226,73,37)" rx="2" ry="2" />
<text  x="1055.43" y="623.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find.func1 (63 samples, 0.01%)</title><rect x="389.9" y="181" width="0.1" height="15.0" fill="rgb(249,176,48)" rx="2" ry="2" />
<text  x="392.93" y="191.5" ></text>
</g>
<g >
<title>github.com/holiman/uint256.(*Int).WriteToSlice (398 samples, 0.06%)</title><rect x="746.7" y="485" width="0.6" height="15.0" fill="rgb(234,210,14)" rx="2" ry="2" />
<text  x="749.65" y="495.5" ></text>
</g>
<g >
<title>tg/turbo/trie.(*RetainList).AddKeyWithMarker (907 samples, 0.13%)</title><rect x="975.0" y="613" width="1.5" height="15.0" fill="rgb(229,164,37)" rx="2" ry="2" />
<text  x="977.99" y="623.5" ></text>
</g>
<g >
<title>runtime.newobject (75 samples, 0.01%)</title><rect x="208.8" y="549" width="0.1" height="15.0" fill="rgb(233,193,9)" rx="2" ry="2" />
<text  x="211.82" y="559.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*BTree).Get (301 samples, 0.04%)</title><rect x="452.4" y="437" width="0.5" height="15.0" fill="rgb(234,86,13)" rx="2" ry="2" />
<text  x="455.36" y="447.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (363 samples, 0.05%)</title><rect x="661.6" y="581" width="0.7" height="15.0" fill="rgb(219,118,11)" rx="2" ry="2" />
<text  x="664.65" y="591.5" ></text>
</g>
<g >
<title>tg/core/types.rlpHash (105 samples, 0.02%)</title><rect x="1119.2" y="773" width="0.1" height="15.0" fill="rgb(236,184,32)" rx="2" ry="2" />
<text  x="1122.15" y="783.5" ></text>
</g>
<g >
<title>runtime.memmove (108 samples, 0.02%)</title><rect x="144.3" y="517" width="0.1" height="15.0" fill="rgb(235,187,21)" rx="2" ry="2" />
<text  x="147.27" y="527.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (207 samples, 0.03%)</title><rect x="627.5" y="597" width="0.4" height="15.0" fill="rgb(220,52,41)" rx="2" ry="2" />
<text  x="630.51" y="607.5" ></text>
</g>
<g >
<title>runtime.makeslicecopy (113 samples, 0.02%)</title><rect x="435.5" y="437" width="0.2" height="15.0" fill="rgb(207,48,1)" rx="2" ry="2" />
<text  x="438.48" y="447.5" ></text>
</g>
<g >
<title>bytes.Compare (287 samples, 0.04%)</title><rect x="436.3" y="293" width="0.5" height="15.0" fill="rgb(215,192,30)" rx="2" ry="2" />
<text  x="439.27" y="303.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (190 samples, 0.03%)</title><rect x="910.0" y="485" width="0.4" height="15.0" fill="rgb(230,108,50)" rx="2" ry="2" />
<text  x="913.05" y="495.5" ></text>
</g>
<g >
<title>tg/ethdb.(*LmdbCursor).set (612 samples, 0.09%)</title><rect x="258.5" y="549" width="1.0" height="15.0" fill="rgb(237,169,32)" rx="2" ry="2" />
<text  x="261.48" y="559.5" ></text>
</g>
<g >
<title>runtime.(*mspan).sweep (6,647 samples, 0.96%)</title><rect x="22.6" y="837" width="11.3" height="15.0" fill="rgb(246,69,41)" rx="2" ry="2" />
<text  x="25.61" y="847.5" ></text>
</g>
<g >
<title>tg/common/etl.loadFilesIntoBucket (5,883 samples, 0.85%)</title><rect x="166.6" y="677" width="9.9" height="15.0" fill="rgb(229,32,9)" rx="2" ry="2" />
<text  x="169.55" y="687.5" ></text>
</g>
<g >
<title>tg/rlp.writeUint256 (426 samples, 0.06%)</title><rect x="211.5" y="389" width="0.7" height="15.0" fill="rgb(224,176,27)" rx="2" ry="2" />
<text  x="214.45" y="399.5" ></text>
</g>
<g >
<title>context.(*valueCtx).Value (61 samples, 0.01%)</title><rect x="721.1" y="565" width="0.1" height="15.0" fill="rgb(240,163,38)" rx="2" ry="2" />
<text  x="724.12" y="575.5" ></text>
</g>
<g >
<title>tg/common/etl.(*sortableBuffer).Swap (102 samples, 0.01%)</title><rect x="188.4" y="245" width="0.2" height="15.0" fill="rgb(238,197,47)" rx="2" ry="2" />
<text  x="191.39" y="255.5" ></text>
</g>
<g >
<title>tg/core/rawdb.ReadBody (5,159 samples, 0.74%)</title><rect x="785.9" y="693" width="8.8" height="15.0" fill="rgb(254,207,18)" rx="2" ry="2" />
<text  x="788.94" y="703.5" ></text>
</g>
<g >
<title>runtime.makeslice (3,503 samples, 0.50%)</title><rect x="149.8" y="517" width="6.0" height="15.0" fill="rgb(211,108,5)" rx="2" ry="2" />
<text  x="152.85" y="527.5" ></text>
</g>
<g >
<title>runtime.newobject (253 samples, 0.04%)</title><rect x="972.1" y="597" width="0.5" height="15.0" fill="rgb(225,182,11)" rx="2" ry="2" />
<text  x="975.14" y="607.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.(*roaringArray).writeTo (120 samples, 0.02%)</title><rect x="157.3" y="597" width="0.2" height="15.0" fill="rgb(206,61,18)" rx="2" ry="2" />
<text  x="160.34" y="607.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*BTree).Get (1,062 samples, 0.15%)</title><rect x="288.0" y="565" width="1.8" height="15.0" fill="rgb(236,116,34)" rx="2" ry="2" />
<text  x="290.96" y="575.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (220 samples, 0.03%)</title><rect x="325.8" y="437" width="0.4" height="15.0" fill="rgb(220,120,27)" rx="2" ry="2" />
<text  x="328.82" y="447.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).Get (1,517 samples, 0.22%)</title><rect x="283.2" y="533" width="2.5" height="15.0" fill="rgb(205,72,24)" rx="2" ry="2" />
<text  x="286.17" y="543.5" ></text>
</g>
<g >
<title>runtime.cgocall (286 samples, 0.04%)</title><rect x="221.1" y="453" width="0.5" height="15.0" fill="rgb(220,171,1)" rx="2" ry="2" />
<text  x="224.11" y="463.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (228 samples, 0.03%)</title><rect x="907.1" y="405" width="0.4" height="15.0" fill="rgb(206,119,43)" rx="2" ry="2" />
<text  x="910.11" y="415.5" ></text>
</g>
<g >
<title>runtime.cgocall (521 samples, 0.07%)</title><rect x="1126.8" y="597" width="0.8" height="15.0" fill="rgb(236,49,7)" rx="2" ry="2" />
<text  x="1129.75" y="607.5" ></text>
</g>
<g >
<title>tg/core/vm.(*Memory).Resize (328 samples, 0.05%)</title><rect x="519.7" y="549" width="0.6" height="15.0" fill="rgb(209,186,15)" rx="2" ry="2" />
<text  x="522.72" y="559.5" ></text>
</g>
<g >
<title>sort.symMerge (162 samples, 0.02%)</title><rect x="1040.3" y="437" width="0.2" height="15.0" fill="rgb(208,36,34)" rx="2" ry="2" />
<text  x="1043.26" y="447.5" ></text>
</g>
<g >
<title>tg/ethdb.(*MutationItem).Less (213 samples, 0.03%)</title><rect x="718.6" y="517" width="0.3" height="15.0" fill="rgb(235,38,22)" rx="2" ry="2" />
<text  x="721.56" y="527.5" ></text>
</g>
<g >
<title>github.com/holiman/uint256.(*Int).SetUint64 (60 samples, 0.01%)</title><rect x="360.9" y="533" width="0.1" height="15.0" fill="rgb(241,129,32)" rx="2" ry="2" />
<text  x="363.93" y="543.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).getVal2.func1 (251 samples, 0.04%)</title><rect x="607.6" y="373" width="0.4" height="15.0" fill="rgb(241,53,12)" rx="2" ry="2" />
<text  x="610.56" y="383.5" ></text>
</g>
<g >
<title>tg/common/etl.(*fileDataProvider).Next (325 samples, 0.05%)</title><rect x="145.1" y="677" width="0.5" height="15.0" fill="rgb(209,2,48)" rx="2" ry="2" />
<text  x="148.07" y="687.5" ></text>
</g>
<g >
<title>tg/core/vm.opStaticCall (215 samples, 0.03%)</title><rect x="420.4" y="405" width="0.3" height="15.0" fill="rgb(232,198,27)" rx="2" ry="2" />
<text  x="423.37" y="415.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.(*state).Read (144 samples, 0.02%)</title><rect x="1132.4" y="789" width="0.3" height="15.0" fill="rgb(207,78,29)" rx="2" ry="2" />
<text  x="1135.42" y="799.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (137 samples, 0.02%)</title><rect x="1119.6" y="693" width="0.2" height="15.0" fill="rgb(250,90,5)" rx="2" ry="2" />
<text  x="1122.62" y="703.5" ></text>
</g>
<g >
<title>tg/core/vm.opCall (107 samples, 0.02%)</title><rect x="479.0" y="277" width="0.2" height="15.0" fill="rgb(247,128,21)" rx="2" ry="2" />
<text  x="481.97" y="287.5" ></text>
</g>
<g >
<title>runtime.cgocall (4,919 samples, 0.71%)</title><rect x="342.4" y="469" width="8.4" height="15.0" fill="rgb(244,14,30)" rx="2" ry="2" />
<text  x="345.41" y="479.5" ></text>
</g>
<g >
<title>tg/common/etl.loadFilesIntoBucket.func1 (3,030 samples, 0.44%)</title><rect x="171.4" y="645" width="5.1" height="15.0" fill="rgb(238,37,43)" rx="2" ry="2" />
<text  x="174.40" y="655.5" ></text>
</g>
<g >
<title>reflect.Value.Addr (129 samples, 0.02%)</title><rect x="1183.5" y="533" width="0.2" height="15.0" fill="rgb(234,120,37)" rx="2" ry="2" />
<text  x="1186.46" y="543.5" ></text>
</g>
<g >
<title>bytes.Compare (82 samples, 0.01%)</title><rect x="258.1" y="485" width="0.2" height="15.0" fill="rgb(242,26,0)" rx="2" ry="2" />
<text  x="261.12" y="495.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.(*Bitmap).Add (1,441 samples, 0.21%)</title><rect x="135.4" y="709" width="2.5" height="15.0" fill="rgb(206,57,9)" rx="2" ry="2" />
<text  x="138.44" y="719.5" ></text>
</g>
<g >
<title>runtime.hashGrow (312 samples, 0.04%)</title><rect x="669.6" y="613" width="0.5" height="15.0" fill="rgb(240,211,42)" rx="2" ry="2" />
<text  x="672.59" y="623.5" ></text>
</g>
<g >
<title>runtime.mallocgc (81 samples, 0.01%)</title><rect x="1089.7" y="517" width="0.2" height="15.0" fill="rgb(213,32,26)" rx="2" ry="2" />
<text  x="1092.74" y="527.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVMInterpreter).Run (567 samples, 0.08%)</title><rect x="383.3" y="229" width="0.9" height="15.0" fill="rgb(212,43,30)" rx="2" ry="2" />
<text  x="386.27" y="239.5" ></text>
</g>
<g >
<title>tg/ethdb.(*MutationItem).Less (101 samples, 0.01%)</title><rect x="719.7" y="533" width="0.2" height="15.0" fill="rgb(246,16,29)" rx="2" ry="2" />
<text  x="722.74" y="543.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*Encoder).Encode (456 samples, 0.07%)</title><rect x="994.4" y="549" width="0.8" height="15.0" fill="rgb(252,50,34)" rx="2" ry="2" />
<text  x="997.40" y="559.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find.func1 (65 samples, 0.01%)</title><rect x="340.2" y="389" width="0.1" height="15.0" fill="rgb(217,221,10)" rx="2" ry="2" />
<text  x="343.23" y="399.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (93 samples, 0.01%)</title><rect x="238.7" y="613" width="0.2" height="15.0" fill="rgb(249,105,49)" rx="2" ry="2" />
<text  x="241.71" y="623.5" ></text>
</g>
<g >
<title>tg/core/vm.(*Contract).validJumpdest (76 samples, 0.01%)</title><rect x="505.3" y="517" width="0.1" height="15.0" fill="rgb(237,43,53)" rx="2" ry="2" />
<text  x="508.26" y="527.5" ></text>
</g>
<g >
<title>runtime.makeslice (209 samples, 0.03%)</title><rect x="1093.4" y="645" width="0.4" height="15.0" fill="rgb(243,178,0)" rx="2" ry="2" />
<text  x="1096.45" y="655.5" ></text>
</g>
<g >
<title>tg/ethdb.(*mutation).Get (465 samples, 0.07%)</title><rect x="461.2" y="501" width="0.8" height="15.0" fill="rgb(213,179,16)" rx="2" ry="2" />
<text  x="464.23" y="511.5" ></text>
</g>
<g >
<title>tg/core/vm.opStaticCall (111 samples, 0.02%)</title><rect x="604.2" y="341" width="0.2" height="15.0" fill="rgb(253,98,0)" rx="2" ry="2" />
<text  x="607.19" y="351.5" ></text>
</g>
<g >
<title>runtime.mapassign (70 samples, 0.01%)</title><rect x="389.7" y="341" width="0.1" height="15.0" fill="rgb(210,36,14)" rx="2" ry="2" />
<text  x="392.67" y="351.5" ></text>
</g>
<g >
<title>runtime.mallocgc (102 samples, 0.01%)</title><rect x="322.0" y="565" width="0.2" height="15.0" fill="rgb(231,220,36)" rx="2" ry="2" />
<text  x="325.02" y="575.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.(*runContainer16).andBitmapContainer (105 samples, 0.02%)</title><rect x="156.7" y="533" width="0.2" height="15.0" fill="rgb(226,57,0)" rx="2" ry="2" />
<text  x="159.71" y="543.5" ></text>
</g>
<g >
<title>tg/rlp.(*Stream).Kind (62 samples, 0.01%)</title><rect x="792.4" y="549" width="0.1" height="15.0" fill="rgb(225,96,42)" rx="2" ry="2" />
<text  x="795.36" y="559.5" ></text>
</g>
<g >
<title>cmpbody (206 samples, 0.03%)</title><rect x="185.7" y="309" width="0.3" height="15.0" fill="rgb(226,69,49)" rx="2" ry="2" />
<text  x="188.67" y="319.5" ></text>
</g>
<g >
<title>tg/ethdb.(*mutation).Append (1,192 samples, 0.17%)</title><rect x="1120.1" y="741" width="2.0" height="15.0" fill="rgb(234,207,34)" rx="2" ry="2" />
<text  x="1123.07" y="751.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (74 samples, 0.01%)</title><rect x="363.8" y="421" width="0.1" height="15.0" fill="rgb(246,110,0)" rx="2" ry="2" />
<text  x="366.76" y="431.5" ></text>
</g>
<g >
<title>runtime.startm (223 samples, 0.03%)</title><rect x="120.7" y="789" width="0.4" height="15.0" fill="rgb(252,180,7)" rx="2" ry="2" />
<text  x="123.69" y="799.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (71 samples, 0.01%)</title><rect x="973.5" y="565" width="0.2" height="15.0" fill="rgb(220,186,17)" rx="2" ry="2" />
<text  x="976.53" y="575.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find.func1 (546 samples, 0.08%)</title><rect x="523.5" y="405" width="0.9" height="15.0" fill="rgb(254,74,10)" rx="2" ry="2" />
<text  x="526.45" y="415.5" ></text>
</g>
<g >
<title>sort.rotate (194 samples, 0.03%)</title><rect x="183.9" y="373" width="0.3" height="15.0" fill="rgb(244,48,33)" rx="2" ry="2" />
<text  x="186.87" y="383.5" ></text>
</g>
<g >
<title>runtime.mallocgc (188 samples, 0.03%)</title><rect x="1025.6" y="549" width="0.4" height="15.0" fill="rgb(209,13,35)" rx="2" ry="2" />
<text  x="1028.64" y="559.5" ></text>
</g>
<g >
<title>tg/common/etl.(*oldestEntrySortableBuffer).Swap (80 samples, 0.01%)</title><rect x="868.2" y="261" width="0.1" height="15.0" fill="rgb(242,164,28)" rx="2" ry="2" />
<text  x="871.16" y="271.5" ></text>
</g>
<g >
<title>bytes.Compare (65 samples, 0.01%)</title><rect x="866.0" y="373" width="0.1" height="15.0" fill="rgb(236,203,6)" rx="2" ry="2" />
<text  x="868.98" y="383.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*bufioDecReader).readb (64 samples, 0.01%)</title><rect x="165.1" y="453" width="0.1" height="15.0" fill="rgb(205,181,34)" rx="2" ry="2" />
<text  x="168.13" y="463.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find.func1 (64 samples, 0.01%)</title><rect x="422.8" y="357" width="0.1" height="15.0" fill="rgb(210,213,19)" rx="2" ry="2" />
<text  x="425.78" y="367.5" ></text>
</g>
<g >
<title>tg/ethdb.(*MutationItem).Less (59 samples, 0.01%)</title><rect x="523.3" y="373" width="0.1" height="15.0" fill="rgb(231,75,2)" rx="2" ry="2" />
<text  x="526.30" y="383.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*Decoder).mustDecode (192 samples, 0.03%)</title><rect x="145.2" y="629" width="0.3" height="15.0" fill="rgb(224,184,2)" rx="2" ry="2" />
<text  x="148.16" y="639.5" ></text>
</g>
<g >
<title>runtime.systemstack (119 samples, 0.02%)</title><rect x="155.5" y="437" width="0.2" height="15.0" fill="rgb(252,221,41)" rx="2" ry="2" />
<text  x="158.47" y="447.5" ></text>
</g>
<g >
<title>runtime.(*fixalloc).alloc (83 samples, 0.01%)</title><rect x="1055.1" y="325" width="0.2" height="15.0" fill="rgb(215,130,27)" rx="2" ry="2" />
<text  x="1058.13" y="335.5" ></text>
</g>
<g >
<title>tg/ethdb.(*MutationItem).Less (62 samples, 0.01%)</title><rect x="702.3" y="453" width="0.1" height="15.0" fill="rgb(218,108,52)" rx="2" ry="2" />
<text  x="705.27" y="463.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*Encoder).mustEncode (761 samples, 0.11%)</title><rect x="1078.0" y="549" width="1.3" height="15.0" fill="rgb(212,1,43)" rx="2" ry="2" />
<text  x="1081.00" y="559.5" ></text>
</g>
<g >
<title>sort.swapRange (71 samples, 0.01%)</title><rect x="991.3" y="309" width="0.1" height="15.0" fill="rgb(216,39,11)" rx="2" ry="2" />
<text  x="994.31" y="319.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find.func1 (60 samples, 0.01%)</title><rect x="499.9" y="309" width="0.1" height="15.0" fill="rgb(253,11,17)" rx="2" ry="2" />
<text  x="502.87" y="319.5" ></text>
</g>
<g >
<title>tg/rlp.writeByteArrayCopy (411 samples, 0.06%)</title><rect x="744.8" y="485" width="0.7" height="15.0" fill="rgb(218,52,42)" rx="2" ry="2" />
<text  x="747.77" y="495.5" ></text>
</g>
<g >
<title>bytes.Compare (214 samples, 0.03%)</title><rect x="186.4" y="309" width="0.4" height="15.0" fill="rgb(219,11,38)" rx="2" ry="2" />
<text  x="189.41" y="319.5" ></text>
</g>
<g >
<title>tg/rlp.Encode (3,101 samples, 0.45%)</title><rect x="224.8" y="597" width="5.3" height="15.0" fill="rgb(214,185,12)" rx="2" ry="2" />
<text  x="227.81" y="607.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).getVal0 (735 samples, 0.11%)</title><rect x="160.2" y="677" width="1.2" height="15.0" fill="rgb(227,32,43)" rx="2" ry="2" />
<text  x="163.17" y="687.5" ></text>
</g>
<g >
<title>runtime.growslice (217 samples, 0.03%)</title><rect x="1033.8" y="597" width="0.4" height="15.0" fill="rgb(244,142,50)" rx="2" ry="2" />
<text  x="1036.80" y="607.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (149 samples, 0.02%)</title><rect x="659.0" y="565" width="0.2" height="15.0" fill="rgb(227,18,24)" rx="2" ry="2" />
<text  x="661.96" y="575.5" ></text>
</g>
<g >
<title>tg/core/vm.run (2,660 samples, 0.38%)</title><rect x="382.2" y="373" width="4.5" height="15.0" fill="rgb(231,29,49)" rx="2" ry="2" />
<text  x="385.16" y="383.5" ></text>
</g>
<g >
<title>runtime.cgoCheckArg (999 samples, 0.14%)</title><rect x="956.3" y="517" width="1.7" height="15.0" fill="rgb(226,105,25)" rx="2" ry="2" />
<text  x="959.31" y="527.5" ></text>
</g>
<g >
<title>runtime.newobject (134 samples, 0.02%)</title><rect x="341.9" y="549" width="0.2" height="15.0" fill="rgb(208,8,5)" rx="2" ry="2" />
<text  x="344.89" y="559.5" ></text>
</g>
<g >
<title>runtime.lock2 (162 samples, 0.02%)</title><rect x="100.4" y="821" width="0.3" height="15.0" fill="rgb(231,113,7)" rx="2" ry="2" />
<text  x="103.39" y="831.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (1,515 samples, 0.22%)</title><rect x="522.9" y="485" width="2.6" height="15.0" fill="rgb(223,95,5)" rx="2" ry="2" />
<text  x="525.90" y="495.5" ></text>
</g>
<g >
<title>tg/p2p/rlpx.(*Conn).Write (70 samples, 0.01%)</title><rect x="1188.0" y="821" width="0.1" height="15.0" fill="rgb(243,212,43)" rx="2" ry="2" />
<text  x="1191.02" y="831.5" ></text>
</g>
<g >
<title>tg/core/state.(*PlainStateReader).ReadAccountStorage (1,364 samples, 0.20%)</title><rect x="510.0" y="469" width="2.3" height="15.0" fill="rgb(243,115,49)" rx="2" ry="2" />
<text  x="513.01" y="479.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.binarySearch (64 samples, 0.01%)</title><rect x="1100.1" y="501" width="0.1" height="15.0" fill="rgb(250,144,46)" rx="2" ry="2" />
<text  x="1103.05" y="511.5" ></text>
</g>
<g >
<title>tg/core/vm.opExtCodeSize (584 samples, 0.08%)</title><rect x="504.1" y="533" width="1.0" height="15.0" fill="rgb(252,209,14)" rx="2" ry="2" />
<text  x="507.11" y="543.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVMInterpreter).Run (336 samples, 0.05%)</title><rect x="513.9" y="421" width="0.6" height="15.0" fill="rgb(228,114,1)" rx="2" ry="2" />
<text  x="516.89" y="431.5" ></text>
</g>
<g >
<title>bufio.(*Writer).Write (67 samples, 0.01%)</title><rect x="995.0" y="485" width="0.1" height="15.0" fill="rgb(237,124,43)" rx="2" ry="2" />
<text  x="997.99" y="495.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).insert (918 samples, 0.13%)</title><rect x="702.0" y="549" width="1.6" height="15.0" fill="rgb(213,53,27)" rx="2" ry="2" />
<text  x="705.04" y="559.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).Call (66 samples, 0.01%)</title><rect x="391.3" y="325" width="0.1" height="15.0" fill="rgb(239,8,29)" rx="2" ry="2" />
<text  x="394.26" y="335.5" ></text>
</g>
<g >
<title>tg/core/vm.(*Contract).validJumpdest (87 samples, 0.01%)</title><rect x="397.1" y="453" width="0.2" height="15.0" fill="rgb(219,87,10)" rx="2" ry="2" />
<text  x="400.11" y="463.5" ></text>
</g>
<g >
<title>runtime.unlock2 (98 samples, 0.01%)</title><rect x="909.5" y="437" width="0.2" height="15.0" fill="rgb(229,202,35)" rx="2" ry="2" />
<text  x="912.55" y="447.5" ></text>
</g>
<g >
<title>sort.quickSort (411 samples, 0.06%)</title><rect x="722.6" y="613" width="0.7" height="15.0" fill="rgb(223,31,22)" rx="2" ry="2" />
<text  x="725.64" y="623.5" ></text>
</g>
<g >
<title>github.com/holiman/uint256.udivrem (257 samples, 0.04%)</title><rect x="421.6" y="501" width="0.5" height="15.0" fill="rgb(232,69,50)" rx="2" ry="2" />
<text  x="424.63" y="511.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb._Cfunc_lmdbgo_mdb_cursor_get1 (160 samples, 0.02%)</title><rect x="341.2" y="421" width="0.3" height="15.0" fill="rgb(238,83,46)" rx="2" ry="2" />
<text  x="344.23" y="431.5" ></text>
</g>
<g >
<title>tg/common/etl.(*sortableBuffer).Put (143 samples, 0.02%)</title><rect x="1030.8" y="597" width="0.3" height="15.0" fill="rgb(212,78,27)" rx="2" ry="2" />
<text  x="1033.83" y="607.5" ></text>
</g>
<g >
<title>runtime.mallocgc (73 samples, 0.01%)</title><rect x="242.9" y="533" width="0.1" height="15.0" fill="rgb(240,51,27)" rx="2" ry="2" />
<text  x="245.86" y="543.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.(*roaringArray).runOptimize (137 samples, 0.02%)</title><rect x="1050.0" y="597" width="0.2" height="15.0" fill="rgb(233,182,50)" rx="2" ry="2" />
<text  x="1053.00" y="607.5" ></text>
</g>
<g >
<title>cmpbody (113 samples, 0.02%)</title><rect x="991.5" y="293" width="0.2" height="15.0" fill="rgb(247,200,21)" rx="2" ry="2" />
<text  x="994.48" y="303.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*decRd).readb (85 samples, 0.01%)</title><rect x="165.1" y="469" width="0.1" height="15.0" fill="rgb(251,52,8)" rx="2" ry="2" />
<text  x="168.09" y="479.5" ></text>
</g>
<g >
<title>runtime.newobject (114 samples, 0.02%)</title><rect x="1087.0" y="661" width="0.2" height="15.0" fill="rgb(245,63,16)" rx="2" ry="2" />
<text  x="1090.04" y="671.5" ></text>
</g>
<g >
<title>runtime.mapassign (1,660 samples, 0.24%)</title><rect x="558.9" y="533" width="2.8" height="15.0" fill="rgb(222,100,8)" rx="2" ry="2" />
<text  x="561.92" y="543.5" ></text>
</g>
<g >
<title>tg/ethdb.(*TxDb).AppendDup (2,066 samples, 0.30%)</title><rect x="730.7" y="629" width="3.5" height="15.0" fill="rgb(224,168,48)" rx="2" ry="2" />
<text  x="733.68" y="639.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).Write (105 samples, 0.02%)</title><rect x="1079.3" y="453" width="0.2" height="15.0" fill="rgb(243,91,17)" rx="2" ry="2" />
<text  x="1082.32" y="463.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).Exist (9,760 samples, 1.40%)</title><rect x="270.8" y="629" width="16.6" height="15.0" fill="rgb(249,102,48)" rx="2" ry="2" />
<text  x="273.81" y="639.5" ></text>
</g>
<g >
<title>runtime.systemstack (114 samples, 0.02%)</title><rect x="983.8" y="485" width="0.2" height="15.0" fill="rgb(223,145,32)" rx="2" ry="2" />
<text  x="986.81" y="495.5" ></text>
</g>
<g >
<title>tg/core/vm.opDelegateCall (60 samples, 0.01%)</title><rect x="387.1" y="277" width="0.1" height="15.0" fill="rgb(232,177,10)" rx="2" ry="2" />
<text  x="390.06" y="287.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVMInterpreter).Run (123 samples, 0.02%)</title><rect x="496.9" y="293" width="0.2" height="15.0" fill="rgb(224,152,54)" rx="2" ry="2" />
<text  x="499.88" y="303.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (138 samples, 0.02%)</title><rect x="395.2" y="261" width="0.2" height="15.0" fill="rgb(230,190,24)" rx="2" ry="2" />
<text  x="398.19" y="271.5" ></text>
</g>
<g >
<title>runtime.makeslice (113 samples, 0.02%)</title><rect x="146.8" y="549" width="0.2" height="15.0" fill="rgb(226,98,10)" rx="2" ry="2" />
<text  x="149.79" y="559.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).Call (364 samples, 0.05%)</title><rect x="513.9" y="453" width="0.6" height="15.0" fill="rgb(254,162,29)" rx="2" ry="2" />
<text  x="516.86" y="463.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (87 samples, 0.01%)</title><rect x="594.9" y="485" width="0.2" height="15.0" fill="rgb(225,217,29)" rx="2" ry="2" />
<text  x="597.92" y="495.5" ></text>
</g>
<g >
<title>tg/rlp.(*Stream).Bytes (657 samples, 0.09%)</title><rect x="200.2" y="341" width="1.1" height="15.0" fill="rgb(214,6,24)" rx="2" ry="2" />
<text  x="203.23" y="351.5" ></text>
</g>
<g >
<title>runtime.cgocall (120 samples, 0.02%)</title><rect x="423.4" y="357" width="0.2" height="15.0" fill="rgb(205,77,4)" rx="2" ry="2" />
<text  x="426.39" y="367.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.(*Bitmap).WriteTo (126 samples, 0.02%)</title><rect x="1056.8" y="597" width="0.2" height="15.0" fill="rgb(227,72,48)" rx="2" ry="2" />
<text  x="1059.79" y="607.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).StaticCall (107 samples, 0.02%)</title><rect x="395.7" y="389" width="0.1" height="15.0" fill="rgb(230,137,14)" rx="2" ry="2" />
<text  x="398.65" y="399.5" ></text>
</g>
<g >
<title>tg/ethdb.(*ObjectDatabase).Walk.func1 (548 samples, 0.08%)</title><rect x="232.5" y="581" width="0.9" height="15.0" fill="rgb(242,211,50)" rx="2" ry="2" />
<text  x="235.52" y="591.5" ></text>
</g>
<g >
<title>sort.symMerge (148 samples, 0.02%)</title><rect x="1040.3" y="373" width="0.2" height="15.0" fill="rgb(248,126,35)" rx="2" ry="2" />
<text  x="1043.28" y="383.5" ></text>
</g>
<g >
<title>runtime.mallocgc (163 samples, 0.02%)</title><rect x="1012.4" y="549" width="0.2" height="15.0" fill="rgb(217,47,31)" rx="2" ry="2" />
<text  x="1015.35" y="559.5" ></text>
</g>
<g >
<title>runtime.cgocall (1,391 samples, 0.20%)</title><rect x="598.6" y="469" width="2.3" height="15.0" fill="rgb(234,210,1)" rx="2" ry="2" />
<text  x="601.58" y="479.5" ></text>
</g>
<g >
<title>sort.rotate (190 samples, 0.03%)</title><rect x="864.3" y="437" width="0.4" height="15.0" fill="rgb(244,5,38)" rx="2" ry="2" />
<text  x="867.34" y="447.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.keccakF1600 (491 samples, 0.07%)</title><rect x="399.6" y="405" width="0.9" height="15.0" fill="rgb(252,221,1)" rx="2" ry="2" />
<text  x="402.62" y="415.5" ></text>
</g>
<g >
<title>bytes.Compare (86 samples, 0.01%)</title><rect x="961.4" y="629" width="0.1" height="15.0" fill="rgb(210,3,8)" rx="2" ry="2" />
<text  x="964.39" y="639.5" ></text>
</g>
<g >
<title>runtime.systemstack (78 samples, 0.01%)</title><rect x="779.2" y="565" width="0.1" height="15.0" fill="rgb(238,62,28)" rx="2" ry="2" />
<text  x="782.20" y="575.5" ></text>
</g>
<g >
<title>runtime.newobject (106 samples, 0.02%)</title><rect x="219.8" y="373" width="0.2" height="15.0" fill="rgb(247,142,19)" rx="2" ry="2" />
<text  x="222.79" y="383.5" ></text>
</g>
<g >
<title>tg/core/vm.run (7,975 samples, 1.15%)</title><rect x="379.2" y="437" width="13.5" height="15.0" fill="rgb(222,15,6)" rx="2" ry="2" />
<text  x="382.18" y="447.5" ></text>
</g>
<g >
<title>tg/eth/stagedsync.(*Promoter).Promote (84,603 samples, 12.18%)</title><rect x="814.9" y="709" width="143.7" height="15.0" fill="rgb(231,145,3)" rx="2" ry="2" />
<text  x="817.90" y="719.5" >tg/eth/stagedsync...</text>
</g>
<g >
<title>github.com/holiman/uint256.(*Int).Bytes32 (206 samples, 0.03%)</title><rect x="697.3" y="597" width="0.4" height="15.0" fill="rgb(205,149,17)" rx="2" ry="2" />
<text  x="700.34" y="607.5" ></text>
</g>
<g >
<title>runtime.markroot.func1 (1,028 samples, 0.15%)</title><rect x="60.0" y="789" width="1.8" height="15.0" fill="rgb(219,23,17)" rx="2" ry="2" />
<text  x="63.01" y="799.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).Call (8,216 samples, 1.18%)</title><rect x="378.8" y="453" width="13.9" height="15.0" fill="rgb(224,51,15)" rx="2" ry="2" />
<text  x="381.77" y="463.5" ></text>
</g>
<g >
<title>tg/core/rawdb.ReadCanonicalHash (88 samples, 0.01%)</title><rect x="1131.1" y="805" width="0.2" height="15.0" fill="rgb(208,121,13)" rx="2" ry="2" />
<text  x="1134.13" y="815.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb._Cfunc_lmdbgo_mdb_cursor_get2 (303 samples, 0.04%)</title><rect x="797.5" y="501" width="0.5" height="15.0" fill="rgb(223,191,14)" rx="2" ry="2" />
<text  x="800.51" y="511.5" ></text>
</g>
<g >
<title>tg/common/etl.(*oldestEntrySortableBuffer).Sort (5,487 samples, 0.79%)</title><rect x="984.9" y="565" width="9.4" height="15.0" fill="rgb(232,150,33)" rx="2" ry="2" />
<text  x="987.94" y="575.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (75 samples, 0.01%)</title><rect x="264.7" y="549" width="0.1" height="15.0" fill="rgb(205,5,52)" rx="2" ry="2" />
<text  x="267.68" y="559.5" ></text>
</g>
<g >
<title>tg/core/vm.run (61 samples, 0.01%)</title><rect x="384.3" y="245" width="0.1" height="15.0" fill="rgb(216,120,6)" rx="2" ry="2" />
<text  x="387.26" y="255.5" ></text>
</g>
<g >
<title>tg/common/etl.(*sortableBuffer).Swap (154 samples, 0.02%)</title><rect x="184.6" y="325" width="0.3" height="15.0" fill="rgb(236,85,34)" rx="2" ry="2" />
<text  x="187.62" y="335.5" ></text>
</g>
<g >
<title>tg/common/etl.(*Heap).Pop (191 samples, 0.03%)</title><rect x="167.9" y="645" width="0.3" height="15.0" fill="rgb(232,8,53)" rx="2" ry="2" />
<text  x="170.87" y="655.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*cborDecDriver).DecodeBytes (350 samples, 0.05%)</title><rect x="164.6" y="501" width="0.6" height="15.0" fill="rgb(237,205,14)" rx="2" ry="2" />
<text  x="167.64" y="511.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find.func1 (4,078 samples, 0.59%)</title><rect x="568.9" y="389" width="7.0" height="15.0" fill="rgb(252,169,40)" rx="2" ry="2" />
<text  x="571.93" y="399.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).StaticCall (65 samples, 0.01%)</title><rect x="391.6" y="325" width="0.1" height="15.0" fill="rgb(252,158,2)" rx="2" ry="2" />
<text  x="394.61" y="335.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (91 samples, 0.01%)</title><rect x="146.8" y="517" width="0.2" height="15.0" fill="rgb(217,225,28)" rx="2" ry="2" />
<text  x="149.81" y="527.5" ></text>
</g>
<g >
<title>tg/core/vm.opCall (71,183 samples, 10.24%)</title><rect x="338.5" y="597" width="120.9" height="15.0" fill="rgb(237,54,9)" rx="2" ry="2" />
<text  x="341.51" y="607.5" >tg/core/vm.opCall</text>
</g>
<g >
<title>runtime.mapaccess1 (131 samples, 0.02%)</title><rect x="220.2" y="421" width="0.2" height="15.0" fill="rgb(223,174,43)" rx="2" ry="2" />
<text  x="223.21" y="431.5" ></text>
</g>
<g >
<title>runtime.newobject (60 samples, 0.01%)</title><rect x="1047.8" y="645" width="0.1" height="15.0" fill="rgb(229,112,48)" rx="2" ry="2" />
<text  x="1050.76" y="655.5" ></text>
</g>
<g >
<title>tg/core/vm.opExp (156 samples, 0.02%)</title><rect x="521.7" y="597" width="0.3" height="15.0" fill="rgb(252,53,9)" rx="2" ry="2" />
<text  x="524.70" y="607.5" ></text>
</g>
<g >
<title>tg/crypto/bn256/cloudflare.lineFunctionDouble (71 samples, 0.01%)</title><rect x="503.2" y="293" width="0.1" height="15.0" fill="rgb(222,183,7)" rx="2" ry="2" />
<text  x="506.21" y="303.5" ></text>
</g>
<g >
<title>sort.Sort (784 samples, 0.11%)</title><rect x="728.6" y="645" width="1.3" height="15.0" fill="rgb(224,217,9)" rx="2" ry="2" />
<text  x="731.56" y="655.5" ></text>
</g>
<g >
<title>tg/ethdb.(*ObjectDatabase).Walk (9,003 samples, 1.30%)</title><rect x="214.8" y="709" width="15.3" height="15.0" fill="rgb(208,80,33)" rx="2" ry="2" />
<text  x="217.79" y="719.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.keccakF1600 (4,416 samples, 0.64%)</title><rect x="545.8" y="533" width="7.5" height="15.0" fill="rgb(223,94,48)" rx="2" ry="2" />
<text  x="548.80" y="543.5" ></text>
</g>
<g >
<title>runtime.cgoCheckPointer (97 samples, 0.01%)</title><rect x="161.2" y="645" width="0.2" height="15.0" fill="rgb(235,78,2)" rx="2" ry="2" />
<text  x="164.21" y="655.5" ></text>
</g>
<g >
<title>tg/ethdb.(*TxDb).cursor (70 samples, 0.01%)</title><rect x="734.1" y="613" width="0.1" height="15.0" fill="rgb(211,207,3)" rx="2" ry="2" />
<text  x="737.07" y="623.5" ></text>
</g>
<g >
<title>tg/core/vm.(*Memory).Set32 (66 samples, 0.01%)</title><rect x="481.1" y="389" width="0.1" height="15.0" fill="rgb(234,97,10)" rx="2" ry="2" />
<text  x="484.12" y="399.5" ></text>
</g>
<g >
<title>tg/core/vm.opStaticCall (181 samples, 0.03%)</title><rect x="482.0" y="405" width="0.3" height="15.0" fill="rgb(222,120,19)" rx="2" ry="2" />
<text  x="484.98" y="415.5" ></text>
</g>
<g >
<title>tg/core/state.(*journal).append (287 samples, 0.04%)</title><rect x="263.1" y="581" width="0.5" height="15.0" fill="rgb(244,219,32)" rx="2" ry="2" />
<text  x="266.10" y="591.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find (61 samples, 0.01%)</title><rect x="341.0" y="421" width="0.1" height="15.0" fill="rgb(241,70,16)" rx="2" ry="2" />
<text  x="343.98" y="431.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVMInterpreter).Run (338 samples, 0.05%)</title><rect x="602.9" y="485" width="0.5" height="15.0" fill="rgb(247,194,22)" rx="2" ry="2" />
<text  x="605.86" y="495.5" ></text>
</g>
<g >
<title>runtime.mallocgc (166 samples, 0.02%)</title><rect x="667.9" y="629" width="0.3" height="15.0" fill="rgb(243,53,12)" rx="2" ry="2" />
<text  x="670.92" y="639.5" ></text>
</g>
<g >
<title>cmpbody (88 samples, 0.01%)</title><rect x="703.3" y="469" width="0.2" height="15.0" fill="rgb(235,28,23)" rx="2" ry="2" />
<text  x="706.33" y="479.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find.func1 (393 samples, 0.06%)</title><rect x="702.5" y="485" width="0.6" height="15.0" fill="rgb(227,104,53)" rx="2" ry="2" />
<text  x="705.48" y="495.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).iterate (11,001 samples, 1.58%)</title><rect x="796.2" y="629" width="18.7" height="15.0" fill="rgb(238,24,17)" rx="2" ry="2" />
<text  x="799.21" y="639.5" ></text>
</g>
<g >
<title>tg/turbo/trie.(*HashBuilder).leafHashWithKeyVal (2,883 samples, 0.41%)</title><rect x="1114.1" y="661" width="4.9" height="15.0" fill="rgb(254,186,11)" rx="2" ry="2" />
<text  x="1117.15" y="671.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find (1,118 samples, 0.16%)</title><rect x="273.1" y="469" width="1.9" height="15.0" fill="rgb(234,101,37)" rx="2" ry="2" />
<text  x="276.10" y="479.5" ></text>
</g>
<g >
<title>runtime.cgocall (303 samples, 0.04%)</title><rect x="797.5" y="485" width="0.5" height="15.0" fill="rgb(230,170,19)" rx="2" ry="2" />
<text  x="800.51" y="495.5" ></text>
</g>
<g >
<title>runtime.cgocall (346 samples, 0.05%)</title><rect x="157.6" y="501" width="0.6" height="15.0" fill="rgb(238,71,46)" rx="2" ry="2" />
<text  x="160.62" y="511.5" ></text>
</g>
<g >
<title>sort.rotate (101 samples, 0.01%)</title><rect x="1074.0" y="357" width="0.2" height="15.0" fill="rgb(243,168,13)" rx="2" ry="2" />
<text  x="1076.99" y="367.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (3,709 samples, 0.53%)</title><rect x="272.6" y="501" width="6.3" height="15.0" fill="rgb(213,80,53)" rx="2" ry="2" />
<text  x="275.58" y="511.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.keccakF1600 (360 samples, 0.05%)</title><rect x="229.1" y="549" width="0.6" height="15.0" fill="rgb(220,178,34)" rx="2" ry="2" />
<text  x="232.07" y="559.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*encWr).end (125 samples, 0.02%)</title><rect x="785.2" y="661" width="0.2" height="15.0" fill="rgb(235,9,0)" rx="2" ry="2" />
<text  x="788.22" y="671.5" ></text>
</g>
<g >
<title>tg/core/vm.RunPrecompiledContract (81 samples, 0.01%)</title><rect x="450.6" y="437" width="0.1" height="15.0" fill="rgb(224,151,25)" rx="2" ry="2" />
<text  x="453.55" y="447.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (82 samples, 0.01%)</title><rect x="876.1" y="485" width="0.1" height="15.0" fill="rgb(222,189,44)" rx="2" ry="2" />
<text  x="879.09" y="495.5" ></text>
</g>
<g >
<title>tg/core/state.newObject (569 samples, 0.08%)</title><rect x="285.8" y="597" width="1.0" height="15.0" fill="rgb(248,46,29)" rx="2" ry="2" />
<text  x="288.83" y="607.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).Call (63 samples, 0.01%)</title><rect x="414.4" y="261" width="0.1" height="15.0" fill="rgb(246,43,2)" rx="2" ry="2" />
<text  x="417.43" y="271.5" ></text>
</g>
<g >
<title>github.com/holiman/uint256.(*Int).WriteToSlice (300 samples, 0.04%)</title><rect x="489.2" y="437" width="0.5" height="15.0" fill="rgb(235,26,21)" rx="2" ry="2" />
<text  x="492.23" y="447.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (346 samples, 0.05%)</title><rect x="560.3" y="389" width="0.6" height="15.0" fill="rgb(224,58,29)" rx="2" ry="2" />
<text  x="563.35" y="399.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.(*arrayContainer).iaddRange (153 samples, 0.02%)</title><rect x="146.7" y="565" width="0.3" height="15.0" fill="rgb(237,11,11)" rx="2" ry="2" />
<text  x="149.73" y="575.5" ></text>
</g>
<g >
<title>runtime.retake (436 samples, 0.06%)</title><rect x="124.0" y="821" width="0.7" height="15.0" fill="rgb(206,12,32)" rx="2" ry="2" />
<text  x="126.98" y="831.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (136 samples, 0.02%)</title><rect x="396.4" y="373" width="0.2" height="15.0" fill="rgb(239,5,37)" rx="2" ry="2" />
<text  x="399.39" y="383.5" ></text>
</g>
<g >
<title>runtime.systemstack (374 samples, 0.05%)</title><rect x="850.6" y="485" width="0.6" height="15.0" fill="rgb(253,154,36)" rx="2" ry="2" />
<text  x="853.57" y="495.5" ></text>
</g>
<g >
<title>tg/eth/stagedsync.(*HashPromoter).Promote.func1 (26,659 samples, 3.84%)</title><rect x="976.9" y="613" width="45.3" height="15.0" fill="rgb(233,69,21)" rx="2" ry="2" />
<text  x="979.90" y="623.5" >tg/e..</text>
</g>
<g >
<title>runtime.(*mcache).refill (133 samples, 0.02%)</title><rect x="720.1" y="565" width="0.3" height="15.0" fill="rgb(232,191,16)" rx="2" ry="2" />
<text  x="723.14" y="575.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (248 samples, 0.04%)</title><rect x="907.1" y="421" width="0.4" height="15.0" fill="rgb(246,211,52)" rx="2" ry="2" />
<text  x="910.09" y="431.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find.func1 (647 samples, 0.09%)</title><rect x="717.8" y="533" width="1.1" height="15.0" fill="rgb(209,39,12)" rx="2" ry="2" />
<text  x="720.82" y="543.5" ></text>
</g>
<g >
<title>sort.rotate (167 samples, 0.02%)</title><rect x="865.3" y="405" width="0.3" height="15.0" fill="rgb(218,150,54)" rx="2" ry="2" />
<text  x="868.27" y="415.5" ></text>
</g>
<g >
<title>runtime.mallocgc (337 samples, 0.05%)</title><rect x="260.5" y="565" width="0.5" height="15.0" fill="rgb(226,118,45)" rx="2" ry="2" />
<text  x="263.46" y="575.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).insert (1,670 samples, 0.24%)</title><rect x="673.0" y="549" width="2.8" height="15.0" fill="rgb(220,120,43)" rx="2" ry="2" />
<text  x="676.00" y="559.5" ></text>
</g>
<g >
<title>tg/core/types.(*Transaction).Hash (4,741 samples, 0.68%)</title><rect x="222.0" y="629" width="8.1" height="15.0" fill="rgb(225,45,29)" rx="2" ry="2" />
<text  x="225.02" y="639.5" ></text>
</g>
<g >
<title>runtime.startm (463 samples, 0.07%)</title><rect x="108.2" y="693" width="0.8" height="15.0" fill="rgb(212,43,14)" rx="2" ry="2" />
<text  x="111.17" y="703.5" ></text>
</g>
<g >
<title>runtime.entersyscall_sysmon (62 samples, 0.01%)</title><rect x="1177.3" y="629" width="0.1" height="15.0" fill="rgb(241,36,41)" rx="2" ry="2" />
<text  x="1180.31" y="639.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (202 samples, 0.03%)</title><rect x="504.2" y="421" width="0.4" height="15.0" fill="rgb(215,77,37)" rx="2" ry="2" />
<text  x="507.24" y="431.5" ></text>
</g>
<g >
<title>tg/common/changeset.EncodeStoragePlain (3,903 samples, 0.56%)</title><rect x="727.6" y="677" width="6.6" height="15.0" fill="rgb(239,26,53)" rx="2" ry="2" />
<text  x="730.56" y="687.5" ></text>
</g>
<g >
<title>tg/core/vm.(*Memory).Resize (504 samples, 0.07%)</title><rect x="458.1" y="549" width="0.8" height="15.0" fill="rgb(212,47,20)" rx="2" ry="2" />
<text  x="461.07" y="559.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (178 samples, 0.03%)</title><rect x="1011.0" y="533" width="0.3" height="15.0" fill="rgb(238,43,5)" rx="2" ry="2" />
<text  x="1013.98" y="543.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Txn).commit (302 samples, 0.04%)</title><rect x="795.7" y="661" width="0.5" height="15.0" fill="rgb(227,70,13)" rx="2" ry="2" />
<text  x="798.69" y="671.5" ></text>
</g>
<g >
<title>runtime.sellock (81 samples, 0.01%)</title><rect x="1039.2" y="613" width="0.1" height="15.0" fill="rgb(237,49,14)" rx="2" ry="2" />
<text  x="1042.19" y="623.5" ></text>
</g>
<g >
<title>runtime.mapaccess1 (90 samples, 0.01%)</title><rect x="767.1" y="501" width="0.1" height="15.0" fill="rgb(225,220,50)" rx="2" ry="2" />
<text  x="770.05" y="511.5" ></text>
</g>
<g >
<title>tg/ethdb.(*LmdbCursor).put (2,111 samples, 0.30%)</title><rect x="1103.2" y="565" width="3.6" height="15.0" fill="rgb(231,55,16)" rx="2" ry="2" />
<text  x="1106.18" y="575.5" ></text>
</g>
<g >
<title>tg/rlp.(*Stream).Decode (2,814 samples, 0.40%)</title><rect x="215.9" y="501" width="4.7" height="15.0" fill="rgb(218,227,1)" rx="2" ry="2" />
<text  x="218.86" y="511.5" ></text>
</g>
<g >
<title>tg/ethdb.(*MutationItem).Less (471 samples, 0.07%)</title><rect x="248.2" y="421" width="0.8" height="15.0" fill="rgb(210,19,21)" rx="2" ry="2" />
<text  x="251.17" y="431.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (1,184 samples, 0.17%)</title><rect x="1053.6" y="421" width="2.0" height="15.0" fill="rgb(245,156,24)" rx="2" ry="2" />
<text  x="1056.62" y="431.5" ></text>
</g>
<g >
<title>tg/core/vm.opSload (108 samples, 0.02%)</title><rect x="485.4" y="341" width="0.2" height="15.0" fill="rgb(240,51,43)" rx="2" ry="2" />
<text  x="488.44" y="351.5" ></text>
</g>
<g >
<title>runtime.newobject (363 samples, 0.05%)</title><rect x="720.0" y="613" width="0.6" height="15.0" fill="rgb(213,167,10)" rx="2" ry="2" />
<text  x="723.00" y="623.5" ></text>
</g>
<g >
<title>tg/rlp.makeEncoderWriter.func2 (3,458 samples, 0.50%)</title><rect x="741.9" y="613" width="5.9" height="15.0" fill="rgb(221,144,10)" rx="2" ry="2" />
<text  x="744.95" y="623.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVMInterpreter).Run (88 samples, 0.01%)</title><rect x="484.5" y="101" width="0.1" height="15.0" fill="rgb(230,175,53)" rx="2" ry="2" />
<text  x="487.48" y="111.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).getVal2 (468 samples, 0.07%)</title><rect x="511.5" y="389" width="0.8" height="15.0" fill="rgb(246,136,26)" rx="2" ry="2" />
<text  x="514.50" y="399.5" ></text>
</g>
<g >
<title>sort.symMerge (77 samples, 0.01%)</title><rect x="192.2" y="165" width="0.2" height="15.0" fill="rgb(226,208,18)" rx="2" ry="2" />
<text  x="195.25" y="175.5" ></text>
</g>
<g >
<title>runtime.newobject (253 samples, 0.04%)</title><rect x="286.4" y="581" width="0.4" height="15.0" fill="rgb(248,99,9)" rx="2" ry="2" />
<text  x="289.37" y="591.5" ></text>
</g>
<g >
<title>runtime.(*fixalloc).alloc (174 samples, 0.03%)</title><rect x="153.7" y="341" width="0.3" height="15.0" fill="rgb(241,18,44)" rx="2" ry="2" />
<text  x="156.73" y="351.5" ></text>
</g>
<g >
<title>tg/eth/stagedsync.transformPlainStateKey (11,880 samples, 1.71%)</title><rect x="876.3" y="565" width="20.2" height="15.0" fill="rgb(241,66,7)" rx="2" ry="2" />
<text  x="879.34" y="575.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).Put (80 samples, 0.01%)</title><rect x="814.7" y="565" width="0.1" height="15.0" fill="rgb(214,33,46)" rx="2" ry="2" />
<text  x="817.70" y="575.5" ></text>
</g>
<g >
<title>tg/ethdb/cbor.Decoder (175 samples, 0.03%)</title><rect x="166.2" y="693" width="0.3" height="15.0" fill="rgb(214,45,12)" rx="2" ry="2" />
<text  x="169.16" y="703.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (95 samples, 0.01%)</title><rect x="408.9" y="389" width="0.2" height="15.0" fill="rgb(219,133,2)" rx="2" ry="2" />
<text  x="411.90" y="399.5" ></text>
</g>
<g >
<title>sort.quickSort (783 samples, 0.11%)</title><rect x="728.6" y="629" width="1.3" height="15.0" fill="rgb(228,218,43)" rx="2" ry="2" />
<text  x="731.57" y="639.5" ></text>
</g>
<g >
<title>runtime.chanrecv (142 samples, 0.02%)</title><rect x="1010.7" y="533" width="0.3" height="15.0" fill="rgb(219,56,24)" rx="2" ry="2" />
<text  x="1013.73" y="543.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).StaticCall (589 samples, 0.08%)</title><rect x="515.0" y="389" width="1.0" height="15.0" fill="rgb(227,27,34)" rx="2" ry="2" />
<text  x="518.00" y="399.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.(*state).Read (69 samples, 0.01%)</title><rect x="1029.2" y="597" width="0.1" height="15.0" fill="rgb(205,128,2)" rx="2" ry="2" />
<text  x="1032.21" y="607.5" ></text>
</g>
<g >
<title>tg/rlp.(*Stream).Kind (81 samples, 0.01%)</title><rect x="1185.3" y="517" width="0.1" height="15.0" fill="rgb(242,9,6)" rx="2" ry="2" />
<text  x="1188.29" y="527.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring/roaring64.(*Bitmap).Add (1,287 samples, 0.19%)</title><rect x="1059.1" y="629" width="2.2" height="15.0" fill="rgb(215,14,18)" rx="2" ry="2" />
<text  x="1062.14" y="639.5" ></text>
</g>
<g >
<title>runtime.newarray (151 samples, 0.02%)</title><rect x="983.8" y="517" width="0.2" height="15.0" fill="rgb(221,196,28)" rx="2" ry="2" />
<text  x="986.75" y="527.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.(*arrayContainer).clone (73 samples, 0.01%)</title><rect x="146.0" y="645" width="0.2" height="15.0" fill="rgb(236,134,22)" rx="2" ry="2" />
<text  x="149.05" y="655.5" ></text>
</g>
<g >
<title>aeshashbody (81 samples, 0.01%)</title><rect x="699.7" y="597" width="0.1" height="15.0" fill="rgb(233,65,48)" rx="2" ry="2" />
<text  x="702.68" y="607.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (62 samples, 0.01%)</title><rect x="410.3" y="421" width="0.1" height="15.0" fill="rgb(207,223,29)" rx="2" ry="2" />
<text  x="413.26" y="431.5" ></text>
</g>
<g >
<title>tg/core/vm.(*ecrecover).Run (633 samples, 0.09%)</title><rect x="472.3" y="485" width="1.1" height="15.0" fill="rgb(237,156,34)" rx="2" ry="2" />
<text  x="475.29" y="495.5" ></text>
</g>
<g >
<title>tg/core/rawdb.ReadBlock (5,401 samples, 0.78%)</title><rect x="785.9" y="709" width="9.2" height="15.0" fill="rgb(234,227,40)" rx="2" ry="2" />
<text  x="788.93" y="719.5" ></text>
</g>
<g >
<title>runtime.convT2Enoptr (100 samples, 0.01%)</title><rect x="738.1" y="677" width="0.1" height="15.0" fill="rgb(246,126,43)" rx="2" ry="2" />
<text  x="741.08" y="687.5" ></text>
</g>
<g >
<title>runtime.growslice (144 samples, 0.02%)</title><rect x="1062.9" y="613" width="0.2" height="15.0" fill="rgb(252,170,5)" rx="2" ry="2" />
<text  x="1065.89" y="623.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring/roaring64.(*Bitmap).And (214 samples, 0.03%)</title><rect x="1056.4" y="581" width="0.3" height="15.0" fill="rgb(218,152,17)" rx="2" ry="2" />
<text  x="1059.36" y="591.5" ></text>
</g>
<g >
<title>runtime.mSysStatDec (73 samples, 0.01%)</title><rect x="30.2" y="757" width="0.1" height="15.0" fill="rgb(214,204,15)" rx="2" ry="2" />
<text  x="33.18" y="767.5" ></text>
</g>
<g >
<title>tg/ethdb.(*LmdbCursor).set (68 samples, 0.01%)</title><rect x="423.0" y="437" width="0.1" height="15.0" fill="rgb(236,178,17)" rx="2" ry="2" />
<text  x="426.00" y="447.5" ></text>
</g>
<g >
<title>runtime.newobject (303 samples, 0.04%)</title><rect x="215.2" y="517" width="0.5" height="15.0" fill="rgb(236,114,44)" rx="2" ry="2" />
<text  x="218.21" y="527.5" ></text>
</g>
<g >
<title>runtime.exitsyscall (163 samples, 0.02%)</title><rect x="1045.4" y="565" width="0.3" height="15.0" fill="rgb(210,142,15)" rx="2" ry="2" />
<text  x="1048.42" y="575.5" ></text>
</g>
<g >
<title>tg/core/vm.run (135 samples, 0.02%)</title><rect x="517.4" y="373" width="0.2" height="15.0" fill="rgb(208,172,0)" rx="2" ry="2" />
<text  x="520.41" y="383.5" ></text>
</g>
<g >
<title>tg/ethdb.(*LmdbCursor).getBothRange (89 samples, 0.01%)</title><rect x="516.8" y="357" width="0.2" height="15.0" fill="rgb(206,129,18)" rx="2" ry="2" />
<text  x="519.81" y="367.5" ></text>
</g>
<g >
<title>context.(*valueCtx).Value (200 samples, 0.03%)</title><rect x="642.8" y="565" width="0.3" height="15.0" fill="rgb(229,189,43)" rx="2" ry="2" />
<text  x="645.78" y="575.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb._Cfunc_lmdbgo_mdb_cursor_put2 (2,245 samples, 0.32%)</title><rect x="799.7" y="517" width="3.8" height="15.0" fill="rgb(228,156,6)" rx="2" ry="2" />
<text  x="802.66" y="527.5" ></text>
</g>
<g >
<title>reflect.valueInterface (469 samples, 0.07%)</title><rect x="210.0" y="389" width="0.8" height="15.0" fill="rgb(207,217,22)" rx="2" ry="2" />
<text  x="213.04" y="399.5" ></text>
</g>
<g >
<title>tg/core/vm.(*bn256PairingIstanbul).Run (378 samples, 0.05%)</title><rect x="446.3" y="485" width="0.6" height="15.0" fill="rgb(215,28,45)" rx="2" ry="2" />
<text  x="449.27" y="495.5" ></text>
</g>
<g >
<title>runtime.mallocgc (215 samples, 0.03%)</title><rect x="736.6" y="629" width="0.4" height="15.0" fill="rgb(234,99,4)" rx="2" ry="2" />
<text  x="739.59" y="639.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (722 samples, 0.10%)</title><rect x="288.0" y="501" width="1.2" height="15.0" fill="rgb(246,110,23)" rx="2" ry="2" />
<text  x="291.02" y="511.5" ></text>
</g>
<g >
<title>runtime.cgocall (584 samples, 0.08%)</title><rect x="403.3" y="277" width="1.0" height="15.0" fill="rgb(249,155,14)" rx="2" ry="2" />
<text  x="406.28" y="287.5" ></text>
</g>
<g >
<title>tg/common/etl.NewCollector.func1 (7,098 samples, 1.02%)</title><rect x="1067.9" y="597" width="12.0" height="15.0" fill="rgb(206,145,52)" rx="2" ry="2" />
<text  x="1070.88" y="607.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (121 samples, 0.02%)</title><rect x="659.0" y="549" width="0.2" height="15.0" fill="rgb(248,52,50)" rx="2" ry="2" />
<text  x="661.96" y="559.5" ></text>
</g>
<g >
<title>tg/ethdb.(*TxDb).Get (621 samples, 0.09%)</title><rect x="258.5" y="565" width="1.0" height="15.0" fill="rgb(231,18,39)" rx="2" ry="2" />
<text  x="261.48" y="575.5" ></text>
</g>
<g >
<title>bytes.(*Buffer).Write (175 samples, 0.03%)</title><rect x="761.4" y="645" width="0.3" height="15.0" fill="rgb(210,130,27)" rx="2" ry="2" />
<text  x="764.43" y="655.5" ></text>
</g>
<g >
<title>tg/ethdb.(*TxDb).Commit (302 samples, 0.04%)</title><rect x="795.7" y="709" width="0.5" height="15.0" fill="rgb(246,195,30)" rx="2" ry="2" />
<text  x="798.69" y="719.5" ></text>
</g>
<g >
<title>tg/core/vm.opCall (132 samples, 0.02%)</title><rect x="496.9" y="341" width="0.2" height="15.0" fill="rgb(252,30,4)" rx="2" ry="2" />
<text  x="499.87" y="351.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (232 samples, 0.03%)</title><rect x="786.3" y="533" width="0.4" height="15.0" fill="rgb(250,4,9)" rx="2" ry="2" />
<text  x="789.34" y="543.5" ></text>
</g>
<g >
<title>runtime.mapaccess1 (108 samples, 0.02%)</title><rect x="220.8" y="469" width="0.2" height="15.0" fill="rgb(213,29,0)" rx="2" ry="2" />
<text  x="223.80" y="479.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (61 samples, 0.01%)</title><rect x="408.9" y="357" width="0.1" height="15.0" fill="rgb(221,121,48)" rx="2" ry="2" />
<text  x="411.90" y="367.5" ></text>
</g>
<g >
<title>runtime.mapassign_faststr (1,030 samples, 0.15%)</title><rect x="699.4" y="613" width="1.7" height="15.0" fill="rgb(213,148,28)" rx="2" ry="2" />
<text  x="702.37" y="623.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*ioDecReader).readn1 (132 samples, 0.02%)</title><rect x="969.3" y="469" width="0.3" height="15.0" fill="rgb(218,126,12)" rx="2" ry="2" />
<text  x="972.34" y="479.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find (1,335 samples, 0.19%)</title><rect x="246.7" y="469" width="2.3" height="15.0" fill="rgb(227,91,0)" rx="2" ry="2" />
<text  x="249.71" y="479.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (62 samples, 0.01%)</title><rect x="196.5" y="501" width="0.1" height="15.0" fill="rgb(247,126,27)" rx="2" ry="2" />
<text  x="199.49" y="511.5" ></text>
</g>
<g >
<title>syscall.Syscall (105 samples, 0.02%)</title><rect x="1079.3" y="389" width="0.2" height="15.0" fill="rgb(224,145,31)" rx="2" ry="2" />
<text  x="1082.32" y="399.5" ></text>
</g>
<g >
<title>runtime.systemstack (626 samples, 0.09%)</title><rect x="950.2" y="485" width="1.0" height="15.0" fill="rgb(225,224,38)" rx="2" ry="2" />
<text  x="953.18" y="495.5" ></text>
</g>
<g >
<title>runtime.convTslice (88 samples, 0.01%)</title><rect x="1079.6" y="565" width="0.2" height="15.0" fill="rgb(209,107,43)" rx="2" ry="2" />
<text  x="1082.62" y="575.5" ></text>
</g>
<g >
<title>tg/crypto/secp256k1._Cfunc_secp256k1_ext_ecdsa_recover (318 samples, 0.05%)</title><rect x="512.7" y="421" width="0.6" height="15.0" fill="rgb(216,83,31)" rx="2" ry="2" />
<text  x="515.75" y="431.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).GetOrNewStateObject (98 samples, 0.01%)</title><rect x="339.3" y="533" width="0.2" height="15.0" fill="rgb(220,84,32)" rx="2" ry="2" />
<text  x="342.28" y="543.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (142 samples, 0.02%)</title><rect x="975.8" y="501" width="0.3" height="15.0" fill="rgb(230,131,53)" rx="2" ry="2" />
<text  x="978.83" y="511.5" ></text>
</g>
<g >
<title>net.(*conn).Read (536 samples, 0.08%)</title><rect x="1176.6" y="789" width="0.9" height="15.0" fill="rgb(215,130,33)" rx="2" ry="2" />
<text  x="1179.56" y="799.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (124 samples, 0.02%)</title><rect x="984.5" y="517" width="0.2" height="15.0" fill="rgb(231,85,19)" rx="2" ry="2" />
<text  x="987.48" y="527.5" ></text>
</g>
<g >
<title>sort.Search (86 samples, 0.01%)</title><rect x="402.9" y="309" width="0.2" height="15.0" fill="rgb(244,139,5)" rx="2" ry="2" />
<text  x="405.93" y="319.5" ></text>
</g>
<g >
<title>runtime.cgoCheckArg (83 samples, 0.01%)</title><rect x="794.3" y="549" width="0.1" height="15.0" fill="rgb(228,131,8)" rx="2" ry="2" />
<text  x="797.31" y="559.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*bufioDecReader).readbFill (230 samples, 0.03%)</title><rect x="165.6" y="549" width="0.4" height="15.0" fill="rgb(237,114,53)" rx="2" ry="2" />
<text  x="168.59" y="559.5" ></text>
</g>
<g >
<title>reflect.typedslicecopy (82 samples, 0.01%)</title><rect x="1124.1" y="533" width="0.2" height="15.0" fill="rgb(229,24,8)" rx="2" ry="2" />
<text  x="1127.12" y="543.5" ></text>
</g>
<g >
<title>tg/rlp.(*Stream).Bytes (307 samples, 0.04%)</title><rect x="788.4" y="501" width="0.6" height="15.0" fill="rgb(211,203,45)" rx="2" ry="2" />
<text  x="791.44" y="511.5" ></text>
</g>
<g >
<title>tg/ethdb.Walk (9,003 samples, 1.30%)</title><rect x="214.8" y="661" width="15.3" height="15.0" fill="rgb(239,43,40)" rx="2" ry="2" />
<text  x="217.79" y="671.5" ></text>
</g>
<g >
<title>tg/common/etl.NewCollector.func2 (11,652 samples, 1.68%)</title><rect x="176.9" y="581" width="19.8" height="15.0" fill="rgb(213,28,54)" rx="2" ry="2" />
<text  x="179.88" y="591.5" ></text>
</g>
<g >
<title>sort.swapRange (113 samples, 0.02%)</title><rect x="189.1" y="245" width="0.2" height="15.0" fill="rgb(251,65,19)" rx="2" ry="2" />
<text  x="192.07" y="255.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).AddBalance (853 samples, 0.12%)</title><rect x="264.2" y="645" width="1.4" height="15.0" fill="rgb(241,187,28)" rx="2" ry="2" />
<text  x="267.20" y="655.5" ></text>
</g>
<g >
<title>runtime.futex (444 samples, 0.06%)</title><rect x="108.2" y="645" width="0.8" height="15.0" fill="rgb(215,75,47)" rx="2" ry="2" />
<text  x="111.20" y="655.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (87 samples, 0.01%)</title><rect x="244.7" y="501" width="0.1" height="15.0" fill="rgb(245,187,27)" rx="2" ry="2" />
<text  x="247.67" y="511.5" ></text>
</g>
<g >
<title>sort.symMerge (2,436 samples, 0.35%)</title><rect x="188.6" y="277" width="4.1" height="15.0" fill="rgb(213,75,3)" rx="2" ry="2" />
<text  x="191.56" y="287.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (92 samples, 0.01%)</title><rect x="487.0" y="261" width="0.1" height="15.0" fill="rgb(213,214,18)" rx="2" ry="2" />
<text  x="489.98" y="271.5" ></text>
</g>
<g >
<title>tg/ethdb.(*mutation).Put (1,197 samples, 0.17%)</title><rect x="702.0" y="613" width="2.0" height="15.0" fill="rgb(236,217,2)" rx="2" ry="2" />
<text  x="704.99" y="623.5" ></text>
</g>
<g >
<title>runtime.mallocgc (106 samples, 0.02%)</title><rect x="597.4" y="485" width="0.2" height="15.0" fill="rgb(253,46,5)" rx="2" ry="2" />
<text  x="600.41" y="495.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb._Cfunc_lmdbgo_mdb_cursor_get1 (132 samples, 0.02%)</title><rect x="460.9" y="421" width="0.3" height="15.0" fill="rgb(225,198,25)" rx="2" ry="2" />
<text  x="463.94" y="431.5" ></text>
</g>
<g >
<title>runtime.mallocgc (254 samples, 0.04%)</title><rect x="644.0" y="645" width="0.4" height="15.0" fill="rgb(235,13,50)" rx="2" ry="2" />
<text  x="647.01" y="655.5" ></text>
</g>
<g >
<title>tg/eth.(*ProtocolManager).doSync (572,252 samples, 82.36%)</title><rect x="135.0" y="853" width="971.8" height="15.0" fill="rgb(246,185,0)" rx="2" ry="2" />
<text  x="137.99" y="863.5" >tg/eth.(*ProtocolManager).doSync</text>
</g>
<g >
<title>runtime.heapBitsSetType (73 samples, 0.01%)</title><rect x="779.5" y="645" width="0.1" height="15.0" fill="rgb(212,145,17)" rx="2" ry="2" />
<text  x="782.46" y="655.5" ></text>
</g>
<g >
<title>runtime.mallocgc (92 samples, 0.01%)</title><rect x="196.0" y="501" width="0.1" height="15.0" fill="rgb(249,213,19)" rx="2" ry="2" />
<text  x="198.98" y="511.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb._Cfunc_lmdbgo_mdb_cursor_get2 (65 samples, 0.01%)</title><rect x="487.2" y="229" width="0.1" height="15.0" fill="rgb(241,198,11)" rx="2" ry="2" />
<text  x="490.16" y="239.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (156 samples, 0.02%)</title><rect x="625.2" y="533" width="0.3" height="15.0" fill="rgb(253,27,17)" rx="2" ry="2" />
<text  x="628.22" y="543.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb._Cfunc_mdb_cursor_get (1,048 samples, 0.15%)</title><rect x="203.7" y="421" width="1.8" height="15.0" fill="rgb(248,159,44)" rx="2" ry="2" />
<text  x="206.70" y="431.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.(*roaringArray).getWritableContainerAtIndex (235 samples, 0.03%)</title><rect x="1033.3" y="597" width="0.4" height="15.0" fill="rgb(247,133,17)" rx="2" ry="2" />
<text  x="1036.34" y="607.5" ></text>
</g>
<g >
<title>tg/crypto/secp256k1.RecoverPubkeyWithContext.func1 (289 samples, 0.04%)</title><rect x="371.0" y="437" width="0.5" height="15.0" fill="rgb(250,43,0)" rx="2" ry="2" />
<text  x="373.97" y="447.5" ></text>
</g>
<g >
<title>tg/core/vm.run (104 samples, 0.01%)</title><rect x="609.3" y="309" width="0.2" height="15.0" fill="rgb(245,213,29)" rx="2" ry="2" />
<text  x="612.28" y="319.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (86 samples, 0.01%)</title><rect x="832.4" y="453" width="0.1" height="15.0" fill="rgb(237,16,38)" rx="2" ry="2" />
<text  x="835.39" y="463.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (71 samples, 0.01%)</title><rect x="701.2" y="565" width="0.2" height="15.0" fill="rgb(224,208,42)" rx="2" ry="2" />
<text  x="704.24" y="575.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.(*roaringArray).readFrom (893 samples, 0.13%)</title><rect x="1091.8" y="629" width="1.5" height="15.0" fill="rgb(216,57,37)" rx="2" ry="2" />
<text  x="1094.76" y="639.5" ></text>
</g>
<g >
<title>tg/rlp.decodeUint256NoPtr (1,013 samples, 0.15%)</title><rect x="217.3" y="421" width="1.7" height="15.0" fill="rgb(209,200,14)" rx="2" ry="2" />
<text  x="220.28" y="431.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).insert (101 samples, 0.01%)</title><rect x="665.7" y="565" width="0.1" height="15.0" fill="rgb(229,196,24)" rx="2" ry="2" />
<text  x="668.68" y="575.5" ></text>
</g>
<g >
<title>sort.swapRange (187 samples, 0.03%)</title><rect x="1070.3" y="453" width="0.3" height="15.0" fill="rgb(205,172,36)" rx="2" ry="2" />
<text  x="1073.31" y="463.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (228 samples, 0.03%)</title><rect x="627.5" y="629" width="0.4" height="15.0" fill="rgb(220,25,16)" rx="2" ry="2" />
<text  x="630.50" y="639.5" ></text>
</g>
<g >
<title>reflect.packEface (827 samples, 0.12%)</title><rect x="743.2" y="485" width="1.4" height="15.0" fill="rgb(218,200,36)" rx="2" ry="2" />
<text  x="746.17" y="495.5" ></text>
</g>
<g >
<title>tg/eth/stagedsync.(*State).Run (572,252 samples, 82.36%)</title><rect x="135.0" y="789" width="971.8" height="15.0" fill="rgb(247,183,23)" rx="2" ry="2" />
<text  x="137.99" y="799.5" >tg/eth/stagedsync.(*State).Run</text>
</g>
<g >
<title>bytes.Compare (66 samples, 0.01%)</title><rect x="986.4" y="501" width="0.1" height="15.0" fill="rgb(228,9,45)" rx="2" ry="2" />
<text  x="989.43" y="511.5" ></text>
</g>
<g >
<title>github.com/holiman/uint256.(*Int).SetBytes (224 samples, 0.03%)</title><rect x="334.5" y="581" width="0.4" height="15.0" fill="rgb(229,140,31)" rx="2" ry="2" />
<text  x="337.51" y="591.5" ></text>
</g>
<g >
<title>tg/crypto/bn256/cloudflare.(*twistPoint).IsOnCurve (353 samples, 0.05%)</title><rect x="501.9" y="293" width="0.6" height="15.0" fill="rgb(236,197,1)" rx="2" ry="2" />
<text  x="504.94" y="303.5" ></text>
</g>
<g >
<title>sort.Search (64 samples, 0.01%)</title><rect x="511.3" y="373" width="0.1" height="15.0" fill="rgb(213,63,25)" rx="2" ry="2" />
<text  x="514.26" y="383.5" ></text>
</g>
<g >
<title>tg/rlp.makePtrWriter.func1 (1,801 samples, 0.26%)</title><rect x="1122.5" y="629" width="3.1" height="15.0" fill="rgb(229,88,52)" rx="2" ry="2" />
<text  x="1125.55" y="639.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find.func1 (746 samples, 0.11%)</title><rect x="579.8" y="421" width="1.3" height="15.0" fill="rgb(253,174,47)" rx="2" ry="2" />
<text  x="582.84" y="431.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).Call (1,360 samples, 0.20%)</title><rect x="483.5" y="389" width="2.3" height="15.0" fill="rgb(226,229,45)" rx="2" ry="2" />
<text  x="486.51" y="399.5" ></text>
</g>
<g >
<title>sort.Search (62 samples, 0.01%)</title><rect x="500.6" y="309" width="0.1" height="15.0" fill="rgb(230,120,19)" rx="2" ry="2" />
<text  x="503.64" y="319.5" ></text>
</g>
<g >
<title>runtime.cgocall (843 samples, 0.12%)</title><rect x="1085.1" y="581" width="1.4" height="15.0" fill="rgb(232,112,44)" rx="2" ry="2" />
<text  x="1088.09" y="591.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (192 samples, 0.03%)</title><rect x="197.1" y="389" width="0.3" height="15.0" fill="rgb(217,133,46)" rx="2" ry="2" />
<text  x="200.08" y="399.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.keccakF1600 (214 samples, 0.03%)</title><rect x="769.6" y="581" width="0.3" height="15.0" fill="rgb(237,158,46)" rx="2" ry="2" />
<text  x="772.55" y="591.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).uncacheSpan (59 samples, 0.01%)</title><rect x="154.9" y="453" width="0.1" height="15.0" fill="rgb(249,105,3)" rx="2" ry="2" />
<text  x="157.90" y="463.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (80 samples, 0.01%)</title><rect x="1012.9" y="501" width="0.2" height="15.0" fill="rgb(223,76,45)" rx="2" ry="2" />
<text  x="1015.95" y="511.5" ></text>
</g>
<g >
<title>sort.rotate (133 samples, 0.02%)</title><rect x="990.0" y="373" width="0.3" height="15.0" fill="rgb(248,28,40)" rx="2" ry="2" />
<text  x="993.03" y="383.5" ></text>
</g>
<g >
<title>sort.symMerge (175 samples, 0.03%)</title><rect x="1040.2" y="469" width="0.3" height="15.0" fill="rgb(217,40,21)" rx="2" ry="2" />
<text  x="1043.23" y="479.5" ></text>
</g>
<g >
<title>tg/core/vm.opCall (72 samples, 0.01%)</title><rect x="413.4" y="277" width="0.2" height="15.0" fill="rgb(224,198,48)" rx="2" ry="2" />
<text  x="416.44" y="287.5" ></text>
</g>
<g >
<title>sort.symMerge (4,528 samples, 0.65%)</title><rect x="864.7" y="437" width="7.7" height="15.0" fill="rgb(238,42,32)" rx="2" ry="2" />
<text  x="867.67" y="447.5" ></text>
</g>
<g >
<title>tg/core/vm.makeLog.func1 (1,175 samples, 0.17%)</title><rect x="329.2" y="597" width="2.0" height="15.0" fill="rgb(250,201,44)" rx="2" ry="2" />
<text  x="332.17" y="607.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).Call (189 samples, 0.03%)</title><rect x="413.4" y="325" width="0.3" height="15.0" fill="rgb(236,15,38)" rx="2" ry="2" />
<text  x="416.39" y="335.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (68 samples, 0.01%)</title><rect x="1012.5" y="469" width="0.1" height="15.0" fill="rgb(229,104,44)" rx="2" ry="2" />
<text  x="1015.47" y="479.5" ></text>
</g>
<g >
<title>sort.rotate (175 samples, 0.03%)</title><rect x="986.5" y="501" width="0.3" height="15.0" fill="rgb(239,49,21)" rx="2" ry="2" />
<text  x="989.54" y="511.5" ></text>
</g>
<g >
<title>tg/core/types.(*Header).Hash (96 samples, 0.01%)</title><rect x="1129.9" y="773" width="0.1" height="15.0" fill="rgb(218,79,15)" rx="2" ry="2" />
<text  x="1132.87" y="783.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVMInterpreter).Run (217 samples, 0.03%)</title><rect x="414.4" y="293" width="0.3" height="15.0" fill="rgb(208,143,6)" rx="2" ry="2" />
<text  x="417.36" y="303.5" ></text>
</g>
<g >
<title>runtime.memmove (84 samples, 0.01%)</title><rect x="1067.7" y="565" width="0.2" height="15.0" fill="rgb(252,222,13)" rx="2" ry="2" />
<text  x="1070.74" y="575.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVMInterpreter).Run (115 samples, 0.02%)</title><rect x="420.5" y="357" width="0.2" height="15.0" fill="rgb(228,219,34)" rx="2" ry="2" />
<text  x="423.54" y="367.5" ></text>
</g>
<g >
<title>sort.insertionSort (208 samples, 0.03%)</title><rect x="863.0" y="485" width="0.3" height="15.0" fill="rgb(227,60,27)" rx="2" ry="2" />
<text  x="865.99" y="495.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).insert (186 samples, 0.03%)</title><rect x="665.7" y="613" width="0.3" height="15.0" fill="rgb(250,166,5)" rx="2" ry="2" />
<text  x="668.67" y="623.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (192 samples, 0.03%)</title><rect x="464.5" y="453" width="0.3" height="15.0" fill="rgb(254,6,35)" rx="2" ry="2" />
<text  x="467.45" y="463.5" ></text>
</g>
<g >
<title>runtime.cgocall (598 samples, 0.09%)</title><rect x="160.2" y="629" width="1.0" height="15.0" fill="rgb(249,124,21)" rx="2" ry="2" />
<text  x="163.20" y="639.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*cborDecDriver).advanceNil (97 samples, 0.01%)</title><rect x="169.6" y="533" width="0.2" height="15.0" fill="rgb(233,79,54)" rx="2" ry="2" />
<text  x="172.62" y="543.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Txn).commit.func1 (297 samples, 0.04%)</title><rect x="1188.9" y="757" width="0.5" height="15.0" fill="rgb(241,197,39)" rx="2" ry="2" />
<text  x="1191.85" y="767.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (290 samples, 0.04%)</title><rect x="418.9" y="357" width="0.5" height="15.0" fill="rgb(232,105,54)" rx="2" ry="2" />
<text  x="421.86" y="367.5" ></text>
</g>
<g >
<title>tg/ethdb.(*LmdbKV).Begin (6,931 samples, 1.00%)</title><rect x="899.4" y="533" width="11.7" height="15.0" fill="rgb(227,6,15)" rx="2" ry="2" />
<text  x="902.36" y="543.5" ></text>
</g>
<g >
<title>runtime.selectnbrecv (464 samples, 0.07%)</title><rect x="1010.7" y="549" width="0.8" height="15.0" fill="rgb(210,112,36)" rx="2" ry="2" />
<text  x="1013.68" y="559.5" ></text>
</g>
<g >
<title>tg/core/rawdb.ReadHeader (203 samples, 0.03%)</title><rect x="794.7" y="693" width="0.3" height="15.0" fill="rgb(234,11,18)" rx="2" ry="2" />
<text  x="797.70" y="703.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find.func1 (1,382 samples, 0.20%)</title><rect x="279.0" y="469" width="2.4" height="15.0" fill="rgb(236,37,8)" rx="2" ry="2" />
<text  x="282.03" y="479.5" ></text>
</g>
<g >
<title>sort.Search (133 samples, 0.02%)</title><rect x="452.4" y="325" width="0.2" height="15.0" fill="rgb(252,153,20)" rx="2" ry="2" />
<text  x="455.39" y="335.5" ></text>
</g>
<g >
<title>bytes.Compare (645 samples, 0.09%)</title><rect x="279.4" y="453" width="1.1" height="15.0" fill="rgb(211,82,38)" rx="2" ry="2" />
<text  x="282.38" y="463.5" ></text>
</g>
<g >
<title>runtime.mapassign (284 samples, 0.04%)</title><rect x="286.9" y="597" width="0.5" height="15.0" fill="rgb(253,96,34)" rx="2" ry="2" />
<text  x="289.90" y="607.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find.func1 (266 samples, 0.04%)</title><rect x="288.1" y="437" width="0.4" height="15.0" fill="rgb(247,81,5)" rx="2" ry="2" />
<text  x="291.09" y="447.5" ></text>
</g>
<g >
<title>reflect.Value.Field (64 samples, 0.01%)</title><rect x="225.5" y="453" width="0.1" height="15.0" fill="rgb(226,150,11)" rx="2" ry="2" />
<text  x="228.53" y="463.5" ></text>
</g>
<g >
<title>math/big.(*Int).Cmp (155 samples, 0.02%)</title><rect x="659.8" y="645" width="0.3" height="15.0" fill="rgb(210,200,29)" rx="2" ry="2" />
<text  x="662.84" y="655.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (113 samples, 0.02%)</title><rect x="243.4" y="437" width="0.2" height="15.0" fill="rgb(243,35,54)" rx="2" ry="2" />
<text  x="246.36" y="447.5" ></text>
</g>
<g >
<title>sync.(*Pool).Put (113 samples, 0.02%)</title><rect x="761.0" y="645" width="0.2" height="15.0" fill="rgb(207,218,24)" rx="2" ry="2" />
<text  x="764.02" y="655.5" ></text>
</g>
<g >
<title>tg/ethdb.(*LmdbCursor).putDupSort (331 samples, 0.05%)</title><rect x="807.1" y="565" width="0.6" height="15.0" fill="rgb(248,221,0)" rx="2" ry="2" />
<text  x="810.15" y="575.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).DelegateCall (115 samples, 0.02%)</title><rect x="497.6" y="389" width="0.2" height="15.0" fill="rgb(252,181,0)" rx="2" ry="2" />
<text  x="500.57" y="399.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb._Cfunc_mdb_cursor_get (1,506 samples, 0.22%)</title><rect x="1022.5" y="565" width="2.5" height="15.0" fill="rgb(230,9,33)" rx="2" ry="2" />
<text  x="1025.46" y="575.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (107 samples, 0.02%)</title><rect x="154.5" y="405" width="0.2" height="15.0" fill="rgb(237,196,15)" rx="2" ry="2" />
<text  x="157.51" y="415.5" ></text>
</g>
<g >
<title>tg/core/vm.opJumpi (330 samples, 0.05%)</title><rect x="397.3" y="469" width="0.6" height="15.0" fill="rgb(238,59,47)" rx="2" ry="2" />
<text  x="400.29" y="479.5" ></text>
</g>
<g >
<title>runtime.(*hmap).createOverflow (271 samples, 0.04%)</title><rect x="629.3" y="661" width="0.5" height="15.0" fill="rgb(241,92,16)" rx="2" ry="2" />
<text  x="632.34" y="671.5" ></text>
</g>
<g >
<title>runtime.growslice (171 samples, 0.02%)</title><rect x="138.1" y="693" width="0.3" height="15.0" fill="rgb(220,64,43)" rx="2" ry="2" />
<text  x="141.09" y="703.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVMInterpreter).Run (21,856 samples, 3.15%)</title><rect x="371.7" y="485" width="37.1" height="15.0" fill="rgb(241,113,19)" rx="2" ry="2" />
<text  x="374.70" y="495.5" >tg/..</text>
</g>
<g >
<title>runtime.(*mcache).nextFree (83 samples, 0.01%)</title><rect x="597.4" y="469" width="0.2" height="15.0" fill="rgb(208,169,32)" rx="2" ry="2" />
<text  x="600.41" y="479.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (78 samples, 0.01%)</title><rect x="967.1" y="533" width="0.2" height="15.0" fill="rgb(230,61,9)" rx="2" ry="2" />
<text  x="970.14" y="543.5" ></text>
</g>
<g >
<title>tg/core.NewEVMContext (1,602 samples, 0.23%)</title><rect x="626.2" y="677" width="2.7" height="15.0" fill="rgb(221,88,21)" rx="2" ry="2" />
<text  x="629.19" y="687.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).StaticCall (85 samples, 0.01%)</title><rect x="416.5" y="325" width="0.1" height="15.0" fill="rgb(234,84,23)" rx="2" ry="2" />
<text  x="419.50" y="335.5" ></text>
</g>
<g >
<title>tg/core/types.(*Header).Hash (97 samples, 0.01%)</title><rect x="737.6" y="693" width="0.2" height="15.0" fill="rgb(235,96,33)" rx="2" ry="2" />
<text  x="740.62" y="703.5" ></text>
</g>
<g >
<title>runtime.mallocgc (77 samples, 0.01%)</title><rect x="163.6" y="485" width="0.1" height="15.0" fill="rgb(233,189,6)" rx="2" ry="2" />
<text  x="166.58" y="495.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (97 samples, 0.01%)</title><rect x="644.1" y="613" width="0.1" height="15.0" fill="rgb(232,159,21)" rx="2" ry="2" />
<text  x="647.07" y="623.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.(*state).Read (129 samples, 0.02%)</title><rect x="1134.4" y="789" width="0.2" height="15.0" fill="rgb(230,181,21)" rx="2" ry="2" />
<text  x="1137.35" y="799.5" ></text>
</g>
<g >
<title>tg/common/etl.(*oldestEntrySortableBuffer).Swap (77 samples, 0.01%)</title><rect x="867.3" y="293" width="0.2" height="15.0" fill="rgb(223,33,17)" rx="2" ry="2" />
<text  x="870.33" y="303.5" ></text>
</g>
<g >
<title>tg/rlp.(*Stream).Bytes (718 samples, 0.10%)</title><rect x="1184.0" y="517" width="1.2" height="15.0" fill="rgb(243,187,32)" rx="2" ry="2" />
<text  x="1186.97" y="527.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.(*state).padAndPermute (73 samples, 0.01%)</title><rect x="1029.8" y="613" width="0.1" height="15.0" fill="rgb(205,219,42)" rx="2" ry="2" />
<text  x="1032.76" y="623.5" ></text>
</g>
<g >
<title>tg/ethdb.(*TxDb).Put (376 samples, 0.05%)</title><rect x="157.6" y="581" width="0.6" height="15.0" fill="rgb(219,101,11)" rx="2" ry="2" />
<text  x="160.61" y="591.5" ></text>
</g>
<g >
<title>runtime.makeslice (93 samples, 0.01%)</title><rect x="761.5" y="597" width="0.1" height="15.0" fill="rgb(226,168,35)" rx="2" ry="2" />
<text  x="764.48" y="607.5" ></text>
</g>
<g >
<title>github.com/holiman/uint256.(*Int).SetBytes (186 samples, 0.03%)</title><rect x="557.9" y="533" width="0.3" height="15.0" fill="rgb(207,0,11)" rx="2" ry="2" />
<text  x="560.85" y="543.5" ></text>
</g>
<g >
<title>sort.rotate (199 samples, 0.03%)</title><rect x="987.9" y="453" width="0.3" height="15.0" fill="rgb(219,210,43)" rx="2" ry="2" />
<text  x="990.86" y="463.5" ></text>
</g>
<g >
<title>runtime.injectglist.func1 (481 samples, 0.07%)</title><rect x="108.1" y="709" width="0.9" height="15.0" fill="rgb(226,75,42)" rx="2" ry="2" />
<text  x="111.15" y="719.5" ></text>
</g>
<g >
<title>runtime.mallocgc (128 samples, 0.02%)</title><rect x="168.5" y="645" width="0.2" height="15.0" fill="rgb(222,121,18)" rx="2" ry="2" />
<text  x="171.50" y="655.5" ></text>
</g>
<g >
<title>sort.Search (4,961 samples, 0.71%)</title><rect x="148.9" y="613" width="8.4" height="15.0" fill="rgb(250,196,20)" rx="2" ry="2" />
<text  x="151.90" y="623.5" ></text>
</g>
<g >
<title>tg/ethdb.(*MutationItem).Less (402 samples, 0.06%)</title><rect x="274.3" y="421" width="0.7" height="15.0" fill="rgb(239,146,16)" rx="2" ry="2" />
<text  x="277.32" y="431.5" ></text>
</g>
<g >
<title>tg/core/vm.RunPrecompiledContract (1,424 samples, 0.20%)</title><rect x="598.5" y="565" width="2.4" height="15.0" fill="rgb(252,204,3)" rx="2" ry="2" />
<text  x="601.53" y="575.5" ></text>
</g>
<g >
<title>tg/eth/stagedsync.promoteHistory.func2.1 (2,579 samples, 0.37%)</title><rect x="1102.5" y="613" width="4.3" height="15.0" fill="rgb(248,91,25)" rx="2" ry="2" />
<text  x="1105.45" y="623.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*bufioEncWriter).endErr (124 samples, 0.02%)</title><rect x="1079.3" y="533" width="0.2" height="15.0" fill="rgb(214,18,52)" rx="2" ry="2" />
<text  x="1082.29" y="543.5" ></text>
</g>
<g >
<title>tg/core/vm.opSload (138 samples, 0.02%)</title><rect x="406.0" y="405" width="0.2" height="15.0" fill="rgb(233,164,0)" rx="2" ry="2" />
<text  x="408.95" y="415.5" ></text>
</g>
<g >
<title>sort.symMerge (3,386 samples, 0.49%)</title><rect x="187.0" y="309" width="5.8" height="15.0" fill="rgb(215,179,47)" rx="2" ry="2" />
<text  x="190.04" y="319.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (318 samples, 0.05%)</title><rect x="897.4" y="453" width="0.6" height="15.0" fill="rgb(219,16,26)" rx="2" ry="2" />
<text  x="900.45" y="463.5" ></text>
</g>
<g >
<title>bytes.Compare (96 samples, 0.01%)</title><rect x="499.6" y="277" width="0.1" height="15.0" fill="rgb(211,163,14)" rx="2" ry="2" />
<text  x="502.58" y="287.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.keccakF1600 (392 samples, 0.06%)</title><rect x="213.6" y="501" width="0.7" height="15.0" fill="rgb(233,65,44)" rx="2" ry="2" />
<text  x="216.63" y="511.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (531 samples, 0.08%)</title><rect x="491.1" y="357" width="0.9" height="15.0" fill="rgb(238,7,14)" rx="2" ry="2" />
<text  x="494.12" y="367.5" ></text>
</g>
<g >
<title>runtime.stringtoslicebyte (329 samples, 0.05%)</title><rect x="735.6" y="661" width="0.5" height="15.0" fill="rgb(236,0,28)" rx="2" ry="2" />
<text  x="738.57" y="671.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*decRd).readn1IO (145 samples, 0.02%)</title><rect x="969.3" y="485" width="0.3" height="15.0" fill="rgb(254,116,13)" rx="2" ry="2" />
<text  x="972.31" y="495.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (213 samples, 0.03%)</title><rect x="197.1" y="421" width="0.3" height="15.0" fill="rgb(246,106,13)" rx="2" ry="2" />
<text  x="200.06" y="431.5" ></text>
</g>
<g >
<title>sort.Search (78 samples, 0.01%)</title><rect x="464.6" y="405" width="0.1" height="15.0" fill="rgb(241,229,32)" rx="2" ry="2" />
<text  x="467.56" y="415.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (161 samples, 0.02%)</title><rect x="736.6" y="581" width="0.3" height="15.0" fill="rgb(228,212,47)" rx="2" ry="2" />
<text  x="739.59" y="591.5" ></text>
</g>
<g >
<title>tg/core/vm.opPush1 (164 samples, 0.02%)</title><rect x="508.4" y="533" width="0.3" height="15.0" fill="rgb(228,169,19)" rx="2" ry="2" />
<text  x="511.39" y="543.5" ></text>
</g>
<g >
<title>runtime.exitsyscall (120 samples, 0.02%)</title><rect x="733.7" y="533" width="0.2" height="15.0" fill="rgb(232,8,39)" rx="2" ry="2" />
<text  x="736.73" y="543.5" ></text>
</g>
<g >
<title>github.com/holiman/uint256.(*Int).WriteToSlice (92 samples, 0.01%)</title><rect x="449.5" y="437" width="0.2" height="15.0" fill="rgb(209,157,9)" rx="2" ry="2" />
<text  x="452.53" y="447.5" ></text>
</g>
<g >
<title>tg/core/state.plainAccountKeyGen (117 samples, 0.02%)</title><rect x="735.2" y="661" width="0.2" height="15.0" fill="rgb(211,171,26)" rx="2" ry="2" />
<text  x="738.19" y="671.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).close.func1 (648 samples, 0.09%)</title><rect x="928.4" y="453" width="1.1" height="15.0" fill="rgb(235,225,14)" rx="2" ry="2" />
<text  x="931.44" y="463.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (94 samples, 0.01%)</title><rect x="423.2" y="421" width="0.2" height="15.0" fill="rgb(206,129,12)" rx="2" ry="2" />
<text  x="426.22" y="431.5" ></text>
</g>
<g >
<title>cmpbody (708 samples, 0.10%)</title><rect x="673.6" y="469" width="1.2" height="15.0" fill="rgb(220,78,25)" rx="2" ry="2" />
<text  x="676.55" y="479.5" ></text>
</g>
<g >
<title>runtime.convT64 (74 samples, 0.01%)</title><rect x="787.4" y="549" width="0.1" height="15.0" fill="rgb(248,70,27)" rx="2" ry="2" />
<text  x="790.38" y="559.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).getStateObject (97 samples, 0.01%)</title><rect x="387.8" y="373" width="0.2" height="15.0" fill="rgb(207,169,10)" rx="2" ry="2" />
<text  x="390.80" y="383.5" ></text>
</g>
<g >
<title>runtime.mallocgc (82 samples, 0.01%)</title><rect x="1090.2" y="629" width="0.2" height="15.0" fill="rgb(238,92,29)" rx="2" ry="2" />
<text  x="1093.22" y="639.5" ></text>
</g>
<g >
<title>tg/eth/stagedsync.DefaultStages.func5.1 (342,368 samples, 49.27%)</title><rect x="233.5" y="757" width="581.4" height="15.0" fill="rgb(247,75,52)" rx="2" ry="2" />
<text  x="236.46" y="767.5" >tg/eth/stagedsync.DefaultStages.func5.1</text>
</g>
<g >
<title>sort.Search (306 samples, 0.04%)</title><rect x="510.5" y="341" width="0.5" height="15.0" fill="rgb(229,221,27)" rx="2" ry="2" />
<text  x="513.46" y="351.5" ></text>
</g>
<g >
<title>runtime.stringtoslicebyte (249 samples, 0.04%)</title><rect x="985.6" y="549" width="0.4" height="15.0" fill="rgb(240,111,47)" rx="2" ry="2" />
<text  x="988.62" y="559.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find (82 samples, 0.01%)</title><rect x="369.8" y="357" width="0.1" height="15.0" fill="rgb(247,7,43)" rx="2" ry="2" />
<text  x="372.77" y="367.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find.func1 (378 samples, 0.05%)</title><rect x="498.9" y="277" width="0.6" height="15.0" fill="rgb(237,125,32)" rx="2" ry="2" />
<text  x="501.87" y="287.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (408 samples, 0.06%)</title><rect x="778.7" y="645" width="0.7" height="15.0" fill="rgb(228,69,12)" rx="2" ry="2" />
<text  x="781.75" y="655.5" ></text>
</g>
<g >
<title>runtime.newobject (87 samples, 0.01%)</title><rect x="741.3" y="661" width="0.1" height="15.0" fill="rgb(238,146,19)" rx="2" ry="2" />
<text  x="744.30" y="671.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVMInterpreter).Run (101 samples, 0.01%)</title><rect x="604.2" y="293" width="0.2" height="15.0" fill="rgb(213,224,12)" rx="2" ry="2" />
<text  x="607.21" y="303.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).GetState (65 samples, 0.01%)</title><rect x="420.3" y="389" width="0.1" height="15.0" fill="rgb(254,200,6)" rx="2" ry="2" />
<text  x="423.26" y="399.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).GetState (60 samples, 0.01%)</title><rect x="515.7" y="197" width="0.1" height="15.0" fill="rgb(210,95,4)" rx="2" ry="2" />
<text  x="518.69" y="207.5" ></text>
</g>
<g >
<title>tg/core/types.(*Transaction).Hash (7,338 samples, 1.06%)</title><rect x="737.8" y="693" width="12.4" height="15.0" fill="rgb(231,75,20)" rx="2" ry="2" />
<text  x="740.78" y="703.5" ></text>
</g>
<g >
<title>tg/rlp.makePtrWriter.func1 (1,646 samples, 0.24%)</title><rect x="764.0" y="469" width="2.8" height="15.0" fill="rgb(216,38,7)" rx="2" ry="2" />
<text  x="767.00" y="479.5" ></text>
</g>
<g >
<title>sort.quickSort (1,132 samples, 0.16%)</title><rect x="1027.0" y="549" width="1.9" height="15.0" fill="rgb(232,41,18)" rx="2" ry="2" />
<text  x="1030.01" y="559.5" ></text>
</g>
<g >
<title>tg/ethdb.(*TxDb).Append (1,838 samples, 0.26%)</title><rect x="780.0" y="693" width="3.1" height="15.0" fill="rgb(217,75,36)" rx="2" ry="2" />
<text  x="782.97" y="703.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (118 samples, 0.02%)</title><rect x="972.8" y="581" width="0.2" height="15.0" fill="rgb(248,95,7)" rx="2" ry="2" />
<text  x="975.75" y="591.5" ></text>
</g>
<g >
<title>tg/core/vm.run (60 samples, 0.01%)</title><rect x="387.1" y="245" width="0.1" height="15.0" fill="rgb(216,73,1)" rx="2" ry="2" />
<text  x="390.06" y="255.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).CreateAccount (372 samples, 0.05%)</title><rect x="460.5" y="549" width="0.7" height="15.0" fill="rgb(239,74,43)" rx="2" ry="2" />
<text  x="463.55" y="559.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).Exist (414 samples, 0.06%)</title><rect x="369.6" y="501" width="0.7" height="15.0" fill="rgb(229,103,49)" rx="2" ry="2" />
<text  x="372.56" y="511.5" ></text>
</g>
<g >
<title>runtime.assertE2I (162 samples, 0.02%)</title><rect x="760.6" y="645" width="0.3" height="15.0" fill="rgb(213,206,47)" rx="2" ry="2" />
<text  x="763.61" y="655.5" ></text>
</g>
<g >
<title>tg/rlp.makePtrWriter.func1 (3,551 samples, 0.51%)</title><rect x="741.8" y="629" width="6.0" height="15.0" fill="rgb(242,194,39)" rx="2" ry="2" />
<text  x="744.79" y="639.5" ></text>
</g>
<g >
<title>cmpbody (60 samples, 0.01%)</title><rect x="511.0" y="309" width="0.2" height="15.0" fill="rgb(235,42,7)" rx="2" ry="2" />
<text  x="514.05" y="319.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (346 samples, 0.05%)</title><rect x="527.2" y="469" width="0.6" height="15.0" fill="rgb(214,102,30)" rx="2" ry="2" />
<text  x="530.18" y="479.5" ></text>
</g>
<g >
<title>tg/ethdb/bitmapdb.WalkChunks (6,846 samples, 0.99%)</title><rect x="146.6" y="645" width="11.6" height="15.0" fill="rgb(215,104,23)" rx="2" ry="2" />
<text  x="149.62" y="655.5" ></text>
</g>
<g >
<title>runtime.memmove (79 samples, 0.01%)</title><rect x="672.7" y="533" width="0.2" height="15.0" fill="rgb(222,186,4)" rx="2" ry="2" />
<text  x="675.72" y="543.5" ></text>
</g>
<g >
<title>tg/ethdb.(*lmdbTx).Rollback (75 samples, 0.01%)</title><rect x="231.6" y="661" width="0.1" height="15.0" fill="rgb(208,215,19)" rx="2" ry="2" />
<text  x="234.56" y="671.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).StaticCall (395 samples, 0.06%)</title><rect x="391.1" y="389" width="0.7" height="15.0" fill="rgb(206,141,43)" rx="2" ry="2" />
<text  x="394.09" y="399.5" ></text>
</g>
<g >
<title>tg/crypto/secp256k1.RecoverPubkeyWithContext.func1 (619 samples, 0.09%)</title><rect x="472.3" y="437" width="1.1" height="15.0" fill="rgb(208,54,36)" rx="2" ry="2" />
<text  x="475.31" y="447.5" ></text>
</g>
<g >
<title>cmpbody (124 samples, 0.02%)</title><rect x="966.3" y="597" width="0.2" height="15.0" fill="rgb(238,53,19)" rx="2" ry="2" />
<text  x="969.32" y="607.5" ></text>
</g>
<g >
<title>tg/rlp.makeStructWriter.func1 (1,033 samples, 0.15%)</title><rect x="764.7" y="389" width="1.8" height="15.0" fill="rgb(228,215,30)" rx="2" ry="2" />
<text  x="767.72" y="399.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find (93 samples, 0.01%)</title><rect x="500.5" y="309" width="0.1" height="15.0" fill="rgb(221,201,35)" rx="2" ry="2" />
<text  x="503.48" y="319.5" ></text>
</g>
<g >
<title>runtime.(*hmap).createOverflow (66 samples, 0.01%)</title><rect x="692.4" y="645" width="0.1" height="15.0" fill="rgb(214,25,43)" rx="2" ry="2" />
<text  x="695.42" y="655.5" ></text>
</g>
<g >
<title>tg/crypto/secp256k1._Cfunc_secp256k1_ext_ecdsa_recover (618 samples, 0.09%)</title><rect x="472.3" y="421" width="1.1" height="15.0" fill="rgb(247,116,40)" rx="2" ry="2" />
<text  x="475.31" y="431.5" ></text>
</g>
<g >
<title>runtime.hashGrow (114 samples, 0.02%)</title><rect x="597.4" y="533" width="0.2" height="15.0" fill="rgb(211,100,52)" rx="2" ry="2" />
<text  x="600.40" y="543.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).Put (362 samples, 0.05%)</title><rect x="157.6" y="549" width="0.6" height="15.0" fill="rgb(206,223,44)" rx="2" ry="2" />
<text  x="160.62" y="559.5" ></text>
</g>
<g >
<title>tg/rlp.(*encbuf).encode (1,958 samples, 0.28%)</title><rect x="209.2" y="533" width="3.3" height="15.0" fill="rgb(219,34,22)" rx="2" ry="2" />
<text  x="212.22" y="543.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).Get (2,226 samples, 0.32%)</title><rect x="1022.3" y="613" width="3.7" height="15.0" fill="rgb(234,0,15)" rx="2" ry="2" />
<text  x="1025.26" y="623.5" ></text>
</g>
<g >
<title>runtime.casgstatus (71 samples, 0.01%)</title><rect x="905.0" y="421" width="0.1" height="15.0" fill="rgb(232,19,17)" rx="2" ry="2" />
<text  x="907.99" y="431.5" ></text>
</g>
<g >
<title>runtime.newobject (581 samples, 0.08%)</title><rect x="778.7" y="677" width="0.9" height="15.0" fill="rgb(212,30,34)" rx="2" ry="2" />
<text  x="781.66" y="687.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (67 samples, 0.01%)</title><rect x="415.4" y="277" width="0.1" height="15.0" fill="rgb(208,36,47)" rx="2" ry="2" />
<text  x="418.42" y="287.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.rangeOfOnes (706 samples, 0.10%)</title><rect x="1096.2" y="581" width="1.2" height="15.0" fill="rgb(254,145,6)" rx="2" ry="2" />
<text  x="1099.17" y="591.5" ></text>
</g>
<g >
<title>runtime.putempty (386 samples, 0.06%)</title><rect x="56.7" y="789" width="0.6" height="15.0" fill="rgb(216,78,19)" rx="2" ry="2" />
<text  x="59.68" y="799.5" ></text>
</g>
<g >
<title>sort.doPivot (67 samples, 0.01%)</title><rect x="1028.5" y="421" width="0.1" height="15.0" fill="rgb(253,154,3)" rx="2" ry="2" />
<text  x="1031.53" y="431.5" ></text>
</g>
<g >
<title>sort.swapRange (97 samples, 0.01%)</title><rect x="990.5" y="341" width="0.2" height="15.0" fill="rgb(208,90,10)" rx="2" ry="2" />
<text  x="993.51" y="351.5" ></text>
</g>
<g >
<title>tg/core/vm.run (157 samples, 0.02%)</title><rect x="498.2" y="437" width="0.3" height="15.0" fill="rgb(237,126,34)" rx="2" ry="2" />
<text  x="501.25" y="447.5" ></text>
</g>
<g >
<title>tg/rlp.(*Stream).readFull (101 samples, 0.01%)</title><rect x="218.8" y="373" width="0.2" height="15.0" fill="rgb(208,82,49)" rx="2" ry="2" />
<text  x="221.80" y="383.5" ></text>
</g>
<g >
<title>tg/params.GetForkFlag (324 samples, 0.05%)</title><rect x="720.9" y="661" width="0.5" height="15.0" fill="rgb(221,105,2)" rx="2" ry="2" />
<text  x="723.89" y="671.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (95 samples, 0.01%)</title><rect x="495.0" y="389" width="0.1" height="15.0" fill="rgb(227,24,44)" rx="2" ry="2" />
<text  x="497.98" y="399.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.fastpathEncodeTypeSwitch (1,040 samples, 0.15%)</title><rect x="193.9" y="485" width="1.8" height="15.0" fill="rgb(209,217,7)" rx="2" ry="2" />
<text  x="196.94" y="495.5" ></text>
</g>
<g >
<title>tg/core/vm.gasSStoreEIP2200 (143 samples, 0.02%)</title><rect x="376.6" y="469" width="0.2" height="15.0" fill="rgb(218,156,10)" rx="2" ry="2" />
<text  x="379.59" y="479.5" ></text>
</g>
<g >
<title>tg/common/etl.(*sortableBuffer).Swap (81 samples, 0.01%)</title><rect x="189.1" y="229" width="0.2" height="15.0" fill="rgb(241,228,37)" rx="2" ry="2" />
<text  x="192.12" y="239.5" ></text>
</g>
<g >
<title>tg/core/types.EIP155Signer.Hash (1,140 samples, 0.16%)</title><rect x="1132.2" y="821" width="1.9" height="15.0" fill="rgb(208,14,51)" rx="2" ry="2" />
<text  x="1135.18" y="831.5" ></text>
</g>
<g >
<title>tg/core/vm/stack.(*Stack).Dup (254 samples, 0.04%)</title><rect x="611.4" y="597" width="0.4" height="15.0" fill="rgb(245,133,3)" rx="2" ry="2" />
<text  x="614.36" y="607.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).GetState (78 samples, 0.01%)</title><rect x="451.1" y="389" width="0.1" height="15.0" fill="rgb(239,135,8)" rx="2" ry="2" />
<text  x="454.08" y="399.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.(*state).padAndPermute (1,145 samples, 0.16%)</title><rect x="222.5" y="581" width="2.0" height="15.0" fill="rgb(245,24,33)" rx="2" ry="2" />
<text  x="225.51" y="591.5" ></text>
</g>
<g >
<title>sort.symMerge (767 samples, 0.11%)</title><rect x="191.2" y="213" width="1.3" height="15.0" fill="rgb(225,212,9)" rx="2" ry="2" />
<text  x="194.21" y="223.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (257 samples, 0.04%)</title><rect x="418.9" y="325" width="0.4" height="15.0" fill="rgb(227,110,15)" rx="2" ry="2" />
<text  x="421.87" y="335.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.(*state).Write (1,145 samples, 0.16%)</title><rect x="1117.1" y="597" width="1.9" height="15.0" fill="rgb(214,6,0)" rx="2" ry="2" />
<text  x="1120.08" y="607.5" ></text>
</g>
<g >
<title>tg/ethdb.(*LmdbKV).Begin.func1 (240 samples, 0.03%)</title><rect x="910.7" y="517" width="0.4" height="15.0" fill="rgb(219,86,18)" rx="2" ry="2" />
<text  x="913.73" y="527.5" ></text>
</g>
<g >
<title>tg/rlp.Encode (71 samples, 0.01%)</title><rect x="1180.5" y="773" width="0.2" height="15.0" fill="rgb(206,159,26)" rx="2" ry="2" />
<text  x="1183.53" y="783.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb._Cfunc_mdb_txn_commit (330 samples, 0.05%)</title><rect x="1188.2" y="757" width="0.5" height="15.0" fill="rgb(213,65,19)" rx="2" ry="2" />
<text  x="1191.19" y="767.5" ></text>
</g>
<g >
<title>tg/core/state.(*PlainStateReader).ReadAccountStorage (136 samples, 0.02%)</title><rect x="363.8" y="469" width="0.2" height="15.0" fill="rgb(236,102,52)" rx="2" ry="2" />
<text  x="366.76" y="479.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (87 samples, 0.01%)</title><rect x="895.4" y="453" width="0.1" height="15.0" fill="rgb(251,68,25)" rx="2" ry="2" />
<text  x="898.37" y="463.5" ></text>
</g>
<g >
<title>runtime.cgocall (69 samples, 0.01%)</title><rect x="321.4" y="421" width="0.1" height="15.0" fill="rgb(222,166,36)" rx="2" ry="2" />
<text  x="324.40" y="431.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find.func1 (79 samples, 0.01%)</title><rect x="369.8" y="325" width="0.1" height="15.0" fill="rgb(240,227,27)" rx="2" ry="2" />
<text  x="372.78" y="335.5" ></text>
</g>
<g >
<title>cmpbody (149 samples, 0.02%)</title><rect x="1070.0" y="453" width="0.3" height="15.0" fill="rgb(216,33,22)" rx="2" ry="2" />
<text  x="1073.04" y="463.5" ></text>
</g>
<g >
<title>tg/ethdb/bitmapdb.WalkChunks64 (6,837 samples, 0.98%)</title><rect x="1095.2" y="645" width="11.6" height="15.0" fill="rgb(210,89,7)" rx="2" ry="2" />
<text  x="1098.22" y="655.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (84 samples, 0.01%)</title><rect x="495.0" y="373" width="0.1" height="15.0" fill="rgb(241,174,10)" rx="2" ry="2" />
<text  x="497.98" y="383.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVMInterpreter).Run (106 samples, 0.02%)</title><rect x="515.6" y="229" width="0.2" height="15.0" fill="rgb(205,134,12)" rx="2" ry="2" />
<text  x="518.64" y="239.5" ></text>
</g>
<g >
<title>sort.symMerge (59 samples, 0.01%)</title><rect x="993.7" y="197" width="0.1" height="15.0" fill="rgb(234,93,20)" rx="2" ry="2" />
<text  x="996.72" y="207.5" ></text>
</g>
<g >
<title>tg/ethdb.(*lmdbTx).get (126 samples, 0.02%)</title><rect x="231.4" y="645" width="0.2" height="15.0" fill="rgb(235,98,15)" rx="2" ry="2" />
<text  x="234.35" y="655.5" ></text>
</g>
<g >
<title>tg/core/state.(*stateObject).GetState (65 samples, 0.01%)</title><rect x="384.6" y="245" width="0.1" height="15.0" fill="rgb(223,41,33)" rx="2" ry="2" />
<text  x="387.56" y="255.5" ></text>
</g>
<g >
<title>tg/core/state.(*PlainStateReader).ReadAccountData (2,387 samples, 0.34%)</title><rect x="522.6" y="549" width="4.1" height="15.0" fill="rgb(210,34,54)" rx="2" ry="2" />
<text  x="525.64" y="559.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (201 samples, 0.03%)</title><rect x="340.1" y="469" width="0.4" height="15.0" fill="rgb(216,85,25)" rx="2" ry="2" />
<text  x="343.14" y="479.5" ></text>
</g>
<g >
<title>runtime.newobject (96 samples, 0.01%)</title><rect x="1031.4" y="629" width="0.2" height="15.0" fill="rgb(251,7,50)" rx="2" ry="2" />
<text  x="1034.42" y="639.5" ></text>
</g>
<g >
<title>tg/core/state.(*PlainStateReader).ReadAccountStorage (182 samples, 0.03%)</title><rect x="487.0" y="341" width="0.3" height="15.0" fill="rgb(242,117,9)" rx="2" ry="2" />
<text  x="489.97" y="351.5" ></text>
</g>
<g >
<title>tg/common/etl.writeToDisk (247 samples, 0.04%)</title><rect x="144.2" y="661" width="0.4" height="15.0" fill="rgb(232,59,20)" rx="2" ry="2" />
<text  x="147.19" y="671.5" ></text>
</g>
<g >
<title>tg/core/state.(*PlainStateReader).ReadAccountCodeSize (279 samples, 0.04%)</title><rect x="500.4" y="437" width="0.5" height="15.0" fill="rgb(209,30,14)" rx="2" ry="2" />
<text  x="503.42" y="447.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).getVal1 (182 samples, 0.03%)</title><rect x="341.2" y="453" width="0.3" height="15.0" fill="rgb(233,84,12)" rx="2" ry="2" />
<text  x="344.23" y="463.5" ></text>
</g>
<g >
<title>tg/ethdb.(*LmdbCursor).set (491 samples, 0.07%)</title><rect x="525.8" y="501" width="0.9" height="15.0" fill="rgb(225,55,2)" rx="2" ry="2" />
<text  x="528.82" y="511.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (138 samples, 0.02%)</title><rect x="971.4" y="469" width="0.2" height="15.0" fill="rgb(231,1,50)" rx="2" ry="2" />
<text  x="974.37" y="479.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (83 samples, 0.01%)</title><rect x="1096.9" y="501" width="0.2" height="15.0" fill="rgb(253,133,48)" rx="2" ry="2" />
<text  x="1099.94" y="511.5" ></text>
</g>
<g >
<title>sort.swapRange (62 samples, 0.01%)</title><rect x="190.5" y="213" width="0.1" height="15.0" fill="rgb(220,225,18)" rx="2" ry="2" />
<text  x="193.51" y="223.5" ></text>
</g>
<g >
<title>tg/core/vm.makeDup.func1 (203 samples, 0.03%)</title><rect x="469.9" y="533" width="0.3" height="15.0" fill="rgb(223,196,37)" rx="2" ry="2" />
<text  x="472.87" y="543.5" ></text>
</g>
<g >
<title>runtime.makeslice (179 samples, 0.03%)</title><rect x="1092.7" y="613" width="0.3" height="15.0" fill="rgb(228,95,23)" rx="2" ry="2" />
<text  x="1095.70" y="623.5" ></text>
</g>
<g >
<title>runtime.memmove (158 samples, 0.02%)</title><rect x="766.2" y="341" width="0.2" height="15.0" fill="rgb(223,115,28)" rx="2" ry="2" />
<text  x="769.16" y="351.5" ></text>
</g>
<g >
<title>tg/core/state.(*PlainStateReader).ReadAccountData (289 samples, 0.04%)</title><rect x="504.2" y="485" width="0.5" height="15.0" fill="rgb(221,86,44)" rx="2" ry="2" />
<text  x="507.21" y="495.5" ></text>
</g>
<g >
<title>sort.swapRange (80 samples, 0.01%)</title><rect x="868.6" y="261" width="0.1" height="15.0" fill="rgb(242,95,21)" rx="2" ry="2" />
<text  x="871.61" y="271.5" ></text>
</g>
<g >
<title>sort.quickSort (153 samples, 0.02%)</title><rect x="1028.7" y="421" width="0.2" height="15.0" fill="rgb(247,28,53)" rx="2" ry="2" />
<text  x="1031.66" y="431.5" ></text>
</g>
<g >
<title>runtime.mallocgc (61 samples, 0.01%)</title><rect x="176.7" y="565" width="0.1" height="15.0" fill="rgb(217,75,45)" rx="2" ry="2" />
<text  x="179.72" y="575.5" ></text>
</g>
<g >
<title>reflect.(*rtype).typeOff (73 samples, 0.01%)</title><rect x="199.7" y="341" width="0.1" height="15.0" fill="rgb(223,180,44)" rx="2" ry="2" />
<text  x="202.66" y="351.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (72 samples, 0.01%)</title><rect x="1123.7" y="485" width="0.1" height="15.0" fill="rgb(231,213,19)" rx="2" ry="2" />
<text  x="1126.69" y="495.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.keccakF1600 (92 samples, 0.01%)</title><rect x="1113.5" y="613" width="0.1" height="15.0" fill="rgb(240,132,24)" rx="2" ry="2" />
<text  x="1116.45" y="623.5" ></text>
</g>
<g >
<title>runtime.cgocall (1,330 samples, 0.19%)</title><rect x="289.9" y="469" width="2.2" height="15.0" fill="rgb(243,90,7)" rx="2" ry="2" />
<text  x="292.85" y="479.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).getVal0 (1,438 samples, 0.21%)</title><rect x="1043.8" y="629" width="2.5" height="15.0" fill="rgb(229,68,34)" rx="2" ry="2" />
<text  x="1046.84" y="639.5" ></text>
</g>
<g >
<title>runtime.growslice (192 samples, 0.03%)</title><rect x="408.8" y="469" width="0.4" height="15.0" fill="rgb(238,144,8)" rx="2" ry="2" />
<text  x="411.84" y="479.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (1,952 samples, 0.28%)</title><rect x="435.8" y="373" width="3.3" height="15.0" fill="rgb(242,188,33)" rx="2" ry="2" />
<text  x="438.80" y="383.5" ></text>
</g>
<g >
<title>tg/params.isForked (213 samples, 0.03%)</title><rect x="663.2" y="677" width="0.4" height="15.0" fill="rgb(214,209,48)" rx="2" ry="2" />
<text  x="666.21" y="687.5" ></text>
</g>
<g >
<title>tg/common/etl.(*Collector).Collect (648 samples, 0.09%)</title><rect x="1039.9" y="629" width="1.1" height="15.0" fill="rgb(242,74,32)" rx="2" ry="2" />
<text  x="1042.93" y="639.5" ></text>
</g>
<g >
<title>runtime.assertI2I2 (60 samples, 0.01%)</title><rect x="816.7" y="613" width="0.1" height="15.0" fill="rgb(220,108,7)" rx="2" ry="2" />
<text  x="819.73" y="623.5" ></text>
</g>
<g >
<title>runtime.findrunnable (763 samples, 0.11%)</title><rect x="97.8" y="805" width="1.3" height="15.0" fill="rgb(238,174,49)" rx="2" ry="2" />
<text  x="100.79" y="815.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*Encoder).mustEncode (1,093 samples, 0.16%)</title><rect x="193.9" y="517" width="1.9" height="15.0" fill="rgb(230,156,46)" rx="2" ry="2" />
<text  x="196.90" y="527.5" ></text>
</g>
<g >
<title>tg/core/vm.run (5,574 samples, 0.80%)</title><rect x="600.9" y="565" width="9.5" height="15.0" fill="rgb(230,91,7)" rx="2" ry="2" />
<text  x="603.95" y="575.5" ></text>
</g>
<g >
<title>runtime.mallocgc (78 samples, 0.01%)</title><rect x="1099.6" y="533" width="0.1" height="15.0" fill="rgb(238,200,40)" rx="2" ry="2" />
<text  x="1102.60" y="543.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).GetBalance (188 samples, 0.03%)</title><rect x="241.5" y="613" width="0.3" height="15.0" fill="rgb(249,87,27)" rx="2" ry="2" />
<text  x="244.45" y="623.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.decByteSlice (110 samples, 0.02%)</title><rect x="145.3" y="549" width="0.2" height="15.0" fill="rgb(215,202,25)" rx="2" ry="2" />
<text  x="148.28" y="559.5" ></text>
</g>
<g >
<title>tg/ethdb.(*LmdbCursor).Next (90 samples, 0.01%)</title><rect x="951.6" y="597" width="0.2" height="15.0" fill="rgb(212,219,28)" rx="2" ry="2" />
<text  x="954.64" y="607.5" ></text>
</g>
<g >
<title>sort.Search (187 samples, 0.03%)</title><rect x="1121.0" y="645" width="0.4" height="15.0" fill="rgb(242,175,7)" rx="2" ry="2" />
<text  x="1124.04" y="655.5" ></text>
</g>
<g >
<title>aeshashbody (122 samples, 0.02%)</title><rect x="980.7" y="549" width="0.2" height="15.0" fill="rgb(220,19,49)" rx="2" ry="2" />
<text  x="983.73" y="559.5" ></text>
</g>
<g >
<title>tg/crypto/bn256/cloudflare.(*gfP12).Square (139 samples, 0.02%)</title><rect x="502.9" y="293" width="0.2" height="15.0" fill="rgb(235,188,12)" rx="2" ry="2" />
<text  x="505.88" y="303.5" ></text>
</g>
<g >
<title>tg/core/types.rlpHash (92 samples, 0.01%)</title><rect x="1128.4" y="773" width="0.2" height="15.0" fill="rgb(236,62,6)" rx="2" ry="2" />
<text  x="1131.42" y="783.5" ></text>
</g>
<g >
<title>runtime.mallocgc (67 samples, 0.01%)</title><rect x="610.2" y="517" width="0.1" height="15.0" fill="rgb(223,74,35)" rx="2" ry="2" />
<text  x="613.17" y="527.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (156 samples, 0.02%)</title><rect x="1011.8" y="533" width="0.3" height="15.0" fill="rgb(218,82,2)" rx="2" ry="2" />
<text  x="1014.84" y="543.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.NewBitmap (97 samples, 0.01%)</title><rect x="1031.8" y="629" width="0.2" height="15.0" fill="rgb(226,211,19)" rx="2" ry="2" />
<text  x="1034.85" y="639.5" ></text>
</g>
<g >
<title>runtime.systemstack (82 samples, 0.01%)</title><rect x="1176.4" y="773" width="0.1" height="15.0" fill="rgb(219,33,54)" rx="2" ry="2" />
<text  x="1179.40" y="783.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Txn).Commit (302 samples, 0.04%)</title><rect x="795.7" y="677" width="0.5" height="15.0" fill="rgb(238,222,41)" rx="2" ry="2" />
<text  x="798.69" y="687.5" ></text>
</g>
<g >
<title>runtime.mallocgc (334 samples, 0.05%)</title><rect x="860.6" y="517" width="0.6" height="15.0" fill="rgb(246,23,53)" rx="2" ry="2" />
<text  x="863.62" y="527.5" ></text>
</g>
<g >
<title>sort.rotate (114 samples, 0.02%)</title><rect x="989.6" y="389" width="0.2" height="15.0" fill="rgb(208,3,35)" rx="2" ry="2" />
<text  x="992.65" y="399.5" ></text>
</g>
<g >
<title>cmpbody (128 samples, 0.02%)</title><rect x="1069.5" y="469" width="0.2" height="15.0" fill="rgb(253,184,37)" rx="2" ry="2" />
<text  x="1072.45" y="479.5" ></text>
</g>
<g >
<title>runtime.memmove (202 samples, 0.03%)</title><rect x="807.3" y="533" width="0.3" height="15.0" fill="rgb(223,130,50)" rx="2" ry="2" />
<text  x="810.27" y="543.5" ></text>
</g>
<g >
<title>tg/rlp.(*Stream).Decode (338 samples, 0.05%)</title><rect x="231.7" y="693" width="0.6" height="15.0" fill="rgb(239,18,40)" rx="2" ry="2" />
<text  x="234.71" y="703.5" ></text>
</g>
<g >
<title>sort.quickSort (756 samples, 0.11%)</title><rect x="1027.6" y="517" width="1.3" height="15.0" fill="rgb(208,9,45)" rx="2" ry="2" />
<text  x="1030.64" y="527.5" ></text>
</g>
<g >
<title>runtime.lock2 (65 samples, 0.01%)</title><rect x="833.3" y="437" width="0.1" height="15.0" fill="rgb(243,109,27)" rx="2" ry="2" />
<text  x="836.33" y="447.5" ></text>
</g>
<g >
<title>tg/core/vm.opStaticCall (81 samples, 0.01%)</title><rect x="480.6" y="341" width="0.2" height="15.0" fill="rgb(206,50,24)" rx="2" ry="2" />
<text  x="483.64" y="351.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*BTree).Get (213 samples, 0.03%)</title><rect x="340.1" y="501" width="0.4" height="15.0" fill="rgb(218,125,45)" rx="2" ry="2" />
<text  x="343.13" y="511.5" ></text>
</g>
<g >
<title>tg/ethdb.(*mutation).Get (1,711 samples, 0.25%)</title><rect x="401.5" y="389" width="2.9" height="15.0" fill="rgb(218,16,48)" rx="2" ry="2" />
<text  x="404.46" y="399.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).Call (60 samples, 0.01%)</title><rect x="484.5" y="69" width="0.1" height="15.0" fill="rgb(213,63,42)" rx="2" ry="2" />
<text  x="487.49" y="79.5" ></text>
</g>
<g >
<title>cmpbody (145 samples, 0.02%)</title><rect x="1072.8" y="373" width="0.3" height="15.0" fill="rgb(243,144,29)" rx="2" ry="2" />
<text  x="1075.84" y="383.5" ></text>
</g>
<g >
<title>runtime.mallocgc (99 samples, 0.01%)</title><rect x="261.6" y="533" width="0.1" height="15.0" fill="rgb(235,39,28)" rx="2" ry="2" />
<text  x="264.57" y="543.5" ></text>
</g>
<g >
<title>tg/common/etl.(*sortableBuffer).Swap (238 samples, 0.03%)</title><rect x="180.9" y="405" width="0.4" height="15.0" fill="rgb(240,107,54)" rx="2" ry="2" />
<text  x="183.93" y="415.5" ></text>
</g>
<g >
<title>runtime.newobject (354 samples, 0.05%)</title><rect x="690.6" y="629" width="0.6" height="15.0" fill="rgb(250,15,5)" rx="2" ry="2" />
<text  x="693.63" y="639.5" ></text>
</g>
<g >
<title>sync.(*Once).Do (1,082 samples, 0.16%)</title><rect x="127.3" y="869" width="1.9" height="15.0" fill="rgb(243,81,31)" rx="2" ry="2" />
<text  x="130.32" y="879.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.beginTxn.func1 (3,908 samples, 0.56%)</title><rect x="899.7" y="485" width="6.6" height="15.0" fill="rgb(216,74,10)" rx="2" ry="2" />
<text  x="902.67" y="495.5" ></text>
</g>
<g >
<title>tg/core/state.(*stateObject).Code (2,742 samples, 0.39%)</title><rect x="287.8" y="613" width="4.7" height="15.0" fill="rgb(219,170,48)" rx="2" ry="2" />
<text  x="290.81" y="623.5" ></text>
</g>
<g >
<title>runtime.largeAlloc (65 samples, 0.01%)</title><rect x="1180.2" y="741" width="0.1" height="15.0" fill="rgb(207,39,31)" rx="2" ry="2" />
<text  x="1183.23" y="751.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (80 samples, 0.01%)</title><rect x="895.4" y="437" width="0.1" height="15.0" fill="rgb(231,52,35)" rx="2" ry="2" />
<text  x="898.37" y="447.5" ></text>
</g>
<g >
<title>sort.rotate (253 samples, 0.04%)</title><rect x="181.6" y="421" width="0.4" height="15.0" fill="rgb(229,75,9)" rx="2" ry="2" />
<text  x="184.61" y="431.5" ></text>
</g>
<g >
<title>sync.(*RWMutex).Lock (64 samples, 0.01%)</title><rect x="1121.9" y="709" width="0.2" height="15.0" fill="rgb(246,221,0)" rx="2" ry="2" />
<text  x="1124.95" y="719.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*cborDecDriver).decLen (94 samples, 0.01%)</title><rect x="971.8" y="533" width="0.2" height="15.0" fill="rgb(208,148,46)" rx="2" ry="2" />
<text  x="974.83" y="543.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.keccakF1600 (182 samples, 0.03%)</title><rect x="1130.7" y="741" width="0.3" height="15.0" fill="rgb(225,108,16)" rx="2" ry="2" />
<text  x="1133.73" y="751.5" ></text>
</g>
<g >
<title>github.com/holiman/uint256.udivremKnuth (119 samples, 0.02%)</title><rect x="521.2" y="549" width="0.2" height="15.0" fill="rgb(249,130,45)" rx="2" ry="2" />
<text  x="524.21" y="559.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find (65 samples, 0.01%)</title><rect x="323.2" y="405" width="0.1" height="15.0" fill="rgb(231,194,13)" rx="2" ry="2" />
<text  x="326.18" y="415.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find.func1 (299 samples, 0.04%)</title><rect x="510.5" y="325" width="0.5" height="15.0" fill="rgb(246,52,5)" rx="2" ry="2" />
<text  x="513.48" y="335.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find (240 samples, 0.03%)</title><rect x="1120.5" y="645" width="0.5" height="15.0" fill="rgb(245,93,35)" rx="2" ry="2" />
<text  x="1123.55" y="655.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVMInterpreter).Run (86 samples, 0.01%)</title><rect x="485.9" y="229" width="0.2" height="15.0" fill="rgb(252,142,14)" rx="2" ry="2" />
<text  x="488.92" y="239.5" ></text>
</g>
<g >
<title>tg/eth/stagedsync.promoteHistory (28,821 samples, 4.15%)</title><rect x="1057.9" y="725" width="48.9" height="15.0" fill="rgb(218,210,30)" rx="2" ry="2" />
<text  x="1060.89" y="735.5" >tg/e..</text>
</g>
<g >
<title>tg/ethdb.(*TxDb).Put (218 samples, 0.03%)</title><rect x="960.6" y="645" width="0.4" height="15.0" fill="rgb(208,117,17)" rx="2" ry="2" />
<text  x="963.64" y="655.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc.func1 (539 samples, 0.08%)</title><rect x="153.4" y="389" width="0.9" height="15.0" fill="rgb(246,195,48)" rx="2" ry="2" />
<text  x="156.36" y="399.5" ></text>
</g>
<g >
<title>runtime.futex (273 samples, 0.04%)</title><rect x="122.6" y="709" width="0.5" height="15.0" fill="rgb(244,3,22)" rx="2" ry="2" />
<text  x="125.64" y="719.5" ></text>
</g>
<g >
<title>tg/core/state.(*PlainStateReader).ReadAccountStorage (5,287 samples, 0.76%)</title><rect x="435.4" y="469" width="9.0" height="15.0" fill="rgb(232,45,11)" rx="2" ry="2" />
<text  x="438.41" y="479.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (210 samples, 0.03%)</title><rect x="235.9" y="597" width="0.3" height="15.0" fill="rgb(232,165,42)" rx="2" ry="2" />
<text  x="238.87" y="607.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring/roaring64.(*Bitmap).WriteTo (96 samples, 0.01%)</title><rect x="1102.9" y="597" width="0.2" height="15.0" fill="rgb(223,9,18)" rx="2" ry="2" />
<text  x="1105.90" y="607.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).Get (1,157 samples, 0.17%)</title><rect x="1084.9" y="645" width="2.0" height="15.0" fill="rgb(251,136,47)" rx="2" ry="2" />
<text  x="1087.94" y="655.5" ></text>
</g>
<g >
<title>cmpbody (78 samples, 0.01%)</title><rect x="989.5" y="373" width="0.1" height="15.0" fill="rgb(232,216,20)" rx="2" ry="2" />
<text  x="992.51" y="383.5" ></text>
</g>
<g >
<title>runtime.newobject (75 samples, 0.01%)</title><rect x="1134.2" y="789" width="0.1" height="15.0" fill="rgb(232,170,16)" rx="2" ry="2" />
<text  x="1137.16" y="799.5" ></text>
</g>
<g >
<title>runtime.convT2E (157 samples, 0.02%)</title><rect x="167.9" y="629" width="0.3" height="15.0" fill="rgb(215,120,4)" rx="2" ry="2" />
<text  x="170.93" y="639.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (64 samples, 0.01%)</title><rect x="631.7" y="533" width="0.1" height="15.0" fill="rgb(209,125,33)" rx="2" ry="2" />
<text  x="634.70" y="543.5" ></text>
</g>
<g >
<title>runtime.greyobject (600 samples, 0.09%)</title><rect x="79.0" y="789" width="1.1" height="15.0" fill="rgb(254,16,10)" rx="2" ry="2" />
<text  x="82.05" y="799.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (85 samples, 0.01%)</title><rect x="122.1" y="789" width="0.2" height="15.0" fill="rgb(243,209,0)" rx="2" ry="2" />
<text  x="125.11" y="799.5" ></text>
</g>
<g >
<title>tg/eth/stagedsync.getExtractFunc.func1 (58,979 samples, 8.49%)</title><rect x="851.5" y="581" width="100.1" height="15.0" fill="rgb(205,43,19)" rx="2" ry="2" />
<text  x="854.48" y="591.5" >tg/eth/stage..</text>
</g>
<g >
<title>tg/core/vm.opDelegateCall (166 samples, 0.02%)</title><rect x="384.9" y="341" width="0.3" height="15.0" fill="rgb(226,204,7)" rx="2" ry="2" />
<text  x="387.90" y="351.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (1,008 samples, 0.15%)</title><rect x="401.5" y="357" width="1.7" height="15.0" fill="rgb(232,167,31)" rx="2" ry="2" />
<text  x="404.46" y="367.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).Create2 (159 samples, 0.02%)</title><rect x="409.7" y="517" width="0.3" height="15.0" fill="rgb(237,228,13)" rx="2" ry="2" />
<text  x="412.68" y="527.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find.func1 (1,584 samples, 0.23%)</title><rect x="714.6" y="517" width="2.7" height="15.0" fill="rgb(251,5,37)" rx="2" ry="2" />
<text  x="717.61" y="527.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).DelegateCall (115 samples, 0.02%)</title><rect x="501.7" y="389" width="0.2" height="15.0" fill="rgb(221,108,48)" rx="2" ry="2" />
<text  x="504.66" y="399.5" ></text>
</g>
<g >
<title>bytes.Compare (111 samples, 0.02%)</title><rect x="1026.4" y="549" width="0.2" height="15.0" fill="rgb(227,204,43)" rx="2" ry="2" />
<text  x="1029.41" y="559.5" ></text>
</g>
<g >
<title>tg/rlp.makePtrWriter.func1 (239 samples, 0.03%)</title><rect x="1110.0" y="533" width="0.4" height="15.0" fill="rgb(243,0,48)" rx="2" ry="2" />
<text  x="1113.01" y="543.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (139 samples, 0.02%)</title><rect x="1181.4" y="501" width="0.3" height="15.0" fill="rgb(249,84,24)" rx="2" ry="2" />
<text  x="1184.45" y="511.5" ></text>
</g>
<g >
<title>sort.doPivot (201 samples, 0.03%)</title><rect x="1027.0" y="533" width="0.3" height="15.0" fill="rgb(242,99,7)" rx="2" ry="2" />
<text  x="1030.01" y="543.5" ></text>
</g>
<g >
<title>tg/ethdb.(*TxDb).Get (124 samples, 0.02%)</title><rect x="504.9" y="453" width="0.2" height="15.0" fill="rgb(253,81,3)" rx="2" ry="2" />
<text  x="507.89" y="463.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.(*Bitmap).ReadFrom (519 samples, 0.07%)</title><rect x="1048.5" y="645" width="0.8" height="15.0" fill="rgb(209,68,39)" rx="2" ry="2" />
<text  x="1051.45" y="655.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find (165 samples, 0.02%)</title><rect x="320.8" y="437" width="0.3" height="15.0" fill="rgb(224,31,11)" rx="2" ry="2" />
<text  x="323.84" y="447.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).Get (336 samples, 0.05%)</title><rect x="797.5" y="549" width="0.6" height="15.0" fill="rgb(224,58,21)" rx="2" ry="2" />
<text  x="800.50" y="559.5" ></text>
</g>
<g >
<title>container/heap.Push (197 samples, 0.03%)</title><rect x="816.0" y="645" width="0.4" height="15.0" fill="rgb(249,149,40)" rx="2" ry="2" />
<text  x="819.04" y="655.5" ></text>
</g>
<g >
<title>runtime.memmove (176 samples, 0.03%)</title><rect x="985.6" y="533" width="0.3" height="15.0" fill="rgb(243,157,21)" rx="2" ry="2" />
<text  x="988.64" y="543.5" ></text>
</g>
<g >
<title>tg/common/changeset.FromDBFormat.func1 (308 samples, 0.04%)</title><rect x="852.8" y="565" width="0.5" height="15.0" fill="rgb(210,191,36)" rx="2" ry="2" />
<text  x="855.80" y="575.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.(*state).permute (97 samples, 0.01%)</title><rect x="606.3" y="485" width="0.2" height="15.0" fill="rgb(228,53,22)" rx="2" ry="2" />
<text  x="609.29" y="495.5" ></text>
</g>
<g >
<title>tg/ethdb.(*ObjectDatabase).Get.func1 (8,631 samples, 1.24%)</title><rect x="834.3" y="533" width="14.7" height="15.0" fill="rgb(216,84,33)" rx="2" ry="2" />
<text  x="837.30" y="543.5" ></text>
</g>
<g >
<title>tg/core/vm.opExtCodeSize (1,394 samples, 0.20%)</title><rect x="498.5" y="469" width="2.4" height="15.0" fill="rgb(226,29,0)" rx="2" ry="2" />
<text  x="501.53" y="479.5" ></text>
</g>
<g >
<title>tg/ethdb.(*mutation).Get (102 samples, 0.01%)</title><rect x="410.3" y="453" width="0.1" height="15.0" fill="rgb(242,108,44)" rx="2" ry="2" />
<text  x="413.26" y="463.5" ></text>
</g>
<g >
<title>tg/core/vm.run (65 samples, 0.01%)</title><rect x="416.1" y="309" width="0.2" height="15.0" fill="rgb(226,126,8)" rx="2" ry="2" />
<text  x="419.15" y="319.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (168 samples, 0.02%)</title><rect x="500.5" y="341" width="0.3" height="15.0" fill="rgb(225,206,28)" rx="2" ry="2" />
<text  x="503.47" y="351.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (87 samples, 0.01%)</title><rect x="293.3" y="533" width="0.2" height="15.0" fill="rgb(222,185,23)" rx="2" ry="2" />
<text  x="296.34" y="543.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (204 samples, 0.03%)</title><rect x="500.5" y="357" width="0.3" height="15.0" fill="rgb(206,184,39)" rx="2" ry="2" />
<text  x="503.46" y="367.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Txn).bytes (102 samples, 0.01%)</title><rect x="292.2" y="533" width="0.2" height="15.0" fill="rgb(228,139,14)" rx="2" ry="2" />
<text  x="295.21" y="543.5" ></text>
</g>
<g >
<title>bytes.Compare (275 samples, 0.04%)</title><rect x="187.8" y="277" width="0.5" height="15.0" fill="rgb(233,200,12)" rx="2" ry="2" />
<text  x="190.85" y="287.5" ></text>
</g>
<g >
<title>tg/p2p/rlpx.(*Conn).Read (2,575 samples, 0.37%)</title><rect x="1176.1" y="837" width="4.3" height="15.0" fill="rgb(205,10,32)" rx="2" ry="2" />
<text  x="1179.07" y="847.5" ></text>
</g>
<g >
<title>tg/common.Stopped (61 samples, 0.01%)</title><rect x="976.8" y="613" width="0.1" height="15.0" fill="rgb(244,165,35)" rx="2" ry="2" />
<text  x="979.80" y="623.5" ></text>
</g>
<g >
<title>reflect.Value.Field (82 samples, 0.01%)</title><rect x="1122.9" y="597" width="0.1" height="15.0" fill="rgb(222,193,22)" rx="2" ry="2" />
<text  x="1125.85" y="607.5" ></text>
</g>
<g >
<title>runtime.cgocall (18,516 samples, 2.66%)</title><rect x="1134.7" y="757" width="31.4" height="15.0" fill="rgb(241,202,38)" rx="2" ry="2" />
<text  x="1137.69" y="767.5" >ru..</text>
</g>
<g >
<title>cmpbody (161 samples, 0.02%)</title><rect x="184.3" y="341" width="0.2" height="15.0" fill="rgb(223,107,36)" rx="2" ry="2" />
<text  x="187.26" y="351.5" ></text>
</g>
<g >
<title>github.com/holiman/uint256.udivrem (79 samples, 0.01%)</title><rect x="396.0" y="437" width="0.2" height="15.0" fill="rgb(248,83,46)" rx="2" ry="2" />
<text  x="399.05" y="447.5" ></text>
</g>
<g >
<title>tg/rlp.makeStructDecoder.func1 (2,240 samples, 0.32%)</title><rect x="1182.5" y="565" width="3.8" height="15.0" fill="rgb(240,228,22)" rx="2" ry="2" />
<text  x="1185.47" y="575.5" ></text>
</g>
<g >
<title>runtime.makeslice (78 samples, 0.01%)</title><rect x="1081.1" y="597" width="0.2" height="15.0" fill="rgb(205,202,38)" rx="2" ry="2" />
<text  x="1084.13" y="607.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.(*state).Read (595 samples, 0.09%)</title><rect x="399.5" y="453" width="1.0" height="15.0" fill="rgb(210,14,36)" rx="2" ry="2" />
<text  x="402.48" y="463.5" ></text>
</g>
<g >
<title>runtime.mapiternext (272 samples, 0.04%)</title><rect x="639.8" y="629" width="0.5" height="15.0" fill="rgb(208,225,43)" rx="2" ry="2" />
<text  x="642.85" y="639.5" ></text>
</g>
<g >
<title>tg/core/vm.opJumpi (59 samples, 0.01%)</title><rect x="516.2" y="469" width="0.1" height="15.0" fill="rgb(237,189,0)" rx="2" ry="2" />
<text  x="519.21" y="479.5" ></text>
</g>
<g >
<title>tg/common.ReturnHasherToPool (477 samples, 0.07%)</title><rect x="1011.5" y="565" width="0.8" height="15.0" fill="rgb(207,14,26)" rx="2" ry="2" />
<text  x="1014.47" y="575.5" ></text>
</g>
<g >
<title>runtime.cgocall (2,832 samples, 0.41%)</title><rect x="171.6" y="549" width="4.8" height="15.0" fill="rgb(220,9,49)" rx="2" ry="2" />
<text  x="174.58" y="559.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).Del (102 samples, 0.01%)</title><rect x="797.3" y="549" width="0.2" height="15.0" fill="rgb(212,41,0)" rx="2" ry="2" />
<text  x="800.32" y="559.5" ></text>
</g>
<g >
<title>runtime.netpoll (1,312 samples, 0.19%)</title><rect x="109.3" y="805" width="2.2" height="15.0" fill="rgb(231,178,36)" rx="2" ry="2" />
<text  x="112.25" y="815.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).iterate (11,004 samples, 1.58%)</title><rect x="796.2" y="661" width="18.7" height="15.0" fill="rgb(251,90,13)" rx="2" ry="2" />
<text  x="799.21" y="671.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.(*state).padAndPermute (127 samples, 0.02%)</title><rect x="1134.4" y="773" width="0.2" height="15.0" fill="rgb(241,182,9)" rx="2" ry="2" />
<text  x="1137.35" y="783.5" ></text>
</g>
<g >
<title>tg/core.Transfer (1,218 samples, 0.18%)</title><rect x="268.2" y="629" width="2.1" height="15.0" fill="rgb(226,91,7)" rx="2" ry="2" />
<text  x="271.20" y="639.5" ></text>
</g>
<g >
<title>sort.swapRange (97 samples, 0.01%)</title><rect x="866.9" y="325" width="0.2" height="15.0" fill="rgb(248,68,35)" rx="2" ry="2" />
<text  x="869.92" y="335.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (133 samples, 0.02%)</title><rect x="396.4" y="357" width="0.2" height="15.0" fill="rgb(249,75,23)" rx="2" ry="2" />
<text  x="399.39" y="367.5" ></text>
</g>
<g >
<title>sort.stable (4,841 samples, 0.70%)</title><rect x="986.0" y="533" width="8.3" height="15.0" fill="rgb(243,98,19)" rx="2" ry="2" />
<text  x="989.04" y="543.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).getVal1 (1,482 samples, 0.21%)</title><rect x="283.2" y="517" width="2.5" height="15.0" fill="rgb(233,155,10)" rx="2" ry="2" />
<text  x="286.18" y="527.5" ></text>
</g>
<g >
<title>tg/eth/stagedsync.DefaultStages.func4.1 (574 samples, 0.08%)</title><rect x="232.5" y="757" width="1.0" height="15.0" fill="rgb(218,77,41)" rx="2" ry="2" />
<text  x="235.49" y="767.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).GetCodeSize (1,392 samples, 0.20%)</title><rect x="498.5" y="453" width="2.4" height="15.0" fill="rgb(224,215,51)" rx="2" ry="2" />
<text  x="501.53" y="463.5" ></text>
</g>
<g >
<title>sort.Search (68 samples, 0.01%)</title><rect x="499.9" y="325" width="0.1" height="15.0" fill="rgb(208,51,6)" rx="2" ry="2" />
<text  x="502.86" y="335.5" ></text>
</g>
<g >
<title>sort.rotate (150 samples, 0.02%)</title><rect x="865.7" y="389" width="0.3" height="15.0" fill="rgb(210,134,52)" rx="2" ry="2" />
<text  x="868.70" y="399.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb._Cfunc_mdb_cursor_del (97 samples, 0.01%)</title><rect x="797.3" y="517" width="0.2" height="15.0" fill="rgb(241,164,16)" rx="2" ry="2" />
<text  x="800.32" y="527.5" ></text>
</g>
<g >
<title>tg/core/state.(*stateObject).SetBalance (405 samples, 0.06%)</title><rect x="269.6" y="581" width="0.7" height="15.0" fill="rgb(209,163,47)" rx="2" ry="2" />
<text  x="272.58" y="591.5" ></text>
</g>
<g >
<title>tg/core/state.(*PlainStateReader).ReadAccountStorage (125 samples, 0.02%)</title><rect x="362.6" y="469" width="0.3" height="15.0" fill="rgb(250,225,48)" rx="2" ry="2" />
<text  x="365.64" y="479.5" ></text>
</g>
<g >
<title>runtime.mallocgc (920 samples, 0.13%)</title><rect x="640.5" y="613" width="1.6" height="15.0" fill="rgb(229,113,4)" rx="2" ry="2" />
<text  x="643.52" y="623.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (140 samples, 0.02%)</title><rect x="235.9" y="565" width="0.2" height="15.0" fill="rgb(223,60,6)" rx="2" ry="2" />
<text  x="238.87" y="575.5" ></text>
</g>
<g >
<title>tg/rlp.EncodeToBytes (4,133 samples, 0.59%)</title><rect x="762.0" y="629" width="7.0" height="15.0" fill="rgb(249,139,10)" rx="2" ry="2" />
<text  x="765.00" y="639.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (73 samples, 0.01%)</title><rect x="595.8" y="501" width="0.1" height="15.0" fill="rgb(217,189,26)" rx="2" ry="2" />
<text  x="598.78" y="511.5" ></text>
</g>
<g >
<title>runtime.convTslice (124 samples, 0.02%)</title><rect x="1107.6" y="693" width="0.2" height="15.0" fill="rgb(242,159,41)" rx="2" ry="2" />
<text  x="1110.59" y="703.5" ></text>
</g>
<g >
<title>net.(*netFD).Read (533 samples, 0.08%)</title><rect x="1176.6" y="773" width="0.9" height="15.0" fill="rgb(240,163,29)" rx="2" ry="2" />
<text  x="1179.56" y="783.5" ></text>
</g>
<g >
<title>tg/core/vm.run (493 samples, 0.07%)</title><rect x="450.7" y="437" width="0.8" height="15.0" fill="rgb(228,217,0)" rx="2" ry="2" />
<text  x="453.69" y="447.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVMInterpreter).Run (74 samples, 0.01%)</title><rect x="405.6" y="357" width="0.1" height="15.0" fill="rgb(242,73,24)" rx="2" ry="2" />
<text  x="408.58" y="367.5" ></text>
</g>
<g >
<title>tg/core/vm.run (350 samples, 0.05%)</title><rect x="513.9" y="437" width="0.6" height="15.0" fill="rgb(246,36,44)" rx="2" ry="2" />
<text  x="516.88" y="447.5" ></text>
</g>
<g >
<title>runtime.mallocgc (100 samples, 0.01%)</title><rect x="1039.6" y="613" width="0.2" height="15.0" fill="rgb(207,179,40)" rx="2" ry="2" />
<text  x="1042.59" y="623.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (71 samples, 0.01%)</title><rect x="330.3" y="485" width="0.2" height="15.0" fill="rgb(252,32,51)" rx="2" ry="2" />
<text  x="333.33" y="495.5" ></text>
</g>
<g >
<title>cmpbody (63 samples, 0.01%)</title><rect x="986.4" y="485" width="0.1" height="15.0" fill="rgb(227,112,48)" rx="2" ry="2" />
<text  x="989.44" y="495.5" ></text>
</g>
<g >
<title>sort.Search (195 samples, 0.03%)</title><rect x="499.5" y="309" width="0.3" height="15.0" fill="rgb(236,18,7)" rx="2" ry="2" />
<text  x="502.52" y="319.5" ></text>
</g>
<g >
<title>runtime.findrunnable (138 samples, 0.02%)</title><rect x="95.9" y="821" width="0.2" height="15.0" fill="rgb(250,116,50)" rx="2" ry="2" />
<text  x="98.88" y="831.5" ></text>
</g>
<g >
<title>tg/core/vm.run (2,823 samples, 0.41%)</title><rect x="447.3" y="501" width="4.8" height="15.0" fill="rgb(252,211,34)" rx="2" ry="2" />
<text  x="450.26" y="511.5" ></text>
</g>
<g >
<title>github.com/holiman/uint256.(*Int).ToBig (328 samples, 0.05%)</title><rect x="240.3" y="613" width="0.6" height="15.0" fill="rgb(253,49,47)" rx="2" ry="2" />
<text  x="243.35" y="623.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*Encoder).Encode (184 samples, 0.03%)</title><rect x="144.2" y="645" width="0.3" height="15.0" fill="rgb(231,180,33)" rx="2" ry="2" />
<text  x="147.20" y="655.5" ></text>
</g>
<g >
<title>runtime.cgocall (132 samples, 0.02%)</title><rect x="230.5" y="597" width="0.2" height="15.0" fill="rgb(230,165,5)" rx="2" ry="2" />
<text  x="233.50" y="607.5" ></text>
</g>
<g >
<title>tg/core/rawdb.ReadTransactions (4,065 samples, 0.59%)</title><rect x="215.1" y="613" width="6.9" height="15.0" fill="rgb(237,25,27)" rx="2" ry="2" />
<text  x="218.09" y="623.5" ></text>
</g>
<g >
<title>bytes.Compare (114 samples, 0.02%)</title><rect x="991.5" y="309" width="0.2" height="15.0" fill="rgb(254,108,0)" rx="2" ry="2" />
<text  x="994.48" y="319.5" ></text>
</g>
<g >
<title>tg/rlp.cachedDecoder (60 samples, 0.01%)</title><rect x="233.1" y="469" width="0.1" height="15.0" fill="rgb(226,126,14)" rx="2" ry="2" />
<text  x="236.08" y="479.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find (134 samples, 0.02%)</title><rect x="525.5" y="485" width="0.2" height="15.0" fill="rgb(236,206,40)" rx="2" ry="2" />
<text  x="528.48" y="495.5" ></text>
</g>
<g >
<title>tg/core/vm.opCall (310 samples, 0.04%)</title><rect x="484.4" y="277" width="0.5" height="15.0" fill="rgb(249,116,25)" rx="2" ry="2" />
<text  x="487.38" y="287.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (224 samples, 0.03%)</title><rect x="500.5" y="373" width="0.3" height="15.0" fill="rgb(207,121,1)" rx="2" ry="2" />
<text  x="503.46" y="383.5" ></text>
</g>
<g >
<title>runtime.mallocgc (145 samples, 0.02%)</title><rect x="148.6" y="581" width="0.2" height="15.0" fill="rgb(242,102,3)" rx="2" ry="2" />
<text  x="151.57" y="591.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*BTree).Get (153 samples, 0.02%)</title><rect x="395.2" y="309" width="0.3" height="15.0" fill="rgb(210,211,52)" rx="2" ry="2" />
<text  x="398.19" y="319.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVMInterpreter).Run (246 samples, 0.04%)</title><rect x="604.0" y="357" width="0.4" height="15.0" fill="rgb(228,190,39)" rx="2" ry="2" />
<text  x="606.97" y="367.5" ></text>
</g>
<g >
<title>runtime.newarray (112 samples, 0.02%)</title><rect x="860.1" y="485" width="0.2" height="15.0" fill="rgb(209,60,53)" rx="2" ry="2" />
<text  x="863.07" y="495.5" ></text>
</g>
<g >
<title>tg/core/vm.run (186 samples, 0.03%)</title><rect x="609.1" y="373" width="0.4" height="15.0" fill="rgb(249,184,6)" rx="2" ry="2" />
<text  x="612.15" y="383.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (201 samples, 0.03%)</title><rect x="197.1" y="405" width="0.3" height="15.0" fill="rgb(233,115,14)" rx="2" ry="2" />
<text  x="200.06" y="415.5" ></text>
</g>
<g >
<title>tg/core/vm.opPush1 (1,107 samples, 0.16%)</title><rect x="542.1" y="597" width="1.9" height="15.0" fill="rgb(245,116,28)" rx="2" ry="2" />
<text  x="545.09" y="607.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).free (2,194 samples, 0.32%)</title><rect x="26.4" y="757" width="3.7" height="15.0" fill="rgb(206,23,53)" rx="2" ry="2" />
<text  x="29.42" y="767.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.(*Bitmap).Add (636 samples, 0.09%)</title><rect x="1059.3" y="613" width="1.0" height="15.0" fill="rgb(205,94,1)" rx="2" ry="2" />
<text  x="1062.26" y="623.5" ></text>
</g>
<g >
<title>runtime.(*gcControllerState).enlistWorker (124 samples, 0.02%)</title><rect x="51.2" y="789" width="0.2" height="15.0" fill="rgb(222,126,33)" rx="2" ry="2" />
<text  x="54.18" y="799.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).Put (2,109 samples, 0.30%)</title><rect x="1103.2" y="549" width="3.6" height="15.0" fill="rgb(254,114,28)" rx="2" ry="2" />
<text  x="1106.18" y="559.5" ></text>
</g>
<g >
<title>math/big.(*Int).SetUint64 (81 samples, 0.01%)</title><rect x="239.6" y="629" width="0.2" height="15.0" fill="rgb(206,14,2)" rx="2" ry="2" />
<text  x="242.64" y="639.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVMInterpreter).Run (1,134 samples, 0.16%)</title><rect x="382.9" y="293" width="2.0" height="15.0" fill="rgb(228,146,42)" rx="2" ry="2" />
<text  x="385.94" y="303.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (335 samples, 0.05%)</title><rect x="658.0" y="629" width="0.5" height="15.0" fill="rgb(227,31,38)" rx="2" ry="2" />
<text  x="660.98" y="639.5" ></text>
</g>
<g >
<title>reflect.(*rtype).typeOff (64 samples, 0.01%)</title><rect x="742.1" y="581" width="0.1" height="15.0" fill="rgb(218,180,24)" rx="2" ry="2" />
<text  x="745.09" y="591.5" ></text>
</g>
<g >
<title>sort.doPivot (64 samples, 0.01%)</title><rect x="723.0" y="581" width="0.1" height="15.0" fill="rgb(251,35,36)" rx="2" ry="2" />
<text  x="726.01" y="591.5" ></text>
</g>
<g >
<title>runtime.largeAlloc (114 samples, 0.02%)</title><rect x="983.8" y="453" width="0.2" height="15.0" fill="rgb(236,206,32)" rx="2" ry="2" />
<text  x="986.81" y="463.5" ></text>
</g>
<g >
<title>runtime.nanotime (323 samples, 0.05%)</title><rect x="98.4" y="789" width="0.6" height="15.0" fill="rgb(207,215,2)" rx="2" ry="2" />
<text  x="101.40" y="799.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).iterate (64 samples, 0.01%)</title><rect x="1131.4" y="741" width="0.1" height="15.0" fill="rgb(207,174,32)" rx="2" ry="2" />
<text  x="1134.40" y="751.5" ></text>
</g>
<g >
<title>runtime.exitsyscallfast (91 samples, 0.01%)</title><rect x="931.9" y="389" width="0.2" height="15.0" fill="rgb(236,9,31)" rx="2" ry="2" />
<text  x="934.91" y="399.5" ></text>
</g>
<g >
<title>runtime.newobject (89 samples, 0.01%)</title><rect x="1034.2" y="597" width="0.2" height="15.0" fill="rgb(238,161,32)" rx="2" ry="2" />
<text  x="1037.21" y="607.5" ></text>
</g>
<g >
<title>tg/ethdb.(*TxDb).Get (60 samples, 0.01%)</title><rect x="370.1" y="437" width="0.1" height="15.0" fill="rgb(248,150,32)" rx="2" ry="2" />
<text  x="373.08" y="447.5" ></text>
</g>
<g >
<title>tg/eth/stagedsync.DefaultStages.func6.1 (84,603 samples, 12.18%)</title><rect x="814.9" y="757" width="143.7" height="15.0" fill="rgb(254,61,19)" rx="2" ry="2" />
<text  x="817.90" y="767.5" >tg/eth/stagedsync...</text>
</g>
<g >
<title>cmpbody (469 samples, 0.07%)</title><rect x="273.5" y="405" width="0.8" height="15.0" fill="rgb(216,150,20)" rx="2" ry="2" />
<text  x="276.51" y="415.5" ></text>
</g>
<g >
<title>runtime.memmove (69 samples, 0.01%)</title><rect x="1110.2" y="453" width="0.1" height="15.0" fill="rgb(240,86,21)" rx="2" ry="2" />
<text  x="1113.17" y="463.5" ></text>
</g>
<g >
<title>tg/core/rawdb.AppendReceipts (3,577 samples, 0.51%)</title><rect x="779.7" y="709" width="6.1" height="15.0" fill="rgb(225,108,47)" rx="2" ry="2" />
<text  x="782.71" y="719.5" ></text>
</g>
<g >
<title>runtime.convT64 (120 samples, 0.02%)</title><rect x="932.3" y="437" width="0.2" height="15.0" fill="rgb(222,192,18)" rx="2" ry="2" />
<text  x="935.28" y="447.5" ></text>
</g>
<g >
<title>sort.quickSort (648 samples, 0.09%)</title><rect x="722.2" y="629" width="1.1" height="15.0" fill="rgb(254,83,52)" rx="2" ry="2" />
<text  x="725.24" y="639.5" ></text>
</g>
<g >
<title>runtime.mallocgc (142 samples, 0.02%)</title><rect x="701.6" y="565" width="0.3" height="15.0" fill="rgb(210,20,11)" rx="2" ry="2" />
<text  x="704.62" y="575.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).StaticCall (563 samples, 0.08%)</title><rect x="492.9" y="453" width="0.9" height="15.0" fill="rgb(244,37,43)" rx="2" ry="2" />
<text  x="495.86" y="463.5" ></text>
</g>
<g >
<title>tg/ethdb.(*mutation).Commit.func1 (64 samples, 0.01%)</title><rect x="1131.4" y="773" width="0.1" height="15.0" fill="rgb(224,2,42)" rx="2" ry="2" />
<text  x="1134.40" y="783.5" ></text>
</g>
<g >
<title>runtime.exitsyscallfast (82 samples, 0.01%)</title><rect x="850.1" y="421" width="0.2" height="15.0" fill="rgb(238,168,22)" rx="2" ry="2" />
<text  x="853.12" y="431.5" ></text>
</g>
<g >
<title>tg/rlp.writeUint256NoPtr (499 samples, 0.07%)</title><rect x="211.3" y="405" width="0.9" height="15.0" fill="rgb(240,106,36)" rx="2" ry="2" />
<text  x="214.33" y="415.5" ></text>
</g>
<g >
<title>tg/rlp.(*encbuf).encode (131 samples, 0.02%)</title><rect x="1166.3" y="757" width="0.2" height="15.0" fill="rgb(215,180,28)" rx="2" ry="2" />
<text  x="1169.29" y="767.5" ></text>
</g>
<g >
<title>cmpbody (148 samples, 0.02%)</title><rect x="191.7" y="165" width="0.2" height="15.0" fill="rgb(215,92,37)" rx="2" ry="2" />
<text  x="194.69" y="175.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVMInterpreter).Run (180 samples, 0.03%)</title><rect x="406.2" y="357" width="0.3" height="15.0" fill="rgb(243,89,10)" rx="2" ry="2" />
<text  x="409.21" y="367.5" ></text>
</g>
<g >
<title>tg/core/vm.makeLog.func1 (72 samples, 0.01%)</title><rect x="470.2" y="533" width="0.1" height="15.0" fill="rgb(248,38,8)" rx="2" ry="2" />
<text  x="473.22" y="543.5" ></text>
</g>
<g >
<title>sort.rotate (220 samples, 0.03%)</title><rect x="1069.1" y="501" width="0.3" height="15.0" fill="rgb(247,106,9)" rx="2" ry="2" />
<text  x="1072.05" y="511.5" ></text>
</g>
<g >
<title>runtime.makeslice (149 samples, 0.02%)</title><rect x="199.0" y="341" width="0.2" height="15.0" fill="rgb(214,35,38)" rx="2" ry="2" />
<text  x="201.97" y="351.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).StaticCall (81 samples, 0.01%)</title><rect x="480.6" y="325" width="0.2" height="15.0" fill="rgb(246,8,4)" rx="2" ry="2" />
<text  x="483.64" y="335.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.(*state).permute (212 samples, 0.03%)</title><rect x="418.3" y="421" width="0.3" height="15.0" fill="rgb(230,124,51)" rx="2" ry="2" />
<text  x="421.28" y="431.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (90 samples, 0.01%)</title><rect x="985.1" y="469" width="0.1" height="15.0" fill="rgb(223,146,17)" rx="2" ry="2" />
<text  x="988.09" y="479.5" ></text>
</g>
<g >
<title>tg/rlp.cachedTypeInfo (169 samples, 0.02%)</title><rect x="1112.8" y="645" width="0.3" height="15.0" fill="rgb(206,102,2)" rx="2" ry="2" />
<text  x="1115.83" y="655.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (77 samples, 0.01%)</title><rect x="628.6" y="613" width="0.1" height="15.0" fill="rgb(227,29,41)" rx="2" ry="2" />
<text  x="631.60" y="623.5" ></text>
</g>
<g >
<title>runtime.makeslicecopy (421 samples, 0.06%)</title><rect x="971.1" y="501" width="0.7" height="15.0" fill="rgb(223,47,42)" rx="2" ry="2" />
<text  x="974.10" y="511.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).getStateObject (596 samples, 0.09%)</title><rect x="320.6" y="565" width="1.0" height="15.0" fill="rgb(218,148,19)" rx="2" ry="2" />
<text  x="323.59" y="575.5" ></text>
</g>
<g >
<title>runtime.mapaccess1 (304 samples, 0.04%)</title><rect x="556.1" y="549" width="0.5" height="15.0" fill="rgb(246,124,40)" rx="2" ry="2" />
<text  x="559.05" y="559.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (649 samples, 0.09%)</title><rect x="401.5" y="309" width="1.1" height="15.0" fill="rgb(230,98,8)" rx="2" ry="2" />
<text  x="404.50" y="319.5" ></text>
</g>
<g >
<title>bytes.Compare (719 samples, 0.10%)</title><rect x="673.5" y="485" width="1.3" height="15.0" fill="rgb(247,7,25)" rx="2" ry="2" />
<text  x="676.54" y="495.5" ></text>
</g>
<g >
<title>tg/ethdb.(*mutation).Get (67 samples, 0.01%)</title><rect x="498.0" y="325" width="0.1" height="15.0" fill="rgb(213,46,44)" rx="2" ry="2" />
<text  x="500.95" y="335.5" ></text>
</g>
<g >
<title>runtime.mapiternext (77 samples, 0.01%)</title><rect x="664.3" y="677" width="0.1" height="15.0" fill="rgb(229,149,16)" rx="2" ry="2" />
<text  x="667.25" y="687.5" ></text>
</g>
<g >
<title>tg/rlp.Encode (1,781 samples, 0.26%)</title><rect x="209.5" y="469" width="3.0" height="15.0" fill="rgb(218,116,34)" rx="2" ry="2" />
<text  x="212.52" y="479.5" ></text>
</g>
<g >
<title>runtime.pageIndexOf (280 samples, 0.04%)</title><rect x="30.4" y="773" width="0.5" height="15.0" fill="rgb(244,2,50)" rx="2" ry="2" />
<text  x="33.43" y="783.5" ></text>
</g>
<g >
<title>tg/rlp.(*Stream).Decode (3,504 samples, 0.50%)</title><rect x="787.1" y="597" width="5.9" height="15.0" fill="rgb(224,220,41)" rx="2" ry="2" />
<text  x="790.08" y="607.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVMInterpreter).Run (145 samples, 0.02%)</title><rect x="484.4" y="165" width="0.3" height="15.0" fill="rgb(222,93,20)" rx="2" ry="2" />
<text  x="487.44" y="175.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (105 samples, 0.02%)</title><rect x="832.1" y="373" width="0.1" height="15.0" fill="rgb(253,56,36)" rx="2" ry="2" />
<text  x="835.07" y="383.5" ></text>
</g>
<g >
<title>tg/core/vm.run (166 samples, 0.02%)</title><rect x="448.8" y="437" width="0.3" height="15.0" fill="rgb(242,206,13)" rx="2" ry="2" />
<text  x="451.82" y="447.5" ></text>
</g>
<g >
<title>bytes.Compare (218 samples, 0.03%)</title><rect x="185.7" y="325" width="0.3" height="15.0" fill="rgb(244,14,39)" rx="2" ry="2" />
<text  x="188.66" y="335.5" ></text>
</g>
<g >
<title>tg/core/vm.run (330 samples, 0.05%)</title><rect x="603.9" y="437" width="0.6" height="15.0" fill="rgb(217,209,27)" rx="2" ry="2" />
<text  x="606.92" y="447.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find.func1 (169 samples, 0.02%)</title><rect x="510.2" y="309" width="0.3" height="15.0" fill="rgb(206,118,48)" rx="2" ry="2" />
<text  x="513.17" y="319.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).Get (175 samples, 0.03%)</title><rect x="146.3" y="613" width="0.3" height="15.0" fill="rgb(249,176,19)" rx="2" ry="2" />
<text  x="149.30" y="623.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find (100 samples, 0.01%)</title><rect x="461.4" y="405" width="0.1" height="15.0" fill="rgb(227,179,44)" rx="2" ry="2" />
<text  x="464.36" y="415.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (75 samples, 0.01%)</title><rect x="504.8" y="437" width="0.1" height="15.0" fill="rgb(238,172,50)" rx="2" ry="2" />
<text  x="507.76" y="447.5" ></text>
</g>
<g >
<title>bytes.Compare (59 samples, 0.01%)</title><rect x="864.7" y="421" width="0.1" height="15.0" fill="rgb(209,184,13)" rx="2" ry="2" />
<text  x="867.69" y="431.5" ></text>
</g>
<g >
<title>runtime.hashGrow (636 samples, 0.09%)</title><rect x="560.2" y="517" width="1.1" height="15.0" fill="rgb(236,112,25)" rx="2" ry="2" />
<text  x="563.24" y="527.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (247 samples, 0.04%)</title><rect x="625.2" y="565" width="0.4" height="15.0" fill="rgb(239,188,52)" rx="2" ry="2" />
<text  x="628.20" y="575.5" ></text>
</g>
<g >
<title>tg/core/vm.(*ecrecover).Run (151 samples, 0.02%)</title><rect x="447.0" y="485" width="0.3" height="15.0" fill="rgb(252,58,19)" rx="2" ry="2" />
<text  x="450.00" y="495.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find.func1 (62 samples, 0.01%)</title><rect x="340.3" y="405" width="0.1" height="15.0" fill="rgb(227,172,53)" rx="2" ry="2" />
<text  x="343.34" y="415.5" ></text>
</g>
<g >
<title>tg/ethdb.(*TxDb).Get (6,628 samples, 0.95%)</title><rect x="582.7" y="501" width="11.2" height="15.0" fill="rgb(233,133,30)" rx="2" ry="2" />
<text  x="585.67" y="511.5" ></text>
</g>
<g >
<title>tg/common/etl.(*sortableBuffer).Swap (98 samples, 0.01%)</title><rect x="1071.6" y="405" width="0.2" height="15.0" fill="rgb(209,13,46)" rx="2" ry="2" />
<text  x="1074.64" y="415.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.(*state).permute (1,011 samples, 0.15%)</title><rect x="770.6" y="549" width="1.8" height="15.0" fill="rgb(246,193,5)" rx="2" ry="2" />
<text  x="773.65" y="559.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).Call (64 samples, 0.01%)</title><rect x="416.1" y="261" width="0.2" height="15.0" fill="rgb(250,122,44)" rx="2" ry="2" />
<text  x="419.15" y="271.5" ></text>
</g>
<g >
<title>runtime.memmove (99 samples, 0.01%)</title><rect x="1009.3" y="517" width="0.2" height="15.0" fill="rgb(251,60,18)" rx="2" ry="2" />
<text  x="1012.34" y="527.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*cborEncDriver).EncodeStringBytesRaw (136 samples, 0.02%)</title><rect x="783.5" y="549" width="0.3" height="15.0" fill="rgb(236,92,42)" rx="2" ry="2" />
<text  x="786.55" y="559.5" ></text>
</g>
<g >
<title>tg/eth/stagedsync.DefaultStages.func10.1 (18,582 samples, 2.67%)</title><rect x="135.0" y="757" width="31.6" height="15.0" fill="rgb(230,161,7)" rx="2" ry="2" />
<text  x="137.99" y="767.5" >tg..</text>
</g>
<g >
<title>tg/rlp.(*Stream).Decode (2,196 samples, 0.32%)</title><rect x="216.3" y="453" width="3.7" height="15.0" fill="rgb(242,86,51)" rx="2" ry="2" />
<text  x="219.31" y="463.5" ></text>
</g>
<g >
<title>tg/eth/downloader.(*Downloader).SpawnBodyDownloadStage.func2 (66 samples, 0.01%)</title><rect x="232.3" y="645" width="0.2" height="15.0" fill="rgb(226,206,37)" rx="2" ry="2" />
<text  x="235.34" y="655.5" ></text>
</g>
<g >
<title>tg/ethdb/bitmapdb.CutLeft64 (3,785 samples, 0.54%)</title><rect x="1050.3" y="629" width="6.4" height="15.0" fill="rgb(239,169,39)" rx="2" ry="2" />
<text  x="1053.30" y="639.5" ></text>
</g>
<g >
<title>runtime.mallocgc (325 samples, 0.05%)</title><rect x="966.9" y="629" width="0.6" height="15.0" fill="rgb(237,137,4)" rx="2" ry="2" />
<text  x="969.95" y="639.5" ></text>
</g>
<g >
<title>tg/crypto/secp256k1.RecoverPubkeyWithContext.func1 (5,420 samples, 0.78%)</title><rect x="1166.7" y="773" width="9.2" height="15.0" fill="rgb(220,111,7)" rx="2" ry="2" />
<text  x="1169.74" y="783.5" ></text>
</g>
<g >
<title>tg/core/rawdb.ReadStorageBodyRLP (73 samples, 0.01%)</title><rect x="196.7" y="565" width="0.1" height="15.0" fill="rgb(249,221,5)" rx="2" ry="2" />
<text  x="199.69" y="575.5" ></text>
</g>
<g >
<title>aeshashbody (101 samples, 0.01%)</title><rect x="140.0" y="693" width="0.2" height="15.0" fill="rgb(253,29,40)" rx="2" ry="2" />
<text  x="143.00" y="703.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (83 samples, 0.01%)</title><rect x="320.7" y="437" width="0.1" height="15.0" fill="rgb(246,60,25)" rx="2" ry="2" />
<text  x="323.70" y="447.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find.func1 (69 samples, 0.01%)</title><rect x="665.4" y="501" width="0.1" height="15.0" fill="rgb(215,179,14)" rx="2" ry="2" />
<text  x="668.39" y="511.5" ></text>
</g>
<g >
<title>sort.Search (399 samples, 0.06%)</title><rect x="288.6" y="469" width="0.6" height="15.0" fill="rgb(238,219,46)" rx="2" ry="2" />
<text  x="291.57" y="479.5" ></text>
</g>
<g >
<title>tg/rlp.decodeDecoder (2,781 samples, 0.40%)</title><rect x="215.9" y="485" width="4.7" height="15.0" fill="rgb(234,152,7)" rx="2" ry="2" />
<text  x="218.91" y="495.5" ></text>
</g>
<g >
<title>tg/core/vm.run (62 samples, 0.01%)</title><rect x="603.1" y="437" width="0.1" height="15.0" fill="rgb(239,185,40)" rx="2" ry="2" />
<text  x="606.09" y="447.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).getVal1.func1 (164 samples, 0.02%)</title><rect x="464.8" y="437" width="0.3" height="15.0" fill="rgb(243,165,0)" rx="2" ry="2" />
<text  x="467.83" y="447.5" ></text>
</g>
<g >
<title>runtime.(*lfstack).pop (2,306 samples, 0.33%)</title><rect x="51.6" y="757" width="3.9" height="15.0" fill="rgb(212,16,32)" rx="2" ry="2" />
<text  x="54.57" y="767.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (209 samples, 0.03%)</title><rect x="317.6" y="549" width="0.4" height="15.0" fill="rgb(207,59,52)" rx="2" ry="2" />
<text  x="320.62" y="559.5" ></text>
</g>
<g >
<title>tg/rlp.(*encbuf).toBytes (731 samples, 0.11%)</title><rect x="767.3" y="613" width="1.3" height="15.0" fill="rgb(236,213,14)" rx="2" ry="2" />
<text  x="770.34" y="623.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.(*state).permute (317 samples, 0.05%)</title><rect x="508.8" y="485" width="0.6" height="15.0" fill="rgb(247,174,45)" rx="2" ry="2" />
<text  x="511.83" y="495.5" ></text>
</g>
<g >
<title>tg/rlp.cachedDecoder (190 samples, 0.03%)</title><rect x="202.6" y="405" width="0.4" height="15.0" fill="rgb(229,168,34)" rx="2" ry="2" />
<text  x="205.64" y="415.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (136 samples, 0.02%)</title><rect x="215.3" y="421" width="0.2" height="15.0" fill="rgb(254,18,17)" rx="2" ry="2" />
<text  x="218.31" y="431.5" ></text>
</g>
<g >
<title>tg/ethdb.(*TxDb).Get (80 samples, 0.01%)</title><rect x="340.5" y="501" width="0.1" height="15.0" fill="rgb(244,90,15)" rx="2" ry="2" />
<text  x="343.50" y="511.5" ></text>
</g>
<g >
<title>runtime.growWork (284 samples, 0.04%)</title><rect x="631.2" y="645" width="0.5" height="15.0" fill="rgb(236,73,29)" rx="2" ry="2" />
<text  x="634.18" y="655.5" ></text>
</g>
<g >
<title>bytes.Compare (79 samples, 0.01%)</title><rect x="702.1" y="453" width="0.2" height="15.0" fill="rgb(220,21,17)" rx="2" ry="2" />
<text  x="705.13" y="463.5" ></text>
</g>
<g >
<title>runtime.mapaccess2 (130 samples, 0.02%)</title><rect x="434.3" y="469" width="0.2" height="15.0" fill="rgb(217,12,6)" rx="2" ry="2" />
<text  x="437.26" y="479.5" ></text>
</g>
<g >
<title>bytes.Compare (136 samples, 0.02%)</title><rect x="581.5" y="421" width="0.2" height="15.0" fill="rgb(210,56,31)" rx="2" ry="2" />
<text  x="584.51" y="431.5" ></text>
</g>
<g >
<title>tg/ethdb.Walk (547 samples, 0.08%)</title><rect x="232.5" y="565" width="0.9" height="15.0" fill="rgb(240,55,34)" rx="2" ry="2" />
<text  x="235.52" y="575.5" ></text>
</g>
<g >
<title>tg/ethdb.(*MutationItem).Less (1,017 samples, 0.15%)</title><rect x="251.9" y="437" width="1.8" height="15.0" fill="rgb(228,151,2)" rx="2" ry="2" />
<text  x="254.93" y="447.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*Encoder).encode (1,193 samples, 0.17%)</title><rect x="783.2" y="645" width="2.0" height="15.0" fill="rgb(214,47,46)" rx="2" ry="2" />
<text  x="786.19" y="655.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).StaticCall (107 samples, 0.02%)</title><rect x="609.3" y="325" width="0.2" height="15.0" fill="rgb(226,117,28)" rx="2" ry="2" />
<text  x="612.27" y="335.5" ></text>
</g>
<g >
<title>tg/core/vm.opCall (2,747 samples, 0.40%)</title><rect x="382.0" y="405" width="4.7" height="15.0" fill="rgb(238,98,36)" rx="2" ry="2" />
<text  x="385.01" y="415.5" ></text>
</g>
<g >
<title>tg/rlp.(*Stream).Decode (175 samples, 0.03%)</title><rect x="338.2" y="517" width="0.3" height="15.0" fill="rgb(244,20,54)" rx="2" ry="2" />
<text  x="341.19" y="527.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (2,625 samples, 0.38%)</title><rect x="564.1" y="421" width="4.5" height="15.0" fill="rgb(232,136,43)" rx="2" ry="2" />
<text  x="567.12" y="431.5" ></text>
</g>
<g >
<title>tg/core/vm.run (175 samples, 0.03%)</title><rect x="482.0" y="373" width="0.3" height="15.0" fill="rgb(218,221,12)" rx="2" ry="2" />
<text  x="484.99" y="383.5" ></text>
</g>
<g >
<title>tg/eth.(*ProtocolManager).handle (3,920 samples, 0.56%)</title><rect x="1180.5" y="821" width="6.6" height="15.0" fill="rgb(221,6,32)" rx="2" ry="2" />
<text  x="1183.47" y="831.5" ></text>
</g>
<g >
<title>runtime.notewakeup (223 samples, 0.03%)</title><rect x="120.7" y="773" width="0.4" height="15.0" fill="rgb(218,60,46)" rx="2" ry="2" />
<text  x="123.69" y="783.5" ></text>
</g>
<g >
<title>runtime.unlock2 (100 samples, 0.01%)</title><rect x="1012.1" y="517" width="0.2" height="15.0" fill="rgb(212,99,12)" rx="2" ry="2" />
<text  x="1015.11" y="527.5" ></text>
</g>
<g >
<title>tg/crypto/bn256/cloudflare.(*G2).Unmarshal (353 samples, 0.05%)</title><rect x="501.9" y="309" width="0.6" height="15.0" fill="rgb(253,153,13)" rx="2" ry="2" />
<text  x="504.94" y="319.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Txn).Abort (1,375 samples, 0.20%)</title><rect x="849.0" y="517" width="2.3" height="15.0" fill="rgb(234,206,36)" rx="2" ry="2" />
<text  x="851.99" y="527.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (151 samples, 0.02%)</title><rect x="996.1" y="533" width="0.3" height="15.0" fill="rgb(228,65,35)" rx="2" ry="2" />
<text  x="999.13" y="543.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).getVal2.func1 (189 samples, 0.03%)</title><rect x="323.9" y="437" width="0.3" height="15.0" fill="rgb(251,76,14)" rx="2" ry="2" />
<text  x="326.90" y="447.5" ></text>
</g>
<g >
<title>tg/rlp.makeEncoderWriter.func2 (2,359 samples, 0.34%)</title><rect x="1108.1" y="629" width="4.0" height="15.0" fill="rgb(232,29,0)" rx="2" ry="2" />
<text  x="1111.13" y="639.5" ></text>
</g>
<g >
<title>runtime.mallocgc (140 samples, 0.02%)</title><rect x="408.9" y="453" width="0.2" height="15.0" fill="rgb(220,24,6)" rx="2" ry="2" />
<text  x="411.86" y="463.5" ></text>
</g>
<g >
<title>runtime.read (80 samples, 0.01%)</title><rect x="111.3" y="789" width="0.2" height="15.0" fill="rgb(213,84,41)" rx="2" ry="2" />
<text  x="114.34" y="799.5" ></text>
</g>
<g >
<title>tg/eth/downloader.(*Downloader).spawnSync.func1 (14,547 samples, 2.09%)</title><rect x="1106.9" y="869" width="24.7" height="15.0" fill="rgb(245,131,23)" rx="2" ry="2" />
<text  x="1109.93" y="879.5" >t..</text>
</g>
<g >
<title>aeshashbody (613 samples, 0.09%)</title><rect x="982.6" y="517" width="1.0" height="15.0" fill="rgb(235,162,15)" rx="2" ry="2" />
<text  x="985.58" y="527.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).GetState (68 samples, 0.01%)</title><rect x="391.5" y="325" width="0.1" height="15.0" fill="rgb(245,197,14)" rx="2" ry="2" />
<text  x="394.49" y="335.5" ></text>
</g>
<g >
<title>runtime.largeAlloc (86 samples, 0.01%)</title><rect x="1067.6" y="517" width="0.1" height="15.0" fill="rgb(220,59,27)" rx="2" ry="2" />
<text  x="1070.59" y="527.5" ></text>
</g>
<g >
<title>tg/core/vm.run (6,510 samples, 0.94%)</title><rect x="410.5" y="501" width="11.0" height="15.0" fill="rgb(216,207,1)" rx="2" ry="2" />
<text  x="413.48" y="511.5" ></text>
</g>
<g >
<title>sort.rotate (77 samples, 0.01%)</title><rect x="991.3" y="325" width="0.1" height="15.0" fill="rgb(253,18,54)" rx="2" ry="2" />
<text  x="994.30" y="335.5" ></text>
</g>
<g >
<title>tg/eth/stagedsync.SpawnIntermediateHashesStage (42,819 samples, 6.16%)</title><rect x="958.6" y="741" width="72.7" height="15.0" fill="rgb(212,128,51)" rx="2" ry="2" />
<text  x="961.58" y="751.5" >tg/eth/s..</text>
</g>
<g >
<title>runtime.newobject (100 samples, 0.01%)</title><rect x="1058.0" y="629" width="0.1" height="15.0" fill="rgb(241,35,45)" rx="2" ry="2" />
<text  x="1060.96" y="639.5" ></text>
</g>
<g >
<title>runtime.evacuate_faststr (400 samples, 0.06%)</title><rect x="141.0" y="677" width="0.7" height="15.0" fill="rgb(205,218,53)" rx="2" ry="2" />
<text  x="143.98" y="687.5" ></text>
</g>
<g >
<title>aeshashbody (84 samples, 0.01%)</title><rect x="1081.5" y="597" width="0.1" height="15.0" fill="rgb(249,58,45)" rx="2" ry="2" />
<text  x="1084.49" y="607.5" ></text>
</g>
<g >
<title>tg/crypto/secp256k1._Cfunc_secp256k1_ext_ecdsa_recover (143 samples, 0.02%)</title><rect x="447.0" y="421" width="0.3" height="15.0" fill="rgb(230,103,12)" rx="2" ry="2" />
<text  x="450.02" y="431.5" ></text>
</g>
<g >
<title>tg/core/vm.runBn256Pairing (123 samples, 0.02%)</title><rect x="446.3" y="469" width="0.2" height="15.0" fill="rgb(254,44,1)" rx="2" ry="2" />
<text  x="449.27" y="479.5" ></text>
</g>
<g >
<title>tg/rlp.cachedTypeInfo (196 samples, 0.03%)</title><rect x="749.9" y="629" width="0.3" height="15.0" fill="rgb(226,6,26)" rx="2" ry="2" />
<text  x="752.91" y="639.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).Call (89 samples, 0.01%)</title><rect x="484.5" y="133" width="0.1" height="15.0" fill="rgb(254,211,22)" rx="2" ry="2" />
<text  x="487.47" y="143.5" ></text>
</g>
<g >
<title>runtime.convT64 (119 samples, 0.02%)</title><rect x="1046.1" y="597" width="0.2" height="15.0" fill="rgb(231,28,24)" rx="2" ry="2" />
<text  x="1049.08" y="607.5" ></text>
</g>
<g >
<title>runtime.mapassign (270 samples, 0.04%)</title><rect x="330.1" y="565" width="0.5" height="15.0" fill="rgb(236,116,4)" rx="2" ry="2" />
<text  x="333.10" y="575.5" ></text>
</g>
<g >
<title>runtime.memmove (67 samples, 0.01%)</title><rect x="817.6" y="437" width="0.2" height="15.0" fill="rgb(226,135,44)" rx="2" ry="2" />
<text  x="820.64" y="447.5" ></text>
</g>
<g >
<title>tg/crypto/bn256/cloudflare.gfpMul (75 samples, 0.01%)</title><rect x="502.9" y="245" width="0.2" height="15.0" fill="rgb(251,222,52)" rx="2" ry="2" />
<text  x="505.93" y="255.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).Get (281 samples, 0.04%)</title><rect x="960.1" y="613" width="0.5" height="15.0" fill="rgb(242,163,38)" rx="2" ry="2" />
<text  x="963.13" y="623.5" ></text>
</g>
<g >
<title>sort.swapRange (239 samples, 0.03%)</title><rect x="181.6" y="405" width="0.4" height="15.0" fill="rgb(230,2,0)" rx="2" ry="2" />
<text  x="184.64" y="415.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (100 samples, 0.01%)</title><rect x="236.3" y="645" width="0.2" height="15.0" fill="rgb(210,51,42)" rx="2" ry="2" />
<text  x="239.31" y="655.5" ></text>
</g>
<g >
<title>bytes.Compare (246 samples, 0.04%)</title><rect x="190.7" y="213" width="0.4" height="15.0" fill="rgb(206,68,15)" rx="2" ry="2" />
<text  x="193.69" y="223.5" ></text>
</g>
<g >
<title>runtime.makeslice (468 samples, 0.07%)</title><rect x="972.6" y="613" width="0.8" height="15.0" fill="rgb(228,188,54)" rx="2" ry="2" />
<text  x="975.57" y="623.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb._Cfunc_mdb_txn_abort (726 samples, 0.10%)</title><rect x="849.0" y="469" width="1.3" height="15.0" fill="rgb(252,85,47)" rx="2" ry="2" />
<text  x="852.03" y="479.5" ></text>
</g>
<g >
<title>runtime.inHeapOrStack (134 samples, 0.02%)</title><rect x="905.7" y="437" width="0.2" height="15.0" fill="rgb(236,100,43)" rx="2" ry="2" />
<text  x="908.67" y="447.5" ></text>
</g>
<g >
<title>github.com/holiman/uint256.(*Int).And (67 samples, 0.01%)</title><rect x="316.1" y="597" width="0.1" height="15.0" fill="rgb(214,203,50)" rx="2" ry="2" />
<text  x="319.09" y="607.5" ></text>
</g>
<g >
<title>tg/ethdb/bitmapdb.CutLeft.func1 (507 samples, 0.07%)</title><rect x="156.5" y="597" width="0.8" height="15.0" fill="rgb(236,126,12)" rx="2" ry="2" />
<text  x="159.46" y="607.5" ></text>
</g>
<g >
<title>tg/crypto/secp256k1.RecoverPubkey (90 samples, 0.01%)</title><rect x="420.4" y="341" width="0.1" height="15.0" fill="rgb(211,8,30)" rx="2" ry="2" />
<text  x="423.39" y="351.5" ></text>
</g>
<g >
<title>runtime.makeBucketArray (110 samples, 0.02%)</title><rect x="597.4" y="517" width="0.2" height="15.0" fill="rgb(253,190,47)" rx="2" ry="2" />
<text  x="600.40" y="527.5" ></text>
</g>
<g >
<title>runtime.cgocall (318 samples, 0.05%)</title><rect x="512.7" y="405" width="0.6" height="15.0" fill="rgb(228,135,3)" rx="2" ry="2" />
<text  x="515.75" y="415.5" ></text>
</g>
<g >
<title>tg/core/vm.RunPrecompiledContract (93 samples, 0.01%)</title><rect x="420.4" y="373" width="0.1" height="15.0" fill="rgb(246,222,24)" rx="2" ry="2" />
<text  x="423.38" y="383.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.(*Bitmap).AddRange (858 samples, 0.12%)</title><rect x="1095.9" y="597" width="1.5" height="15.0" fill="rgb(249,174,8)" rx="2" ry="2" />
<text  x="1098.91" y="607.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.fastpathT.EncSliceBytesV (965 samples, 0.14%)</title><rect x="194.1" y="469" width="1.6" height="15.0" fill="rgb(244,120,26)" rx="2" ry="2" />
<text  x="197.07" y="479.5" ></text>
</g>
<g >
<title>tg/ethdb.(*MutationItem).Less (131 samples, 0.02%)</title><rect x="499.3" y="261" width="0.2" height="15.0" fill="rgb(251,14,15)" rx="2" ry="2" />
<text  x="502.28" y="271.5" ></text>
</g>
<g >
<title>runtime.memmove (63 samples, 0.01%)</title><rect x="705.0" y="501" width="0.1" height="15.0" fill="rgb(252,63,40)" rx="2" ry="2" />
<text  x="707.98" y="511.5" ></text>
</g>
<g >
<title>tg/core/types.(*Transaction).DecodeRLP (3,058 samples, 0.44%)</title><rect x="198.0" y="421" width="5.2" height="15.0" fill="rgb(210,159,43)" rx="2" ry="2" />
<text  x="200.97" y="431.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (118 samples, 0.02%)</title><rect x="734.7" y="533" width="0.2" height="15.0" fill="rgb(251,40,7)" rx="2" ry="2" />
<text  x="737.72" y="543.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.(*runContainer16).iand (354 samples, 0.05%)</title><rect x="1099.1" y="581" width="0.6" height="15.0" fill="rgb(229,9,21)" rx="2" ry="2" />
<text  x="1102.15" y="591.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.(*state).permute (208 samples, 0.03%)</title><rect x="134.0" y="693" width="0.4" height="15.0" fill="rgb(234,79,7)" rx="2" ry="2" />
<text  x="137.01" y="703.5" ></text>
</g>
<g >
<title>tg/core/vm.NewContract (397 samples, 0.06%)</title><rect x="293.0" y="629" width="0.6" height="15.0" fill="rgb(254,211,39)" rx="2" ry="2" />
<text  x="295.96" y="639.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVMInterpreter).Run (158 samples, 0.02%)</title><rect x="448.8" y="421" width="0.3" height="15.0" fill="rgb(229,26,44)" rx="2" ry="2" />
<text  x="451.82" y="431.5" ></text>
</g>
<g >
<title>runtime.typedslicecopy (67 samples, 0.01%)</title><rect x="705.0" y="517" width="0.1" height="15.0" fill="rgb(207,225,7)" rx="2" ry="2" />
<text  x="707.97" y="527.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (251 samples, 0.04%)</title><rect x="260.5" y="549" width="0.4" height="15.0" fill="rgb(246,35,0)" rx="2" ry="2" />
<text  x="263.52" y="559.5" ></text>
</g>
<g >
<title>tg/core/state.(*stateObject).GetCommittedState (61 samples, 0.01%)</title><rect x="391.5" y="293" width="0.1" height="15.0" fill="rgb(214,83,34)" rx="2" ry="2" />
<text  x="394.50" y="303.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*bufioEncWriter).endErr (173 samples, 0.02%)</title><rect x="875.1" y="485" width="0.3" height="15.0" fill="rgb(244,221,34)" rx="2" ry="2" />
<text  x="878.13" y="495.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*decRd).readn1 (71 samples, 0.01%)</title><rect x="1089.2" y="533" width="0.1" height="15.0" fill="rgb(230,213,24)" rx="2" ry="2" />
<text  x="1092.16" y="543.5" ></text>
</g>
<g >
<title>runtime.addspecial (70 samples, 0.01%)</title><rect x="933.0" y="405" width="0.2" height="15.0" fill="rgb(247,11,38)" rx="2" ry="2" />
<text  x="936.04" y="415.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb._Cfunc_mdb_txn_abort (1,359 samples, 0.20%)</title><rect x="947.2" y="469" width="2.3" height="15.0" fill="rgb(228,200,18)" rx="2" ry="2" />
<text  x="950.23" y="479.5" ></text>
</g>
<g >
<title>tg/ethdb.(*TxDb).Put (2,986 samples, 0.43%)</title><rect x="171.5" y="629" width="5.0" height="15.0" fill="rgb(243,49,43)" rx="2" ry="2" />
<text  x="174.47" y="639.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).GetCodeHash (107 samples, 0.02%)</title><rect x="460.1" y="549" width="0.2" height="15.0" fill="rgb(216,18,47)" rx="2" ry="2" />
<text  x="463.12" y="559.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.(*roaringArray).getIndex (111 samples, 0.02%)</title><rect x="1050.4" y="581" width="0.2" height="15.0" fill="rgb(228,204,7)" rx="2" ry="2" />
<text  x="1053.40" y="591.5" ></text>
</g>
<g >
<title>tg/crypto.EcrecoverWithContext (5,425 samples, 0.78%)</title><rect x="1166.7" y="805" width="9.2" height="15.0" fill="rgb(253,228,37)" rx="2" ry="2" />
<text  x="1169.73" y="815.5" ></text>
</g>
<g >
<title>sort.symMerge (290 samples, 0.04%)</title><rect x="993.4" y="229" width="0.5" height="15.0" fill="rgb(217,132,43)" rx="2" ry="2" />
<text  x="996.37" y="239.5" ></text>
</g>
<g >
<title>runtime.systemstack (115 samples, 0.02%)</title><rect x="622.2" y="485" width="0.2" height="15.0" fill="rgb(222,88,46)" rx="2" ry="2" />
<text  x="625.21" y="495.5" ></text>
</g>
<g >
<title>sort.quickSort (1,497 samples, 0.22%)</title><rect x="1026.4" y="581" width="2.5" height="15.0" fill="rgb(229,209,41)" rx="2" ry="2" />
<text  x="1029.39" y="591.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.(*runContainer16).toEfficientContainer (1,172 samples, 0.17%)</title><rect x="1100.0" y="549" width="1.9" height="15.0" fill="rgb(226,16,48)" rx="2" ry="2" />
<text  x="1102.95" y="559.5" ></text>
</g>
<g >
<title>cmpbody (384 samples, 0.06%)</title><rect x="688.2" y="517" width="0.6" height="15.0" fill="rgb(216,95,22)" rx="2" ry="2" />
<text  x="691.16" y="527.5" ></text>
</g>
<g >
<title>tg/rlp.Encode (819 samples, 0.12%)</title><rect x="1132.7" y="789" width="1.4" height="15.0" fill="rgb(216,95,11)" rx="2" ry="2" />
<text  x="1135.72" y="799.5" ></text>
</g>
<g >
<title>runtime.makeBucketArray (627 samples, 0.09%)</title><rect x="560.3" y="501" width="1.0" height="15.0" fill="rgb(209,195,45)" rx="2" ry="2" />
<text  x="563.25" y="511.5" ></text>
</g>
<g >
<title>tg/rlp.writeBytes (160 samples, 0.02%)</title><rect x="1110.4" y="533" width="0.3" height="15.0" fill="rgb(238,98,16)" rx="2" ry="2" />
<text  x="1113.41" y="543.5" ></text>
</g>
<g >
<title>tg/core/vm.opSha3 (62 samples, 0.01%)</title><rect x="395.0" y="405" width="0.1" height="15.0" fill="rgb(225,210,10)" rx="2" ry="2" />
<text  x="398.00" y="415.5" ></text>
</g>
<g >
<title>tg/core/vm.opSload (81 samples, 0.01%)</title><rect x="413.9" y="341" width="0.2" height="15.0" fill="rgb(205,50,53)" rx="2" ry="2" />
<text  x="416.95" y="351.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring/roaring64.(*Bitmap).RunOptimize (269 samples, 0.04%)</title><rect x="1034.9" y="629" width="0.4" height="15.0" fill="rgb(206,25,6)" rx="2" ry="2" />
<text  x="1037.87" y="639.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (169 samples, 0.02%)</title><rect x="736.6" y="597" width="0.3" height="15.0" fill="rgb(233,58,43)" rx="2" ry="2" />
<text  x="739.59" y="607.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).getVal2 (9,484 samples, 1.36%)</title><rect x="911.7" y="485" width="16.1" height="15.0" fill="rgb(245,203,18)" rx="2" ry="2" />
<text  x="914.69" y="495.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (118 samples, 0.02%)</title><rect x="408.9" y="437" width="0.2" height="15.0" fill="rgb(211,91,1)" rx="2" ry="2" />
<text  x="411.88" y="447.5" ></text>
</g>
<g >
<title>tg/core/vm.opDelegateCall (6,742 samples, 0.97%)</title><rect x="410.1" y="533" width="11.4" height="15.0" fill="rgb(221,56,3)" rx="2" ry="2" />
<text  x="413.09" y="543.5" ></text>
</g>
<g >
<title>runtime.mapassign (81 samples, 0.01%)</title><rect x="265.3" y="581" width="0.1" height="15.0" fill="rgb(247,124,22)" rx="2" ry="2" />
<text  x="268.28" y="591.5" ></text>
</g>
<g >
<title>tg/ethdb.(*LmdbKV).Begin.func1 (130 samples, 0.02%)</title><rect x="834.1" y="517" width="0.2" height="15.0" fill="rgb(206,67,9)" rx="2" ry="2" />
<text  x="837.08" y="527.5" ></text>
</g>
<g >
<title>tg/eth/downloader.(*Downloader).syncWithPeer.func4 (938 samples, 0.13%)</title><rect x="1130.0" y="853" width="1.6" height="15.0" fill="rgb(237,213,6)" rx="2" ry="2" />
<text  x="1133.04" y="863.5" ></text>
</g>
<g >
<title>cmpbody (151 samples, 0.02%)</title><rect x="1074.6" y="309" width="0.2" height="15.0" fill="rgb(249,202,2)" rx="2" ry="2" />
<text  x="1077.59" y="319.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find (3,199 samples, 0.46%)</title><rect x="708.3" y="533" width="5.4" height="15.0" fill="rgb(245,192,28)" rx="2" ry="2" />
<text  x="711.28" y="543.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*Decoder).decSliceHelperStart (121 samples, 0.02%)</title><rect x="169.4" y="549" width="0.2" height="15.0" fill="rgb(229,66,34)" rx="2" ry="2" />
<text  x="172.37" y="559.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).getStateObject (488 samples, 0.07%)</title><rect x="461.2" y="533" width="0.8" height="15.0" fill="rgb(230,102,0)" rx="2" ry="2" />
<text  x="464.19" y="543.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*Decoder).mustDecode (657 samples, 0.09%)</title><rect x="1089.0" y="629" width="1.1" height="15.0" fill="rgb(207,83,6)" rx="2" ry="2" />
<text  x="1091.96" y="639.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVMInterpreter).Run (1,287 samples, 0.19%)</title><rect x="501.6" y="421" width="2.1" height="15.0" fill="rgb(245,78,1)" rx="2" ry="2" />
<text  x="504.56" y="431.5" ></text>
</g>
<g >
<title>tg/ethdb.(*LmdbCursor).getBothRange (313 samples, 0.05%)</title><rect x="818.7" y="581" width="0.5" height="15.0" fill="rgb(252,51,30)" rx="2" ry="2" />
<text  x="821.67" y="591.5" ></text>
</g>
<g >
<title>tg/ethdb.(*mutation).Get (59 samples, 0.01%)</title><rect x="608.8" y="389" width="0.1" height="15.0" fill="rgb(212,197,22)" rx="2" ry="2" />
<text  x="611.79" y="399.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (193 samples, 0.03%)</title><rect x="162.7" y="485" width="0.3" height="15.0" fill="rgb(208,225,54)" rx="2" ry="2" />
<text  x="165.69" y="495.5" ></text>
</g>
<g >
<title>runtime.mapaccess2_faststr (74 samples, 0.01%)</title><rect x="727.4" y="597" width="0.2" height="15.0" fill="rgb(208,59,10)" rx="2" ry="2" />
<text  x="730.43" y="607.5" ></text>
</g>
<g >
<title>tg/core/vm.opSload (69 samples, 0.01%)</title><rect x="391.5" y="341" width="0.1" height="15.0" fill="rgb(229,157,16)" rx="2" ry="2" />
<text  x="394.49" y="351.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find.func1 (319 samples, 0.05%)</title><rect x="719.4" y="549" width="0.5" height="15.0" fill="rgb(247,140,47)" rx="2" ry="2" />
<text  x="722.37" y="559.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).getVal0 (119 samples, 0.02%)</title><rect x="1026.2" y="661" width="0.2" height="15.0" fill="rgb(237,47,42)" rx="2" ry="2" />
<text  x="1029.16" y="671.5" ></text>
</g>
<g >
<title>bytes.Compare (143 samples, 0.02%)</title><rect x="402.1" y="245" width="0.2" height="15.0" fill="rgb(252,229,26)" rx="2" ry="2" />
<text  x="405.10" y="255.5" ></text>
</g>
<g >
<title>github.com/holiman/uint256.udivrem (366 samples, 0.05%)</title><rect x="507.6" y="501" width="0.6" height="15.0" fill="rgb(243,102,44)" rx="2" ry="2" />
<text  x="510.58" y="511.5" ></text>
</g>
<g >
<title>tg/ethdb.(*LmdbCursor).next (1,489 samples, 0.21%)</title><rect x="1043.8" y="661" width="2.5" height="15.0" fill="rgb(211,132,48)" rx="2" ry="2" />
<text  x="1046.77" y="671.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).insert (8,627 samples, 1.24%)</title><rect x="672.7" y="581" width="14.6" height="15.0" fill="rgb(236,134,43)" rx="2" ry="2" />
<text  x="675.66" y="591.5" ></text>
</g>
<g >
<title>runtime.stringtoslicebyte (294 samples, 0.04%)</title><rect x="862.5" y="517" width="0.5" height="15.0" fill="rgb(247,127,54)" rx="2" ry="2" />
<text  x="865.49" y="527.5" ></text>
</g>
<g >
<title>sort.symMerge (2,734 samples, 0.39%)</title><rect x="989.5" y="405" width="4.6" height="15.0" fill="rgb(248,204,36)" rx="2" ry="2" />
<text  x="992.46" y="415.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.decByteSlice (333 samples, 0.05%)</title><rect x="1089.4" y="549" width="0.6" height="15.0" fill="rgb(210,14,20)" rx="2" ry="2" />
<text  x="1092.40" y="559.5" ></text>
</g>
<g >
<title>runtime.makeslice (78 samples, 0.01%)</title><rect x="1049.0" y="613" width="0.1" height="15.0" fill="rgb(227,167,5)" rx="2" ry="2" />
<text  x="1051.97" y="623.5" ></text>
</g>
<g >
<title>runtime.memmove (228 samples, 0.03%)</title><rect x="994.6" y="421" width="0.4" height="15.0" fill="rgb(222,120,43)" rx="2" ry="2" />
<text  x="997.57" y="431.5" ></text>
</g>
<g >
<title>sort.symMerge (4,789 samples, 0.69%)</title><rect x="864.2" y="453" width="8.2" height="15.0" fill="rgb(238,22,43)" rx="2" ry="2" />
<text  x="867.23" y="463.5" ></text>
</g>
<g >
<title>cmpbody (286 samples, 0.04%)</title><rect x="436.3" y="277" width="0.5" height="15.0" fill="rgb(226,106,13)" rx="2" ry="2" />
<text  x="439.27" y="287.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).getStateObject (91 samples, 0.01%)</title><rect x="266.2" y="613" width="0.2" height="15.0" fill="rgb(226,50,50)" rx="2" ry="2" />
<text  x="269.22" y="623.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.(*state).permute (92 samples, 0.01%)</title><rect x="769.3" y="581" width="0.2" height="15.0" fill="rgb(238,44,31)" rx="2" ry="2" />
<text  x="772.33" y="591.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).getVal2 (628 samples, 0.09%)</title><rect x="403.3" y="325" width="1.0" height="15.0" fill="rgb(246,116,17)" rx="2" ry="2" />
<text  x="406.26" y="335.5" ></text>
</g>
<g >
<title>runtime.SetFinalizer.func1 (374 samples, 0.05%)</title><rect x="850.6" y="469" width="0.6" height="15.0" fill="rgb(243,0,36)" rx="2" ry="2" />
<text  x="853.57" y="479.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).getVal1 (136 samples, 0.02%)</title><rect x="460.9" y="453" width="0.3" height="15.0" fill="rgb(212,39,30)" rx="2" ry="2" />
<text  x="463.94" y="463.5" ></text>
</g>
<g >
<title>runtime.mallocgc (151 samples, 0.02%)</title><rect x="434.9" y="405" width="0.2" height="15.0" fill="rgb(225,75,49)" rx="2" ry="2" />
<text  x="437.86" y="415.5" ></text>
</g>
<g >
<title>tg/crypto.CreateAddress (110 samples, 0.02%)</title><rect x="463.7" y="565" width="0.2" height="15.0" fill="rgb(228,23,27)" rx="2" ry="2" />
<text  x="466.72" y="575.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).create (70 samples, 0.01%)</title><rect x="410.0" y="501" width="0.1" height="15.0" fill="rgb(219,190,3)" rx="2" ry="2" />
<text  x="412.96" y="511.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).getVal2.func1 (164 samples, 0.02%)</title><rect x="419.4" y="309" width="0.2" height="15.0" fill="rgb(225,32,13)" rx="2" ry="2" />
<text  x="422.37" y="319.5" ></text>
</g>
<g >
<title>reflect.Value.Interface (559 samples, 0.08%)</title><rect x="1123.0" y="597" width="0.9" height="15.0" fill="rgb(219,206,3)" rx="2" ry="2" />
<text  x="1125.99" y="607.5" ></text>
</g>
<g >
<title>cmpbody (466 samples, 0.07%)</title><rect x="963.6" y="597" width="0.8" height="15.0" fill="rgb(254,154,52)" rx="2" ry="2" />
<text  x="966.56" y="607.5" ></text>
</g>
<g >
<title>runtime.exitsyscall (173 samples, 0.02%)</title><rect x="1127.3" y="581" width="0.3" height="15.0" fill="rgb(214,103,18)" rx="2" ry="2" />
<text  x="1130.35" y="591.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).GetState (1,138 samples, 0.16%)</title><rect x="322.3" y="581" width="1.9" height="15.0" fill="rgb(223,142,12)" rx="2" ry="2" />
<text  x="325.31" y="591.5" ></text>
</g>
<g >
<title>runtime.mProf_Malloc (132 samples, 0.02%)</title><rect x="155.5" y="469" width="0.2" height="15.0" fill="rgb(209,63,20)" rx="2" ry="2" />
<text  x="158.47" y="479.5" ></text>
</g>
<g >
<title>runtime.memmove (136 samples, 0.02%)</title><rect x="894.9" y="533" width="0.2" height="15.0" fill="rgb(225,136,11)" rx="2" ry="2" />
<text  x="897.87" y="543.5" ></text>
</g>
<g >
<title>runtime.cgocall (160 samples, 0.02%)</title><rect x="341.2" y="405" width="0.3" height="15.0" fill="rgb(247,0,13)" rx="2" ry="2" />
<text  x="344.23" y="415.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).Get (9,512 samples, 1.37%)</title><rect x="911.7" y="501" width="16.1" height="15.0" fill="rgb(252,109,42)" rx="2" ry="2" />
<text  x="914.66" y="511.5" ></text>
</g>
<g >
<title>tg/common/etl.glob..func1 (3,038 samples, 0.44%)</title><rect x="171.4" y="661" width="5.1" height="15.0" fill="rgb(234,91,53)" rx="2" ry="2" />
<text  x="174.38" y="671.5" ></text>
</g>
<g >
<title>github.com/holiman/uint256.(*Int).WriteToSlice (408 samples, 0.06%)</title><rect x="1111.0" y="501" width="0.7" height="15.0" fill="rgb(254,163,51)" rx="2" ry="2" />
<text  x="1114.03" y="511.5" ></text>
</g>
<g >
<title>sort.quickSort_func (80 samples, 0.01%)</title><rect x="961.7" y="597" width="0.2" height="15.0" fill="rgb(222,45,28)" rx="2" ry="2" />
<text  x="964.75" y="607.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).Exist (79 samples, 0.01%)</title><rect x="477.3" y="437" width="0.2" height="15.0" fill="rgb(211,39,32)" rx="2" ry="2" />
<text  x="480.34" y="447.5" ></text>
</g>
<g >
<title>sort.rotate (260 samples, 0.04%)</title><rect x="182.3" y="405" width="0.5" height="15.0" fill="rgb(232,32,31)" rx="2" ry="2" />
<text  x="185.31" y="415.5" ></text>
</g>
<g >
<title>tg/core/state.(*journal).append (85 samples, 0.01%)</title><rect x="270.3" y="597" width="0.2" height="15.0" fill="rgb(254,3,30)" rx="2" ry="2" />
<text  x="273.34" y="607.5" ></text>
</g>
<g >
<title>tg/rlp.cachedTypeInfo (103 samples, 0.01%)</title><rect x="227.9" y="485" width="0.1" height="15.0" fill="rgb(231,61,20)" rx="2" ry="2" />
<text  x="230.86" y="495.5" ></text>
</g>
<g >
<title>sort.symMerge (1,094 samples, 0.16%)</title><rect x="870.2" y="229" width="1.9" height="15.0" fill="rgb(219,41,32)" rx="2" ry="2" />
<text  x="873.24" y="239.5" ></text>
</g>
<g >
<title>tg/core/vm.run (700 samples, 0.10%)</title><rect x="393.5" y="373" width="1.2" height="15.0" fill="rgb(223,151,15)" rx="2" ry="2" />
<text  x="396.50" y="383.5" ></text>
</g>
<g >
<title>tg/ethdb.(*mutation).Get (185 samples, 0.03%)</title><rect x="450.2" y="389" width="0.3" height="15.0" fill="rgb(215,50,26)" rx="2" ry="2" />
<text  x="453.21" y="399.5" ></text>
</g>
<g >
<title>runtime.madvise (1,112 samples, 0.16%)</title><rect x="10.9" y="757" width="1.9" height="15.0" fill="rgb(243,87,30)" rx="2" ry="2" />
<text  x="13.88" y="767.5" ></text>
</g>
<g >
<title>runtime.systemstack (3,764 samples, 0.54%)</title><rect x="25.9" y="805" width="6.4" height="15.0" fill="rgb(221,184,6)" rx="2" ry="2" />
<text  x="28.88" y="815.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).Get (83 samples, 0.01%)</title><rect x="386.0" y="213" width="0.1" height="15.0" fill="rgb(206,90,24)" rx="2" ry="2" />
<text  x="388.97" y="223.5" ></text>
</g>
<g >
<title>runtime.mallocgc (344 samples, 0.05%)</title><rect x="696.0" y="597" width="0.6" height="15.0" fill="rgb(222,135,51)" rx="2" ry="2" />
<text  x="699.04" y="607.5" ></text>
</g>
<g >
<title>sync.(*RWMutex).Lock (64 samples, 0.01%)</title><rect x="265.5" y="581" width="0.1" height="15.0" fill="rgb(237,215,39)" rx="2" ry="2" />
<text  x="268.46" y="591.5" ></text>
</g>
<g >
<title>tg/core/vm.opDelegateCall (115 samples, 0.02%)</title><rect x="501.7" y="405" width="0.2" height="15.0" fill="rgb(219,171,26)" rx="2" ry="2" />
<text  x="504.66" y="415.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).getVal1 (177 samples, 0.03%)</title><rect x="1049.6" y="597" width="0.3" height="15.0" fill="rgb(250,210,0)" rx="2" ry="2" />
<text  x="1052.55" y="607.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (201 samples, 0.03%)</title><rect x="30.9" y="789" width="0.4" height="15.0" fill="rgb(235,154,50)" rx="2" ry="2" />
<text  x="33.91" y="799.5" ></text>
</g>
<g >
<title>tg/common/changeset.EncodeAccountsPlain (3,434 samples, 0.49%)</title><rect x="721.7" y="677" width="5.9" height="15.0" fill="rgb(253,12,44)" rx="2" ry="2" />
<text  x="724.73" y="687.5" ></text>
</g>
<g >
<title>tg/core/vm.(*Contract).validJumpdest (169 samples, 0.02%)</title><rect x="424.1" y="517" width="0.3" height="15.0" fill="rgb(208,23,16)" rx="2" ry="2" />
<text  x="427.09" y="527.5" ></text>
</g>
<g >
<title>sort.Search (2,209 samples, 0.32%)</title><rect x="1053.0" y="613" width="3.7" height="15.0" fill="rgb(233,42,54)" rx="2" ry="2" />
<text  x="1055.98" y="623.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*encWr).writestr (233 samples, 0.03%)</title><rect x="994.6" y="453" width="0.4" height="15.0" fill="rgb(247,32,16)" rx="2" ry="2" />
<text  x="997.56" y="463.5" ></text>
</g>
<g >
<title>tg/core/state.(*PlainStateReader).ReadAccountStorage (686 samples, 0.10%)</title><rect x="323.1" y="533" width="1.1" height="15.0" fill="rgb(228,91,41)" rx="2" ry="2" />
<text  x="326.08" y="543.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find.func1 (214 samples, 0.03%)</title><rect x="401.6" y="245" width="0.4" height="15.0" fill="rgb(242,51,50)" rx="2" ry="2" />
<text  x="404.61" y="255.5" ></text>
</g>
<g >
<title>tg/core/vm.opBlockhash (66 samples, 0.01%)</title><rect x="369.0" y="533" width="0.1" height="15.0" fill="rgb(238,14,24)" rx="2" ry="2" />
<text  x="371.97" y="543.5" ></text>
</g>
<g >
<title>runtime.newobject (61 samples, 0.01%)</title><rect x="262.2" y="629" width="0.1" height="15.0" fill="rgb(232,77,3)" rx="2" ry="2" />
<text  x="265.17" y="639.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).Get (112 samples, 0.02%)</title><rect x="504.9" y="421" width="0.2" height="15.0" fill="rgb(246,142,33)" rx="2" ry="2" />
<text  x="507.89" y="431.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (64 samples, 0.01%)</title><rect x="818.4" y="581" width="0.1" height="15.0" fill="rgb(246,150,23)" rx="2" ry="2" />
<text  x="821.35" y="591.5" ></text>
</g>
<g >
<title>tg/core/vm.gasSStoreEIP2200 (106 samples, 0.02%)</title><rect x="476.1" y="469" width="0.2" height="15.0" fill="rgb(207,39,33)" rx="2" ry="2" />
<text  x="479.14" y="479.5" ></text>
</g>
<g >
<title>runtime.unlock2 (67 samples, 0.01%)</title><rect x="951.0" y="421" width="0.2" height="15.0" fill="rgb(216,192,46)" rx="2" ry="2" />
<text  x="954.04" y="431.5" ></text>
</g>
<g >
<title>tg/core/vm.NewEVM (1,592 samples, 0.23%)</title><rect x="657.4" y="677" width="2.7" height="15.0" fill="rgb(216,131,19)" rx="2" ry="2" />
<text  x="660.40" y="687.5" ></text>
</g>
<g >
<title>tg/common/etl.readElementFromDisk (1,412 samples, 0.20%)</title><rect x="169.0" y="645" width="2.4" height="15.0" fill="rgb(233,214,13)" rx="2" ry="2" />
<text  x="171.99" y="655.5" ></text>
</g>
<g >
<title>tg/rlp.(*encbuf).encode (163 samples, 0.02%)</title><rect x="1130.3" y="773" width="0.3" height="15.0" fill="rgb(213,153,30)" rx="2" ry="2" />
<text  x="1133.29" y="783.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find.func1 (3,463 samples, 0.50%)</title><rect x="676.6" y="517" width="5.9" height="15.0" fill="rgb(249,90,47)" rx="2" ry="2" />
<text  x="679.58" y="527.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (78 samples, 0.01%)</title><rect x="341.9" y="501" width="0.2" height="15.0" fill="rgb(226,219,42)" rx="2" ry="2" />
<text  x="344.93" y="511.5" ></text>
</g>
<g >
<title>tg/core/vm.(*ecrecover).Run (81 samples, 0.01%)</title><rect x="450.6" y="421" width="0.1" height="15.0" fill="rgb(246,218,52)" rx="2" ry="2" />
<text  x="453.55" y="431.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).insert (107 samples, 0.02%)</title><rect x="1120.3" y="645" width="0.2" height="15.0" fill="rgb(241,103,36)" rx="2" ry="2" />
<text  x="1123.34" y="655.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (111 samples, 0.02%)</title><rect x="978.3" y="533" width="0.2" height="15.0" fill="rgb(210,212,31)" rx="2" ry="2" />
<text  x="981.30" y="543.5" ></text>
</g>
<g >
<title>tg/core/types/accounts.(*Account).DecodeForStorage (208 samples, 0.03%)</title><rect x="271.8" y="581" width="0.4" height="15.0" fill="rgb(225,15,37)" rx="2" ry="2" />
<text  x="274.82" y="591.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (74 samples, 0.01%)</title><rect x="594.9" y="453" width="0.2" height="15.0" fill="rgb(251,193,20)" rx="2" ry="2" />
<text  x="597.93" y="463.5" ></text>
</g>
<g >
<title>github.com/holiman/uint256.(*Int).WriteToSlice (349 samples, 0.05%)</title><rect x="1124.9" y="565" width="0.6" height="15.0" fill="rgb(242,120,44)" rx="2" ry="2" />
<text  x="1127.88" y="575.5" ></text>
</g>
<g >
<title>runtime.typedmemmove (78 samples, 0.01%)</title><rect x="236.6" y="661" width="0.2" height="15.0" fill="rgb(245,57,48)" rx="2" ry="2" />
<text  x="239.62" y="671.5" ></text>
</g>
<g >
<title>cmpbody (273 samples, 0.04%)</title><rect x="187.9" y="261" width="0.4" height="15.0" fill="rgb(254,178,53)" rx="2" ry="2" />
<text  x="190.85" y="271.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (171 samples, 0.02%)</title><rect x="898.3" y="517" width="0.3" height="15.0" fill="rgb(253,56,9)" rx="2" ry="2" />
<text  x="901.31" y="527.5" ></text>
</g>
<g >
<title>runtime.newobject (138 samples, 0.02%)</title><rect x="737.3" y="677" width="0.2" height="15.0" fill="rgb(218,58,19)" rx="2" ry="2" />
<text  x="740.28" y="687.5" ></text>
</g>
<g >
<title>runtime.evacuate_faststr (351 samples, 0.05%)</title><rect x="699.9" y="581" width="0.6" height="15.0" fill="rgb(211,184,50)" rx="2" ry="2" />
<text  x="702.87" y="591.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).Call (131 samples, 0.02%)</title><rect x="496.9" y="325" width="0.2" height="15.0" fill="rgb(215,212,38)" rx="2" ry="2" />
<text  x="499.87" y="335.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).GetState (64 samples, 0.01%)</title><rect x="469.8" y="517" width="0.1" height="15.0" fill="rgb(242,82,33)" rx="2" ry="2" />
<text  x="472.76" y="527.5" ></text>
</g>
<g >
<title>tg/core/vm.opSstore (245 samples, 0.04%)</title><rect x="404.4" y="469" width="0.4" height="15.0" fill="rgb(205,32,33)" rx="2" ry="2" />
<text  x="407.36" y="479.5" ></text>
</g>
<g >
<title>tg/rlp.decodeByteSlice (256 samples, 0.04%)</title><rect x="1182.9" y="549" width="0.5" height="15.0" fill="rgb(254,125,52)" rx="2" ry="2" />
<text  x="1185.95" y="559.5" ></text>
</g>
<g >
<title>tg/common/etl.(*oldestEntrySortableBuffer).Swap (102 samples, 0.01%)</title><rect x="988.9" y="389" width="0.1" height="15.0" fill="rgb(250,15,29)" rx="2" ry="2" />
<text  x="991.87" y="399.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (914 samples, 0.13%)</title><rect x="288.0" y="517" width="1.5" height="15.0" fill="rgb(237,186,54)" rx="2" ry="2" />
<text  x="290.99" y="527.5" ></text>
</g>
<g >
<title>tg/ethdb.(*mutation).Get (232 samples, 0.03%)</title><rect x="481.5" y="325" width="0.4" height="15.0" fill="rgb(244,108,20)" rx="2" ry="2" />
<text  x="484.54" y="335.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (2,708 samples, 0.39%)</title><rect x="150.3" y="453" width="4.6" height="15.0" fill="rgb(219,137,41)" rx="2" ry="2" />
<text  x="153.29" y="463.5" ></text>
</g>
<g >
<title>tg/core/vm.opStaticCall (563 samples, 0.08%)</title><rect x="492.9" y="469" width="0.9" height="15.0" fill="rgb(254,2,39)" rx="2" ry="2" />
<text  x="495.86" y="479.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).AddBalance (538 samples, 0.08%)</title><rect x="268.2" y="613" width="0.9" height="15.0" fill="rgb(212,173,1)" rx="2" ry="2" />
<text  x="271.23" y="623.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.(*roaringArray).runOptimize (182 samples, 0.03%)</title><rect x="146.7" y="613" width="0.3" height="15.0" fill="rgb(229,18,27)" rx="2" ry="2" />
<text  x="149.69" y="623.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (87 samples, 0.01%)</title><rect x="1051.9" y="549" width="0.1" height="15.0" fill="rgb(250,217,34)" rx="2" ry="2" />
<text  x="1054.88" y="559.5" ></text>
</g>
<g >
<title>runtime.cgocall (618 samples, 0.09%)</title><rect x="472.3" y="405" width="1.1" height="15.0" fill="rgb(221,22,29)" rx="2" ry="2" />
<text  x="475.31" y="415.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (105 samples, 0.02%)</title><rect x="996.2" y="485" width="0.1" height="15.0" fill="rgb(208,99,12)" rx="2" ry="2" />
<text  x="999.15" y="495.5" ></text>
</g>
<g >
<title>runtime.convT64 (79 samples, 0.01%)</title><rect x="593.6" y="421" width="0.1" height="15.0" fill="rgb(242,21,0)" rx="2" ry="2" />
<text  x="596.57" y="431.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (7,240 samples, 1.04%)</title><rect x="245.6" y="533" width="12.3" height="15.0" fill="rgb(232,14,39)" rx="2" ry="2" />
<text  x="248.63" y="543.5" ></text>
</g>
<g >
<title>runtime.mallocgc (102 samples, 0.01%)</title><rect x="834.4" y="517" width="0.2" height="15.0" fill="rgb(236,205,26)" rx="2" ry="2" />
<text  x="837.44" y="527.5" ></text>
</g>
<g >
<title>runtime.memhash_varlen (106 samples, 0.02%)</title><rect x="669.3" y="581" width="0.2" height="15.0" fill="rgb(226,34,19)" rx="2" ry="2" />
<text  x="672.31" y="591.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.(*runContainer16).iand (210 samples, 0.03%)</title><rect x="1056.4" y="549" width="0.3" height="15.0" fill="rgb(252,208,22)" rx="2" ry="2" />
<text  x="1059.37" y="559.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.(*state).padAndPermute (592 samples, 0.09%)</title><rect x="824.9" y="517" width="1.0" height="15.0" fill="rgb(229,160,53)" rx="2" ry="2" />
<text  x="827.92" y="527.5" ></text>
</g>
<g >
<title>runtime.cgoCheckArg (120 samples, 0.02%)</title><rect x="1045.9" y="581" width="0.2" height="15.0" fill="rgb(251,43,12)" rx="2" ry="2" />
<text  x="1048.88" y="591.5" ></text>
</g>
<g >
<title>tg/core/state.(*stateObject).GetState (228 samples, 0.03%)</title><rect x="516.6" y="437" width="0.4" height="15.0" fill="rgb(236,13,8)" rx="2" ry="2" />
<text  x="519.58" y="447.5" ></text>
</g>
<g >
<title>tg/ethdb.(*LmdbCursor).getBothRange (305 samples, 0.04%)</title><rect x="390.5" y="293" width="0.5" height="15.0" fill="rgb(239,164,17)" rx="2" ry="2" />
<text  x="393.47" y="303.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*Decoder).selferUnmarshal (2,158 samples, 0.31%)</title><rect x="161.9" y="613" width="3.7" height="15.0" fill="rgb(219,2,49)" rx="2" ry="2" />
<text  x="164.89" y="623.5" ></text>
</g>
<g >
<title>tg/ethdb.(*lmdbTx).Rollback (2,699 samples, 0.39%)</title><rect x="947.1" y="533" width="4.5" height="15.0" fill="rgb(210,76,27)" rx="2" ry="2" />
<text  x="950.05" y="543.5" ></text>
</g>
<g >
<title>runtime.memmove (111 samples, 0.02%)</title><rect x="891.2" y="485" width="0.2" height="15.0" fill="rgb(229,114,39)" rx="2" ry="2" />
<text  x="894.20" y="495.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.(*runContainer16).iand (175 samples, 0.03%)</title><rect x="148.0" y="597" width="0.3" height="15.0" fill="rgb(231,218,21)" rx="2" ry="2" />
<text  x="151.04" y="607.5" ></text>
</g>
<g >
<title>sort.rotate (191 samples, 0.03%)</title><rect x="1069.7" y="485" width="0.3" height="15.0" fill="rgb(208,229,47)" rx="2" ry="2" />
<text  x="1072.67" y="495.5" ></text>
</g>
<g >
<title>tg/common/etl.readElementFromDisk (412 samples, 0.06%)</title><rect x="959.4" y="661" width="0.7" height="15.0" fill="rgb(221,35,53)" rx="2" ry="2" />
<text  x="962.37" y="671.5" ></text>
</g>
<g >
<title>runtime.slicebytetostring (118 samples, 0.02%)</title><rect x="1066.6" y="629" width="0.2" height="15.0" fill="rgb(228,205,8)" rx="2" ry="2" />
<text  x="1069.61" y="639.5" ></text>
</g>
<g >
<title>tg/turbo/trie.(*HashBuilder).leafHashWithKeyVal (5,091 samples, 0.73%)</title><rect x="770.0" y="613" width="8.6" height="15.0" fill="rgb(208,18,44)" rx="2" ry="2" />
<text  x="772.98" y="623.5" ></text>
</g>
<g >
<title>tg/rlp.writeByteArrayCopy (135 samples, 0.02%)</title><rect x="211.0" y="373" width="0.2" height="15.0" fill="rgb(207,109,21)" rx="2" ry="2" />
<text  x="213.96" y="383.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (200 samples, 0.03%)</title><rect x="1181.4" y="565" width="0.3" height="15.0" fill="rgb(246,132,27)" rx="2" ry="2" />
<text  x="1184.40" y="575.5" ></text>
</g>
<g >
<title>sort.swapRange (181 samples, 0.03%)</title><rect x="183.9" y="357" width="0.3" height="15.0" fill="rgb(208,130,14)" rx="2" ry="2" />
<text  x="186.89" y="367.5" ></text>
</g>
<g >
<title>tg/common/etl.loadFilesIntoBucket (4,505 samples, 0.65%)</title><rect x="814.9" y="661" width="7.6" height="15.0" fill="rgb(223,138,42)" rx="2" ry="2" />
<text  x="817.90" y="671.5" ></text>
</g>
<g >
<title>runtime.exitsyscallfast (78 samples, 0.01%)</title><rect x="176.3" y="517" width="0.1" height="15.0" fill="rgb(206,135,20)" rx="2" ry="2" />
<text  x="179.25" y="527.5" ></text>
</g>
<g >
<title>runtime.mallocgc (68 samples, 0.01%)</title><rect x="995.3" y="533" width="0.1" height="15.0" fill="rgb(223,61,0)" rx="2" ry="2" />
<text  x="998.31" y="543.5" ></text>
</g>
<g >
<title>bufio.(*Writer).Flush (67 samples, 0.01%)</title><rect x="195.8" y="453" width="0.1" height="15.0" fill="rgb(227,3,25)" rx="2" ry="2" />
<text  x="198.80" y="463.5" ></text>
</g>
<g >
<title>tg/core/vm.opMulmod (304 samples, 0.04%)</title><rect x="417.6" y="469" width="0.5" height="15.0" fill="rgb(254,54,33)" rx="2" ry="2" />
<text  x="420.57" y="479.5" ></text>
</g>
<g >
<title>tg/core/vm.run (1,157 samples, 0.17%)</title><rect x="382.9" y="309" width="2.0" height="15.0" fill="rgb(244,161,32)" rx="2" ry="2" />
<text  x="385.93" y="319.5" ></text>
</g>
<g >
<title>cmpbody (66 samples, 0.01%)</title><rect x="440.2" y="325" width="0.1" height="15.0" fill="rgb(248,226,51)" rx="2" ry="2" />
<text  x="443.22" y="335.5" ></text>
</g>
<g >
<title>tg/core/vm/stack.(*Stack).Back (70 samples, 0.01%)</title><rect x="611.2" y="597" width="0.2" height="15.0" fill="rgb(231,80,36)" rx="2" ry="2" />
<text  x="614.24" y="607.5" ></text>
</g>
<g >
<title>cmpbody (67 samples, 0.01%)</title><rect x="323.4" y="357" width="0.1" height="15.0" fill="rgb(205,196,25)" rx="2" ry="2" />
<text  x="326.36" y="367.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).Write (66 samples, 0.01%)</title><rect x="195.8" y="421" width="0.1" height="15.0" fill="rgb(217,83,26)" rx="2" ry="2" />
<text  x="198.80" y="431.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.readFull (148 samples, 0.02%)</title><rect x="1089.4" y="501" width="0.3" height="15.0" fill="rgb(238,110,26)" rx="2" ry="2" />
<text  x="1092.45" y="511.5" ></text>
</g>
<g >
<title>tg/eth/stagedsync.SpawnTxLookup (28,406 samples, 4.09%)</title><rect x="166.6" y="741" width="48.2" height="15.0" fill="rgb(249,37,35)" rx="2" ry="2" />
<text  x="169.55" y="751.5" >tg/e..</text>
</g>
<g >
<title>cmpbody (191 samples, 0.03%)</title><rect x="870.8" y="181" width="0.3" height="15.0" fill="rgb(252,124,40)" rx="2" ry="2" />
<text  x="873.75" y="191.5" ></text>
</g>
<g >
<title>tg/core/vm.opDelegateCall (470 samples, 0.07%)</title><rect x="480.0" y="405" width="0.8" height="15.0" fill="rgb(249,96,24)" rx="2" ry="2" />
<text  x="483.05" y="415.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVMInterpreter).Run (103 samples, 0.01%)</title><rect x="609.3" y="293" width="0.2" height="15.0" fill="rgb(231,219,37)" rx="2" ry="2" />
<text  x="612.28" y="303.5" ></text>
</g>
<g >
<title>tg/core/vm.memoryMLoad (104 samples, 0.01%)</title><rect x="336.4" y="597" width="0.2" height="15.0" fill="rgb(245,193,10)" rx="2" ry="2" />
<text  x="339.42" y="607.5" ></text>
</g>
<g >
<title>cmpbody (161 samples, 0.02%)</title><rect x="499.0" y="245" width="0.3" height="15.0" fill="rgb(238,31,4)" rx="2" ry="2" />
<text  x="502.00" y="255.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.(*state).permute (218 samples, 0.03%)</title><rect x="769.5" y="597" width="0.4" height="15.0" fill="rgb(223,160,37)" rx="2" ry="2" />
<text  x="772.55" y="607.5" ></text>
</g>
<g >
<title>syscall.read (169 samples, 0.02%)</title><rect x="970.5" y="373" width="0.3" height="15.0" fill="rgb(234,173,9)" rx="2" ry="2" />
<text  x="973.47" y="383.5" ></text>
</g>
<g >
<title>tg/core/state.(*stateObject).GetState (115 samples, 0.02%)</title><rect x="463.2" y="421" width="0.2" height="15.0" fill="rgb(228,211,28)" rx="2" ry="2" />
<text  x="466.17" y="431.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).SetState (810 samples, 0.12%)</title><rect x="444.5" y="517" width="1.4" height="15.0" fill="rgb(226,212,31)" rx="2" ry="2" />
<text  x="447.49" y="527.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find (91 samples, 0.01%)</title><rect x="402.9" y="325" width="0.2" height="15.0" fill="rgb(226,54,50)" rx="2" ry="2" />
<text  x="405.92" y="335.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (248 samples, 0.04%)</title><rect x="260.5" y="533" width="0.4" height="15.0" fill="rgb(254,108,40)" rx="2" ry="2" />
<text  x="263.52" y="543.5" ></text>
</g>
<g >
<title>runtime.convT2I (86 samples, 0.01%)</title><rect x="268.7" y="565" width="0.1" height="15.0" fill="rgb(226,144,51)" rx="2" ry="2" />
<text  x="271.68" y="575.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (201 samples, 0.03%)</title><rect x="700.5" y="533" width="0.4" height="15.0" fill="rgb(215,30,11)" rx="2" ry="2" />
<text  x="703.52" y="543.5" ></text>
</g>
<g >
<title>reflect.valueInterface (144 samples, 0.02%)</title><rect x="199.8" y="341" width="0.3" height="15.0" fill="rgb(247,9,21)" rx="2" ry="2" />
<text  x="202.81" y="351.5" ></text>
</g>
<g >
<title>tg/core/types.(*Header).Hash (105 samples, 0.02%)</title><rect x="1119.2" y="789" width="0.1" height="15.0" fill="rgb(234,117,31)" rx="2" ry="2" />
<text  x="1122.15" y="799.5" ></text>
</g>
<g >
<title>runtime.slicebytetostring (189 samples, 0.03%)</title><rect x="701.2" y="613" width="0.3" height="15.0" fill="rgb(219,2,52)" rx="2" ry="2" />
<text  x="704.15" y="623.5" ></text>
</g>
<g >
<title>runtime.exitsyscallfast (67 samples, 0.01%)</title><rect x="1021.5" y="469" width="0.1" height="15.0" fill="rgb(247,39,49)" rx="2" ry="2" />
<text  x="1024.53" y="479.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find (410 samples, 0.06%)</title><rect x="288.5" y="485" width="0.7" height="15.0" fill="rgb(227,180,11)" rx="2" ry="2" />
<text  x="291.55" y="495.5" ></text>
</g>
<g >
<title>runtime.runOneTimer (590 samples, 0.08%)</title><rect x="108.1" y="773" width="1.0" height="15.0" fill="rgb(207,68,37)" rx="2" ry="2" />
<text  x="111.08" y="783.5" ></text>
</g>
<g >
<title>tg/ethdb.(*LmdbCursor).set (282 samples, 0.04%)</title><rect x="960.1" y="629" width="0.5" height="15.0" fill="rgb(236,221,46)" rx="2" ry="2" />
<text  x="963.13" y="639.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (109 samples, 0.02%)</title><rect x="983.8" y="437" width="0.2" height="15.0" fill="rgb(249,58,28)" rx="2" ry="2" />
<text  x="986.81" y="447.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).Get (612 samples, 0.09%)</title><rect x="258.5" y="533" width="1.0" height="15.0" fill="rgb(219,113,13)" rx="2" ry="2" />
<text  x="261.48" y="543.5" ></text>
</g>
<g >
<title>tg/ethdb.(*mutation).Commit (986 samples, 0.14%)</title><rect x="1126.6" y="773" width="1.7" height="15.0" fill="rgb(218,71,35)" rx="2" ry="2" />
<text  x="1129.61" y="783.5" ></text>
</g>
<g >
<title>runtime.mallocgc (321 samples, 0.05%)</title><rect x="1181.3" y="581" width="0.6" height="15.0" fill="rgb(219,26,43)" rx="2" ry="2" />
<text  x="1184.33" y="591.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (60 samples, 0.01%)</title><rect x="526.8" y="501" width="0.1" height="15.0" fill="rgb(248,4,8)" rx="2" ry="2" />
<text  x="529.84" y="511.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).GetState (71 samples, 0.01%)</title><rect x="608.8" y="453" width="0.1" height="15.0" fill="rgb(207,10,31)" rx="2" ry="2" />
<text  x="611.77" y="463.5" ></text>
</g>
<g >
<title>cmpbody (186 samples, 0.03%)</title><rect x="182.8" y="373" width="0.3" height="15.0" fill="rgb(211,90,2)" rx="2" ry="2" />
<text  x="185.80" y="383.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.(*Bitmap).And (446 samples, 0.06%)</title><rect x="1099.0" y="597" width="0.8" height="15.0" fill="rgb(228,128,47)" rx="2" ry="2" />
<text  x="1102.01" y="607.5" ></text>
</g>
<g >
<title>tg/rlp.cachedTypeInfo (153 samples, 0.02%)</title><rect x="793.2" y="581" width="0.2" height="15.0" fill="rgb(224,188,36)" rx="2" ry="2" />
<text  x="796.19" y="591.5" ></text>
</g>
<g >
<title>tg/core/types.DeriveSha (10,272 samples, 1.48%)</title><rect x="761.2" y="693" width="17.5" height="15.0" fill="rgb(246,139,52)" rx="2" ry="2" />
<text  x="764.21" y="703.5" ></text>
</g>
<g >
<title>syscall.Syscall (137 samples, 0.02%)</title><rect x="875.2" y="341" width="0.2" height="15.0" fill="rgb(209,111,54)" rx="2" ry="2" />
<text  x="878.17" y="351.5" ></text>
</g>
<g >
<title>bytes.Compare (88 samples, 0.01%)</title><rect x="993.4" y="213" width="0.1" height="15.0" fill="rgb(236,173,21)" rx="2" ry="2" />
<text  x="996.40" y="223.5" ></text>
</g>
<g >
<title>runtime/internal/atomic.Cas64 (59 samples, 0.01%)</title><rect x="795.5" y="661" width="0.1" height="15.0" fill="rgb(233,140,19)" rx="2" ry="2" />
<text  x="798.49" y="671.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.(*state).permute (1,072 samples, 0.15%)</title><rect x="739.0" y="629" width="1.8" height="15.0" fill="rgb(223,123,39)" rx="2" ry="2" />
<text  x="742.01" y="639.5" ></text>
</g>
<g >
<title>tg/core/types/accounts.(*Account).DecodeForStorage (338 samples, 0.05%)</title><rect x="244.9" y="581" width="0.6" height="15.0" fill="rgb(245,0,47)" rx="2" ry="2" />
<text  x="247.94" y="591.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*Encoder).encodeValue (1,133 samples, 0.16%)</title><rect x="783.2" y="629" width="1.9" height="15.0" fill="rgb(218,120,27)" rx="2" ry="2" />
<text  x="786.22" y="639.5" ></text>
</g>
<g >
<title>tg/ethdb.(*LmdbCursor).next (2,244 samples, 0.32%)</title><rect x="1022.2" y="629" width="3.9" height="15.0" fill="rgb(220,161,14)" rx="2" ry="2" />
<text  x="1025.24" y="639.5" ></text>
</g>
<g >
<title>sort.Search (649 samples, 0.09%)</title><rect x="281.4" y="501" width="1.1" height="15.0" fill="rgb(219,14,40)" rx="2" ry="2" />
<text  x="284.43" y="511.5" ></text>
</g>
<g >
<title>runtime.futexsleep (132 samples, 0.02%)</title><rect x="122.3" y="773" width="0.2" height="15.0" fill="rgb(231,128,31)" rx="2" ry="2" />
<text  x="125.31" y="783.5" ></text>
</g>
<g >
<title>runtime.makeslice (150 samples, 0.02%)</title><rect x="721.8" y="645" width="0.3" height="15.0" fill="rgb(236,160,42)" rx="2" ry="2" />
<text  x="724.80" y="655.5" ></text>
</g>
<g >
<title>reflect.valueInterface (60 samples, 0.01%)</title><rect x="217.6" y="389" width="0.1" height="15.0" fill="rgb(215,184,2)" rx="2" ry="2" />
<text  x="220.64" y="399.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (180 samples, 0.03%)</title><rect x="762.8" y="517" width="0.3" height="15.0" fill="rgb(238,60,48)" rx="2" ry="2" />
<text  x="765.77" y="527.5" ></text>
</g>
<g >
<title>runtime.mallocgc (109 samples, 0.02%)</title><rect x="1058.9" y="597" width="0.2" height="15.0" fill="rgb(254,134,1)" rx="2" ry="2" />
<text  x="1061.94" y="607.5" ></text>
</g>
<g >
<title>runtime.mallocgc (129 samples, 0.02%)</title><rect x="735.8" y="629" width="0.2" height="15.0" fill="rgb(214,68,51)" rx="2" ry="2" />
<text  x="738.83" y="639.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (135 samples, 0.02%)</title><rect x="977.5" y="533" width="0.2" height="15.0" fill="rgb(234,22,13)" rx="2" ry="2" />
<text  x="980.50" y="543.5" ></text>
</g>
<g >
<title>tg/turbo/rlphacks.RlpEncodedBytes.ToDoubleRLP (3,496 samples, 0.50%)</title><rect x="772.7" y="581" width="5.9" height="15.0" fill="rgb(240,215,28)" rx="2" ry="2" />
<text  x="775.68" y="591.5" ></text>
</g>
<g >
<title>tg/common.HashData (754 samples, 0.11%)</title><rect x="824.9" y="549" width="1.3" height="15.0" fill="rgb(254,17,48)" rx="2" ry="2" />
<text  x="827.88" y="559.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find (97 samples, 0.01%)</title><rect x="606.9" y="341" width="0.2" height="15.0" fill="rgb(227,73,29)" rx="2" ry="2" />
<text  x="609.91" y="351.5" ></text>
</g>
<g >
<title>tg/ethdb.(*mutation).Get (76 samples, 0.01%)</title><rect x="264.7" y="581" width="0.1" height="15.0" fill="rgb(248,50,42)" rx="2" ry="2" />
<text  x="267.68" y="591.5" ></text>
</g>
<g >
<title>runtime.runqgrab (2,971 samples, 0.43%)</title><rect x="113.3" y="789" width="5.1" height="15.0" fill="rgb(232,5,22)" rx="2" ry="2" />
<text  x="116.31" y="799.5" ></text>
</g>
<g >
<title>runtime.gentraceback (118 samples, 0.02%)</title><rect x="155.5" y="405" width="0.2" height="15.0" fill="rgb(227,187,44)" rx="2" ry="2" />
<text  x="158.47" y="415.5" ></text>
</g>
<g >
<title>reflect.Copy (319 samples, 0.05%)</title><rect x="765.4" y="325" width="0.5" height="15.0" fill="rgb(210,141,12)" rx="2" ry="2" />
<text  x="768.37" y="335.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.xorInUnaligned (74 samples, 0.01%)</title><rect x="778.4" y="533" width="0.1" height="15.0" fill="rgb(248,156,45)" rx="2" ry="2" />
<text  x="781.39" y="543.5" ></text>
</g>
<g >
<title>tg/p2p/rlpx.readHandshakeMsg (81 samples, 0.01%)</title><rect x="1187.5" y="741" width="0.1" height="15.0" fill="rgb(253,18,35)" rx="2" ry="2" />
<text  x="1190.49" y="751.5" ></text>
</g>
<g >
<title>tg/core/vm.opMload (340 samples, 0.05%)</title><rect x="534.7" y="597" width="0.5" height="15.0" fill="rgb(223,208,46)" rx="2" ry="2" />
<text  x="537.65" y="607.5" ></text>
</g>
<g >
<title>sort.Search (1,439 samples, 0.21%)</title><rect x="1099.9" y="613" width="2.4" height="15.0" fill="rgb(207,13,13)" rx="2" ry="2" />
<text  x="1102.89" y="623.5" ></text>
</g>
<g >
<title>tg/core/state.(*stateObject).GetCommittedState (1,114 samples, 0.16%)</title><rect x="490.8" y="421" width="1.9" height="15.0" fill="rgb(212,116,31)" rx="2" ry="2" />
<text  x="493.79" y="431.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (67 samples, 0.01%)</title><rect x="516.6" y="309" width="0.1" height="15.0" fill="rgb(243,73,26)" rx="2" ry="2" />
<text  x="519.63" y="319.5" ></text>
</g>
<g >
<title>bytes.(*Buffer).grow (61 samples, 0.01%)</title><rect x="785.3" y="597" width="0.1" height="15.0" fill="rgb(246,205,46)" rx="2" ry="2" />
<text  x="788.26" y="607.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (116 samples, 0.02%)</title><rect x="396.4" y="341" width="0.2" height="15.0" fill="rgb(206,196,46)" rx="2" ry="2" />
<text  x="399.39" y="351.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).Put (397 samples, 0.06%)</title><rect x="730.0" y="597" width="0.7" height="15.0" fill="rgb(253,204,21)" rx="2" ry="2" />
<text  x="732.98" y="607.5" ></text>
</g>
<g >
<title>crypto/aes.encryptBlockAsm (355 samples, 0.05%)</title><rect x="1177.7" y="757" width="0.6" height="15.0" fill="rgb(251,156,17)" rx="2" ry="2" />
<text  x="1180.71" y="767.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find.func1 (136 samples, 0.02%)</title><rect x="511.0" y="341" width="0.2" height="15.0" fill="rgb(246,213,50)" rx="2" ry="2" />
<text  x="514.02" y="351.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (4,503 samples, 0.65%)</title><rect x="246.0" y="501" width="7.7" height="15.0" fill="rgb(205,52,2)" rx="2" ry="2" />
<text  x="249.04" y="511.5" ></text>
</g>
<g >
<title>reflect.Value.Interface (74 samples, 0.01%)</title><rect x="217.6" y="405" width="0.1" height="15.0" fill="rgb(240,72,27)" rx="2" ry="2" />
<text  x="220.62" y="415.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (152 samples, 0.02%)</title><rect x="736.6" y="565" width="0.3" height="15.0" fill="rgb(236,73,48)" rx="2" ry="2" />
<text  x="739.61" y="575.5" ></text>
</g>
<g >
<title>sort.swapRange (128 samples, 0.02%)</title><rect x="187.6" y="277" width="0.2" height="15.0" fill="rgb(221,112,29)" rx="2" ry="2" />
<text  x="190.55" y="287.5" ></text>
</g>
<g >
<title>tg/rlp.Encode (76 samples, 0.01%)</title><rect x="1129.9" y="741" width="0.1" height="15.0" fill="rgb(219,65,34)" rx="2" ry="2" />
<text  x="1132.90" y="751.5" ></text>
</g>
<g >
<title>runtime.newobject (71 samples, 0.01%)</title><rect x="361.2" y="533" width="0.2" height="15.0" fill="rgb(221,70,2)" rx="2" ry="2" />
<text  x="364.23" y="543.5" ></text>
</g>
<g >
<title>runtime.newobject (513 samples, 0.07%)</title><rect x="934.3" y="485" width="0.8" height="15.0" fill="rgb(228,57,13)" rx="2" ry="2" />
<text  x="937.26" y="495.5" ></text>
</g>
<g >
<title>tg/rlp.(*encbuf).toWriter (1,128 samples, 0.16%)</title><rect x="747.8" y="645" width="1.9" height="15.0" fill="rgb(235,149,33)" rx="2" ry="2" />
<text  x="750.82" y="655.5" ></text>
</g>
<g >
<title>runtime.memmove (98 samples, 0.01%)</title><rect x="735.6" y="645" width="0.2" height="15.0" fill="rgb(252,10,2)" rx="2" ry="2" />
<text  x="738.61" y="655.5" ></text>
</g>
<g >
<title>tg/core/vm.run (69 samples, 0.01%)</title><rect x="394.2" y="245" width="0.1" height="15.0" fill="rgb(253,221,16)" rx="2" ry="2" />
<text  x="397.21" y="255.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb._Cfunc_lmdbgo_mdb_cursor_get2 (85 samples, 0.01%)</title><rect x="450.4" y="293" width="0.1" height="15.0" fill="rgb(230,56,34)" rx="2" ry="2" />
<text  x="453.38" y="303.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (184 samples, 0.03%)</title><rect x="243.3" y="485" width="0.3" height="15.0" fill="rgb(217,210,1)" rx="2" ry="2" />
<text  x="246.33" y="495.5" ></text>
</g>
<g >
<title>sort.Search (226 samples, 0.03%)</title><rect x="525.1" y="453" width="0.4" height="15.0" fill="rgb(219,220,49)" rx="2" ry="2" />
<text  x="528.08" y="463.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*encWr).end (176 samples, 0.03%)</title><rect x="875.1" y="501" width="0.3" height="15.0" fill="rgb(226,109,34)" rx="2" ry="2" />
<text  x="878.13" y="511.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*ioDecReader).ReadByte (115 samples, 0.02%)</title><rect x="969.9" y="453" width="0.2" height="15.0" fill="rgb(239,70,25)" rx="2" ry="2" />
<text  x="972.90" y="463.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*decRd).readb (526 samples, 0.08%)</title><rect x="970.2" y="501" width="0.9" height="15.0" fill="rgb(251,101,49)" rx="2" ry="2" />
<text  x="973.21" y="511.5" ></text>
</g>
<g >
<title>tg/eth/stagedsync.SpawnLogIndex (18,582 samples, 2.67%)</title><rect x="135.0" y="741" width="31.6" height="15.0" fill="rgb(207,158,48)" rx="2" ry="2" />
<text  x="137.99" y="751.5" >tg..</text>
</g>
<g >
<title>runtime.signalM (191 samples, 0.03%)</title><rect x="124.4" y="789" width="0.3" height="15.0" fill="rgb(253,73,35)" rx="2" ry="2" />
<text  x="127.39" y="799.5" ></text>
</g>
<g >
<title>tg/core/state.(*stateObject).GetState (136 samples, 0.02%)</title><rect x="415.4" y="373" width="0.2" height="15.0" fill="rgb(229,79,36)" rx="2" ry="2" />
<text  x="418.40" y="383.5" ></text>
</g>
<g >
<title>tg/turbo/trie.(*StateCursor).Next (60 samples, 0.01%)</title><rect x="1031.1" y="693" width="0.1" height="15.0" fill="rgb(206,104,3)" rx="2" ry="2" />
<text  x="1034.09" y="703.5" ></text>
</g>
<g >
<title>sync/atomic.(*Value).Store (94 samples, 0.01%)</title><rect x="1182.3" y="581" width="0.1" height="15.0" fill="rgb(221,28,54)" rx="2" ry="2" />
<text  x="1185.26" y="591.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.(*arrayContainer).iaddReturnMinimized (391 samples, 0.06%)</title><rect x="1059.3" y="597" width="0.7" height="15.0" fill="rgb(248,42,44)" rx="2" ry="2" />
<text  x="1062.33" y="607.5" ></text>
</g>
<g >
<title>runtime.evacuate_faststr (872 samples, 0.13%)</title><rect x="982.3" y="533" width="1.4" height="15.0" fill="rgb(222,158,33)" rx="2" ry="2" />
<text  x="985.25" y="543.5" ></text>
</g>
<g >
<title>tg/rlp.writeUint256 (456 samples, 0.07%)</title><rect x="1124.7" y="581" width="0.8" height="15.0" fill="rgb(243,185,12)" rx="2" ry="2" />
<text  x="1127.74" y="591.5" ></text>
</g>
<g >
<title>sort.rotate (144 samples, 0.02%)</title><rect x="188.3" y="277" width="0.3" height="15.0" fill="rgb(234,175,45)" rx="2" ry="2" />
<text  x="191.32" y="287.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (70 samples, 0.01%)</title><rect x="323.2" y="421" width="0.1" height="15.0" fill="rgb(227,119,47)" rx="2" ry="2" />
<text  x="326.17" y="431.5" ></text>
</g>
<g >
<title>runtime.mallocgc (187 samples, 0.03%)</title><rect x="286.0" y="549" width="0.3" height="15.0" fill="rgb(222,229,46)" rx="2" ry="2" />
<text  x="289.00" y="559.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*encWr).writestr (97 samples, 0.01%)</title><rect x="783.6" y="533" width="0.2" height="15.0" fill="rgb(217,40,24)" rx="2" ry="2" />
<text  x="786.61" y="543.5" ></text>
</g>
<g >
<title>runtime.cgocall (541 samples, 0.08%)</title><rect x="1094.0" y="549" width="0.9" height="15.0" fill="rgb(213,30,32)" rx="2" ry="2" />
<text  x="1096.96" y="559.5" ></text>
</g>
<g >
<title>tg/rlp.(*encbuf).encodeUint (74 samples, 0.01%)</title><rect x="1111.8" y="517" width="0.1" height="15.0" fill="rgb(217,91,36)" rx="2" ry="2" />
<text  x="1114.77" y="527.5" ></text>
</g>
<g >
<title>runtime.newobject (430 samples, 0.06%)</title><rect x="1009.9" y="565" width="0.7" height="15.0" fill="rgb(215,172,44)" rx="2" ry="2" />
<text  x="1012.92" y="575.5" ></text>
</g>
<g >
<title>tg/crypto/secp256k1._Cfunc_secp256k1_ext_ecdsa_recover (289 samples, 0.04%)</title><rect x="371.0" y="421" width="0.5" height="15.0" fill="rgb(213,88,51)" rx="2" ry="2" />
<text  x="373.97" y="431.5" ></text>
</g>
<g >
<title>tg/core/state.(*journal).append (458 samples, 0.07%)</title><rect x="266.6" y="613" width="0.8" height="15.0" fill="rgb(210,137,21)" rx="2" ry="2" />
<text  x="269.61" y="623.5" ></text>
</g>
<g >
<title>cmpbody (166 samples, 0.02%)</title><rect x="524.5" y="389" width="0.3" height="15.0" fill="rgb(220,155,20)" rx="2" ry="2" />
<text  x="527.55" y="399.5" ></text>
</g>
<g >
<title>tg/core/types/accounts.(*Account).EncodeForStorage (147 samples, 0.02%)</title><rect x="671.4" y="645" width="0.2" height="15.0" fill="rgb(245,117,35)" rx="2" ry="2" />
<text  x="674.40" y="655.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (200 samples, 0.03%)</title><rect x="317.6" y="517" width="0.4" height="15.0" fill="rgb(225,2,6)" rx="2" ry="2" />
<text  x="320.62" y="527.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (212 samples, 0.03%)</title><rect x="669.6" y="549" width="0.4" height="15.0" fill="rgb(217,222,24)" rx="2" ry="2" />
<text  x="672.63" y="559.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVMInterpreter).Run (31,920 samples, 4.59%)</title><rect x="465.5" y="549" width="54.2" height="15.0" fill="rgb(250,110,2)" rx="2" ry="2" />
<text  x="468.50" y="559.5" >tg/co..</text>
</g>
<g >
<title>tg/core/vm.(*Memory).Set32 (62 samples, 0.01%)</title><rect x="385.4" y="325" width="0.1" height="15.0" fill="rgb(252,218,1)" rx="2" ry="2" />
<text  x="388.37" y="335.5" ></text>
</g>
<g >
<title>tg/core/state.(*stateObject).GetCommittedState (64 samples, 0.01%)</title><rect x="411.9" y="421" width="0.1" height="15.0" fill="rgb(230,109,15)" rx="2" ry="2" />
<text  x="414.92" y="431.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Txn).abort (830 samples, 0.12%)</title><rect x="849.0" y="501" width="1.4" height="15.0" fill="rgb(221,25,8)" rx="2" ry="2" />
<text  x="852.01" y="511.5" ></text>
</g>
<g >
<title>sort.Search (643 samples, 0.09%)</title><rect x="436.0" y="325" width="1.1" height="15.0" fill="rgb(252,34,44)" rx="2" ry="2" />
<text  x="439.01" y="335.5" ></text>
</g>
<g >
<title>runtime.mallocgc (658 samples, 0.09%)</title><rect x="627.2" y="645" width="1.1" height="15.0" fill="rgb(247,57,46)" rx="2" ry="2" />
<text  x="630.19" y="655.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).AddBalance (733 samples, 0.11%)</title><rect x="262.3" y="629" width="1.3" height="15.0" fill="rgb(234,144,17)" rx="2" ry="2" />
<text  x="265.34" y="639.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).Create (74 samples, 0.01%)</title><rect x="410.0" y="517" width="0.1" height="15.0" fill="rgb(252,119,19)" rx="2" ry="2" />
<text  x="412.96" y="527.5" ></text>
</g>
<g >
<title>runtime.SetFinalizer (480 samples, 0.07%)</title><rect x="832.7" y="501" width="0.8" height="15.0" fill="rgb(214,10,32)" rx="2" ry="2" />
<text  x="835.71" y="511.5" ></text>
</g>
<g >
<title>bufio.(*Writer).Flush (105 samples, 0.02%)</title><rect x="1079.3" y="485" width="0.2" height="15.0" fill="rgb(253,3,54)" rx="2" ry="2" />
<text  x="1082.32" y="495.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (117 samples, 0.02%)</title><rect x="1010.3" y="501" width="0.2" height="15.0" fill="rgb(229,45,24)" rx="2" ry="2" />
<text  x="1013.26" y="511.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (190 samples, 0.03%)</title><rect x="700.5" y="501" width="0.3" height="15.0" fill="rgb(222,12,43)" rx="2" ry="2" />
<text  x="703.52" y="511.5" ></text>
</g>
<g >
<title>runtime.reentersyscall (85 samples, 0.01%)</title><rect x="948.9" y="421" width="0.2" height="15.0" fill="rgb(245,106,32)" rx="2" ry="2" />
<text  x="951.94" y="431.5" ></text>
</g>
<g >
<title>cmpbody (81 samples, 0.01%)</title><rect x="525.2" y="405" width="0.1" height="15.0" fill="rgb(208,14,37)" rx="2" ry="2" />
<text  x="528.18" y="415.5" ></text>
</g>
<g >
<title>tg/ethdb/bitmapdb.WalkChunkWithKeys (6,849 samples, 0.99%)</title><rect x="146.6" y="661" width="11.6" height="15.0" fill="rgb(210,22,3)" rx="2" ry="2" />
<text  x="149.61" y="671.5" ></text>
</g>
<g >
<title>tg/ethdb.(*TxDb).Get (141 samples, 0.02%)</title><rect x="423.4" y="453" width="0.2" height="15.0" fill="rgb(212,183,26)" rx="2" ry="2" />
<text  x="426.39" y="463.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (146 samples, 0.02%)</title><rect x="700.5" y="453" width="0.3" height="15.0" fill="rgb(245,224,22)" rx="2" ry="2" />
<text  x="703.53" y="463.5" ></text>
</g>
<g >
<title>tg/core/vm.opDelegateCall (255 samples, 0.04%)</title><rect x="604.0" y="405" width="0.4" height="15.0" fill="rgb(250,129,44)" rx="2" ry="2" />
<text  x="606.96" y="415.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).getVal1 (1,398 samples, 0.20%)</title><rect x="289.8" y="517" width="2.4" height="15.0" fill="rgb(243,150,27)" rx="2" ry="2" />
<text  x="292.83" y="527.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).getVal2 (189 samples, 0.03%)</title><rect x="323.9" y="453" width="0.3" height="15.0" fill="rgb(221,148,29)" rx="2" ry="2" />
<text  x="326.90" y="463.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find.func1 (77 samples, 0.01%)</title><rect x="289.6" y="485" width="0.1" height="15.0" fill="rgb(254,206,53)" rx="2" ry="2" />
<text  x="292.55" y="495.5" ></text>
</g>
<g >
<title>runtime.findrunnable (10,079 samples, 1.45%)</title><rect x="103.2" y="821" width="17.1" height="15.0" fill="rgb(212,95,14)" rx="2" ry="2" />
<text  x="106.21" y="831.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb._Cfunc_lmdbgo_mdb_cursor_get2 (338 samples, 0.05%)</title><rect x="492.1" y="293" width="0.5" height="15.0" fill="rgb(221,100,44)" rx="2" ry="2" />
<text  x="495.06" y="303.5" ></text>
</g>
<g >
<title>tg/core/vm/stack.(*Stack).Len (211 samples, 0.03%)</title><rect x="623.3" y="613" width="0.3" height="15.0" fill="rgb(213,52,38)" rx="2" ry="2" />
<text  x="626.28" y="623.5" ></text>
</g>
<g >
<title>tg/core/vm.opSload (302 samples, 0.04%)</title><rect x="481.4" y="405" width="0.5" height="15.0" fill="rgb(209,144,16)" rx="2" ry="2" />
<text  x="484.42" y="415.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find.func1 (91 samples, 0.01%)</title><rect x="606.9" y="309" width="0.2" height="15.0" fill="rgb(233,49,43)" rx="2" ry="2" />
<text  x="609.92" y="319.5" ></text>
</g>
<g >
<title>runtime.hashGrow (349 samples, 0.05%)</title><rect x="700.5" y="597" width="0.6" height="15.0" fill="rgb(250,33,27)" rx="2" ry="2" />
<text  x="703.48" y="607.5" ></text>
</g>
<g >
<title>runtime.mallocgc (112 samples, 0.02%)</title><rect x="235.2" y="645" width="0.2" height="15.0" fill="rgb(238,159,42)" rx="2" ry="2" />
<text  x="238.20" y="655.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).StaticCall (137 samples, 0.02%)</title><rect x="517.4" y="389" width="0.2" height="15.0" fill="rgb(226,2,30)" rx="2" ry="2" />
<text  x="520.40" y="399.5" ></text>
</g>
<g >
<title>cmpbody (1,126 samples, 0.16%)</title><rect x="250.0" y="421" width="1.9" height="15.0" fill="rgb(205,128,32)" rx="2" ry="2" />
<text  x="252.98" y="431.5" ></text>
</g>
<g >
<title>tg/core/state.(*stateObject).setState (476 samples, 0.07%)</title><rect x="597.1" y="565" width="0.8" height="15.0" fill="rgb(235,157,16)" rx="2" ry="2" />
<text  x="600.08" y="575.5" ></text>
</g>
<g >
<title>tg/ethdb.(*LmdbCursor).Delete (317 samples, 0.05%)</title><rect x="818.7" y="597" width="0.5" height="15.0" fill="rgb(217,58,48)" rx="2" ry="2" />
<text  x="821.66" y="607.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).getVal2 (164 samples, 0.02%)</title><rect x="419.4" y="325" width="0.2" height="15.0" fill="rgb(244,219,29)" rx="2" ry="2" />
<text  x="422.37" y="335.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.keccakF1600 (553 samples, 0.08%)</title><rect x="212.7" y="485" width="0.9" height="15.0" fill="rgb(228,72,6)" rx="2" ry="2" />
<text  x="215.68" y="495.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.(*state).padAndPermute (7,411 samples, 1.07%)</title><rect x="996.9" y="549" width="12.6" height="15.0" fill="rgb(236,172,32)" rx="2" ry="2" />
<text  x="999.93" y="559.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.operrno (60 samples, 0.01%)</title><rect x="1095.0" y="597" width="0.1" height="15.0" fill="rgb(218,93,25)" rx="2" ry="2" />
<text  x="1098.02" y="607.5" ></text>
</g>
<g >
<title>tg/rlp.Encode (3,305 samples, 0.48%)</title><rect x="209.1" y="549" width="5.6" height="15.0" fill="rgb(254,12,3)" rx="2" ry="2" />
<text  x="212.09" y="559.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*cborDecDriver).DecodeBytes (171 samples, 0.02%)</title><rect x="1047.3" y="565" width="0.2" height="15.0" fill="rgb(227,205,34)" rx="2" ry="2" />
<text  x="1050.25" y="575.5" ></text>
</g>
<g >
<title>sort.swapRange (107 samples, 0.02%)</title><rect x="989.7" y="373" width="0.1" height="15.0" fill="rgb(252,89,19)" rx="2" ry="2" />
<text  x="992.66" y="383.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find (67 samples, 0.01%)</title><rect x="389.9" y="213" width="0.1" height="15.0" fill="rgb(221,46,8)" rx="2" ry="2" />
<text  x="392.92" y="223.5" ></text>
</g>
<g >
<title>tg/rlp.makePtrWriter.func1 (1,810 samples, 0.26%)</title><rect x="225.0" y="565" width="3.0" height="15.0" fill="rgb(205,127,33)" rx="2" ry="2" />
<text  x="227.96" y="575.5" ></text>
</g>
<g >
<title>bytes.Compare (308 samples, 0.04%)</title><rect x="580.1" y="405" width="0.5" height="15.0" fill="rgb(250,222,39)" rx="2" ry="2" />
<text  x="583.06" y="415.5" ></text>
</g>
<g >
<title>aeshashbody (87 samples, 0.01%)</title><rect x="1084.7" y="597" width="0.2" height="15.0" fill="rgb(231,129,12)" rx="2" ry="2" />
<text  x="1087.74" y="607.5" ></text>
</g>
<g >
<title>bytes.Compare (102 samples, 0.01%)</title><rect x="192.1" y="165" width="0.1" height="15.0" fill="rgb(221,7,23)" rx="2" ry="2" />
<text  x="195.05" y="175.5" ></text>
</g>
<g >
<title>tg/core/vm.run (65 samples, 0.01%)</title><rect x="391.3" y="309" width="0.1" height="15.0" fill="rgb(222,6,11)" rx="2" ry="2" />
<text  x="394.26" y="319.5" ></text>
</g>
<g >
<title>tg/core/types.traverseInLexOrder (10,260 samples, 1.48%)</title><rect x="761.2" y="677" width="17.5" height="15.0" fill="rgb(252,220,17)" rx="2" ry="2" />
<text  x="764.23" y="687.5" ></text>
</g>
<g >
<title>tg/core/vm.RunPrecompiledContract (199 samples, 0.03%)</title><rect x="608.0" y="501" width="0.4" height="15.0" fill="rgb(223,75,40)" rx="2" ry="2" />
<text  x="611.04" y="511.5" ></text>
</g>
<g >
<title>runtime.convT2E (170 samples, 0.02%)</title><rect x="168.5" y="661" width="0.3" height="15.0" fill="rgb(218,111,5)" rx="2" ry="2" />
<text  x="171.48" y="671.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).getVal2.func1 (328 samples, 0.05%)</title><rect x="797.5" y="517" width="0.6" height="15.0" fill="rgb(251,17,0)" rx="2" ry="2" />
<text  x="800.51" y="527.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVMInterpreter).Run (365 samples, 0.05%)</title><rect x="391.1" y="357" width="0.7" height="15.0" fill="rgb(244,165,30)" rx="2" ry="2" />
<text  x="394.13" y="367.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.fastpathDecodeTypeSwitch (181 samples, 0.03%)</title><rect x="145.2" y="597" width="0.3" height="15.0" fill="rgb(225,62,38)" rx="2" ry="2" />
<text  x="148.18" y="607.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (100 samples, 0.01%)</title><rect x="861.8" y="421" width="0.2" height="15.0" fill="rgb(250,159,18)" rx="2" ry="2" />
<text  x="864.78" y="431.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).getVal2.func1 (292 samples, 0.04%)</title><rect x="326.4" y="437" width="0.5" height="15.0" fill="rgb(253,151,18)" rx="2" ry="2" />
<text  x="329.43" y="447.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).getVal1.func1 (610 samples, 0.09%)</title><rect x="258.5" y="501" width="1.0" height="15.0" fill="rgb(253,184,25)" rx="2" ry="2" />
<text  x="261.48" y="511.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb._Cfunc_lmdbgo_mdb_cursor_get2 (275 samples, 0.04%)</title><rect x="390.5" y="229" width="0.4" height="15.0" fill="rgb(225,104,44)" rx="2" ry="2" />
<text  x="393.48" y="239.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).create (284 samples, 0.04%)</title><rect x="459.9" y="565" width="0.5" height="15.0" fill="rgb(241,220,48)" rx="2" ry="2" />
<text  x="462.94" y="575.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (81 samples, 0.01%)</title><rect x="876.1" y="453" width="0.1" height="15.0" fill="rgb(234,71,48)" rx="2" ry="2" />
<text  x="879.09" y="463.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (99 samples, 0.01%)</title><rect x="984.5" y="485" width="0.2" height="15.0" fill="rgb(215,22,25)" rx="2" ry="2" />
<text  x="987.51" y="495.5" ></text>
</g>
<g >
<title>tg/crypto/secp256k1.RecoverPubkeyWithContext.func1 (90 samples, 0.01%)</title><rect x="420.4" y="309" width="0.1" height="15.0" fill="rgb(216,214,8)" rx="2" ry="2" />
<text  x="423.39" y="319.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find.func1 (88 samples, 0.01%)</title><rect x="323.6" y="405" width="0.2" height="15.0" fill="rgb(231,106,26)" rx="2" ry="2" />
<text  x="326.61" y="415.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (63 samples, 0.01%)</title><rect x="164.4" y="421" width="0.1" height="15.0" fill="rgb(212,221,20)" rx="2" ry="2" />
<text  x="167.39" y="431.5" ></text>
</g>
<g >
<title>tg/common/etl.Transform (28,406 samples, 4.09%)</title><rect x="166.6" y="709" width="48.2" height="15.0" fill="rgb(205,73,11)" rx="2" ry="2" />
<text  x="169.55" y="719.5" >tg/c..</text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Txn).Abort (71 samples, 0.01%)</title><rect x="231.6" y="645" width="0.1" height="15.0" fill="rgb(224,100,8)" rx="2" ry="2" />
<text  x="234.57" y="655.5" ></text>
</g>
<g >
<title>tg/core/rawdb.ReadBody (4,131 samples, 0.59%)</title><rect x="215.0" y="629" width="7.0" height="15.0" fill="rgb(231,25,21)" rx="2" ry="2" />
<text  x="218.00" y="639.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb._Cfunc_lmdbgo_mdb_cursor_get2 (587 samples, 0.08%)</title><rect x="403.3" y="293" width="1.0" height="15.0" fill="rgb(216,95,20)" rx="2" ry="2" />
<text  x="406.28" y="303.5" ></text>
</g>
<g >
<title>runtime.exitsyscall (125 samples, 0.02%)</title><rect x="593.0" y="389" width="0.2" height="15.0" fill="rgb(219,76,27)" rx="2" ry="2" />
<text  x="596.02" y="399.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Txn).abort (1,543 samples, 0.22%)</title><rect x="947.2" y="501" width="2.6" height="15.0" fill="rgb(240,104,36)" rx="2" ry="2" />
<text  x="950.17" y="511.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVMInterpreter).Run (180 samples, 0.03%)</title><rect x="413.4" y="293" width="0.3" height="15.0" fill="rgb(229,3,3)" rx="2" ry="2" />
<text  x="416.40" y="303.5" ></text>
</g>
<g >
<title>tg/core/vm.opMload (154 samples, 0.02%)</title><rect x="425.5" y="533" width="0.3" height="15.0" fill="rgb(218,61,20)" rx="2" ry="2" />
<text  x="428.51" y="543.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).Call (310 samples, 0.04%)</title><rect x="484.4" y="261" width="0.5" height="15.0" fill="rgb(224,147,32)" rx="2" ry="2" />
<text  x="487.38" y="271.5" ></text>
</g>
<g >
<title>tg/core/vm.gasSStoreEIP2200 (110 samples, 0.02%)</title><rect x="469.7" y="533" width="0.2" height="15.0" fill="rgb(205,65,39)" rx="2" ry="2" />
<text  x="472.68" y="543.5" ></text>
</g>
<g >
<title>tg/ethdb.(*TxDb).Get (432 samples, 0.06%)</title><rect x="527.9" y="517" width="0.7" height="15.0" fill="rgb(213,144,42)" rx="2" ry="2" />
<text  x="530.88" y="527.5" ></text>
</g>
<g >
<title>tg/core/vm.opDelegateCall (3,325 samples, 0.48%)</title><rect x="482.7" y="469" width="5.7" height="15.0" fill="rgb(249,80,0)" rx="2" ry="2" />
<text  x="485.72" y="479.5" ></text>
</g>
<g >
<title>runtime.memmove (68 samples, 0.01%)</title><rect x="1101.8" y="501" width="0.1" height="15.0" fill="rgb(250,3,34)" rx="2" ry="2" />
<text  x="1104.81" y="511.5" ></text>
</g>
<g >
<title>tg/eth/stagedsync.DefaultStages.func9.1 (28,821 samples, 4.15%)</title><rect x="1057.9" y="757" width="48.9" height="15.0" fill="rgb(232,123,2)" rx="2" ry="2" />
<text  x="1060.89" y="767.5" >tg/e..</text>
</g>
<g >
<title>runtime.(*mcache).refill (233 samples, 0.03%)</title><rect x="238.3" y="597" width="0.4" height="15.0" fill="rgb(241,176,40)" rx="2" ry="2" />
<text  x="241.28" y="607.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).getVal1 (125 samples, 0.02%)</title><rect x="423.4" y="405" width="0.2" height="15.0" fill="rgb(244,161,44)" rx="2" ry="2" />
<text  x="426.39" y="415.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVMInterpreter).Run (268 samples, 0.04%)</title><rect x="515.4" y="293" width="0.4" height="15.0" fill="rgb(235,41,34)" rx="2" ry="2" />
<text  x="518.39" y="303.5" ></text>
</g>
<g >
<title>tg/ethdb.(*mutation).Get (63 samples, 0.01%)</title><rect x="409.8" y="437" width="0.1" height="15.0" fill="rgb(230,62,25)" rx="2" ry="2" />
<text  x="412.78" y="447.5" ></text>
</g>
<g >
<title>tg/ethdb.(*MutationItem).Less (76 samples, 0.01%)</title><rect x="666.4" y="501" width="0.1" height="15.0" fill="rgb(207,129,20)" rx="2" ry="2" />
<text  x="669.38" y="511.5" ></text>
</g>
<g >
<title>runtime.makeslice (145 samples, 0.02%)</title><rect x="667.7" y="645" width="0.2" height="15.0" fill="rgb(206,84,32)" rx="2" ry="2" />
<text  x="670.66" y="655.5" ></text>
</g>
<g >
<title>runtime.exitsyscallfast (75 samples, 0.01%)</title><rect x="848.2" y="421" width="0.1" height="15.0" fill="rgb(251,187,25)" rx="2" ry="2" />
<text  x="851.17" y="431.5" ></text>
</g>
<g >
<title>runtime.makeslice (1,607 samples, 0.23%)</title><rect x="1053.3" y="501" width="2.8" height="15.0" fill="rgb(223,172,16)" rx="2" ry="2" />
<text  x="1056.34" y="511.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*BTree).ReplaceOrInsert (186 samples, 0.03%)</title><rect x="665.7" y="629" width="0.3" height="15.0" fill="rgb(228,151,42)" rx="2" ry="2" />
<text  x="668.67" y="639.5" ></text>
</g>
<g >
<title>runtime.cgocall (103 samples, 0.01%)</title><rect x="504.9" y="357" width="0.2" height="15.0" fill="rgb(247,15,41)" rx="2" ry="2" />
<text  x="507.90" y="367.5" ></text>
</g>
<g >
<title>runtime.newobject (104 samples, 0.01%)</title><rect x="1121.7" y="709" width="0.2" height="15.0" fill="rgb(226,167,48)" rx="2" ry="2" />
<text  x="1124.74" y="719.5" ></text>
</g>
<g >
<title>tg/ethdb.(*LmdbCursor).putCurrent (82 samples, 0.01%)</title><rect x="814.6" y="581" width="0.1" height="15.0" fill="rgb(205,162,39)" rx="2" ry="2" />
<text  x="817.56" y="591.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.keccakF1600 (2,245 samples, 0.32%)</title><rect x="774.6" y="533" width="3.8" height="15.0" fill="rgb(254,39,27)" rx="2" ry="2" />
<text  x="777.58" y="543.5" ></text>
</g>
<g >
<title>sort.symMerge (3,518 samples, 0.51%)</title><rect x="988.2" y="453" width="6.0" height="15.0" fill="rgb(212,164,0)" rx="2" ry="2" />
<text  x="991.20" y="463.5" ></text>
</g>
<g >
<title>runtime.notewakeup (61 samples, 0.01%)</title><rect x="1177.3" y="613" width="0.1" height="15.0" fill="rgb(221,76,39)" rx="2" ry="2" />
<text  x="1180.31" y="623.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (105 samples, 0.02%)</title><rect x="481.5" y="261" width="0.2" height="15.0" fill="rgb(212,195,20)" rx="2" ry="2" />
<text  x="484.54" y="271.5" ></text>
</g>
<g >
<title>tg/ethdb.(*LmdbKV).View (80,098 samples, 11.53%)</title><rect x="822.5" y="645" width="136.1" height="15.0" fill="rgb(225,44,15)" rx="2" ry="2" />
<text  x="825.55" y="655.5" >tg/ethdb.(*LmdbKV..</text>
</g>
<g >
<title>sort.symMerge (4,777 samples, 0.69%)</title><rect x="1069.4" y="501" width="8.1" height="15.0" fill="rgb(212,167,49)" rx="2" ry="2" />
<text  x="1072.43" y="511.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.(*Bitmap).Or (124 samples, 0.02%)</title><rect x="1047.9" y="645" width="0.2" height="15.0" fill="rgb(224,227,19)" rx="2" ry="2" />
<text  x="1050.87" y="655.5" ></text>
</g>
<g >
<title>runtime.mapaccess1 (88 samples, 0.01%)</title><rect x="768.9" y="581" width="0.1" height="15.0" fill="rgb(210,177,14)" rx="2" ry="2" />
<text  x="771.86" y="591.5" ></text>
</g>
<g >
<title>tg/core/state.(*stateObject).GetState (239 samples, 0.03%)</title><rect x="363.6" y="501" width="0.4" height="15.0" fill="rgb(239,35,48)" rx="2" ry="2" />
<text  x="366.58" y="511.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (206 samples, 0.03%)</title><rect x="669.6" y="517" width="0.4" height="15.0" fill="rgb(229,45,9)" rx="2" ry="2" />
<text  x="672.63" y="527.5" ></text>
</g>
<g >
<title>tg/core/vm.opCall (3,170 samples, 0.46%)</title><rect x="477.3" y="469" width="5.4" height="15.0" fill="rgb(236,7,4)" rx="2" ry="2" />
<text  x="480.27" y="479.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find.func1 (95 samples, 0.01%)</title><rect x="461.4" y="373" width="0.1" height="15.0" fill="rgb(224,107,33)" rx="2" ry="2" />
<text  x="464.37" y="383.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVMInterpreter).Run (549 samples, 0.08%)</title><rect x="462.5" y="469" width="1.0" height="15.0" fill="rgb(244,141,28)" rx="2" ry="2" />
<text  x="465.53" y="479.5" ></text>
</g>
<g >
<title>tg/crypto/secp256k1._Cfunc_secp256k1_ext_ecdsa_recover (1,391 samples, 0.20%)</title><rect x="598.6" y="485" width="2.3" height="15.0" fill="rgb(231,183,38)" rx="2" ry="2" />
<text  x="601.58" y="495.5" ></text>
</g>
<g >
<title>tg/ethdb.(*lmdbTx).Cursor (118 samples, 0.02%)</title><rect x="933.7" y="501" width="0.2" height="15.0" fill="rgb(250,61,11)" rx="2" ry="2" />
<text  x="936.71" y="511.5" ></text>
</g>
<g >
<title>tg/core/vm.opCall (181 samples, 0.03%)</title><rect x="485.9" y="341" width="0.3" height="15.0" fill="rgb(226,117,31)" rx="2" ry="2" />
<text  x="488.88" y="351.5" ></text>
</g>
<g >
<title>tg/ethdb.(*mutation).doCommit.func1 (10,564 samples, 1.52%)</title><rect x="796.4" y="597" width="18.0" height="15.0" fill="rgb(215,164,31)" rx="2" ry="2" />
<text  x="799.44" y="607.5" ></text>
</g>
<g >
<title>reflect.unsafe_New (60 samples, 0.01%)</title><rect x="219.4" y="389" width="0.1" height="15.0" fill="rgb(205,58,39)" rx="2" ry="2" />
<text  x="222.43" y="399.5" ></text>
</g>
<g >
<title>sort.swapRange (181 samples, 0.03%)</title><rect x="1069.7" y="469" width="0.3" height="15.0" fill="rgb(246,110,32)" rx="2" ry="2" />
<text  x="1072.69" y="479.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (112 samples, 0.02%)</title><rect x="434.9" y="357" width="0.2" height="15.0" fill="rgb(205,8,21)" rx="2" ry="2" />
<text  x="437.88" y="367.5" ></text>
</g>
<g >
<title>tg/rlp.writeUint (79 samples, 0.01%)</title><rect x="212.2" y="405" width="0.1" height="15.0" fill="rgb(236,103,33)" rx="2" ry="2" />
<text  x="215.18" y="415.5" ></text>
</g>
<g >
<title>tg/ethdb.(*MutationItem).Less (67 samples, 0.01%)</title><rect x="703.5" y="485" width="0.1" height="15.0" fill="rgb(246,92,39)" rx="2" ry="2" />
<text  x="706.48" y="495.5" ></text>
</g>
<g >
<title>runtime.growslice (106 samples, 0.02%)</title><rect x="136.8" y="677" width="0.2" height="15.0" fill="rgb(237,45,20)" rx="2" ry="2" />
<text  x="139.77" y="687.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (104 samples, 0.01%)</title><rect x="562.7" y="453" width="0.2" height="15.0" fill="rgb(254,148,5)" rx="2" ry="2" />
<text  x="565.74" y="463.5" ></text>
</g>
<g >
<title>tg/core/state.(*stateObject).GetState (60 samples, 0.01%)</title><rect x="387.4" y="309" width="0.1" height="15.0" fill="rgb(254,122,8)" rx="2" ry="2" />
<text  x="390.38" y="319.5" ></text>
</g>
<g >
<title>sort.symMerge (5,341 samples, 0.77%)</title><rect x="863.3" y="485" width="9.1" height="15.0" fill="rgb(235,65,37)" rx="2" ry="2" />
<text  x="866.34" y="495.5" ></text>
</g>
<g >
<title>tg/rlp.decodeDecoder (3,162 samples, 0.46%)</title><rect x="197.8" y="437" width="5.4" height="15.0" fill="rgb(235,111,15)" rx="2" ry="2" />
<text  x="200.81" y="447.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (90 samples, 0.01%)</title><rect x="762.8" y="437" width="0.2" height="15.0" fill="rgb(235,226,26)" rx="2" ry="2" />
<text  x="765.81" y="447.5" ></text>
</g>
<g >
<title>tg/core/vm.opStaticCall (1,327 samples, 0.19%)</title><rect x="501.5" y="469" width="2.3" height="15.0" fill="rgb(206,186,18)" rx="2" ry="2" />
<text  x="504.50" y="479.5" ></text>
</g>
<g >
<title>tg/core/vm/stack.(*Stack).Peek (271 samples, 0.04%)</title><rect x="612.2" y="597" width="0.4" height="15.0" fill="rgb(214,3,11)" rx="2" ry="2" />
<text  x="615.18" y="607.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (112 samples, 0.02%)</title><rect x="977.5" y="517" width="0.2" height="15.0" fill="rgb(217,107,9)" rx="2" ry="2" />
<text  x="980.53" y="527.5" ></text>
</g>
<g >
<title>runtime.mallocgc (70 samples, 0.01%)</title><rect x="329.4" y="565" width="0.1" height="15.0" fill="rgb(209,9,22)" rx="2" ry="2" />
<text  x="332.40" y="575.5" ></text>
</g>
<g >
<title>tg/rlp.(*Stream).readByte (65 samples, 0.01%)</title><rect x="218.7" y="341" width="0.1" height="15.0" fill="rgb(214,78,44)" rx="2" ry="2" />
<text  x="221.67" y="351.5" ></text>
</g>
<g >
<title>runtime.memhash_varlen (83 samples, 0.01%)</title><rect x="557.2" y="533" width="0.1" height="15.0" fill="rgb(218,172,16)" rx="2" ry="2" />
<text  x="560.19" y="543.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (60 samples, 0.01%)</title><rect x="894.6" y="437" width="0.1" height="15.0" fill="rgb(250,96,30)" rx="2" ry="2" />
<text  x="897.55" y="447.5" ></text>
</g>
<g >
<title>tg/ethdb.(*LmdbCursor).getBothRange (6,405 samples, 0.92%)</title><rect x="582.9" y="485" width="10.8" height="15.0" fill="rgb(205,20,39)" rx="2" ry="2" />
<text  x="585.85" y="495.5" ></text>
</g>
<g >
<title>bytes.Compare (92 samples, 0.01%)</title><rect x="1027.7" y="485" width="0.1" height="15.0" fill="rgb(245,53,49)" rx="2" ry="2" />
<text  x="1030.67" y="495.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring/roaring64.(*Bitmap).RunOptimize (1,209 samples, 0.17%)</title><rect x="1099.9" y="597" width="2.0" height="15.0" fill="rgb(250,3,18)" rx="2" ry="2" />
<text  x="1102.89" y="607.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (1,213 samples, 0.17%)</title><rect x="272.9" y="485" width="2.1" height="15.0" fill="rgb(249,213,12)" rx="2" ry="2" />
<text  x="275.94" y="495.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find (2,167 samples, 0.31%)</title><rect x="575.9" y="437" width="3.7" height="15.0" fill="rgb(245,103,25)" rx="2" ry="2" />
<text  x="578.91" y="447.5" ></text>
</g>
<g >
<title>sort.Search (174 samples, 0.03%)</title><rect x="323.3" y="405" width="0.3" height="15.0" fill="rgb(221,96,39)" rx="2" ry="2" />
<text  x="326.29" y="415.5" ></text>
</g>
<g >
<title>tg/core/rawdb.ReadSenders (83 samples, 0.01%)</title><rect x="795.2" y="709" width="0.1" height="15.0" fill="rgb(218,93,7)" rx="2" ry="2" />
<text  x="798.19" y="719.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).getVal2 (97 samples, 0.01%)</title><rect x="481.8" y="261" width="0.1" height="15.0" fill="rgb(209,200,48)" rx="2" ry="2" />
<text  x="484.77" y="271.5" ></text>
</g>
<g >
<title>tg/consensus/ethash.(*Ethash).VerifyHeaders.func3 (3,185 samples, 0.46%)</title><rect x="129.2" y="869" width="5.4" height="15.0" fill="rgb(222,74,14)" rx="2" ry="2" />
<text  x="132.17" y="879.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (83 samples, 0.01%)</title><rect x="1097.9" y="533" width="0.2" height="15.0" fill="rgb(245,195,48)" rx="2" ry="2" />
<text  x="1100.94" y="543.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).DelegateCall (112 samples, 0.02%)</title><rect x="497.1" y="325" width="0.2" height="15.0" fill="rgb(248,162,15)" rx="2" ry="2" />
<text  x="500.10" y="335.5" ></text>
</g>
<g >
<title>tg/core/state.(*journal).append (724 samples, 0.10%)</title><rect x="595.4" y="549" width="1.2" height="15.0" fill="rgb(222,2,46)" rx="2" ry="2" />
<text  x="598.42" y="559.5" ></text>
</g>
<g >
<title>tg/rlp.writeBytes (141 samples, 0.02%)</title><rect x="1124.3" y="597" width="0.3" height="15.0" fill="rgb(226,100,22)" rx="2" ry="2" />
<text  x="1127.33" y="607.5" ></text>
</g>
<g >
<title>runtime.exitsyscallfast (156 samples, 0.02%)</title><rect x="949.3" y="421" width="0.2" height="15.0" fill="rgb(246,190,19)" rx="2" ry="2" />
<text  x="952.27" y="431.5" ></text>
</g>
<g >
<title>runtime.makeslice (190 samples, 0.03%)</title><rect x="164.3" y="517" width="0.3" height="15.0" fill="rgb(221,62,29)" rx="2" ry="2" />
<text  x="167.27" y="527.5" ></text>
</g>
<g >
<title>sort.rotate (137 samples, 0.02%)</title><rect x="1072.6" y="405" width="0.2" height="15.0" fill="rgb(212,179,4)" rx="2" ry="2" />
<text  x="1075.55" y="415.5" ></text>
</g>
<g >
<title>sort.symMerge (552 samples, 0.08%)</title><rect x="1076.2" y="277" width="0.9" height="15.0" fill="rgb(234,127,45)" rx="2" ry="2" />
<text  x="1079.17" y="287.5" ></text>
</g>
<g >
<title>runtime.entersyscall (60 samples, 0.01%)</title><rect x="726.7" y="533" width="0.1" height="15.0" fill="rgb(226,15,52)" rx="2" ry="2" />
<text  x="729.66" y="543.5" ></text>
</g>
<g >
<title>tg/common/etl.(*oldestEntrySortableBuffer).Swap (114 samples, 0.02%)</title><rect x="866.1" y="341" width="0.2" height="15.0" fill="rgb(225,154,51)" rx="2" ry="2" />
<text  x="869.14" y="351.5" ></text>
</g>
<g >
<title>runtime.newobject (79 samples, 0.01%)</title><rect x="1099.3" y="549" width="0.1" height="15.0" fill="rgb(252,62,41)" rx="2" ry="2" />
<text  x="1102.29" y="559.5" ></text>
</g>
<g >
<title>tg/core/types.(*Header).Hash (98 samples, 0.01%)</title><rect x="1180.5" y="805" width="0.2" height="15.0" fill="rgb(217,106,18)" rx="2" ry="2" />
<text  x="1183.49" y="815.5" ></text>
</g>
<g >
<title>sort.swapRange (101 samples, 0.01%)</title><rect x="867.3" y="309" width="0.2" height="15.0" fill="rgb(228,185,40)" rx="2" ry="2" />
<text  x="870.29" y="319.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).getVal1.func1 (74 samples, 0.01%)</title><rect x="321.4" y="453" width="0.1" height="15.0" fill="rgb(209,155,52)" rx="2" ry="2" />
<text  x="324.40" y="463.5" ></text>
</g>
<g >
<title>cmpbody (739 samples, 0.11%)</title><rect x="705.7" y="453" width="1.3" height="15.0" fill="rgb(238,153,33)" rx="2" ry="2" />
<text  x="708.74" y="463.5" ></text>
</g>
<g >
<title>runtime.mallocgc (93 samples, 0.01%)</title><rect x="1060.5" y="581" width="0.2" height="15.0" fill="rgb(224,7,18)" rx="2" ry="2" />
<text  x="1063.53" y="591.5" ></text>
</g>
<g >
<title>tg/core/vm.opStaticCall (231 samples, 0.03%)</title><rect x="487.7" y="341" width="0.4" height="15.0" fill="rgb(230,179,25)" rx="2" ry="2" />
<text  x="490.70" y="351.5" ></text>
</g>
<g >
<title>sort.quickSort (631 samples, 0.09%)</title><rect x="1027.9" y="501" width="1.0" height="15.0" fill="rgb(226,60,3)" rx="2" ry="2" />
<text  x="1030.86" y="511.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).SubBalance (662 samples, 0.10%)</title><rect x="269.1" y="613" width="1.2" height="15.0" fill="rgb(229,185,52)" rx="2" ry="2" />
<text  x="272.14" y="623.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (64 samples, 0.01%)</title><rect x="894.5" y="453" width="0.2" height="15.0" fill="rgb(215,109,34)" rx="2" ry="2" />
<text  x="897.55" y="463.5" ></text>
</g>
<g >
<title>tg/core/vm.run (574 samples, 0.08%)</title><rect x="413.3" y="373" width="0.9" height="15.0" fill="rgb(218,34,17)" rx="2" ry="2" />
<text  x="416.25" y="383.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (146 samples, 0.02%)</title><rect x="736.6" y="549" width="0.3" height="15.0" fill="rgb(229,137,52)" rx="2" ry="2" />
<text  x="739.61" y="559.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.(*roaringArray).insertNewKeyValueAt (445 samples, 0.06%)</title><rect x="1051.5" y="597" width="0.8" height="15.0" fill="rgb(218,208,32)" rx="2" ry="2" />
<text  x="1054.51" y="607.5" ></text>
</g>
<g >
<title>runtime.newobject (130 samples, 0.02%)</title><rect x="791.9" y="469" width="0.3" height="15.0" fill="rgb(245,204,31)" rx="2" ry="2" />
<text  x="794.93" y="479.5" ></text>
</g>
<g >
<title>tg/core/types.MakeSigner (440 samples, 0.06%)</title><rect x="656.7" y="677" width="0.7" height="15.0" fill="rgb(222,146,42)" rx="2" ry="2" />
<text  x="659.66" y="687.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).GetState (881 samples, 0.13%)</title><rect x="606.5" y="517" width="1.5" height="15.0" fill="rgb(223,59,51)" rx="2" ry="2" />
<text  x="609.51" y="527.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring/roaring64.(*Bitmap).And (491 samples, 0.07%)</title><rect x="1099.0" y="613" width="0.8" height="15.0" fill="rgb(214,158,7)" rx="2" ry="2" />
<text  x="1101.98" y="623.5" ></text>
</g>
<g >
<title>runtime.epollwait (1,151 samples, 0.17%)</title><rect x="109.4" y="789" width="1.9" height="15.0" fill="rgb(230,146,41)" rx="2" ry="2" />
<text  x="112.38" y="799.5" ></text>
</g>
<g >
<title>sort.symMerge (1,715 samples, 0.25%)</title><rect x="869.2" y="261" width="2.9" height="15.0" fill="rgb(241,227,14)" rx="2" ry="2" />
<text  x="872.24" y="271.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*bufioEncWriter).writestr (233 samples, 0.03%)</title><rect x="994.6" y="437" width="0.4" height="15.0" fill="rgb(205,202,4)" rx="2" ry="2" />
<text  x="997.56" y="447.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (88 samples, 0.01%)</title><rect x="260.0" y="533" width="0.2" height="15.0" fill="rgb(232,201,25)" rx="2" ry="2" />
<text  x="263.02" y="543.5" ></text>
</g>
<g >
<title>runtime.mallocgc (85 samples, 0.01%)</title><rect x="949.6" y="453" width="0.2" height="15.0" fill="rgb(222,137,30)" rx="2" ry="2" />
<text  x="952.61" y="463.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (140 samples, 0.02%)</title><rect x="852.2" y="533" width="0.2" height="15.0" fill="rgb(211,119,19)" rx="2" ry="2" />
<text  x="855.21" y="543.5" ></text>
</g>
<g >
<title>sort.swapRange (145 samples, 0.02%)</title><rect x="186.8" y="293" width="0.2" height="15.0" fill="rgb(254,76,15)" rx="2" ry="2" />
<text  x="189.79" y="303.5" ></text>
</g>
<g >
<title>cmpbody (99 samples, 0.01%)</title><rect x="867.5" y="293" width="0.2" height="15.0" fill="rgb(224,205,42)" rx="2" ry="2" />
<text  x="870.50" y="303.5" ></text>
</g>
<g >
<title>tg/rlp.cachedWriter (235 samples, 0.03%)</title><rect x="1112.7" y="661" width="0.4" height="15.0" fill="rgb(210,103,51)" rx="2" ry="2" />
<text  x="1115.72" y="671.5" ></text>
</g>
<g >
<title>runtime.mallocgc (142 samples, 0.02%)</title><rect x="895.3" y="501" width="0.2" height="15.0" fill="rgb(236,160,45)" rx="2" ry="2" />
<text  x="898.30" y="511.5" ></text>
</g>
<g >
<title>tg/ethdb.(*ObjectDatabase).Get.func1 (21,150 samples, 3.04%)</title><rect x="911.1" y="533" width="36.0" height="15.0" fill="rgb(217,122,32)" rx="2" ry="2" />
<text  x="914.14" y="543.5" >tg/..</text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*Encoder).Encode (1,407 samples, 0.20%)</title><rect x="193.8" y="533" width="2.4" height="15.0" fill="rgb(235,159,48)" rx="2" ry="2" />
<text  x="196.77" y="543.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.(*state).Write (292 samples, 0.04%)</title><rect x="1130.6" y="757" width="0.5" height="15.0" fill="rgb(246,185,1)" rx="2" ry="2" />
<text  x="1133.57" y="767.5" ></text>
</g>
<g >
<title>tg/common/etl.extractBucketIntoFiles (80,098 samples, 11.53%)</title><rect x="822.5" y="677" width="136.1" height="15.0" fill="rgb(222,195,31)" rx="2" ry="2" />
<text  x="825.55" y="687.5" >tg/common/etl.ext..</text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (77 samples, 0.01%)</title><rect x="1109.6" y="421" width="0.2" height="15.0" fill="rgb(240,6,3)" rx="2" ry="2" />
<text  x="1112.64" y="431.5" ></text>
</g>
<g >
<title>bytes.Compare (120 samples, 0.02%)</title><rect x="990.7" y="341" width="0.2" height="15.0" fill="rgb(210,229,28)" rx="2" ry="2" />
<text  x="993.72" y="351.5" ></text>
</g>
<g >
<title>tg/ethdb.(*LmdbCursor).getBothRange (69 samples, 0.01%)</title><rect x="487.2" y="293" width="0.1" height="15.0" fill="rgb(220,220,52)" rx="2" ry="2" />
<text  x="490.16" y="303.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (227 samples, 0.03%)</title><rect x="235.8" y="613" width="0.4" height="15.0" fill="rgb(214,24,8)" rx="2" ry="2" />
<text  x="238.84" y="623.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (357 samples, 0.05%)</title><rect x="897.4" y="469" width="0.6" height="15.0" fill="rgb(219,80,35)" rx="2" ry="2" />
<text  x="900.43" y="479.5" ></text>
</g>
<g >
<title>tg/common/etl.NewCollector.func2 (9,924 samples, 1.43%)</title><rect x="978.6" y="597" width="16.8" height="15.0" fill="rgb(205,104,33)" rx="2" ry="2" />
<text  x="981.59" y="607.5" ></text>
</g>
<g >
<title>bytes.Compare (164 samples, 0.02%)</title><rect x="1071.3" y="437" width="0.3" height="15.0" fill="rgb(246,207,12)" rx="2" ry="2" />
<text  x="1074.29" y="447.5" ></text>
</g>
<g >
<title>tg/ethdb.(*mutation).Get (179 samples, 0.03%)</title><rect x="487.0" y="325" width="0.3" height="15.0" fill="rgb(246,226,16)" rx="2" ry="2" />
<text  x="489.97" y="335.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (108 samples, 0.02%)</title><rect x="971.4" y="405" width="0.2" height="15.0" fill="rgb(217,9,4)" rx="2" ry="2" />
<text  x="974.40" y="415.5" ></text>
</g>
<g >
<title>runtime.cgocall (531 samples, 0.08%)</title><rect x="928.5" y="421" width="0.9" height="15.0" fill="rgb(247,177,41)" rx="2" ry="2" />
<text  x="931.48" y="431.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.(*state).Reset (80 samples, 0.01%)</title><rect x="553.7" y="581" width="0.2" height="15.0" fill="rgb(218,109,12)" rx="2" ry="2" />
<text  x="556.72" y="591.5" ></text>
</g>
<g >
<title>runtime.mapaccess2 (79 samples, 0.01%)</title><rect x="596.7" y="533" width="0.1" height="15.0" fill="rgb(214,140,39)" rx="2" ry="2" />
<text  x="599.69" y="543.5" ></text>
</g>
<g >
<title>tg/rlp.makeStructWriter.func1 (1,766 samples, 0.25%)</title><rect x="1122.6" y="613" width="3.0" height="15.0" fill="rgb(205,90,45)" rx="2" ry="2" />
<text  x="1125.61" y="623.5" ></text>
</g>
<g >
<title>tg/crypto/bn256/cloudflare.(*gfP6).Mul (68 samples, 0.01%)</title><rect x="446.8" y="405" width="0.1" height="15.0" fill="rgb(237,60,12)" rx="2" ry="2" />
<text  x="449.77" y="415.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVMInterpreter).Run (69 samples, 0.01%)</title><rect x="413.4" y="229" width="0.2" height="15.0" fill="rgb(235,62,5)" rx="2" ry="2" />
<text  x="416.44" y="239.5" ></text>
</g>
<g >
<title>runtime.mallocgc (133 samples, 0.02%)</title><rect x="643.7" y="629" width="0.2" height="15.0" fill="rgb(253,68,34)" rx="2" ry="2" />
<text  x="646.72" y="639.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*BTree).Get (89 samples, 0.01%)</title><rect x="450.2" y="373" width="0.2" height="15.0" fill="rgb(234,115,30)" rx="2" ry="2" />
<text  x="453.21" y="383.5" ></text>
</g>
<g >
<title>tg/p2p.Send (118 samples, 0.02%)</title><rect x="1188.0" y="853" width="0.2" height="15.0" fill="rgb(252,216,23)" rx="2" ry="2" />
<text  x="1190.97" y="863.5" ></text>
</g>
<g >
<title>tg/core/vm.opCall (23,755 samples, 3.42%)</title><rect x="369.1" y="533" width="40.3" height="15.0" fill="rgb(212,219,41)" rx="2" ry="2" />
<text  x="372.08" y="543.5" >tg/..</text>
</g>
<g >
<title>tg/core/vm.(*EVMInterpreter).Run (125 samples, 0.02%)</title><rect x="480.2" y="293" width="0.2" height="15.0" fill="rgb(247,13,15)" rx="2" ry="2" />
<text  x="483.23" y="303.5" ></text>
</g>
<g >
<title>github.com/holiman/uint256.(*Int).Div (86 samples, 0.01%)</title><rect x="396.0" y="453" width="0.2" height="15.0" fill="rgb(248,150,11)" rx="2" ry="2" />
<text  x="399.04" y="463.5" ></text>
</g>
<g >
<title>tg/turbo/trie.(*RootHashAggregator).Receive (1,224 samples, 0.18%)</title><rect x="1029.0" y="693" width="2.1" height="15.0" fill="rgb(214,6,26)" rx="2" ry="2" />
<text  x="1032.01" y="703.5" ></text>
</g>
<g >
<title>tg/rlp.writeByteArrayCopy (221 samples, 0.03%)</title><rect x="1110.0" y="501" width="0.4" height="15.0" fill="rgb(209,98,49)" rx="2" ry="2" />
<text  x="1113.04" y="511.5" ></text>
</g>
<g >
<title>tg/core/state.(*PlainStateReader).ReadAccountCode (2,700 samples, 0.39%)</title><rect x="287.9" y="597" width="4.6" height="15.0" fill="rgb(223,22,11)" rx="2" ry="2" />
<text  x="290.89" y="607.5" ></text>
</g>
<g >
<title>sort.stable (5,549 samples, 0.80%)</title><rect x="863.0" y="501" width="9.4" height="15.0" fill="rgb(248,143,7)" rx="2" ry="2" />
<text  x="865.99" y="511.5" ></text>
</g>
<g >
<title>runtime.growWork_faststr (482 samples, 0.07%)</title><rect x="1065.0" y="613" width="0.8" height="15.0" fill="rgb(223,166,3)" rx="2" ry="2" />
<text  x="1068.00" y="623.5" ></text>
</g>
<g >
<title>tg/crypto/bn256/cloudflare.gfpMul (104 samples, 0.01%)</title><rect x="502.0" y="229" width="0.1" height="15.0" fill="rgb(245,27,20)" rx="2" ry="2" />
<text  x="504.97" y="239.5" ></text>
</g>
<g >
<title>tg/common/etl.(*oldestEntrySortableBuffer).Swap (84 samples, 0.01%)</title><rect x="989.7" y="357" width="0.1" height="15.0" fill="rgb(216,138,26)" rx="2" ry="2" />
<text  x="992.70" y="367.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (237 samples, 0.03%)</title><rect x="369.7" y="421" width="0.4" height="15.0" fill="rgb(239,17,15)" rx="2" ry="2" />
<text  x="372.67" y="431.5" ></text>
</g>
<g >
<title>tg/rlp.decodeUint256 (804 samples, 0.12%)</title><rect x="1183.8" y="533" width="1.4" height="15.0" fill="rgb(239,163,1)" rx="2" ry="2" />
<text  x="1186.82" y="543.5" ></text>
</g>
<g >
<title>runtime.convT2Inoptr (86 samples, 0.01%)</title><rect x="237.8" y="645" width="0.1" height="15.0" fill="rgb(236,207,30)" rx="2" ry="2" />
<text  x="240.78" y="655.5" ></text>
</g>
<g >
<title>tg/consensus/ethash.(*Ethash).Finalize (60 samples, 0.01%)</title><rect x="234.3" y="693" width="0.1" height="15.0" fill="rgb(230,212,36)" rx="2" ry="2" />
<text  x="237.26" y="703.5" ></text>
</g>
<g >
<title>runtime.mallocgc (73 samples, 0.01%)</title><rect x="1098.8" y="565" width="0.1" height="15.0" fill="rgb(238,183,23)" rx="2" ry="2" />
<text  x="1101.77" y="575.5" ></text>
</g>
<g >
<title>tg/ethdb.(*ObjectDatabase).Get (69 samples, 0.01%)</title><rect x="196.7" y="549" width="0.1" height="15.0" fill="rgb(245,91,7)" rx="2" ry="2" />
<text  x="199.69" y="559.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.fastpathEncodeTypeSwitch (285 samples, 0.04%)</title><rect x="994.5" y="501" width="0.5" height="15.0" fill="rgb(236,45,23)" rx="2" ry="2" />
<text  x="997.48" y="511.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).Get (488 samples, 0.07%)</title><rect x="525.8" y="485" width="0.9" height="15.0" fill="rgb(235,4,12)" rx="2" ry="2" />
<text  x="528.83" y="495.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find (77 samples, 0.01%)</title><rect x="460.7" y="421" width="0.1" height="15.0" fill="rgb(236,169,26)" rx="2" ry="2" />
<text  x="463.72" y="431.5" ></text>
</g>
<g >
<title>tg/core/vm.opStaticCall (60 samples, 0.01%)</title><rect x="501.7" y="341" width="0.1" height="15.0" fill="rgb(248,202,35)" rx="2" ry="2" />
<text  x="504.74" y="351.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring/internal.(*ByteInputAdapter).Next (121 samples, 0.02%)</title><rect x="1092.3" y="597" width="0.2" height="15.0" fill="rgb(212,43,7)" rx="2" ry="2" />
<text  x="1095.34" y="607.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).AddBalance (202 samples, 0.03%)</title><rect x="339.2" y="549" width="0.4" height="15.0" fill="rgb(240,29,3)" rx="2" ry="2" />
<text  x="342.22" y="559.5" ></text>
</g>
<g >
<title>tg/common/changeset.(*ChangeSet).Add (519 samples, 0.07%)</title><rect x="736.1" y="661" width="0.9" height="15.0" fill="rgb(249,107,49)" rx="2" ry="2" />
<text  x="739.13" y="671.5" ></text>
</g>
<g >
<title>cmpbody (633 samples, 0.09%)</title><rect x="279.4" y="437" width="1.1" height="15.0" fill="rgb(243,175,2)" rx="2" ry="2" />
<text  x="282.39" y="447.5" ></text>
</g>
<g >
<title>runtime.makeslice (74 samples, 0.01%)</title><rect x="645.4" y="661" width="0.2" height="15.0" fill="rgb(210,84,28)" rx="2" ry="2" />
<text  x="648.44" y="671.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find.func1 (327 samples, 0.05%)</title><rect x="690.0" y="565" width="0.5" height="15.0" fill="rgb(211,47,0)" rx="2" ry="2" />
<text  x="692.99" y="575.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).GetLogs (134 samples, 0.02%)</title><rect x="643.4" y="677" width="0.3" height="15.0" fill="rgb(232,99,9)" rx="2" ry="2" />
<text  x="646.44" y="687.5" ></text>
</g>
<g >
<title>runtime.newarray (105 samples, 0.02%)</title><rect x="261.6" y="549" width="0.1" height="15.0" fill="rgb(227,142,45)" rx="2" ry="2" />
<text  x="264.56" y="559.5" ></text>
</g>
<g >
<title>runtime.mallocgc.func1 (109 samples, 0.02%)</title><rect x="561.1" y="437" width="0.2" height="15.0" fill="rgb(232,0,44)" rx="2" ry="2" />
<text  x="564.11" y="447.5" ></text>
</g>
<g >
<title>runtime.mallocgc (117 samples, 0.02%)</title><rect x="721.8" y="629" width="0.2" height="15.0" fill="rgb(252,228,13)" rx="2" ry="2" />
<text  x="724.82" y="639.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*cborDecDriver).DecodeBytes (124 samples, 0.02%)</title><rect x="145.3" y="565" width="0.2" height="15.0" fill="rgb(234,123,31)" rx="2" ry="2" />
<text  x="148.26" y="575.5" ></text>
</g>
<g >
<title>tg/core/vm.(*Contract).UseGas (179 samples, 0.03%)</title><rect x="319.8" y="597" width="0.3" height="15.0" fill="rgb(221,140,14)" rx="2" ry="2" />
<text  x="322.77" y="607.5" ></text>
</g>
<g >
<title>tg/ethdb.(*mutation).Get (95 samples, 0.01%)</title><rect x="463.2" y="373" width="0.2" height="15.0" fill="rgb(254,5,16)" rx="2" ry="2" />
<text  x="466.21" y="383.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.(*state).padAndPermute (5,275 samples, 0.76%)</title><rect x="751.3" y="629" width="8.9" height="15.0" fill="rgb(220,196,53)" rx="2" ry="2" />
<text  x="754.29" y="639.5" ></text>
</g>
<g >
<title>tg/common/etl.(*currentTableReader).Get (205 samples, 0.03%)</title><rect x="146.3" y="661" width="0.3" height="15.0" fill="rgb(236,57,4)" rx="2" ry="2" />
<text  x="149.27" y="671.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).Put.func1 (1,727 samples, 0.25%)</title><rect x="780.1" y="645" width="2.9" height="15.0" fill="rgb(249,86,37)" rx="2" ry="2" />
<text  x="783.08" y="655.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.(*runContainer16).iand (444 samples, 0.06%)</title><rect x="156.5" y="565" width="0.8" height="15.0" fill="rgb(243,149,10)" rx="2" ry="2" />
<text  x="159.53" y="575.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find.func1 (160 samples, 0.02%)</title><rect x="523.1" y="389" width="0.3" height="15.0" fill="rgb(224,24,19)" rx="2" ry="2" />
<text  x="526.13" y="399.5" ></text>
</g>
<g >
<title>sort.Search (222 samples, 0.03%)</title><rect x="282.6" y="517" width="0.4" height="15.0" fill="rgb(217,10,2)" rx="2" ry="2" />
<text  x="285.58" y="527.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (144 samples, 0.02%)</title><rect x="458.3" y="421" width="0.3" height="15.0" fill="rgb(251,65,29)" rx="2" ry="2" />
<text  x="461.31" y="431.5" ></text>
</g>
<g >
<title>tg/ethdb.(*TxDb).Get (5,133 samples, 0.74%)</title><rect x="1013.5" y="597" width="8.7" height="15.0" fill="rgb(224,43,42)" rx="2" ry="2" />
<text  x="1016.46" y="607.5" ></text>
</g>
<g >
<title>cmpbody (158 samples, 0.02%)</title><rect x="1071.3" y="421" width="0.3" height="15.0" fill="rgb(247,77,17)" rx="2" ry="2" />
<text  x="1074.29" y="431.5" ></text>
</g>
<g >
<title>bytes.Compare (194 samples, 0.03%)</title><rect x="869.8" y="229" width="0.3" height="15.0" fill="rgb(253,199,19)" rx="2" ry="2" />
<text  x="872.80" y="239.5" ></text>
</g>
<g >
<title>tg/core/state.(*PlainStateReader).ReadAccountData (65 samples, 0.01%)</title><rect x="477.3" y="405" width="0.2" height="15.0" fill="rgb(231,1,36)" rx="2" ry="2" />
<text  x="480.35" y="415.5" ></text>
</g>
<g >
<title>runtime.mallocgc (154 samples, 0.02%)</title><rect x="626.6" y="629" width="0.3" height="15.0" fill="rgb(221,110,7)" rx="2" ry="2" />
<text  x="629.60" y="639.5" ></text>
</g>
<g >
<title>runtime.growslice (60 samples, 0.01%)</title><rect x="451.9" y="469" width="0.1" height="15.0" fill="rgb(220,159,27)" rx="2" ry="2" />
<text  x="454.89" y="479.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.(*state).permute (94 samples, 0.01%)</title><rect x="1113.5" y="629" width="0.1" height="15.0" fill="rgb(235,213,27)" rx="2" ry="2" />
<text  x="1116.45" y="639.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring/roaring64.(*Bitmap).ReadFrom (1,293 samples, 0.19%)</title><rect x="1091.6" y="661" width="2.2" height="15.0" fill="rgb(222,15,32)" rx="2" ry="2" />
<text  x="1094.61" y="671.5" ></text>
</g>
<g >
<title>tg/common/etl.(*fileDataProvider).Next (452 samples, 0.07%)</title><rect x="959.3" y="677" width="0.8" height="15.0" fill="rgb(220,199,25)" rx="2" ry="2" />
<text  x="962.30" y="687.5" ></text>
</g>
<g >
<title>tg/ethdb.(*MutationItem).Less (81 samples, 0.01%)</title><rect x="440.4" y="341" width="0.1" height="15.0" fill="rgb(221,44,46)" rx="2" ry="2" />
<text  x="443.38" y="351.5" ></text>
</g>
<g >
<title>tg/core/types.(*Transaction).EncodeRLP (2,236 samples, 0.32%)</title><rect x="1108.3" y="613" width="3.8" height="15.0" fill="rgb(245,55,31)" rx="2" ry="2" />
<text  x="1111.34" y="623.5" ></text>
</g>
<g >
<title>tg/rlp.(*encbuf).toWriter (1,021 samples, 0.15%)</title><rect x="228.0" y="581" width="1.8" height="15.0" fill="rgb(223,54,3)" rx="2" ry="2" />
<text  x="231.04" y="591.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).GetOrNewStateObject (100 samples, 0.01%)</title><rect x="339.6" y="533" width="0.2" height="15.0" fill="rgb(219,18,6)" rx="2" ry="2" />
<text  x="342.64" y="543.5" ></text>
</g>
<g >
<title>tg/core/state.(*PlainStateReader).ReadAccountData (8,459 samples, 1.22%)</title><rect x="271.5" y="597" width="14.3" height="15.0" fill="rgb(224,65,7)" rx="2" ry="2" />
<text  x="274.47" y="607.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (200 samples, 0.03%)</title><rect x="700.5" y="517" width="0.4" height="15.0" fill="rgb(251,76,28)" rx="2" ry="2" />
<text  x="703.52" y="527.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (121 samples, 0.02%)</title><rect x="1010.3" y="517" width="0.2" height="15.0" fill="rgb(238,148,26)" rx="2" ry="2" />
<text  x="1013.26" y="527.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).insert (1,672 samples, 0.24%)</title><rect x="705.1" y="533" width="2.8" height="15.0" fill="rgb(240,69,20)" rx="2" ry="2" />
<text  x="708.08" y="543.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).getVal2.func1 (275 samples, 0.04%)</title><rect x="818.7" y="533" width="0.5" height="15.0" fill="rgb(223,125,14)" rx="2" ry="2" />
<text  x="821.68" y="543.5" ></text>
</g>
<g >
<title>tg/core/vm.opDelegateCall (74 samples, 0.01%)</title><rect x="479.5" y="341" width="0.1" height="15.0" fill="rgb(249,93,52)" rx="2" ry="2" />
<text  x="482.47" y="351.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (218 samples, 0.03%)</title><rect x="238.3" y="581" width="0.3" height="15.0" fill="rgb(241,197,31)" rx="2" ry="2" />
<text  x="241.28" y="591.5" ></text>
</g>
<g >
<title>cmpbody (1,713 samples, 0.25%)</title><rect x="570.2" y="357" width="3.0" height="15.0" fill="rgb(213,72,23)" rx="2" ry="2" />
<text  x="573.24" y="367.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb._Cfunc_lmdbgo_mdb_cursor_get2 (86 samples, 0.01%)</title><rect x="516.8" y="293" width="0.2" height="15.0" fill="rgb(228,219,18)" rx="2" ry="2" />
<text  x="519.81" y="303.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.(*arrayContainer).iaddReturnMinimized (486 samples, 0.07%)</title><rect x="1032.3" y="597" width="0.9" height="15.0" fill="rgb(214,173,27)" rx="2" ry="2" />
<text  x="1035.35" y="607.5" ></text>
</g>
<g >
<title>tg/core/state.(*PlainStateReader).ReadAccountCode (267 samples, 0.04%)</title><rect x="500.4" y="421" width="0.5" height="15.0" fill="rgb(231,203,39)" rx="2" ry="2" />
<text  x="503.44" y="431.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb._Cfunc_lmdbgo_mdb_cursor_get2 (77 samples, 0.01%)</title><rect x="395.5" y="229" width="0.1" height="15.0" fill="rgb(250,204,41)" rx="2" ry="2" />
<text  x="398.46" y="239.5" ></text>
</g>
<g >
<title>tg/rlp.writeByteArrayCopy (175 samples, 0.03%)</title><rect x="1124.0" y="565" width="0.3" height="15.0" fill="rgb(239,225,54)" rx="2" ry="2" />
<text  x="1127.03" y="575.5" ></text>
</g>
<g >
<title>tg/common/etl.extractBucketIntoFiles (29,164 samples, 4.20%)</title><rect x="976.5" y="677" width="49.6" height="15.0" fill="rgb(225,100,12)" rx="2" ry="2" />
<text  x="979.53" y="687.5" >tg/c..</text>
</g>
<g >
<title>tg/core/state.plainStorageKeyGen (292 samples, 0.04%)</title><rect x="701.5" y="613" width="0.5" height="15.0" fill="rgb(245,91,46)" rx="2" ry="2" />
<text  x="704.49" y="623.5" ></text>
</g>
<g >
<title>runtime.systemstack (77 samples, 0.01%)</title><rect x="662.1" y="533" width="0.1" height="15.0" fill="rgb(228,19,43)" rx="2" ry="2" />
<text  x="665.07" y="543.5" ></text>
</g>
<g >
<title>runtime.newobject (96 samples, 0.01%)</title><rect x="783.9" y="533" width="0.2" height="15.0" fill="rgb(236,184,1)" rx="2" ry="2" />
<text  x="786.89" y="543.5" ></text>
</g>
<g >
<title>tg/core/vm.opLt (155 samples, 0.02%)</title><rect x="534.4" y="597" width="0.3" height="15.0" fill="rgb(209,138,4)" rx="2" ry="2" />
<text  x="537.39" y="607.5" ></text>
</g>
<g >
<title>runtime.makeslice (305 samples, 0.04%)</title><rect x="727.7" y="645" width="0.5" height="15.0" fill="rgb(246,35,18)" rx="2" ry="2" />
<text  x="730.71" y="655.5" ></text>
</g>
<g >
<title>runtime.growWork_faststr (342 samples, 0.05%)</title><rect x="1037.8" y="613" width="0.6" height="15.0" fill="rgb(237,201,43)" rx="2" ry="2" />
<text  x="1040.85" y="623.5" ></text>
</g>
<g >
<title>runtime.duffcopy (158 samples, 0.02%)</title><rect x="239.8" y="629" width="0.2" height="15.0" fill="rgb(217,100,51)" rx="2" ry="2" />
<text  x="242.78" y="639.5" ></text>
</g>
<g >
<title>tg/core/vm.opCall (8,240 samples, 1.19%)</title><rect x="378.7" y="469" width="14.0" height="15.0" fill="rgb(223,143,27)" rx="2" ry="2" />
<text  x="381.74" y="479.5" ></text>
</g>
<g >
<title>tg/core/vm.gasSStore (291 samples, 0.04%)</title><rect x="362.4" y="533" width="0.5" height="15.0" fill="rgb(244,122,12)" rx="2" ry="2" />
<text  x="365.36" y="543.5" ></text>
</g>
<g >
<title>tg/common/dbutils.PlainParseStoragePrefix (234 samples, 0.03%)</title><rect x="896.1" y="533" width="0.4" height="15.0" fill="rgb(227,91,44)" rx="2" ry="2" />
<text  x="899.12" y="543.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (78 samples, 0.01%)</title><rect x="876.9" y="517" width="0.1" height="15.0" fill="rgb(230,88,33)" rx="2" ry="2" />
<text  x="879.89" y="527.5" ></text>
</g>
<g >
<title>tg/core/state.(*stateObject).GetCommittedState (76 samples, 0.01%)</title><rect x="451.1" y="357" width="0.1" height="15.0" fill="rgb(240,59,42)" rx="2" ry="2" />
<text  x="454.08" y="367.5" ></text>
</g>
<g >
<title>tg/crypto/bn256/cloudflare.(*twistPoint).IsOnCurve (123 samples, 0.02%)</title><rect x="446.3" y="421" width="0.2" height="15.0" fill="rgb(215,196,6)" rx="2" ry="2" />
<text  x="449.27" y="431.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (207 samples, 0.03%)</title><rect x="907.1" y="389" width="0.4" height="15.0" fill="rgb(248,179,40)" rx="2" ry="2" />
<text  x="910.12" y="399.5" ></text>
</g>
<g >
<title>sort.Search (1,443 samples, 0.21%)</title><rect x="278.9" y="485" width="2.5" height="15.0" fill="rgb(220,159,4)" rx="2" ry="2" />
<text  x="281.93" y="495.5" ></text>
</g>
<g >
<title>tg/common/etl.loadFilesIntoBucket (8,585 samples, 1.24%)</title><rect x="961.9" y="661" width="14.6" height="15.0" fill="rgb(212,175,39)" rx="2" ry="2" />
<text  x="964.95" y="671.5" ></text>
</g>
<g >
<title>runtime.gopreempt_m (505 samples, 0.07%)</title><rect x="122.6" y="837" width="0.8" height="15.0" fill="rgb(248,79,35)" rx="2" ry="2" />
<text  x="125.59" y="847.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.copyOutUnaligned (178 samples, 0.03%)</title><rect x="891.1" y="501" width="0.3" height="15.0" fill="rgb(209,65,41)" rx="2" ry="2" />
<text  x="894.09" y="511.5" ></text>
</g>
<g >
<title>runtime.cgocall (330 samples, 0.05%)</title><rect x="1188.2" y="741" width="0.5" height="15.0" fill="rgb(216,19,51)" rx="2" ry="2" />
<text  x="1191.19" y="751.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.newArrayContainerCapacity (147 samples, 0.02%)</title><rect x="1099.5" y="565" width="0.2" height="15.0" fill="rgb(214,171,48)" rx="2" ry="2" />
<text  x="1102.50" y="575.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (185 samples, 0.03%)</title><rect x="910.1" y="469" width="0.3" height="15.0" fill="rgb(252,54,14)" rx="2" ry="2" />
<text  x="913.05" y="479.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).iterate (645 samples, 0.09%)</title><rect x="1126.6" y="693" width="1.1" height="15.0" fill="rgb(215,58,29)" rx="2" ry="2" />
<text  x="1129.63" y="703.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find (1,149 samples, 0.17%)</title><rect x="687.6" y="581" width="1.9" height="15.0" fill="rgb(210,7,21)" rx="2" ry="2" />
<text  x="690.59" y="591.5" ></text>
</g>
<g >
<title>runtime.newobject (79 samples, 0.01%)</title><rect x="365.1" y="517" width="0.2" height="15.0" fill="rgb(232,44,35)" rx="2" ry="2" />
<text  x="368.15" y="527.5" ></text>
</g>
<g >
<title>reflect.Value.Interface (863 samples, 0.12%)</title><rect x="743.1" y="517" width="1.5" height="15.0" fill="rgb(213,129,19)" rx="2" ry="2" />
<text  x="746.11" y="527.5" ></text>
</g>
<g >
<title>sort.Search (94 samples, 0.01%)</title><rect x="606.9" y="325" width="0.2" height="15.0" fill="rgb(215,205,17)" rx="2" ry="2" />
<text  x="609.92" y="335.5" ></text>
</g>
<g >
<title>runtime.exitsyscall (141 samples, 0.02%)</title><rect x="926.5" y="421" width="0.3" height="15.0" fill="rgb(209,70,21)" rx="2" ry="2" />
<text  x="929.54" y="431.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (69 samples, 0.01%)</title><rect x="833.7" y="405" width="0.1" height="15.0" fill="rgb(216,54,48)" rx="2" ry="2" />
<text  x="836.72" y="415.5" ></text>
</g>
<g >
<title>bytes.Compare (1,741 samples, 0.25%)</title><rect x="570.2" y="373" width="3.0" height="15.0" fill="rgb(207,109,34)" rx="2" ry="2" />
<text  x="573.22" y="383.5" ></text>
</g>
<g >
<title>tg/core/state.(*stateObject).GetCommittedState (848 samples, 0.12%)</title><rect x="325.5" y="549" width="1.4" height="15.0" fill="rgb(250,219,10)" rx="2" ry="2" />
<text  x="328.50" y="559.5" ></text>
</g>
<g >
<title>runtime.growslice (60 samples, 0.01%)</title><rect x="421.4" y="469" width="0.1" height="15.0" fill="rgb(253,146,51)" rx="2" ry="2" />
<text  x="424.38" y="479.5" ></text>
</g>
<g >
<title>runtime.convT2E (201 samples, 0.03%)</title><rect x="764.3" y="421" width="0.3" height="15.0" fill="rgb(209,201,5)" rx="2" ry="2" />
<text  x="767.31" y="431.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*cborDecDriver).decLen (63 samples, 0.01%)</title><rect x="165.2" y="501" width="0.1" height="15.0" fill="rgb(220,23,9)" rx="2" ry="2" />
<text  x="168.23" y="511.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (165 samples, 0.02%)</title><rect x="317.6" y="485" width="0.3" height="15.0" fill="rgb(223,98,5)" rx="2" ry="2" />
<text  x="320.65" y="495.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*BTree).Get (95 samples, 0.01%)</title><rect x="385.8" y="245" width="0.2" height="15.0" fill="rgb(234,157,18)" rx="2" ry="2" />
<text  x="388.80" y="255.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.(*runContainer16).iandBitmapContainer (140 samples, 0.02%)</title><rect x="1056.5" y="533" width="0.2" height="15.0" fill="rgb(211,108,27)" rx="2" ry="2" />
<text  x="1059.46" y="543.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.(*state).Read (5,515 samples, 0.79%)</title><rect x="646.1" y="629" width="9.4" height="15.0" fill="rgb(253,175,42)" rx="2" ry="2" />
<text  x="649.10" y="639.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (182 samples, 0.03%)</title><rect x="658.0" y="549" width="0.3" height="15.0" fill="rgb(230,225,24)" rx="2" ry="2" />
<text  x="661.03" y="559.5" ></text>
</g>
<g >
<title>tg/rlp.(*encbuf).encode (3,064 samples, 0.44%)</title><rect x="742.3" y="565" width="5.2" height="15.0" fill="rgb(229,38,29)" rx="2" ry="2" />
<text  x="745.34" y="575.5" ></text>
</g>
<g >
<title>tg/eth/stagedsync.executeBlockWithGo (325,221 samples, 46.81%)</title><rect x="233.6" y="725" width="552.3" height="15.0" fill="rgb(229,217,9)" rx="2" ry="2" />
<text  x="236.59" y="735.5" >tg/eth/stagedsync.executeBlockWithGo</text>
</g>
<g >
<title>cmpbody (83 samples, 0.01%)</title><rect x="1027.7" y="469" width="0.1" height="15.0" fill="rgb(240,166,23)" rx="2" ry="2" />
<text  x="1030.67" y="479.5" ></text>
</g>
<g >
<title>runtime.growslice (137 samples, 0.02%)</title><rect x="1035.4" y="613" width="0.2" height="15.0" fill="rgb(208,92,36)" rx="2" ry="2" />
<text  x="1038.38" y="623.5" ></text>
</g>
<g >
<title>tg/core/vm.run (413 samples, 0.06%)</title><rect x="515.3" y="373" width="0.7" height="15.0" fill="rgb(235,79,48)" rx="2" ry="2" />
<text  x="518.30" y="383.5" ></text>
</g>
<g >
<title>tg/ethdb.(*LmdbKV).View (87 samples, 0.01%)</title><rect x="232.3" y="693" width="0.2" height="15.0" fill="rgb(220,180,25)" rx="2" ry="2" />
<text  x="235.34" y="703.5" ></text>
</g>
<g >
<title>tg/core/vm.run (117 samples, 0.02%)</title><rect x="420.5" y="373" width="0.2" height="15.0" fill="rgb(246,143,27)" rx="2" ry="2" />
<text  x="423.54" y="383.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (415 samples, 0.06%)</title><rect x="560.3" y="437" width="0.7" height="15.0" fill="rgb(248,124,34)" rx="2" ry="2" />
<text  x="563.31" y="447.5" ></text>
</g>
<g >
<title>reflect.typedmemmove (161 samples, 0.02%)</title><rect x="1123.1" y="549" width="0.3" height="15.0" fill="rgb(214,221,24)" rx="2" ry="2" />
<text  x="1126.14" y="559.5" ></text>
</g>
<g >
<title>sort.rotate (72 samples, 0.01%)</title><rect x="1075.3" y="309" width="0.1" height="15.0" fill="rgb(223,191,38)" rx="2" ry="2" />
<text  x="1078.29" y="319.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find.func1 (110 samples, 0.02%)</title><rect x="525.5" y="453" width="0.2" height="15.0" fill="rgb(229,80,19)" rx="2" ry="2" />
<text  x="528.51" y="463.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).Put.func1 (2,266 samples, 0.33%)</title><rect x="799.7" y="533" width="3.8" height="15.0" fill="rgb(210,67,35)" rx="2" ry="2" />
<text  x="802.66" y="543.5" ></text>
</g>
<g >
<title>runtime.systemstack (104 samples, 0.01%)</title><rect x="861.8" y="485" width="0.2" height="15.0" fill="rgb(214,104,18)" rx="2" ry="2" />
<text  x="864.78" y="495.5" ></text>
</g>
<g >
<title>sort.swapRange (129 samples, 0.02%)</title><rect x="1071.6" y="421" width="0.2" height="15.0" fill="rgb(205,21,37)" rx="2" ry="2" />
<text  x="1074.58" y="431.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (76 samples, 0.01%)</title><rect x="418.9" y="293" width="0.1" height="15.0" fill="rgb(210,175,39)" rx="2" ry="2" />
<text  x="421.89" y="303.5" ></text>
</g>
<g >
<title>tg/core/vm.(*Memory).Set32 (105 samples, 0.02%)</title><rect x="449.5" y="453" width="0.2" height="15.0" fill="rgb(234,145,43)" rx="2" ry="2" />
<text  x="452.51" y="463.5" ></text>
</g>
<g >
<title>context.(*valueCtx).Value (108 samples, 0.02%)</title><rect x="721.1" y="581" width="0.2" height="15.0" fill="rgb(251,16,40)" rx="2" ry="2" />
<text  x="724.07" y="591.5" ></text>
</g>
<g >
<title>tg/core/state.(*PlainStateReader).ReadAccountStorage (95 samples, 0.01%)</title><rect x="463.2" y="389" width="0.2" height="15.0" fill="rgb(218,156,42)" rx="2" ry="2" />
<text  x="466.21" y="399.5" ></text>
</g>
<g >
<title>tg/core/vm.opJumpi (67 samples, 0.01%)</title><rect x="388.1" y="405" width="0.2" height="15.0" fill="rgb(221,80,18)" rx="2" ry="2" />
<text  x="391.14" y="415.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (87 samples, 0.01%)</title><rect x="1123.7" y="517" width="0.1" height="15.0" fill="rgb(239,142,5)" rx="2" ry="2" />
<text  x="1126.68" y="527.5" ></text>
</g>
<g >
<title>tg/ethdb.(*LmdbCursor).getBothRange (84 samples, 0.01%)</title><rect x="395.5" y="293" width="0.1" height="15.0" fill="rgb(250,12,34)" rx="2" ry="2" />
<text  x="398.45" y="303.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.keccakF1600 (62 samples, 0.01%)</title><rect x="1029.8" y="581" width="0.1" height="15.0" fill="rgb(235,124,54)" rx="2" ry="2" />
<text  x="1032.77" y="591.5" ></text>
</g>
<g >
<title>runtime.makeslicecopy (299 samples, 0.04%)</title><rect x="895.2" y="517" width="0.5" height="15.0" fill="rgb(253,164,36)" rx="2" ry="2" />
<text  x="898.21" y="527.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).GetState (125 samples, 0.02%)</title><rect x="463.2" y="437" width="0.2" height="15.0" fill="rgb(233,182,25)" rx="2" ry="2" />
<text  x="466.16" y="447.5" ></text>
</g>
<g >
<title>cmpbody (60 samples, 0.01%)</title><rect x="722.4" y="581" width="0.1" height="15.0" fill="rgb(212,59,44)" rx="2" ry="2" />
<text  x="725.40" y="591.5" ></text>
</g>
<g >
<title>sort.symMerge (3,816 samples, 0.55%)</title><rect x="186.3" y="325" width="6.5" height="15.0" fill="rgb(240,37,33)" rx="2" ry="2" />
<text  x="189.35" y="335.5" ></text>
</g>
<g >
<title>runtime.newobject (1,232 samples, 0.18%)</title><rect x="640.3" y="629" width="2.1" height="15.0" fill="rgb(209,76,40)" rx="2" ry="2" />
<text  x="643.31" y="639.5" ></text>
</g>
<g >
<title>tg/ethdb.Walk (574 samples, 0.08%)</title><rect x="232.5" y="677" width="1.0" height="15.0" fill="rgb(234,66,6)" rx="2" ry="2" />
<text  x="235.49" y="687.5" ></text>
</g>
<g >
<title>sort.symMerge (3,505 samples, 0.50%)</title><rect x="866.3" y="373" width="6.0" height="15.0" fill="rgb(221,86,47)" rx="2" ry="2" />
<text  x="869.33" y="383.5" ></text>
</g>
<g >
<title>tg/core.GetHashFn.func1 (66 samples, 0.01%)</title><rect x="369.0" y="517" width="0.1" height="15.0" fill="rgb(230,159,33)" rx="2" ry="2" />
<text  x="371.97" y="527.5" ></text>
</g>
<g >
<title>tg/core/vm.opCall (66 samples, 0.01%)</title><rect x="391.3" y="341" width="0.1" height="15.0" fill="rgb(231,18,37)" rx="2" ry="2" />
<text  x="394.26" y="351.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (63 samples, 0.01%)</title><rect x="1051.2" y="501" width="0.1" height="15.0" fill="rgb(221,77,26)" rx="2" ry="2" />
<text  x="1054.19" y="511.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.rangeOfOnes (543 samples, 0.08%)</title><rect x="1050.6" y="581" width="0.9" height="15.0" fill="rgb(244,187,15)" rx="2" ry="2" />
<text  x="1053.58" y="591.5" ></text>
</g>
<g >
<title>sort.rotate (159 samples, 0.02%)</title><rect x="186.8" y="309" width="0.2" height="15.0" fill="rgb(254,41,42)" rx="2" ry="2" />
<text  x="189.77" y="319.5" ></text>
</g>
<g >
<title>tg/core/state.(*PlainStateReader).ReadAccountData (8,869 samples, 1.28%)</title><rect x="244.5" y="597" width="15.1" height="15.0" fill="rgb(220,68,38)" rx="2" ry="2" />
<text  x="247.52" y="607.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.beginTxn (107 samples, 0.02%)</title><rect x="231.0" y="629" width="0.2" height="15.0" fill="rgb(253,64,14)" rx="2" ry="2" />
<text  x="234.02" y="639.5" ></text>
</g>
<g >
<title>tg/core/vm.opDelegateCall (4,876 samples, 0.70%)</title><rect x="495.7" y="533" width="8.3" height="15.0" fill="rgb(249,119,27)" rx="2" ry="2" />
<text  x="498.67" y="543.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*BTree).Get (224 samples, 0.03%)</title><rect x="500.5" y="389" width="0.3" height="15.0" fill="rgb(205,82,3)" rx="2" ry="2" />
<text  x="503.46" y="399.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (100 samples, 0.01%)</title><rect x="861.8" y="437" width="0.2" height="15.0" fill="rgb(216,119,23)" rx="2" ry="2" />
<text  x="864.78" y="447.5" ></text>
</g>
<g >
<title>runtime.(*mspan).sweep (107 samples, 0.02%)</title><rect x="976.1" y="517" width="0.2" height="15.0" fill="rgb(234,213,17)" rx="2" ry="2" />
<text  x="979.11" y="527.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (783 samples, 0.11%)</title><rect x="1100.3" y="453" width="1.3" height="15.0" fill="rgb(220,225,54)" rx="2" ry="2" />
<text  x="1103.29" y="463.5" ></text>
</g>
<g >
<title>github.com/holiman/uint256.(*Int).Bytes32 (218 samples, 0.03%)</title><rect x="695.6" y="613" width="0.4" height="15.0" fill="rgb(206,221,5)" rx="2" ry="2" />
<text  x="698.63" y="623.5" ></text>
</g>
<g >
<title>runtime.mallocgc (88 samples, 0.01%)</title><rect x="1095.7" y="597" width="0.1" height="15.0" fill="rgb(231,107,45)" rx="2" ry="2" />
<text  x="1098.69" y="607.5" ></text>
</g>
<g >
<title>tg/core.(*StateTransition).TransitionDb (228,230 samples, 32.85%)</title><rect x="237.1" y="661" width="387.6" height="15.0" fill="rgb(247,124,1)" rx="2" ry="2" />
<text  x="240.06" y="671.5" >tg/core.(*StateTransition).TransitionDb</text>
</g>
<g >
<title>runtime.mallocgc (93 samples, 0.01%)</title><rect x="933.5" y="469" width="0.2" height="15.0" fill="rgb(205,101,45)" rx="2" ry="2" />
<text  x="936.52" y="479.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.(*state).padAndPermute (828 samples, 0.12%)</title><rect x="127.7" y="773" width="1.4" height="15.0" fill="rgb(238,203,19)" rx="2" ry="2" />
<text  x="130.69" y="783.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (143 samples, 0.02%)</title><rect x="1119.6" y="709" width="0.3" height="15.0" fill="rgb(240,153,0)" rx="2" ry="2" />
<text  x="1122.61" y="719.5" ></text>
</g>
<g >
<title>runtime.convT64 (88 samples, 0.01%)</title><rect x="727.1" y="565" width="0.2" height="15.0" fill="rgb(210,211,12)" rx="2" ry="2" />
<text  x="730.15" y="575.5" ></text>
</g>
<g >
<title>runtime.growslice (285 samples, 0.04%)</title><rect x="861.7" y="517" width="0.5" height="15.0" fill="rgb(217,62,35)" rx="2" ry="2" />
<text  x="864.67" y="527.5" ></text>
</g>
<g >
<title>tg/ethdb.(*TxDb).Get (654 samples, 0.09%)</title><rect x="403.2" y="373" width="1.1" height="15.0" fill="rgb(231,20,44)" rx="2" ry="2" />
<text  x="406.24" y="383.5" ></text>
</g>
<g >
<title>sort.rotate (192 samples, 0.03%)</title><rect x="1070.3" y="469" width="0.3" height="15.0" fill="rgb(229,7,27)" rx="2" ry="2" />
<text  x="1073.30" y="479.5" ></text>
</g>
<g >
<title>runtime.newarray (333 samples, 0.05%)</title><rect x="700.5" y="565" width="0.6" height="15.0" fill="rgb(240,122,2)" rx="2" ry="2" />
<text  x="703.50" y="575.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).GetState (1,038 samples, 0.15%)</title><rect x="325.2" y="581" width="1.7" height="15.0" fill="rgb(222,218,4)" rx="2" ry="2" />
<text  x="328.18" y="591.5" ></text>
</g>
<g >
<title>tg/rlp.makePtrWriter.func1 (2,394 samples, 0.34%)</title><rect x="1108.1" y="645" width="4.0" height="15.0" fill="rgb(245,166,40)" rx="2" ry="2" />
<text  x="1111.08" y="655.5" ></text>
</g>
<g >
<title>runtime.(*mheap).allocMSpanLocked (177 samples, 0.03%)</title><rect x="153.7" y="357" width="0.3" height="15.0" fill="rgb(244,212,16)" rx="2" ry="2" />
<text  x="156.72" y="367.5" ></text>
</g>
<g >
<title>runtime.newobject (294 samples, 0.04%)</title><rect x="1051.0" y="549" width="0.5" height="15.0" fill="rgb(245,102,10)" rx="2" ry="2" />
<text  x="1053.99" y="559.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*Decoder).Decode (291 samples, 0.04%)</title><rect x="959.4" y="645" width="0.5" height="15.0" fill="rgb(206,0,3)" rx="2" ry="2" />
<text  x="962.39" y="655.5" ></text>
</g>
<g >
<title>runtime.exitsyscallfast (162 samples, 0.02%)</title><rect x="1024.7" y="517" width="0.3" height="15.0" fill="rgb(233,187,52)" rx="2" ry="2" />
<text  x="1027.74" y="527.5" ></text>
</g>
<g >
<title>runtime.makeBucketArray (305 samples, 0.04%)</title><rect x="669.6" y="597" width="0.5" height="15.0" fill="rgb(238,202,20)" rx="2" ry="2" />
<text  x="672.60" y="607.5" ></text>
</g>
<g >
<title>tg/core/vm.makeDup.func1 (90 samples, 0.01%)</title><rect x="476.3" y="469" width="0.2" height="15.0" fill="rgb(207,196,38)" rx="2" ry="2" />
<text  x="479.32" y="479.5" ></text>
</g>
<g >
<title>tg/rlp.cachedDecoder (228 samples, 0.03%)</title><rect x="1186.4" y="581" width="0.4" height="15.0" fill="rgb(220,67,51)" rx="2" ry="2" />
<text  x="1189.39" y="591.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVMInterpreter).Run (7,815 samples, 1.12%)</title><rect x="379.3" y="421" width="13.2" height="15.0" fill="rgb(210,115,48)" rx="2" ry="2" />
<text  x="382.27" y="431.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*BTree).Ascend (986 samples, 0.14%)</title><rect x="1126.6" y="757" width="1.7" height="15.0" fill="rgb(231,115,5)" rx="2" ry="2" />
<text  x="1129.61" y="767.5" ></text>
</g>
<g >
<title>runtime.newobject (136 samples, 0.02%)</title><rect x="737.0" y="661" width="0.3" height="15.0" fill="rgb(205,12,26)" rx="2" ry="2" />
<text  x="740.05" y="671.5" ></text>
</g>
<g >
<title>sync.(*RWMutex).RLock (247 samples, 0.04%)</title><rect x="1132.8" y="725" width="0.4" height="15.0" fill="rgb(231,161,28)" rx="2" ry="2" />
<text  x="1135.77" y="735.5" ></text>
</g>
<g >
<title>tg/ethdb.(*mutation).doCommit.func1 (320 samples, 0.05%)</title><rect x="1127.7" y="693" width="0.6" height="15.0" fill="rgb(226,145,7)" rx="2" ry="2" />
<text  x="1130.72" y="703.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (62 samples, 0.01%)</title><rect x="387.8" y="293" width="0.1" height="15.0" fill="rgb(245,161,20)" rx="2" ry="2" />
<text  x="390.82" y="303.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).StaticCall (1,108 samples, 0.16%)</title><rect x="404.8" y="453" width="1.9" height="15.0" fill="rgb(221,13,36)" rx="2" ry="2" />
<text  x="407.78" y="463.5" ></text>
</g>
<g >
<title>runtime.newobject (115 samples, 0.02%)</title><rect x="171.2" y="629" width="0.2" height="15.0" fill="rgb(242,146,41)" rx="2" ry="2" />
<text  x="174.19" y="639.5" ></text>
</g>
<g >
<title>tg/core/vm.opDelegateCall (33,258 samples, 4.79%)</title><rect x="463.9" y="597" width="56.5" height="15.0" fill="rgb(252,93,31)" rx="2" ry="2" />
<text  x="466.90" y="607.5" >tg/co..</text>
</g>
<g >
<title>runtime.mallocgc (159 samples, 0.02%)</title><rect x="764.3" y="405" width="0.3" height="15.0" fill="rgb(251,79,18)" rx="2" ry="2" />
<text  x="767.32" y="415.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*Decoder).Decode (232 samples, 0.03%)</title><rect x="145.1" y="645" width="0.4" height="15.0" fill="rgb(218,105,37)" rx="2" ry="2" />
<text  x="148.13" y="655.5" ></text>
</g>
<g >
<title>reflect.Value.Addr (157 samples, 0.02%)</title><rect x="217.4" y="405" width="0.2" height="15.0" fill="rgb(247,5,35)" rx="2" ry="2" />
<text  x="220.35" y="415.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).Exist (455 samples, 0.07%)</title><rect x="339.9" y="565" width="0.8" height="15.0" fill="rgb(232,142,47)" rx="2" ry="2" />
<text  x="342.95" y="575.5" ></text>
</g>
<g >
<title>tg/core/state.(*PlainStateReader).ReadAccountData (396 samples, 0.06%)</title><rect x="422.4" y="485" width="0.7" height="15.0" fill="rgb(207,59,53)" rx="2" ry="2" />
<text  x="425.45" y="495.5" ></text>
</g>
<g >
<title>runtime.growslice (333 samples, 0.05%)</title><rect x="177.0" y="549" width="0.6" height="15.0" fill="rgb(235,217,21)" rx="2" ry="2" />
<text  x="180.00" y="559.5" ></text>
</g>
<g >
<title>bytes.Compare (150 samples, 0.02%)</title><rect x="191.7" y="181" width="0.2" height="15.0" fill="rgb(234,148,24)" rx="2" ry="2" />
<text  x="194.69" y="191.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (1,646 samples, 0.24%)</title><rect x="150.6" y="405" width="2.8" height="15.0" fill="rgb(212,208,54)" rx="2" ry="2" />
<text  x="153.57" y="415.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*decRd).readb (177 samples, 0.03%)</title><rect x="817.5" y="501" width="0.3" height="15.0" fill="rgb(226,99,49)" rx="2" ry="2" />
<text  x="820.45" y="511.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring/roaring64.(*Bitmap).WriteTo (124 samples, 0.02%)</title><rect x="1081.1" y="613" width="0.2" height="15.0" fill="rgb(224,208,16)" rx="2" ry="2" />
<text  x="1084.06" y="623.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.(*roaringArray).insertNewKeyValueAt (255 samples, 0.04%)</title><rect x="1060.3" y="613" width="0.5" height="15.0" fill="rgb(224,43,38)" rx="2" ry="2" />
<text  x="1063.34" y="623.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.(*runContainer16).toArrayContainer (155 samples, 0.02%)</title><rect x="146.7" y="581" width="0.3" height="15.0" fill="rgb(251,88,0)" rx="2" ry="2" />
<text  x="149.73" y="591.5" ></text>
</g>
<g >
<title>runtime.cgocall (297 samples, 0.04%)</title><rect x="1188.9" y="725" width="0.5" height="15.0" fill="rgb(236,47,48)" rx="2" ry="2" />
<text  x="1191.85" y="735.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (126 samples, 0.02%)</title><rect x="996.2" y="501" width="0.2" height="15.0" fill="rgb(212,137,27)" rx="2" ry="2" />
<text  x="999.15" y="511.5" ></text>
</g>
<g >
<title>runtime.mallocgc (151 samples, 0.02%)</title><rect x="983.8" y="501" width="0.2" height="15.0" fill="rgb(251,200,29)" rx="2" ry="2" />
<text  x="986.75" y="511.5" ></text>
</g>
<g >
<title>runtime.(*_type).typeOff (61 samples, 0.01%)</title><rect x="789.2" y="469" width="0.1" height="15.0" fill="rgb(208,21,25)" rx="2" ry="2" />
<text  x="792.22" y="479.5" ></text>
</g>
<g >
<title>tg/core/vm.opSload (902 samples, 0.13%)</title><rect x="606.5" y="533" width="1.5" height="15.0" fill="rgb(224,138,3)" rx="2" ry="2" />
<text  x="609.47" y="543.5" ></text>
</g>
<g >
<title>github.com/go-stack/stack.Caller (64 samples, 0.01%)</title><rect x="1128.6" y="757" width="0.1" height="15.0" fill="rgb(234,145,25)" rx="2" ry="2" />
<text  x="1131.58" y="767.5" ></text>
</g>
<g >
<title>runtime.(*pageAlloc).scavenge (1,220 samples, 0.18%)</title><rect x="10.8" y="821" width="2.1" height="15.0" fill="rgb(211,158,37)" rx="2" ry="2" />
<text  x="13.82" y="831.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (113 samples, 0.02%)</title><rect x="833.7" y="485" width="0.2" height="15.0" fill="rgb(215,147,0)" rx="2" ry="2" />
<text  x="836.71" y="495.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (59 samples, 0.01%)</title><rect x="341.9" y="453" width="0.1" height="15.0" fill="rgb(252,175,22)" rx="2" ry="2" />
<text  x="344.93" y="463.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.(*roaringArray).runOptimize (1,940 samples, 0.28%)</title><rect x="1053.0" y="565" width="3.3" height="15.0" fill="rgb(248,155,35)" rx="2" ry="2" />
<text  x="1055.98" y="575.5" ></text>
</g>
<g >
<title>runtime.mallocgc (126 samples, 0.02%)</title><rect x="1058.2" y="613" width="0.2" height="15.0" fill="rgb(252,151,15)" rx="2" ry="2" />
<text  x="1061.20" y="623.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (245 samples, 0.04%)</title><rect x="786.3" y="549" width="0.4" height="15.0" fill="rgb(218,167,34)" rx="2" ry="2" />
<text  x="789.32" y="559.5" ></text>
</g>
<g >
<title>runtime.makeslice (156 samples, 0.02%)</title><rect x="1058.2" y="629" width="0.2" height="15.0" fill="rgb(221,90,25)" rx="2" ry="2" />
<text  x="1061.18" y="639.5" ></text>
</g>
<g >
<title>runtime.newarray (117 samples, 0.02%)</title><rect x="631.7" y="613" width="0.2" height="15.0" fill="rgb(223,19,40)" rx="2" ry="2" />
<text  x="634.68" y="623.5" ></text>
</g>
<g >
<title>tg/core/vm.opStaticCall (424 samples, 0.06%)</title><rect x="517.0" y="469" width="0.7" height="15.0" fill="rgb(217,114,25)" rx="2" ry="2" />
<text  x="519.96" y="479.5" ></text>
</g>
<g >
<title>runtime.mallocgc (65 samples, 0.01%)</title><rect x="1050.1" y="517" width="0.1" height="15.0" fill="rgb(227,115,26)" rx="2" ry="2" />
<text  x="1053.11" y="527.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb._Cfunc_lmdbgo_mdb_cursor_get1 (133 samples, 0.02%)</title><rect x="1049.6" y="565" width="0.2" height="15.0" fill="rgb(207,147,14)" rx="2" ry="2" />
<text  x="1052.57" y="575.5" ></text>
</g>
<g >
<title>tg/core/state.(*PlainStateReader).ReadAccountStorage (486 samples, 0.07%)</title><rect x="418.8" y="405" width="0.9" height="15.0" fill="rgb(207,154,18)" rx="2" ry="2" />
<text  x="421.84" y="415.5" ></text>
</g>
<g >
<title>tg/core/vm.run (445 samples, 0.06%)</title><rect x="480.1" y="373" width="0.7" height="15.0" fill="rgb(243,144,24)" rx="2" ry="2" />
<text  x="483.09" y="383.5" ></text>
</g>
<g >
<title>tg/crypto/secp256k1.RecoverPubkeyWithContext.func1 (4,924 samples, 0.71%)</title><rect x="342.4" y="501" width="8.4" height="15.0" fill="rgb(233,18,31)" rx="2" ry="2" />
<text  x="345.40" y="511.5" ></text>
</g>
<g >
<title>tg/rlp.decodeDecoder (368 samples, 0.05%)</title><rect x="232.6" y="501" width="0.6" height="15.0" fill="rgb(246,98,19)" rx="2" ry="2" />
<text  x="235.59" y="511.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (272 samples, 0.04%)</title><rect x="934.4" y="453" width="0.5" height="15.0" fill="rgb(228,148,32)" rx="2" ry="2" />
<text  x="937.43" y="463.5" ></text>
</g>
<g >
<title>tg/core/vm/stack.(*Stack).Peek (117 samples, 0.02%)</title><rect x="453.8" y="533" width="0.2" height="15.0" fill="rgb(246,136,15)" rx="2" ry="2" />
<text  x="456.84" y="543.5" ></text>
</g>
<g >
<title>runtime.growslice (110 samples, 0.02%)</title><rect x="242.8" y="549" width="0.2" height="15.0" fill="rgb(239,85,34)" rx="2" ry="2" />
<text  x="245.82" y="559.5" ></text>
</g>
<g >
<title>cmpbody (123 samples, 0.02%)</title><rect x="1073.4" y="357" width="0.2" height="15.0" fill="rgb(222,195,23)" rx="2" ry="2" />
<text  x="1076.36" y="367.5" ></text>
</g>
<g >
<title>runtime.makeslice (68 samples, 0.01%)</title><rect x="1050.1" y="533" width="0.1" height="15.0" fill="rgb(246,75,5)" rx="2" ry="2" />
<text  x="1053.11" y="543.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb._Cfunc_mdb_cursor_get (599 samples, 0.09%)</title><rect x="160.2" y="645" width="1.0" height="15.0" fill="rgb(246,164,15)" rx="2" ry="2" />
<text  x="163.19" y="655.5" ></text>
</g>
<g >
<title>runtime.unlock2 (90 samples, 0.01%)</title><rect x="893.3" y="485" width="0.2" height="15.0" fill="rgb(205,59,41)" rx="2" ry="2" />
<text  x="896.34" y="495.5" ></text>
</g>
<g >
<title>reflect.Value.Bytes (94 samples, 0.01%)</title><rect x="745.5" y="501" width="0.2" height="15.0" fill="rgb(248,174,54)" rx="2" ry="2" />
<text  x="748.53" y="511.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.(*Bitmap).RunOptimize (138 samples, 0.02%)</title><rect x="1050.0" y="613" width="0.2" height="15.0" fill="rgb(224,222,10)" rx="2" ry="2" />
<text  x="1053.00" y="623.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (275 samples, 0.04%)</title><rect x="561.8" y="501" width="0.4" height="15.0" fill="rgb(235,17,6)" rx="2" ry="2" />
<text  x="564.78" y="511.5" ></text>
</g>
<g >
<title>runtime.newobject (234 samples, 0.03%)</title><rect x="286.0" y="565" width="0.4" height="15.0" fill="rgb(236,39,20)" rx="2" ry="2" />
<text  x="288.97" y="575.5" ></text>
</g>
<g >
<title>runtime.findObject (74 samples, 0.01%)</title><rect x="957.0" y="485" width="0.2" height="15.0" fill="rgb(208,140,48)" rx="2" ry="2" />
<text  x="960.03" y="495.5" ></text>
</g>
<g >
<title>runtime.memmove (200 samples, 0.03%)</title><rect x="728.2" y="645" width="0.4" height="15.0" fill="rgb(224,157,6)" rx="2" ry="2" />
<text  x="731.23" y="655.5" ></text>
</g>
<g >
<title>tg/ethdb.(*LmdbKV).View (4,051 samples, 0.58%)</title><rect x="215.1" y="581" width="6.9" height="15.0" fill="rgb(229,32,49)" rx="2" ry="2" />
<text  x="218.12" y="591.5" ></text>
</g>
<g >
<title>sort.doPivot_func (218 samples, 0.03%)</title><rect x="961.0" y="661" width="0.4" height="15.0" fill="rgb(219,40,47)" rx="2" ry="2" />
<text  x="964.01" y="671.5" ></text>
</g>
<g >
<title>tg/params.(*ChainConfig).WithEIPsFlags (1,787 samples, 0.26%)</title><rect x="660.2" y="677" width="3.0" height="15.0" fill="rgb(231,210,22)" rx="2" ry="2" />
<text  x="663.17" y="687.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).Call (13,957 samples, 2.01%)</title><rect x="471.7" y="517" width="23.7" height="15.0" fill="rgb(242,97,32)" rx="2" ry="2" />
<text  x="474.68" y="527.5" >t..</text>
</g>
<g >
<title>tg/ethdb.(*mutation).Get (321 samples, 0.05%)</title><rect x="460.6" y="517" width="0.6" height="15.0" fill="rgb(250,135,29)" rx="2" ry="2" />
<text  x="463.63" y="527.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find (1,700 samples, 0.24%)</title><rect x="253.7" y="501" width="2.9" height="15.0" fill="rgb(209,6,11)" rx="2" ry="2" />
<text  x="256.69" y="511.5" ></text>
</g>
<g >
<title>runtime.mallocgc (199 samples, 0.03%)</title><rect x="1184.2" y="485" width="0.3" height="15.0" fill="rgb(224,64,7)" rx="2" ry="2" />
<text  x="1187.17" y="495.5" ></text>
</g>
<g >
<title>tg/turbo/rlphacks.encodeBytesAsRlpToWriter (3,490 samples, 0.50%)</title><rect x="772.7" y="565" width="5.9" height="15.0" fill="rgb(246,17,32)" rx="2" ry="2" />
<text  x="775.69" y="575.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (106 samples, 0.02%)</title><rect x="527.2" y="437" width="0.2" height="15.0" fill="rgb(242,86,8)" rx="2" ry="2" />
<text  x="530.20" y="447.5" ></text>
</g>
<g >
<title>tg/core/vm.makePush.func1 (98 samples, 0.01%)</title><rect x="448.2" y="469" width="0.2" height="15.0" fill="rgb(213,185,45)" rx="2" ry="2" />
<text  x="451.22" y="479.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (67 samples, 0.01%)</title><rect x="329.6" y="485" width="0.1" height="15.0" fill="rgb(233,190,4)" rx="2" ry="2" />
<text  x="332.60" y="495.5" ></text>
</g>
<g >
<title>tg/common/changeset.encodeAccounts2 (3,432 samples, 0.49%)</title><rect x="721.7" y="661" width="5.9" height="15.0" fill="rgb(209,141,51)" rx="2" ry="2" />
<text  x="724.73" y="671.5" ></text>
</g>
<g >
<title>tg/ethdb.(*TxDb).Delete (314 samples, 0.05%)</title><rect x="960.1" y="645" width="0.5" height="15.0" fill="rgb(234,68,35)" rx="2" ry="2" />
<text  x="963.11" y="655.5" ></text>
</g>
<g >
<title>runtime.cgoCheckPointer (225 samples, 0.03%)</title><rect x="1045.7" y="597" width="0.4" height="15.0" fill="rgb(250,35,22)" rx="2" ry="2" />
<text  x="1048.70" y="607.5" ></text>
</g>
<g >
<title>tg/ethdb.(*LmdbCursor).set (1,506 samples, 0.22%)</title><rect x="289.8" y="549" width="2.6" height="15.0" fill="rgb(215,54,5)" rx="2" ry="2" />
<text  x="292.83" y="559.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*Decoder).mustDecode (223 samples, 0.03%)</title><rect x="959.4" y="629" width="0.4" height="15.0" fill="rgb(250,151,23)" rx="2" ry="2" />
<text  x="962.42" y="639.5" ></text>
</g>
<g >
<title>aeshashbody (374 samples, 0.05%)</title><rect x="1065.1" y="581" width="0.7" height="15.0" fill="rgb(254,161,25)" rx="2" ry="2" />
<text  x="1068.15" y="591.5" ></text>
</g>
<g >
<title>runtime.lock2 (73 samples, 0.01%)</title><rect x="1066.3" y="597" width="0.1" height="15.0" fill="rgb(234,97,0)" rx="2" ry="2" />
<text  x="1069.28" y="607.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.keccakF1600 (4,251 samples, 0.61%)</title><rect x="647.8" y="581" width="7.2" height="15.0" fill="rgb(220,135,40)" rx="2" ry="2" />
<text  x="650.82" y="591.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (273 samples, 0.04%)</title><rect x="625.2" y="581" width="0.4" height="15.0" fill="rgb(207,100,2)" rx="2" ry="2" />
<text  x="628.16" y="591.5" ></text>
</g>
<g >
<title>runtime.largeAlloc (104 samples, 0.01%)</title><rect x="861.8" y="453" width="0.2" height="15.0" fill="rgb(249,225,2)" rx="2" ry="2" />
<text  x="864.78" y="463.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (209 samples, 0.03%)</title><rect x="317.6" y="533" width="0.4" height="15.0" fill="rgb(239,163,38)" rx="2" ry="2" />
<text  x="320.62" y="543.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).getVal1.func1 (176 samples, 0.03%)</title><rect x="1049.6" y="581" width="0.3" height="15.0" fill="rgb(229,155,7)" rx="2" ry="2" />
<text  x="1052.55" y="591.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).Call (596 samples, 0.09%)</title><rect x="413.2" y="389" width="1.0" height="15.0" fill="rgb(252,45,12)" rx="2" ry="2" />
<text  x="416.21" y="399.5" ></text>
</g>
<g >
<title>sync.(*WaitGroup).Add (94 samples, 0.01%)</title><rect x="899.1" y="533" width="0.1" height="15.0" fill="rgb(238,95,41)" rx="2" ry="2" />
<text  x="902.07" y="543.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).Get (312 samples, 0.04%)</title><rect x="818.7" y="565" width="0.5" height="15.0" fill="rgb(243,163,3)" rx="2" ry="2" />
<text  x="821.67" y="575.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*BTree).Get (303 samples, 0.04%)</title><rect x="422.5" y="453" width="0.5" height="15.0" fill="rgb(232,161,36)" rx="2" ry="2" />
<text  x="425.47" y="463.5" ></text>
</g>
<g >
<title>runtime.mallocgc (512 samples, 0.07%)</title><rect x="238.1" y="629" width="0.8" height="15.0" fill="rgb(249,213,42)" rx="2" ry="2" />
<text  x="241.06" y="639.5" ></text>
</g>
<g >
<title>runtime.unlockWithRank (222 samples, 0.03%)</title><rect x="100.7" y="837" width="0.4" height="15.0" fill="rgb(243,36,41)" rx="2" ry="2" />
<text  x="103.70" y="847.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (108 samples, 0.02%)</title><rect x="226.1" y="373" width="0.2" height="15.0" fill="rgb(228,157,33)" rx="2" ry="2" />
<text  x="229.11" y="383.5" ></text>
</g>
<g >
<title>runtime.mallocgc (69 samples, 0.01%)</title><rect x="1134.2" y="773" width="0.1" height="15.0" fill="rgb(216,216,12)" rx="2" ry="2" />
<text  x="1137.16" y="783.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (171 samples, 0.02%)</title><rect x="422.5" y="389" width="0.3" height="15.0" fill="rgb(247,75,8)" rx="2" ry="2" />
<text  x="425.49" y="399.5" ></text>
</g>
<g >
<title>runtime.cgocall (1,410 samples, 0.20%)</title><rect x="283.2" y="469" width="2.4" height="15.0" fill="rgb(226,61,9)" rx="2" ry="2" />
<text  x="286.21" y="479.5" ></text>
</g>
<g >
<title>runtime.cgocall (2,243 samples, 0.32%)</title><rect x="799.7" y="501" width="3.8" height="15.0" fill="rgb(229,89,40)" rx="2" ry="2" />
<text  x="802.66" y="511.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (147 samples, 0.02%)</title><rect x="1112.3" y="597" width="0.2" height="15.0" fill="rgb(228,219,4)" rx="2" ry="2" />
<text  x="1115.27" y="607.5" ></text>
</g>
<g >
<title>tg/crypto.Keccak256 (168 samples, 0.02%)</title><rect x="1134.3" y="805" width="0.3" height="15.0" fill="rgb(250,194,29)" rx="2" ry="2" />
<text  x="1137.35" y="815.5" ></text>
</g>
<g >
<title>reflect.Value.SetBytes (78 samples, 0.01%)</title><rect x="745.3" y="469" width="0.1" height="15.0" fill="rgb(205,144,2)" rx="2" ry="2" />
<text  x="748.29" y="479.5" ></text>
</g>
<g >
<title>tg/core/types.rlpHash (6,869 samples, 0.99%)</title><rect x="738.6" y="677" width="11.6" height="15.0" fill="rgb(221,148,42)" rx="2" ry="2" />
<text  x="741.58" y="687.5" ></text>
</g>
<g >
<title>runtime.newobject (158 samples, 0.02%)</title><rect x="1093.0" y="613" width="0.3" height="15.0" fill="rgb(208,73,54)" rx="2" ry="2" />
<text  x="1096.01" y="623.5" ></text>
</g>
<g >
<title>runtime.typedmemmove (69 samples, 0.01%)</title><rect x="225.8" y="389" width="0.1" height="15.0" fill="rgb(218,164,39)" rx="2" ry="2" />
<text  x="228.77" y="399.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (71 samples, 0.01%)</title><rect x="318.4" y="501" width="0.1" height="15.0" fill="rgb(213,44,40)" rx="2" ry="2" />
<text  x="321.39" y="511.5" ></text>
</g>
<g >
<title>tg/rlp.writeUint256NoPtr (808 samples, 0.12%)</title><rect x="746.0" y="517" width="1.4" height="15.0" fill="rgb(230,201,36)" rx="2" ry="2" />
<text  x="749.01" y="527.5" ></text>
</g>
<g >
<title>tg/ethdb.(*ObjectDatabase).Walk (87 samples, 0.01%)</title><rect x="232.3" y="709" width="0.2" height="15.0" fill="rgb(213,229,8)" rx="2" ry="2" />
<text  x="235.34" y="719.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.(*runContainer16).iand (187 samples, 0.03%)</title><rect x="1102.0" y="549" width="0.3" height="15.0" fill="rgb(210,172,20)" rx="2" ry="2" />
<text  x="1105.01" y="559.5" ></text>
</g>
<g >
<title>cmpbody (65 samples, 0.01%)</title><rect x="989.1" y="389" width="0.1" height="15.0" fill="rgb(233,225,44)" rx="2" ry="2" />
<text  x="992.10" y="399.5" ></text>
</g>
<g >
<title>tg/ethdb.(*TxDb).Put (2,177 samples, 0.31%)</title><rect x="1103.1" y="581" width="3.7" height="15.0" fill="rgb(229,33,32)" rx="2" ry="2" />
<text  x="1106.14" y="591.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (163 samples, 0.02%)</title><rect x="561.8" y="421" width="0.3" height="15.0" fill="rgb(231,66,13)" rx="2" ry="2" />
<text  x="564.82" y="431.5" ></text>
</g>
<g >
<title>tg/core/vm.NewContract (214 samples, 0.03%)</title><rect x="341.9" y="565" width="0.3" height="15.0" fill="rgb(217,78,4)" rx="2" ry="2" />
<text  x="344.85" y="575.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.newRunContainer16Range (399 samples, 0.06%)</title><rect x="147.3" y="581" width="0.7" height="15.0" fill="rgb(252,159,42)" rx="2" ry="2" />
<text  x="150.30" y="591.5" ></text>
</g>
<g >
<title>tg/ethdb.(*lmdbTx).Commit (306 samples, 0.04%)</title><rect x="1188.9" y="805" width="0.5" height="15.0" fill="rgb(234,220,42)" rx="2" ry="2" />
<text  x="1191.85" y="815.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.keccakF1600 (190 samples, 0.03%)</title><rect x="1030.2" y="549" width="0.3" height="15.0" fill="rgb(211,141,17)" rx="2" ry="2" />
<text  x="1033.17" y="559.5" ></text>
</g>
<g >
<title>tg/ethdb.(*TxDb).Get (72 samples, 0.01%)</title><rect x="396.8" y="389" width="0.1" height="15.0" fill="rgb(211,81,40)" rx="2" ry="2" />
<text  x="399.82" y="399.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).Put (212 samples, 0.03%)</title><rect x="960.6" y="613" width="0.4" height="15.0" fill="rgb(221,223,21)" rx="2" ry="2" />
<text  x="963.65" y="623.5" ></text>
</g>
<g >
<title>runtime.mallocgc (74 samples, 0.01%)</title><rect x="817.8" y="485" width="0.1" height="15.0" fill="rgb(206,226,42)" rx="2" ry="2" />
<text  x="820.79" y="495.5" ></text>
</g>
<g >
<title>runtime.mallocgc (68 samples, 0.01%)</title><rect x="170.7" y="597" width="0.1" height="15.0" fill="rgb(248,43,38)" rx="2" ry="2" />
<text  x="173.68" y="607.5" ></text>
</g>
<g >
<title>cmpbody (241 samples, 0.03%)</title><rect x="187.1" y="277" width="0.4" height="15.0" fill="rgb(246,103,10)" rx="2" ry="2" />
<text  x="190.10" y="287.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).Put.func1 (2,078 samples, 0.30%)</title><rect x="723.8" y="581" width="3.5" height="15.0" fill="rgb(242,183,29)" rx="2" ry="2" />
<text  x="726.77" y="591.5" ></text>
</g>
<g >
<title>sort.Search (491 samples, 0.07%)</title><rect x="719.1" y="565" width="0.8" height="15.0" fill="rgb(216,215,13)" rx="2" ry="2" />
<text  x="722.08" y="575.5" ></text>
</g>
<g >
<title>runtime.memmove (602 samples, 0.09%)</title><rect x="1078.2" y="437" width="1.0" height="15.0" fill="rgb(237,53,34)" rx="2" ry="2" />
<text  x="1081.22" y="447.5" ></text>
</g>
<g >
<title>tg/common/etl.(*sortableBuffer).Swap (173 samples, 0.02%)</title><rect x="183.2" y="357" width="0.3" height="15.0" fill="rgb(248,225,51)" rx="2" ry="2" />
<text  x="186.20" y="367.5" ></text>
</g>
<g >
<title>tg/core/vm.run (2,749 samples, 0.40%)</title><rect x="513.3" y="501" width="4.7" height="15.0" fill="rgb(205,213,12)" rx="2" ry="2" />
<text  x="516.29" y="511.5" ></text>
</g>
<g >
<title>tg/core/vm.opCall (598 samples, 0.09%)</title><rect x="462.5" y="517" width="1.0" height="15.0" fill="rgb(230,54,19)" rx="2" ry="2" />
<text  x="465.47" y="527.5" ></text>
</g>
<g >
<title>github.com/holiman/uint256.(*Int).Uint64WithOverflow (94 samples, 0.01%)</title><rect x="317.3" y="597" width="0.2" height="15.0" fill="rgb(209,107,48)" rx="2" ry="2" />
<text  x="320.34" y="607.5" ></text>
</g>
<g >
<title>sort.stable (764 samples, 0.11%)</title><rect x="142.9" y="629" width="1.2" height="15.0" fill="rgb(226,167,27)" rx="2" ry="2" />
<text  x="145.85" y="639.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVMInterpreter).Run (156 samples, 0.02%)</title><rect x="416.1" y="357" width="0.3" height="15.0" fill="rgb(222,164,54)" rx="2" ry="2" />
<text  x="419.11" y="367.5" ></text>
</g>
<g >
<title>runtime.typedslicecopy (83 samples, 0.01%)</title><rect x="672.7" y="549" width="0.2" height="15.0" fill="rgb(244,227,3)" rx="2" ry="2" />
<text  x="675.71" y="559.5" ></text>
</g>
<g >
<title>reflect.unsafe_New (62 samples, 0.01%)</title><rect x="791.5" y="485" width="0.2" height="15.0" fill="rgb(213,83,6)" rx="2" ry="2" />
<text  x="794.55" y="495.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).insert (7,482 samples, 1.08%)</title><rect x="704.6" y="565" width="12.7" height="15.0" fill="rgb(237,214,22)" rx="2" ry="2" />
<text  x="707.63" y="575.5" ></text>
</g>
<g >
<title>runtime.mProf_Flush (1,451 samples, 0.21%)</title><rect x="34.2" y="821" width="2.5" height="15.0" fill="rgb(243,113,9)" rx="2" ry="2" />
<text  x="37.24" y="831.5" ></text>
</g>
<g >
<title>tg/crypto/secp256k1.RecoverPubkey (622 samples, 0.09%)</title><rect x="472.3" y="469" width="1.1" height="15.0" fill="rgb(251,11,25)" rx="2" ry="2" />
<text  x="475.30" y="479.5" ></text>
</g>
<g >
<title>tg/ethdb.(*mutation).Get (921 samples, 0.13%)</title><rect x="491.1" y="389" width="1.6" height="15.0" fill="rgb(218,78,17)" rx="2" ry="2" />
<text  x="494.12" y="399.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find.func1 (1,596 samples, 0.23%)</title><rect x="673.1" y="501" width="2.7" height="15.0" fill="rgb(215,174,8)" rx="2" ry="2" />
<text  x="676.11" y="511.5" ></text>
</g>
<g >
<title>tg/core/vm.(*Contract).Address (231 samples, 0.03%)</title><rect x="361.4" y="533" width="0.4" height="15.0" fill="rgb(247,165,16)" rx="2" ry="2" />
<text  x="364.41" y="543.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).StaticCall (197 samples, 0.03%)</title><rect x="406.2" y="389" width="0.3" height="15.0" fill="rgb(252,115,9)" rx="2" ry="2" />
<text  x="409.19" y="399.5" ></text>
</g>
<g >
<title>runtime.cgocall (374 samples, 0.05%)</title><rect x="793.6" y="549" width="0.7" height="15.0" fill="rgb(235,179,4)" rx="2" ry="2" />
<text  x="796.62" y="559.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).iterate (11,004 samples, 1.58%)</title><rect x="796.2" y="645" width="18.7" height="15.0" fill="rgb(229,10,8)" rx="2" ry="2" />
<text  x="799.21" y="655.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (164 samples, 0.02%)</title><rect x="965.3" y="565" width="0.3" height="15.0" fill="rgb(230,68,35)" rx="2" ry="2" />
<text  x="968.32" y="575.5" ></text>
</g>
<g >
<title>bytes.Compare (149 samples, 0.02%)</title><rect x="966.3" y="613" width="0.3" height="15.0" fill="rgb(215,126,26)" rx="2" ry="2" />
<text  x="969.30" y="623.5" ></text>
</g>
<g >
<title>tg/core/state.(*PlainStateReader).ReadAccountStorage (188 samples, 0.03%)</title><rect x="450.2" y="405" width="0.3" height="15.0" fill="rgb(222,41,23)" rx="2" ry="2" />
<text  x="453.21" y="415.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*Decoder).Decode (795 samples, 0.11%)</title><rect x="816.9" y="613" width="1.3" height="15.0" fill="rgb(216,3,1)" rx="2" ry="2" />
<text  x="819.87" y="623.5" ></text>
</g>
<g >
<title>tg/ethdb.(*mutation).Get (299 samples, 0.04%)</title><rect x="369.7" y="453" width="0.5" height="15.0" fill="rgb(251,10,32)" rx="2" ry="2" />
<text  x="372.67" y="463.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.(*roaringArray).getWritableContainerAtIndex (144 samples, 0.02%)</title><rect x="137.6" y="693" width="0.3" height="15.0" fill="rgb(244,65,2)" rx="2" ry="2" />
<text  x="140.64" y="703.5" ></text>
</g>
<g >
<title>sort.rotate (144 samples, 0.02%)</title><rect x="989.2" y="405" width="0.3" height="15.0" fill="rgb(245,192,31)" rx="2" ry="2" />
<text  x="992.21" y="415.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.(*state).padAndPermute (118 samples, 0.02%)</title><rect x="606.3" y="501" width="0.2" height="15.0" fill="rgb(254,194,19)" rx="2" ry="2" />
<text  x="609.26" y="511.5" ></text>
</g>
<g >
<title>runtime.SetFinalizer.func2 (665 samples, 0.10%)</title><rect x="908.6" y="469" width="1.1" height="15.0" fill="rgb(240,47,28)" rx="2" ry="2" />
<text  x="911.58" y="479.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.(*Bitmap).And (213 samples, 0.03%)</title><rect x="1056.4" y="565" width="0.3" height="15.0" fill="rgb(231,13,16)" rx="2" ry="2" />
<text  x="1059.36" y="575.5" ></text>
</g>
<g >
<title>sort.symMerge (8,801 samples, 1.27%)</title><rect x="178.3" y="501" width="15.0" height="15.0" fill="rgb(247,18,50)" rx="2" ry="2" />
<text  x="181.31" y="511.5" ></text>
</g>
<g >
<title>tg/common/etl.(*Heap).Pop (473 samples, 0.07%)</title><rect x="965.1" y="629" width="0.8" height="15.0" fill="rgb(244,88,38)" rx="2" ry="2" />
<text  x="968.07" y="639.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find (136 samples, 0.02%)</title><rect x="607.1" y="357" width="0.2" height="15.0" fill="rgb(212,217,10)" rx="2" ry="2" />
<text  x="610.08" y="367.5" ></text>
</g>
<g >
<title>tg/ethdb.(*ObjectDatabase).Get.func1 (186 samples, 0.03%)</title><rect x="231.2" y="661" width="0.4" height="15.0" fill="rgb(222,14,54)" rx="2" ry="2" />
<text  x="234.25" y="671.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find.func1 (707 samples, 0.10%)</title><rect x="256.7" y="485" width="1.2" height="15.0" fill="rgb(251,165,14)" rx="2" ry="2" />
<text  x="259.70" y="495.5" ></text>
</g>
<g >
<title>tg/eth/stagedsync.SpawnRecoverSendersStage (574 samples, 0.08%)</title><rect x="232.5" y="741" width="1.0" height="15.0" fill="rgb(231,38,32)" rx="2" ry="2" />
<text  x="235.49" y="751.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (262 samples, 0.04%)</title><rect x="320.7" y="453" width="0.4" height="15.0" fill="rgb(252,217,37)" rx="2" ry="2" />
<text  x="323.67" y="463.5" ></text>
</g>
<g >
<title>tg/common/etl.loadFilesIntoBucket.func1 (554 samples, 0.08%)</title><rect x="960.1" y="661" width="0.9" height="15.0" fill="rgb(248,180,14)" rx="2" ry="2" />
<text  x="963.07" y="671.5" ></text>
</g>
<g >
<title>sort.quickSort (1,346 samples, 0.19%)</title><rect x="1026.6" y="565" width="2.3" height="15.0" fill="rgb(243,10,37)" rx="2" ry="2" />
<text  x="1029.64" y="575.5" ></text>
</g>
<g >
<title>sort.swapRange (129 samples, 0.02%)</title><rect x="866.5" y="341" width="0.2" height="15.0" fill="rgb(205,115,51)" rx="2" ry="2" />
<text  x="869.48" y="351.5" ></text>
</g>
<g >
<title>tg/core/state.(*stateObject).GetState (66 samples, 0.01%)</title><rect x="411.9" y="437" width="0.1" height="15.0" fill="rgb(249,14,41)" rx="2" ry="2" />
<text  x="414.92" y="447.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*BTree).Get (68 samples, 0.01%)</title><rect x="463.2" y="357" width="0.1" height="15.0" fill="rgb(221,152,41)" rx="2" ry="2" />
<text  x="466.21" y="367.5" ></text>
</g>
<g >
<title>sort.swapRange (129 samples, 0.02%)</title><rect x="1072.6" y="389" width="0.2" height="15.0" fill="rgb(232,155,14)" rx="2" ry="2" />
<text  x="1075.57" y="399.5" ></text>
</g>
<g >
<title>runtime.cgocall (82 samples, 0.01%)</title><rect x="814.6" y="517" width="0.1" height="15.0" fill="rgb(228,158,31)" rx="2" ry="2" />
<text  x="817.56" y="527.5" ></text>
</g>
<g >
<title>cmpbody (262 samples, 0.04%)</title><rect x="281.6" y="453" width="0.5" height="15.0" fill="rgb(250,22,21)" rx="2" ry="2" />
<text  x="284.64" y="463.5" ></text>
</g>
<g >
<title>tg/eth/downloader.(*Downloader).Synchronise (572,252 samples, 82.36%)</title><rect x="135.0" y="837" width="971.8" height="15.0" fill="rgb(213,161,44)" rx="2" ry="2" />
<text  x="137.99" y="847.5" >tg/eth/downloader.(*Downloader).Synchronise</text>
</g>
<g >
<title>tg/core/vm.run (64 samples, 0.01%)</title><rect x="416.1" y="245" width="0.2" height="15.0" fill="rgb(218,155,11)" rx="2" ry="2" />
<text  x="419.15" y="255.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.newRunContainer16FromBitmapContainer (64 samples, 0.01%)</title><rect x="157.1" y="517" width="0.1" height="15.0" fill="rgb(241,41,24)" rx="2" ry="2" />
<text  x="160.13" y="527.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.copyOutUnaligned (85 samples, 0.01%)</title><rect x="760.1" y="613" width="0.1" height="15.0" fill="rgb(242,179,24)" rx="2" ry="2" />
<text  x="763.10" y="623.5" ></text>
</g>
<g >
<title>sort.Search (66 samples, 0.01%)</title><rect x="369.9" y="357" width="0.1" height="15.0" fill="rgb(244,105,26)" rx="2" ry="2" />
<text  x="372.91" y="367.5" ></text>
</g>
<g >
<title>runtime.exitsyscall (80 samples, 0.01%)</title><rect x="1106.6" y="485" width="0.1" height="15.0" fill="rgb(224,2,17)" rx="2" ry="2" />
<text  x="1109.56" y="495.5" ></text>
</g>
<g >
<title>bytes.Compare (137 samples, 0.02%)</title><rect x="182.1" y="405" width="0.2" height="15.0" fill="rgb(238,77,52)" rx="2" ry="2" />
<text  x="185.08" y="415.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.(*Bitmap).ReadFrom (990 samples, 0.14%)</title><rect x="1091.7" y="645" width="1.7" height="15.0" fill="rgb(223,64,1)" rx="2" ry="2" />
<text  x="1094.74" y="655.5" ></text>
</g>
<g >
<title>tg/core/state.(*PlainStateReader).ReadAccountData (85 samples, 0.01%)</title><rect x="387.8" y="357" width="0.2" height="15.0" fill="rgb(222,12,33)" rx="2" ry="2" />
<text  x="390.81" y="367.5" ></text>
</g>
<g >
<title>tg/core/state.(*stateObject).GetState (238 samples, 0.03%)</title><rect x="450.1" y="437" width="0.4" height="15.0" fill="rgb(205,190,29)" rx="2" ry="2" />
<text  x="453.12" y="447.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (197 samples, 0.03%)</title><rect x="669.6" y="501" width="0.4" height="15.0" fill="rgb(207,152,13)" rx="2" ry="2" />
<text  x="672.64" y="511.5" ></text>
</g>
<g >
<title>tg/crypto/secp256k1.RecoverPubkeyWithContext (1,394 samples, 0.20%)</title><rect x="598.6" y="517" width="2.3" height="15.0" fill="rgb(206,16,3)" rx="2" ry="2" />
<text  x="601.58" y="527.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (91 samples, 0.01%)</title><rect x="891.5" y="517" width="0.1" height="15.0" fill="rgb(220,31,23)" rx="2" ry="2" />
<text  x="894.45" y="527.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*BTree).Get (62 samples, 0.01%)</title><rect x="410.3" y="437" width="0.1" height="15.0" fill="rgb(241,45,32)" rx="2" ry="2" />
<text  x="413.26" y="447.5" ></text>
</g>
<g >
<title>tg/common/etl.(*oldestEntrySortableBuffer).Sort (6,424 samples, 0.92%)</title><rect x="861.5" y="533" width="10.9" height="15.0" fill="rgb(226,62,21)" rx="2" ry="2" />
<text  x="864.51" y="543.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.(*Bitmap).RunOptimize (259 samples, 0.04%)</title><rect x="1034.9" y="613" width="0.4" height="15.0" fill="rgb(237,153,23)" rx="2" ry="2" />
<text  x="1037.88" y="623.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.(*Bitmap).FromBuffer (227 samples, 0.03%)</title><rect x="145.6" y="661" width="0.4" height="15.0" fill="rgb(218,18,33)" rx="2" ry="2" />
<text  x="148.65" y="671.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.(*roaringArray).insertNewKeyValueAt (264 samples, 0.04%)</title><rect x="1033.7" y="613" width="0.5" height="15.0" fill="rgb(218,104,5)" rx="2" ry="2" />
<text  x="1036.74" y="623.5" ></text>
</g>
<g >
<title>sort.symMerge (99 samples, 0.01%)</title><rect x="1040.4" y="277" width="0.1" height="15.0" fill="rgb(205,153,31)" rx="2" ry="2" />
<text  x="1043.36" y="287.5" ></text>
</g>
<g >
<title>sort.swapRange (251 samples, 0.04%)</title><rect x="182.3" y="389" width="0.5" height="15.0" fill="rgb(242,180,30)" rx="2" ry="2" />
<text  x="185.33" y="399.5" ></text>
</g>
<g >
<title>runtime.selectnbsend (65 samples, 0.01%)</title><rect x="785.7" y="661" width="0.1" height="15.0" fill="rgb(211,17,23)" rx="2" ry="2" />
<text  x="788.68" y="671.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (168 samples, 0.02%)</title><rect x="975.8" y="517" width="0.3" height="15.0" fill="rgb(220,190,24)" rx="2" ry="2" />
<text  x="978.82" y="527.5" ></text>
</g>
<g >
<title>sort.Search (2,745 samples, 0.40%)</title><rect x="249.0" y="469" width="4.7" height="15.0" fill="rgb(207,215,51)" rx="2" ry="2" />
<text  x="252.00" y="479.5" ></text>
</g>
<g >
<title>tg/core/vm.run (126 samples, 0.02%)</title><rect x="496.9" y="309" width="0.2" height="15.0" fill="rgb(253,159,36)" rx="2" ry="2" />
<text  x="499.88" y="319.5" ></text>
</g>
<g >
<title>tg/eth/stagedsync.SpawnRecoverSendersStage.func2 (25,881 samples, 3.72%)</title><rect x="1132.0" y="869" width="43.9" height="15.0" fill="rgb(214,220,19)" rx="2" ry="2" />
<text  x="1134.99" y="879.5" >tg/e..</text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*cborDecDriver).DecodeBytes (411 samples, 0.06%)</title><rect x="1089.3" y="565" width="0.7" height="15.0" fill="rgb(237,221,4)" rx="2" ry="2" />
<text  x="1092.28" y="575.5" ></text>
</g>
<g >
<title>cmpbody (126 samples, 0.02%)</title><rect x="1072.3" y="389" width="0.2" height="15.0" fill="rgb(234,161,50)" rx="2" ry="2" />
<text  x="1075.33" y="399.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.(*arrayContainer).clone (119 samples, 0.02%)</title><rect x="1047.9" y="629" width="0.2" height="15.0" fill="rgb(243,33,11)" rx="2" ry="2" />
<text  x="1050.87" y="639.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVMInterpreter).Run (2,684 samples, 0.39%)</title><rect x="513.3" y="485" width="4.6" height="15.0" fill="rgb(225,99,41)" rx="2" ry="2" />
<text  x="516.32" y="495.5" ></text>
</g>
<g >
<title>tg/ethdb.(*LmdbCursor).getBothRange (87 samples, 0.01%)</title><rect x="450.4" y="357" width="0.1" height="15.0" fill="rgb(221,11,0)" rx="2" ry="2" />
<text  x="453.37" y="367.5" ></text>
</g>
<g >
<title>bytes.Compare (113 samples, 0.02%)</title><rect x="1076.2" y="261" width="0.2" height="15.0" fill="rgb(213,129,52)" rx="2" ry="2" />
<text  x="1079.21" y="271.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find.func1 (84 samples, 0.01%)</title><rect x="703.7" y="517" width="0.1" height="15.0" fill="rgb(223,226,17)" rx="2" ry="2" />
<text  x="706.67" y="527.5" ></text>
</g>
<g >
<title>runtime.notewakeup (277 samples, 0.04%)</title><rect x="122.6" y="741" width="0.5" height="15.0" fill="rgb(228,206,40)" rx="2" ry="2" />
<text  x="125.63" y="751.5" ></text>
</g>
<g >
<title>runtime.mallocgc (90 samples, 0.01%)</title><rect x="435.3" y="453" width="0.1" height="15.0" fill="rgb(221,119,31)" rx="2" ry="2" />
<text  x="438.25" y="463.5" ></text>
</g>
<g >
<title>tg/core/types.rlpHash (98 samples, 0.01%)</title><rect x="1180.5" y="789" width="0.2" height="15.0" fill="rgb(238,160,23)" rx="2" ry="2" />
<text  x="1183.49" y="799.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (145 samples, 0.02%)</title><rect x="762.8" y="469" width="0.2" height="15.0" fill="rgb(239,136,5)" rx="2" ry="2" />
<text  x="765.80" y="479.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).getVal0.func1 (2,169 samples, 0.31%)</title><rect x="1022.3" y="581" width="3.7" height="15.0" fill="rgb(220,28,13)" rx="2" ry="2" />
<text  x="1025.35" y="591.5" ></text>
</g>
<g >
<title>tg/common/etl.(*sortableBuffer).Swap (76 samples, 0.01%)</title><rect x="1074.0" y="325" width="0.2" height="15.0" fill="rgb(238,209,22)" rx="2" ry="2" />
<text  x="1077.04" y="335.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (75 samples, 0.01%)</title><rect x="435.3" y="421" width="0.1" height="15.0" fill="rgb(227,88,33)" rx="2" ry="2" />
<text  x="438.26" y="431.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (7,267 samples, 1.05%)</title><rect x="563.6" y="437" width="12.3" height="15.0" fill="rgb(253,88,48)" rx="2" ry="2" />
<text  x="566.57" y="447.5" ></text>
</g>
<g >
<title>bytes.Compare (195 samples, 0.03%)</title><rect x="870.8" y="197" width="0.3" height="15.0" fill="rgb(228,84,50)" rx="2" ry="2" />
<text  x="873.75" y="207.5" ></text>
</g>
<g >
<title>cmpbody (100 samples, 0.01%)</title><rect x="690.1" y="533" width="0.2" height="15.0" fill="rgb(218,76,31)" rx="2" ry="2" />
<text  x="693.14" y="543.5" ></text>
</g>
<g >
<title>tg/rlp.(*encbuf).encode (1,055 samples, 0.15%)</title><rect x="764.7" y="405" width="1.8" height="15.0" fill="rgb(229,148,0)" rx="2" ry="2" />
<text  x="767.68" y="415.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (92 samples, 0.01%)</title><rect x="519.8" y="421" width="0.1" height="15.0" fill="rgb(222,200,2)" rx="2" ry="2" />
<text  x="522.78" y="431.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*bufioEncWriter).endErr (71 samples, 0.01%)</title><rect x="995.0" y="517" width="0.1" height="15.0" fill="rgb(240,98,46)" rx="2" ry="2" />
<text  x="997.98" y="527.5" ></text>
</g>
<g >
<title>runtime.mallocgc (321 samples, 0.05%)</title><rect x="162.6" y="549" width="0.5" height="15.0" fill="rgb(230,97,41)" rx="2" ry="2" />
<text  x="165.59" y="559.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).GetState (245 samples, 0.04%)</title><rect x="385.7" y="325" width="0.4" height="15.0" fill="rgb(231,32,40)" rx="2" ry="2" />
<text  x="388.70" y="335.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.(*arrayContainer).iaddReturnMinimized (689 samples, 0.10%)</title><rect x="135.8" y="693" width="1.2" height="15.0" fill="rgb(222,195,11)" rx="2" ry="2" />
<text  x="138.78" y="703.5" ></text>
</g>
<g >
<title>cmpbody (689 samples, 0.10%)</title><rect x="254.3" y="437" width="1.1" height="15.0" fill="rgb(252,214,43)" rx="2" ry="2" />
<text  x="257.27" y="447.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.(*Bitmap).GetSizeInBytes (793 samples, 0.11%)</title><rect x="1042.2" y="597" width="1.4" height="15.0" fill="rgb(211,121,33)" rx="2" ry="2" />
<text  x="1045.21" y="607.5" ></text>
</g>
<g >
<title>tg/ethdb.(*MutationItem).Less (763 samples, 0.11%)</title><rect x="686.0" y="517" width="1.3" height="15.0" fill="rgb(234,144,37)" rx="2" ry="2" />
<text  x="688.97" y="527.5" ></text>
</g>
<g >
<title>tg/rlp.makeNilPtrDecoder.func1 (411 samples, 0.06%)</title><rect x="1185.6" y="549" width="0.7" height="15.0" fill="rgb(241,120,34)" rx="2" ry="2" />
<text  x="1188.58" y="559.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).insert (403 samples, 0.06%)</title><rect x="1120.3" y="661" width="0.7" height="15.0" fill="rgb(252,140,41)" rx="2" ry="2" />
<text  x="1123.27" y="671.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).Get (739 samples, 0.11%)</title><rect x="819.3" y="565" width="1.2" height="15.0" fill="rgb(243,82,13)" rx="2" ry="2" />
<text  x="822.28" y="575.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).Get (708 samples, 0.10%)</title><rect x="1093.9" y="613" width="1.2" height="15.0" fill="rgb(206,62,23)" rx="2" ry="2" />
<text  x="1096.92" y="623.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (95 samples, 0.01%)</title><rect x="226.1" y="341" width="0.2" height="15.0" fill="rgb(209,207,37)" rx="2" ry="2" />
<text  x="229.11" y="351.5" ></text>
</g>
<g >
<title>runtime.convT64 (77 samples, 0.01%)</title><rect x="850.3" y="469" width="0.1" height="15.0" fill="rgb(225,39,20)" rx="2" ry="2" />
<text  x="853.29" y="479.5" ></text>
</g>
<g >
<title>io.ReadAtLeast (545 samples, 0.08%)</title><rect x="1176.5" y="805" width="1.0" height="15.0" fill="rgb(249,42,20)" rx="2" ry="2" />
<text  x="1179.54" y="815.5" ></text>
</g>
<g >
<title>tg/core/state.(*journal).append (176 samples, 0.03%)</title><rect x="268.8" y="565" width="0.3" height="15.0" fill="rgb(237,133,39)" rx="2" ry="2" />
<text  x="271.82" y="575.5" ></text>
</g>
<g >
<title>runtime.newobject (117 samples, 0.02%)</title><rect x="363.0" y="517" width="0.2" height="15.0" fill="rgb(209,155,44)" rx="2" ry="2" />
<text  x="365.98" y="527.5" ></text>
</g>
<g >
<title>runtime.schedule (493 samples, 0.07%)</title><rect x="122.6" y="805" width="0.8" height="15.0" fill="rgb(235,46,44)" rx="2" ry="2" />
<text  x="125.59" y="815.5" ></text>
</g>
<g >
<title>container/heap.Push (154 samples, 0.02%)</title><rect x="168.2" y="661" width="0.3" height="15.0" fill="rgb(205,163,5)" rx="2" ry="2" />
<text  x="171.22" y="671.5" ></text>
</g>
<g >
<title>tg/core/vm.opSload (2,256 samples, 0.32%)</title><rect x="400.5" y="469" width="3.9" height="15.0" fill="rgb(210,177,41)" rx="2" ry="2" />
<text  x="403.53" y="479.5" ></text>
</g>
<g >
<title>runtime.mallocgc (452 samples, 0.07%)</title><rect x="934.3" y="469" width="0.8" height="15.0" fill="rgb(218,22,6)" rx="2" ry="2" />
<text  x="937.28" y="479.5" ></text>
</g>
<g >
<title>tg/rlp.makeStructWriter.func1 (2,949 samples, 0.42%)</title><rect x="742.5" y="533" width="5.0" height="15.0" fill="rgb(225,27,39)" rx="2" ry="2" />
<text  x="745.54" y="543.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).Get (631 samples, 0.09%)</title><rect x="403.3" y="341" width="1.0" height="15.0" fill="rgb(206,36,23)" rx="2" ry="2" />
<text  x="406.26" y="351.5" ></text>
</g>
<g >
<title>tg/core.(*StateTransition).buyGas (2,287 samples, 0.33%)</title><rect x="240.1" y="629" width="3.8" height="15.0" fill="rgb(237,192,13)" rx="2" ry="2" />
<text  x="243.05" y="639.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find (70 samples, 0.01%)</title><rect x="665.4" y="533" width="0.1" height="15.0" fill="rgb(234,63,38)" rx="2" ry="2" />
<text  x="668.39" y="543.5" ></text>
</g>
<g >
<title>runtime.inheap (71 samples, 0.01%)</title><rect x="957.9" y="501" width="0.1" height="15.0" fill="rgb(235,228,42)" rx="2" ry="2" />
<text  x="960.88" y="511.5" ></text>
</g>
<g >
<title>tg/ethdb.(*LmdbCursor).put (2,272 samples, 0.33%)</title><rect x="799.7" y="565" width="3.8" height="15.0" fill="rgb(215,43,44)" rx="2" ry="2" />
<text  x="802.65" y="575.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).getVal1 (140 samples, 0.02%)</title><rect x="464.1" y="453" width="0.3" height="15.0" fill="rgb(207,194,21)" rx="2" ry="2" />
<text  x="467.14" y="463.5" ></text>
</g>
<g >
<title>runtime.newobject (567 samples, 0.08%)</title><rect x="909.8" y="517" width="0.9" height="15.0" fill="rgb(218,209,40)" rx="2" ry="2" />
<text  x="912.77" y="527.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.(*state).Read (7,552 samples, 1.09%)</title><rect x="996.8" y="565" width="12.8" height="15.0" fill="rgb(237,86,43)" rx="2" ry="2" />
<text  x="999.75" y="575.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (166 samples, 0.02%)</title><rect x="965.3" y="581" width="0.3" height="15.0" fill="rgb(232,155,40)" rx="2" ry="2" />
<text  x="968.32" y="591.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.(*state).padAndPermute (99 samples, 0.01%)</title><rect x="1130.1" y="773" width="0.1" height="15.0" fill="rgb(221,205,39)" rx="2" ry="2" />
<text  x="1133.05" y="783.5" ></text>
</g>
<g >
<title>tg/core/vm.run (4,801 samples, 0.69%)</title><rect x="495.8" y="501" width="8.1" height="15.0" fill="rgb(205,107,23)" rx="2" ry="2" />
<text  x="498.80" y="511.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.(*state).permute (6,032 samples, 0.87%)</title><rect x="999.1" y="533" width="10.2" height="15.0" fill="rgb(206,169,7)" rx="2" ry="2" />
<text  x="1002.06" y="543.5" ></text>
</g>
<g >
<title>runtime.systemstack (665 samples, 0.10%)</title><rect x="908.6" y="485" width="1.1" height="15.0" fill="rgb(227,162,16)" rx="2" ry="2" />
<text  x="911.58" y="495.5" ></text>
</g>
<g >
<title>tg/core/state.(*stateObject).GetCommittedState (270 samples, 0.04%)</title><rect x="395.1" y="357" width="0.5" height="15.0" fill="rgb(242,4,33)" rx="2" ry="2" />
<text  x="398.14" y="367.5" ></text>
</g>
<g >
<title>runtime.(*_type).typeOff (66 samples, 0.01%)</title><rect x="1183.6" y="501" width="0.1" height="15.0" fill="rgb(217,4,11)" rx="2" ry="2" />
<text  x="1186.57" y="511.5" ></text>
</g>
<g >
<title>tg/eth/stagedsync.recoverSenders (25,869 samples, 3.72%)</title><rect x="1132.0" y="853" width="43.9" height="15.0" fill="rgb(245,194,9)" rx="2" ry="2" />
<text  x="1135.01" y="863.5" >tg/e..</text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (175 samples, 0.03%)</title><rect x="910.1" y="453" width="0.2" height="15.0" fill="rgb(214,66,53)" rx="2" ry="2" />
<text  x="913.05" y="463.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (158 samples, 0.02%)</title><rect x="658.9" y="581" width="0.3" height="15.0" fill="rgb(209,105,51)" rx="2" ry="2" />
<text  x="661.94" y="591.5" ></text>
</g>
<g >
<title>tg/core.(*StateTransition).preCheck (13,435 samples, 1.93%)</title><rect x="239.0" y="645" width="22.8" height="15.0" fill="rgb(234,22,20)" rx="2" ry="2" />
<text  x="242.01" y="655.5" >t..</text>
</g>
<g >
<title>sort.swapRange (279 samples, 0.04%)</title><rect x="178.4" y="469" width="0.5" height="15.0" fill="rgb(250,119,31)" rx="2" ry="2" />
<text  x="181.44" y="479.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).getStateObject (106 samples, 0.02%)</title><rect x="265.8" y="629" width="0.2" height="15.0" fill="rgb(249,119,0)" rx="2" ry="2" />
<text  x="268.78" y="639.5" ></text>
</g>
<g >
<title>crypto/cipher.(*ctr).refill (497 samples, 0.07%)</title><rect x="1177.5" y="789" width="0.8" height="15.0" fill="rgb(245,197,1)" rx="2" ry="2" />
<text  x="1180.50" y="799.5" ></text>
</g>
<g >
<title>runtime.addspecial (221 samples, 0.03%)</title><rect x="908.8" y="437" width="0.4" height="15.0" fill="rgb(247,216,46)" rx="2" ry="2" />
<text  x="911.80" y="447.5" ></text>
</g>
<g >
<title>runtime.cgoIsGoPointer (71 samples, 0.01%)</title><rect x="1046.0" y="565" width="0.1" height="15.0" fill="rgb(205,60,9)" rx="2" ry="2" />
<text  x="1048.96" y="575.5" ></text>
</g>
<g >
<title>runtime.cgocall (85 samples, 0.01%)</title><rect x="450.4" y="277" width="0.1" height="15.0" fill="rgb(218,99,8)" rx="2" ry="2" />
<text  x="453.38" y="287.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.(*state).permute (432 samples, 0.06%)</title><rect x="825.2" y="501" width="0.7" height="15.0" fill="rgb(212,138,2)" rx="2" ry="2" />
<text  x="828.16" y="511.5" ></text>
</g>
<g >
<title>runtime.growWork (66 samples, 0.01%)</title><rect x="330.2" y="549" width="0.1" height="15.0" fill="rgb(251,179,21)" rx="2" ry="2" />
<text  x="333.20" y="559.5" ></text>
</g>
<g >
<title>tg/core/state.(*stateObject).GetCommittedState (151 samples, 0.02%)</title><rect x="596.8" y="533" width="0.3" height="15.0" fill="rgb(222,129,36)" rx="2" ry="2" />
<text  x="599.83" y="543.5" ></text>
</g>
<g >
<title>runtime.memhash_varlen (88 samples, 0.01%)</title><rect x="630.4" y="645" width="0.1" height="15.0" fill="rgb(221,175,35)" rx="2" ry="2" />
<text  x="633.38" y="655.5" ></text>
</g>
<g >
<title>runtime.futexsleep (960 samples, 0.14%)</title><rect x="118.5" y="773" width="1.6" height="15.0" fill="rgb(237,34,30)" rx="2" ry="2" />
<text  x="121.52" y="783.5" ></text>
</g>
<g >
<title>runtime.systemstack (65 samples, 0.01%)</title><rect x="1180.2" y="773" width="0.1" height="15.0" fill="rgb(213,106,37)" rx="2" ry="2" />
<text  x="1183.23" y="783.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).StaticCall (3,629 samples, 0.52%)</title><rect x="445.9" y="517" width="6.2" height="15.0" fill="rgb(217,59,13)" rx="2" ry="2" />
<text  x="448.89" y="527.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*BTree).Get (129 samples, 0.02%)</title><rect x="481.5" y="309" width="0.3" height="15.0" fill="rgb(252,220,25)" rx="2" ry="2" />
<text  x="484.54" y="319.5" ></text>
</g>
<g >
<title>tg/core/vm.opCall (66 samples, 0.01%)</title><rect x="514.1" y="405" width="0.1" height="15.0" fill="rgb(221,145,2)" rx="2" ry="2" />
<text  x="517.09" y="415.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (96 samples, 0.01%)</title><rect x="853.0" y="469" width="0.2" height="15.0" fill="rgb(218,44,3)" rx="2" ry="2" />
<text  x="856.02" y="479.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find.func1 (59 samples, 0.01%)</title><rect x="323.2" y="373" width="0.1" height="15.0" fill="rgb(249,174,8)" rx="2" ry="2" />
<text  x="326.19" y="383.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).Call (72 samples, 0.01%)</title><rect x="413.4" y="261" width="0.2" height="15.0" fill="rgb(224,78,35)" rx="2" ry="2" />
<text  x="416.44" y="271.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (221 samples, 0.03%)</title><rect x="767.7" y="485" width="0.4" height="15.0" fill="rgb(208,12,5)" rx="2" ry="2" />
<text  x="770.70" y="495.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.(*runContainer16).toArrayContainer (4,291 samples, 0.62%)</title><rect x="149.0" y="549" width="7.3" height="15.0" fill="rgb(239,48,46)" rx="2" ry="2" />
<text  x="152.01" y="559.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVMInterpreter).Run (100 samples, 0.01%)</title><rect x="416.5" y="357" width="0.1" height="15.0" fill="rgb(249,142,4)" rx="2" ry="2" />
<text  x="419.47" y="367.5" ></text>
</g>
<g >
<title>tg/ethdb.(*TxDb).Delete (337 samples, 0.05%)</title><rect x="818.7" y="613" width="0.5" height="15.0" fill="rgb(231,16,25)" rx="2" ry="2" />
<text  x="821.66" y="623.5" ></text>
</g>
<g >
<title>tg/turbo/trie.(*HashBuilder).branchHash (400 samples, 0.06%)</title><rect x="769.3" y="629" width="0.7" height="15.0" fill="rgb(221,31,23)" rx="2" ry="2" />
<text  x="772.27" y="639.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb._Cfunc_lmdbgo_mdb_cursor_get1 (69 samples, 0.01%)</title><rect x="321.4" y="437" width="0.1" height="15.0" fill="rgb(222,154,28)" rx="2" ry="2" />
<text  x="324.40" y="447.5" ></text>
</g>
<g >
<title>tg/turbo/rlphacks.encodeBytesAsRlpToWriter (1,170 samples, 0.17%)</title><rect x="1117.0" y="613" width="2.0" height="15.0" fill="rgb(211,181,31)" rx="2" ry="2" />
<text  x="1120.05" y="623.5" ></text>
</g>
<g >
<title>runtime.lock2 (140 samples, 0.02%)</title><rect x="893.9" y="485" width="0.2" height="15.0" fill="rgb(253,109,25)" rx="2" ry="2" />
<text  x="896.85" y="495.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.(*state).permute (1,007 samples, 0.14%)</title><rect x="222.7" y="565" width="1.7" height="15.0" fill="rgb(217,140,23)" rx="2" ry="2" />
<text  x="225.70" y="575.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.beginTxn (112 samples, 0.02%)</title><rect x="230.2" y="645" width="0.2" height="15.0" fill="rgb(222,37,22)" rx="2" ry="2" />
<text  x="233.21" y="655.5" ></text>
</g>
<g >
<title>runtime.stoplockedm (474 samples, 0.07%)</title><rect x="122.6" y="789" width="0.8" height="15.0" fill="rgb(212,150,29)" rx="2" ry="2" />
<text  x="125.62" y="799.5" ></text>
</g>
<g >
<title>tg/ethdb.(*mutation).Get (298 samples, 0.04%)</title><rect x="340.1" y="517" width="0.5" height="15.0" fill="rgb(240,153,24)" rx="2" ry="2" />
<text  x="343.13" y="527.5" ></text>
</g>
<g >
<title>tg/rlp.makePtrWriter.func1 (3,041 samples, 0.44%)</title><rect x="762.2" y="597" width="5.1" height="15.0" fill="rgb(241,175,15)" rx="2" ry="2" />
<text  x="765.18" y="607.5" ></text>
</g>
<g >
<title>runtime.memmove (113 samples, 0.02%)</title><rect x="704.7" y="517" width="0.2" height="15.0" fill="rgb(229,66,7)" rx="2" ry="2" />
<text  x="707.72" y="527.5" ></text>
</g>
<g >
<title>runtime.mallocgc (230 samples, 0.03%)</title><rect x="1109.4" y="469" width="0.4" height="15.0" fill="rgb(244,198,51)" rx="2" ry="2" />
<text  x="1112.44" y="479.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).insert (1,137 samples, 0.16%)</title><rect x="702.0" y="581" width="1.9" height="15.0" fill="rgb(232,20,21)" rx="2" ry="2" />
<text  x="705.00" y="591.5" ></text>
</g>
<g >
<title>runtime.newobject (363 samples, 0.05%)</title><rect x="197.0" y="469" width="0.6" height="15.0" fill="rgb(217,198,10)" rx="2" ry="2" />
<text  x="199.97" y="479.5" ></text>
</g>
<g >
<title>runtime.mapassign (96 samples, 0.01%)</title><rect x="522.5" y="549" width="0.1" height="15.0" fill="rgb(238,161,4)" rx="2" ry="2" />
<text  x="525.48" y="559.5" ></text>
</g>
<g >
<title>tg/core/vm.opMul (75 samples, 0.01%)</title><rect x="428.1" y="533" width="0.2" height="15.0" fill="rgb(244,31,14)" rx="2" ry="2" />
<text  x="431.13" y="543.5" ></text>
</g>
<g >
<title>reflect.unsafe_New (310 samples, 0.04%)</title><rect x="1123.4" y="549" width="0.5" height="15.0" fill="rgb(225,147,13)" rx="2" ry="2" />
<text  x="1126.41" y="559.5" ></text>
</g>
<g >
<title>runtime.mapaccess2_faststr (2,558 samples, 0.37%)</title><rect x="853.9" y="533" width="4.4" height="15.0" fill="rgb(238,51,4)" rx="2" ry="2" />
<text  x="856.91" y="543.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb._Cfunc_lmdbgo_mdb_cursor_put2 (1,700 samples, 0.24%)</title><rect x="780.1" y="629" width="2.9" height="15.0" fill="rgb(207,6,35)" rx="2" ry="2" />
<text  x="783.09" y="639.5" ></text>
</g>
<g >
<title>runtime.mallocgc (167 samples, 0.02%)</title><rect x="972.2" y="581" width="0.3" height="15.0" fill="rgb(213,79,46)" rx="2" ry="2" />
<text  x="975.21" y="591.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (109 samples, 0.02%)</title><rect x="833.7" y="469" width="0.2" height="15.0" fill="rgb(249,181,38)" rx="2" ry="2" />
<text  x="836.71" y="479.5" ></text>
</g>
<g >
<title>sort.Stable (5,549 samples, 0.80%)</title><rect x="863.0" y="517" width="9.4" height="15.0" fill="rgb(240,203,45)" rx="2" ry="2" />
<text  x="865.99" y="527.5" ></text>
</g>
<g >
<title>sort.swapRange (177 samples, 0.03%)</title><rect x="863.5" y="453" width="0.3" height="15.0" fill="rgb(227,55,33)" rx="2" ry="2" />
<text  x="866.46" y="463.5" ></text>
</g>
<g >
<title>github.com/holiman/uint256.(*Int).Div (275 samples, 0.04%)</title><rect x="421.6" y="517" width="0.5" height="15.0" fill="rgb(230,68,0)" rx="2" ry="2" />
<text  x="424.61" y="527.5" ></text>
</g>
<g >
<title>tg/ethdb.(*ObjectDatabase).Walk (22,523 samples, 3.24%)</title><rect x="176.5" y="677" width="38.3" height="15.0" fill="rgb(223,133,41)" rx="2" ry="2" />
<text  x="179.54" y="687.5" >tg/..</text>
</g>
<g >
<title>github.com/ugorji/go/codec.fastpathDecodeTypeSwitch (608 samples, 0.09%)</title><rect x="817.0" y="565" width="1.1" height="15.0" fill="rgb(252,98,23)" rx="2" ry="2" />
<text  x="820.03" y="575.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find (2,284 samples, 0.33%)</title><rect x="275.0" y="485" width="3.9" height="15.0" fill="rgb(205,145,23)" rx="2" ry="2" />
<text  x="278.00" y="495.5" ></text>
</g>
<g >
<title>sort.swapRange (210 samples, 0.03%)</title><rect x="1069.1" y="485" width="0.3" height="15.0" fill="rgb(216,118,13)" rx="2" ry="2" />
<text  x="1072.07" y="495.5" ></text>
</g>
<g >
<title>runtime.largeAlloc (82 samples, 0.01%)</title><rect x="1176.4" y="741" width="0.1" height="15.0" fill="rgb(231,136,17)" rx="2" ry="2" />
<text  x="1179.40" y="751.5" ></text>
</g>
<g >
<title>tg/core/vm.run (96 samples, 0.01%)</title><rect x="395.7" y="373" width="0.1" height="15.0" fill="rgb(232,25,40)" rx="2" ry="2" />
<text  x="398.67" y="383.5" ></text>
</g>
<g >
<title>runtime.mapassign (101 samples, 0.01%)</title><rect x="322.9" y="533" width="0.2" height="15.0" fill="rgb(234,31,0)" rx="2" ry="2" />
<text  x="325.90" y="543.5" ></text>
</g>
<g >
<title>tg/core/vm.opStaticCall (489 samples, 0.07%)</title><rect x="487.3" y="405" width="0.8" height="15.0" fill="rgb(239,122,37)" rx="2" ry="2" />
<text  x="490.30" y="415.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (65 samples, 0.01%)</title><rect x="764.4" y="373" width="0.1" height="15.0" fill="rgb(238,88,42)" rx="2" ry="2" />
<text  x="767.41" y="383.5" ></text>
</g>
<g >
<title>sort.Search (115 samples, 0.02%)</title><rect x="390.0" y="213" width="0.2" height="15.0" fill="rgb(253,141,3)" rx="2" ry="2" />
<text  x="393.05" y="223.5" ></text>
</g>
<g >
<title>sync.(*RWMutex).Lock (62 samples, 0.01%)</title><rect x="330.6" y="565" width="0.1" height="15.0" fill="rgb(250,26,2)" rx="2" ry="2" />
<text  x="333.59" y="575.5" ></text>
</g>
<g >
<title>tg/rlp.decodeUint256 (84 samples, 0.01%)</title><rect x="232.8" y="421" width="0.2" height="15.0" fill="rgb(228,96,52)" rx="2" ry="2" />
<text  x="235.81" y="431.5" ></text>
</g>
<g >
<title>cmpbody (126 samples, 0.02%)</title><rect x="510.6" y="293" width="0.2" height="15.0" fill="rgb(215,155,39)" rx="2" ry="2" />
<text  x="513.60" y="303.5" ></text>
</g>
<g >
<title>sync.(*RWMutex).Unlock (254 samples, 0.04%)</title><rect x="632.9" y="661" width="0.5" height="15.0" fill="rgb(243,125,0)" rx="2" ry="2" />
<text  x="635.93" y="671.5" ></text>
</g>
<g >
<title>bytes.Compare (75 samples, 0.01%)</title><rect x="1076.7" y="229" width="0.2" height="15.0" fill="rgb(242,11,23)" rx="2" ry="2" />
<text  x="1079.74" y="239.5" ></text>
</g>
<g >
<title>sort.Search (87 samples, 0.01%)</title><rect x="1120.4" y="613" width="0.1" height="15.0" fill="rgb(229,52,6)" rx="2" ry="2" />
<text  x="1123.36" y="623.5" ></text>
</g>
<g >
<title>runtime.convT64 (65 samples, 0.01%)</title><rect x="1021.9" y="517" width="0.1" height="15.0" fill="rgb(254,155,8)" rx="2" ry="2" />
<text  x="1024.90" y="527.5" ></text>
</g>
<g >
<title>tg/rlp.decodeSliceElems (3,569 samples, 0.51%)</title><rect x="1181.0" y="645" width="6.0" height="15.0" fill="rgb(246,7,46)" rx="2" ry="2" />
<text  x="1183.97" y="655.5" ></text>
</g>
<g >
<title>tg/consensus/ethash.accumulateRewards (59 samples, 0.01%)</title><rect x="234.3" y="677" width="0.1" height="15.0" fill="rgb(251,192,35)" rx="2" ry="2" />
<text  x="237.26" y="687.5" ></text>
</g>
<g >
<title>runtime.mallocgc (68 samples, 0.01%)</title><rect x="265.1" y="565" width="0.1" height="15.0" fill="rgb(250,156,48)" rx="2" ry="2" />
<text  x="268.13" y="575.5" ></text>
</g>
<g >
<title>tg/common/etl.(*oldestEntrySortableBuffer).Swap (163 samples, 0.02%)</title><rect x="987.5" y="437" width="0.2" height="15.0" fill="rgb(226,9,46)" rx="2" ry="2" />
<text  x="990.47" y="447.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).insert (155 samples, 0.02%)</title><rect x="665.7" y="581" width="0.2" height="15.0" fill="rgb(229,167,0)" rx="2" ry="2" />
<text  x="668.68" y="591.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (773 samples, 0.11%)</title><rect x="498.8" y="373" width="1.3" height="15.0" fill="rgb(225,115,35)" rx="2" ry="2" />
<text  x="501.75" y="383.5" ></text>
</g>
<g >
<title>runtime.makeslice (971 samples, 0.14%)</title><rect x="1100.2" y="501" width="1.6" height="15.0" fill="rgb(249,227,27)" rx="2" ry="2" />
<text  x="1103.16" y="511.5" ></text>
</g>
<g >
<title>tg/core/types.codecSelfer2.decLogs (2,086 samples, 0.30%)</title><rect x="162.0" y="581" width="3.6" height="15.0" fill="rgb(233,63,46)" rx="2" ry="2" />
<text  x="165.02" y="591.5" ></text>
</g>
<g >
<title>sort.symMerge (2,005 samples, 0.29%)</title><rect x="189.3" y="261" width="3.4" height="15.0" fill="rgb(215,212,50)" rx="2" ry="2" />
<text  x="192.26" y="271.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*Encoder).selferMarshal (983 samples, 0.14%)</title><rect x="783.3" y="613" width="1.6" height="15.0" fill="rgb(252,89,54)" rx="2" ry="2" />
<text  x="786.27" y="623.5" ></text>
</g>
<g >
<title>aeshashbody (262 samples, 0.04%)</title><rect x="698.9" y="581" width="0.5" height="15.0" fill="rgb(227,79,47)" rx="2" ry="2" />
<text  x="701.91" y="591.5" ></text>
</g>
<g >
<title>tg/eth/stagedsync.promoteHistory.func2.1 (650 samples, 0.09%)</title><rect x="1056.8" y="613" width="1.1" height="15.0" fill="rgb(222,161,22)" rx="2" ry="2" />
<text  x="1059.78" y="623.5" ></text>
</g>
<g >
<title>runtime.lock2 (97 samples, 0.01%)</title><rect x="909.4" y="437" width="0.1" height="15.0" fill="rgb(222,164,32)" rx="2" ry="2" />
<text  x="912.37" y="447.5" ></text>
</g>
<g >
<title>tg/core/vm.opIszero (225 samples, 0.03%)</title><rect x="528.8" y="597" width="0.4" height="15.0" fill="rgb(243,160,40)" rx="2" ry="2" />
<text  x="531.82" y="607.5" ></text>
</g>
<g >
<title>runtime.mapassign (1,105 samples, 0.16%)</title><rect x="630.5" y="661" width="1.9" height="15.0" fill="rgb(214,201,13)" rx="2" ry="2" />
<text  x="633.53" y="671.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).SetNonce (838 samples, 0.12%)</title><rect x="266.0" y="645" width="1.4" height="15.0" fill="rgb(229,214,43)" rx="2" ry="2" />
<text  x="268.96" y="655.5" ></text>
</g>
<g >
<title>sort.swapRange (98 samples, 0.01%)</title><rect x="867.7" y="293" width="0.1" height="15.0" fill="rgb(209,78,41)" rx="2" ry="2" />
<text  x="870.68" y="303.5" ></text>
</g>
<g >
<title>tg/core/vm.(*bn256PairingIstanbul).Run (77 samples, 0.01%)</title><rect x="515.0" y="357" width="0.2" height="15.0" fill="rgb(226,70,10)" rx="2" ry="2" />
<text  x="518.04" y="367.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).getVal2 (1,873 samples, 0.27%)</title><rect x="441.1" y="389" width="3.2" height="15.0" fill="rgb(205,120,29)" rx="2" ry="2" />
<text  x="444.11" y="399.5" ></text>
</g>
<g >
<title>container/heap.down (416 samples, 0.06%)</title><rect x="1087.3" y="661" width="0.7" height="15.0" fill="rgb(224,13,11)" rx="2" ry="2" />
<text  x="1090.26" y="671.5" ></text>
</g>
<g >
<title>tg/core/state.(*PlainStateWriter).WriteChangeSets (9,027 samples, 1.30%)</title><rect x="721.7" y="693" width="15.3" height="15.0" fill="rgb(243,187,7)" rx="2" ry="2" />
<text  x="724.69" y="703.5" ></text>
</g>
<g >
<title>runtime.makeslice (199 samples, 0.03%)</title><rect x="1012.3" y="565" width="0.4" height="15.0" fill="rgb(234,64,52)" rx="2" ry="2" />
<text  x="1015.33" y="575.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring/internal.(*ByteInputAdapter).Next (264 samples, 0.04%)</title><rect x="1091.9" y="613" width="0.4" height="15.0" fill="rgb(251,223,18)" rx="2" ry="2" />
<text  x="1094.88" y="623.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (339 samples, 0.05%)</title><rect x="767.7" y="517" width="0.6" height="15.0" fill="rgb(215,53,22)" rx="2" ry="2" />
<text  x="770.68" y="527.5" ></text>
</g>
<g >
<title>sort.symMerge (158 samples, 0.02%)</title><rect x="993.6" y="213" width="0.2" height="15.0" fill="rgb(236,177,6)" rx="2" ry="2" />
<text  x="996.58" y="223.5" ></text>
</g>
<g >
<title>sort.doPivot (214 samples, 0.03%)</title><rect x="1026.6" y="549" width="0.4" height="15.0" fill="rgb(236,7,6)" rx="2" ry="2" />
<text  x="1029.64" y="559.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.newRunContainer16FromArray (135 samples, 0.02%)</title><rect x="156.9" y="517" width="0.2" height="15.0" fill="rgb(210,111,36)" rx="2" ry="2" />
<text  x="159.90" y="527.5" ></text>
</g>
<g >
<title>tg/core/vm.run (1,797 samples, 0.26%)</title><rect x="412.9" y="437" width="3.0" height="15.0" fill="rgb(243,31,24)" rx="2" ry="2" />
<text  x="415.87" y="447.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).getVal1.func1 (140 samples, 0.02%)</title><rect x="464.1" y="437" width="0.3" height="15.0" fill="rgb(239,84,32)" rx="2" ry="2" />
<text  x="467.14" y="447.5" ></text>
</g>
<g >
<title>runtime.convT2E (99 samples, 0.01%)</title><rect x="1088.0" y="645" width="0.1" height="15.0" fill="rgb(249,225,53)" rx="2" ry="2" />
<text  x="1090.98" y="655.5" ></text>
</g>
<g >
<title>tg/ethdb.(*LmdbCursor).Close (1,061 samples, 0.15%)</title><rect x="928.4" y="501" width="1.8" height="15.0" fill="rgb(205,130,14)" rx="2" ry="2" />
<text  x="931.36" y="511.5" ></text>
</g>
<g >
<title>tg/rlp.(*Stream).readUint (99 samples, 0.01%)</title><rect x="219.2" y="389" width="0.2" height="15.0" fill="rgb(214,10,26)" rx="2" ry="2" />
<text  x="222.18" y="399.5" ></text>
</g>
<g >
<title>reflect.Value.Interface (86 samples, 0.01%)</title><rect x="1183.7" y="533" width="0.1" height="15.0" fill="rgb(214,103,53)" rx="2" ry="2" />
<text  x="1186.68" y="543.5" ></text>
</g>
<g >
<title>tg/core/state.(*stateObject).GetCommittedState (165 samples, 0.02%)</title><rect x="362.6" y="485" width="0.3" height="15.0" fill="rgb(243,47,47)" rx="2" ry="2" />
<text  x="365.57" y="495.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).getStateObject (122 samples, 0.02%)</title><rect x="268.5" y="581" width="0.2" height="15.0" fill="rgb(227,37,42)" rx="2" ry="2" />
<text  x="271.46" y="591.5" ></text>
</g>
<g >
<title>runtime.cgocall (162 samples, 0.02%)</title><rect x="419.4" y="277" width="0.2" height="15.0" fill="rgb(237,17,46)" rx="2" ry="2" />
<text  x="422.37" y="287.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb._Cfunc_lmdbgo_mdb_cursor_get2 (277 samples, 0.04%)</title><rect x="326.4" y="421" width="0.5" height="15.0" fill="rgb(215,131,13)" rx="2" ry="2" />
<text  x="329.44" y="431.5" ></text>
</g>
<g >
<title>sort.Search (95 samples, 0.01%)</title><rect x="527.2" y="405" width="0.2" height="15.0" fill="rgb(225,122,4)" rx="2" ry="2" />
<text  x="530.22" y="415.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.(*Bitmap).RunOptimize (4,452 samples, 0.64%)</title><rect x="148.9" y="597" width="7.6" height="15.0" fill="rgb(231,120,32)" rx="2" ry="2" />
<text  x="151.90" y="607.5" ></text>
</g>
<g >
<title>runtime.exitsyscallfast (79 samples, 0.01%)</title><rect x="1128.1" y="581" width="0.1" height="15.0" fill="rgb(234,2,11)" rx="2" ry="2" />
<text  x="1131.10" y="591.5" ></text>
</g>
<g >
<title>tg/core/vm.opStaticCall (137 samples, 0.02%)</title><rect x="517.4" y="405" width="0.2" height="15.0" fill="rgb(215,223,23)" rx="2" ry="2" />
<text  x="520.40" y="415.5" ></text>
</g>
<g >
<title>tg/rlp.writeByteArrayCopy (165 samples, 0.02%)</title><rect x="763.5" y="469" width="0.3" height="15.0" fill="rgb(210,154,5)" rx="2" ry="2" />
<text  x="766.49" y="479.5" ></text>
</g>
<g >
<title>bytes.Compare (133 samples, 0.02%)</title><rect x="992.6" y="261" width="0.2" height="15.0" fill="rgb(212,184,5)" rx="2" ry="2" />
<text  x="995.56" y="271.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (61 samples, 0.01%)</title><rect x="1177.3" y="597" width="0.1" height="15.0" fill="rgb(240,109,38)" rx="2" ry="2" />
<text  x="1180.31" y="607.5" ></text>
</g>
<g >
<title>tg/core/vm.run (358 samples, 0.05%)</title><rect x="478.9" y="309" width="0.6" height="15.0" fill="rgb(231,17,43)" rx="2" ry="2" />
<text  x="481.85" y="319.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*BTree).Get (96 samples, 0.01%)</title><rect x="423.2" y="453" width="0.2" height="15.0" fill="rgb(247,129,39)" rx="2" ry="2" />
<text  x="426.22" y="463.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVMInterpreter).Run (410 samples, 0.06%)</title><rect x="515.3" y="357" width="0.7" height="15.0" fill="rgb(254,59,43)" rx="2" ry="2" />
<text  x="518.30" y="367.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).insert (724 samples, 0.10%)</title><rect x="1120.2" y="677" width="1.2" height="15.0" fill="rgb(244,81,33)" rx="2" ry="2" />
<text  x="1123.16" y="687.5" ></text>
</g>
<g >
<title>tg/ethdb.(*LmdbCursor).appendDup (2,098 samples, 0.30%)</title><rect x="723.7" y="613" width="3.6" height="15.0" fill="rgb(206,194,14)" rx="2" ry="2" />
<text  x="726.74" y="623.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc.func1 (72 samples, 0.01%)</title><rect x="897.9" y="421" width="0.1" height="15.0" fill="rgb(224,46,46)" rx="2" ry="2" />
<text  x="900.87" y="431.5" ></text>
</g>
<g >
<title>tg/core/vm.(*ecrecover).Run (92 samples, 0.01%)</title><rect x="420.4" y="357" width="0.1" height="15.0" fill="rgb(238,29,50)" rx="2" ry="2" />
<text  x="423.38" y="367.5" ></text>
</g>
<g >
<title>runtime.mallocgc (124 samples, 0.02%)</title><rect x="324.5" y="565" width="0.2" height="15.0" fill="rgb(248,121,0)" rx="2" ry="2" />
<text  x="327.52" y="575.5" ></text>
</g>
<g >
<title>tg/core/vm.(*Contract).validJumpdest (439 samples, 0.06%)</title><rect x="605.0" y="517" width="0.7" height="15.0" fill="rgb(222,203,8)" rx="2" ry="2" />
<text  x="607.95" y="527.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVMInterpreter).Run (2,607 samples, 0.38%)</title><rect x="382.2" y="357" width="4.4" height="15.0" fill="rgb(215,109,18)" rx="2" ry="2" />
<text  x="385.19" y="367.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.openCursor (1,490 samples, 0.21%)</title><rect x="930.3" y="469" width="2.5" height="15.0" fill="rgb(244,125,43)" rx="2" ry="2" />
<text  x="933.27" y="479.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find (67 samples, 0.01%)</title><rect x="703.8" y="565" width="0.1" height="15.0" fill="rgb(250,27,28)" rx="2" ry="2" />
<text  x="706.82" y="575.5" ></text>
</g>
<g >
<title>tg/rlp.makeEncoderWriter.func2 (3,013 samples, 0.43%)</title><rect x="762.2" y="581" width="5.1" height="15.0" fill="rgb(242,115,23)" rx="2" ry="2" />
<text  x="765.23" y="591.5" ></text>
</g>
<g >
<title>sort.quickSort (529 samples, 0.08%)</title><rect x="729.0" y="613" width="0.9" height="15.0" fill="rgb(244,52,51)" rx="2" ry="2" />
<text  x="732.00" y="623.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*BTree).Get (66 samples, 0.01%)</title><rect x="362.6" y="437" width="0.2" height="15.0" fill="rgb(222,57,17)" rx="2" ry="2" />
<text  x="365.65" y="447.5" ></text>
</g>
<g >
<title>bytes.Compare (72 samples, 0.01%)</title><rect x="865.6" y="389" width="0.1" height="15.0" fill="rgb(218,109,42)" rx="2" ry="2" />
<text  x="868.58" y="399.5" ></text>
</g>
<g >
<title>runtime.cgocall (275 samples, 0.04%)</title><rect x="390.5" y="213" width="0.4" height="15.0" fill="rgb(227,46,16)" rx="2" ry="2" />
<text  x="393.48" y="223.5" ></text>
</g>
<g >
<title>github.com/holiman/uint256.(*Int).WriteToSlice (2,783 samples, 0.40%)</title><rect x="536.2" y="565" width="4.7" height="15.0" fill="rgb(245,142,53)" rx="2" ry="2" />
<text  x="539.17" y="575.5" ></text>
</g>
<g >
<title>reflect.Copy (152 samples, 0.02%)</title><rect x="1110.1" y="485" width="0.2" height="15.0" fill="rgb(207,7,36)" rx="2" ry="2" />
<text  x="1113.07" y="495.5" ></text>
</g>
<g >
<title>sort.Search (150 samples, 0.02%)</title><rect x="511.0" y="357" width="0.2" height="15.0" fill="rgb(253,197,9)" rx="2" ry="2" />
<text  x="513.99" y="367.5" ></text>
</g>
<g >
<title>runtime.mallocgc (739 samples, 0.11%)</title><rect x="621.4" y="581" width="1.2" height="15.0" fill="rgb(236,140,28)" rx="2" ry="2" />
<text  x="624.38" y="591.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (86 samples, 0.01%)</title><rect x="501.2" y="341" width="0.2" height="15.0" fill="rgb(242,90,24)" rx="2" ry="2" />
<text  x="504.22" y="351.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).insert (262 samples, 0.04%)</title><rect x="666.1" y="565" width="0.4" height="15.0" fill="rgb(250,149,6)" rx="2" ry="2" />
<text  x="669.07" y="575.5" ></text>
</g>
<g >
<title>sort.Search (197 samples, 0.03%)</title><rect x="1120.6" y="629" width="0.3" height="15.0" fill="rgb(212,135,43)" rx="2" ry="2" />
<text  x="1123.60" y="639.5" ></text>
</g>
<g >
<title>tg/core/state.(*journal).append (112 samples, 0.02%)</title><rect x="365.6" y="501" width="0.2" height="15.0" fill="rgb(249,147,24)" rx="2" ry="2" />
<text  x="368.63" y="511.5" ></text>
</g>
<g >
<title>tg/ethdb.(*mutation).Get (65 samples, 0.01%)</title><rect x="414.0" y="261" width="0.1" height="15.0" fill="rgb(230,63,20)" rx="2" ry="2" />
<text  x="416.98" y="271.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.(*state).Write (124 samples, 0.02%)</title><rect x="1030.5" y="597" width="0.2" height="15.0" fill="rgb(247,171,3)" rx="2" ry="2" />
<text  x="1033.54" y="607.5" ></text>
</g>
<g >
<title>runtime.growslice (216 samples, 0.03%)</title><rect x="1067.5" y="581" width="0.4" height="15.0" fill="rgb(227,62,21)" rx="2" ry="2" />
<text  x="1070.51" y="591.5" ></text>
</g>
<g >
<title>sort.swapRange (193 samples, 0.03%)</title><rect x="184.5" y="341" width="0.4" height="15.0" fill="rgb(211,109,34)" rx="2" ry="2" />
<text  x="187.55" y="351.5" ></text>
</g>
<g >
<title>tg/ethdb.(*ObjectDatabase).Get.func1 (170 samples, 0.02%)</title><rect x="230.5" y="677" width="0.3" height="15.0" fill="rgb(232,208,51)" rx="2" ry="2" />
<text  x="233.47" y="687.5" ></text>
</g>
<g >
<title>tg/ethdb.(*mutation).Get (122 samples, 0.02%)</title><rect x="415.4" y="325" width="0.2" height="15.0" fill="rgb(237,19,0)" rx="2" ry="2" />
<text  x="418.42" y="335.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (217 samples, 0.03%)</title><rect x="627.5" y="613" width="0.4" height="15.0" fill="rgb(207,25,28)" rx="2" ry="2" />
<text  x="630.50" y="623.5" ></text>
</g>
<g >
<title>tg/crypto/bn256/cloudflare.(*twistPoint).Mul (123 samples, 0.02%)</title><rect x="446.3" y="405" width="0.2" height="15.0" fill="rgb(252,150,37)" rx="2" ry="2" />
<text  x="449.27" y="415.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find (112 samples, 0.02%)</title><rect x="666.5" y="565" width="0.2" height="15.0" fill="rgb(224,62,2)" rx="2" ry="2" />
<text  x="669.54" y="575.5" ></text>
</g>
<g >
<title>tg/core/vm.opJump (144 samples, 0.02%)</title><rect x="397.0" y="469" width="0.3" height="15.0" fill="rgb(212,54,19)" rx="2" ry="2" />
<text  x="400.01" y="479.5" ></text>
</g>
<g >
<title>sort.symMerge (8,409 samples, 1.21%)</title><rect x="178.9" y="485" width="14.3" height="15.0" fill="rgb(242,132,12)" rx="2" ry="2" />
<text  x="181.92" y="495.5" ></text>
</g>
<g >
<title>runtime.hashGrow (127 samples, 0.02%)</title><rect x="631.7" y="645" width="0.2" height="15.0" fill="rgb(246,220,49)" rx="2" ry="2" />
<text  x="634.66" y="655.5" ></text>
</g>
<g >
<title>sort.quickSort (240 samples, 0.03%)</title><rect x="1028.5" y="437" width="0.4" height="15.0" fill="rgb(206,54,37)" rx="2" ry="2" />
<text  x="1031.52" y="447.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc.func1 (64 samples, 0.01%)</title><rect x="625.5" y="517" width="0.1" height="15.0" fill="rgb(205,49,21)" rx="2" ry="2" />
<text  x="628.48" y="527.5" ></text>
</g>
<g >
<title>tg/core/vm.opStaticCall (128 samples, 0.02%)</title><rect x="451.2" y="405" width="0.2" height="15.0" fill="rgb(252,110,15)" rx="2" ry="2" />
<text  x="454.21" y="415.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).Call (103 samples, 0.01%)</title><rect x="393.7" y="197" width="0.2" height="15.0" fill="rgb(206,2,36)" rx="2" ry="2" />
<text  x="396.70" y="207.5" ></text>
</g>
<g >
<title>runtime.growslice (93 samples, 0.01%)</title><rect x="265.1" y="581" width="0.2" height="15.0" fill="rgb(221,15,28)" rx="2" ry="2" />
<text  x="268.12" y="591.5" ></text>
</g>
<g >
<title>tg/core/types.(*Receipt).EncodeRLP (2,855 samples, 0.41%)</title><rect x="762.4" y="565" width="4.8" height="15.0" fill="rgb(252,46,18)" rx="2" ry="2" />
<text  x="765.36" y="575.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (152 samples, 0.02%)</title><rect x="1112.3" y="613" width="0.2" height="15.0" fill="rgb(221,56,50)" rx="2" ry="2" />
<text  x="1115.26" y="623.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (3,024 samples, 0.44%)</title><rect x="435.7" y="421" width="5.1" height="15.0" fill="rgb(225,83,5)" rx="2" ry="2" />
<text  x="438.70" y="431.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.(*runContainer16).toEfficientContainer (81 samples, 0.01%)</title><rect x="1050.1" y="581" width="0.1" height="15.0" fill="rgb(214,169,16)" rx="2" ry="2" />
<text  x="1053.09" y="591.5" ></text>
</g>
<g >
<title>github.com/holiman/uint256.udivrem (485 samples, 0.07%)</title><rect x="520.6" y="565" width="0.8" height="15.0" fill="rgb(230,178,19)" rx="2" ry="2" />
<text  x="523.59" y="575.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.(*state).Read (81 samples, 0.01%)</title><rect x="385.5" y="325" width="0.2" height="15.0" fill="rgb(223,7,41)" rx="2" ry="2" />
<text  x="388.54" y="335.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).StaticCall (352 samples, 0.05%)</title><rect x="608.9" y="453" width="0.6" height="15.0" fill="rgb(226,140,20)" rx="2" ry="2" />
<text  x="611.89" y="463.5" ></text>
</g>
<g >
<title>tg/eth/stagedsync.SpawnRecoverSendersStage.func4 (572 samples, 0.08%)</title><rect x="232.5" y="661" width="1.0" height="15.0" fill="rgb(219,122,46)" rx="2" ry="2" />
<text  x="235.49" y="671.5" ></text>
</g>
<g >
<title>tg/core/vm.NewEVMInterpreter (346 samples, 0.05%)</title><rect x="658.8" y="661" width="0.6" height="15.0" fill="rgb(236,63,34)" rx="2" ry="2" />
<text  x="661.80" y="671.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (86 samples, 0.01%)</title><rect x="853.0" y="453" width="0.2" height="15.0" fill="rgb(220,147,38)" rx="2" ry="2" />
<text  x="856.02" y="463.5" ></text>
</g>
<g >
<title>tg/core/state.(*stateObject).GetCommittedState (883 samples, 0.13%)</title><rect x="322.7" y="549" width="1.5" height="15.0" fill="rgb(223,136,0)" rx="2" ry="2" />
<text  x="325.74" y="559.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (87 samples, 0.01%)</title><rect x="385.8" y="213" width="0.1" height="15.0" fill="rgb(209,72,47)" rx="2" ry="2" />
<text  x="388.80" y="223.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).GetState (908 samples, 0.13%)</title><rect x="389.5" y="389" width="1.5" height="15.0" fill="rgb(252,219,14)" rx="2" ry="2" />
<text  x="392.45" y="399.5" ></text>
</g>
<g >
<title>runtime.makeslice (105 samples, 0.02%)</title><rect x="1090.2" y="645" width="0.2" height="15.0" fill="rgb(218,128,29)" rx="2" ry="2" />
<text  x="1093.20" y="655.5" ></text>
</g>
<g >
<title>runtime.mapaccess2 (88 samples, 0.01%)</title><rect x="624.5" y="629" width="0.2" height="15.0" fill="rgb(228,72,49)" rx="2" ry="2" />
<text  x="627.51" y="639.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*Decoder).decode (217 samples, 0.03%)</title><rect x="959.4" y="613" width="0.4" height="15.0" fill="rgb(241,119,44)" rx="2" ry="2" />
<text  x="962.43" y="623.5" ></text>
</g>
<g >
<title>tg/core/vm.opCall (164 samples, 0.02%)</title><rect x="393.7" y="277" width="0.2" height="15.0" fill="rgb(233,172,52)" rx="2" ry="2" />
<text  x="396.65" y="287.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).getVal2.func1 (304 samples, 0.04%)</title><rect x="390.5" y="245" width="0.5" height="15.0" fill="rgb(253,32,35)" rx="2" ry="2" />
<text  x="393.47" y="255.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (210 samples, 0.03%)</title><rect x="162.7" y="501" width="0.3" height="15.0" fill="rgb(218,37,16)" rx="2" ry="2" />
<text  x="165.67" y="511.5" ></text>
</g>
<g >
<title>container/heap.Pop (555 samples, 0.08%)</title><rect x="1087.2" y="677" width="1.0" height="15.0" fill="rgb(225,42,25)" rx="2" ry="2" />
<text  x="1090.23" y="687.5" ></text>
</g>
<g >
<title>runtime.mallocgc (66 samples, 0.01%)</title><rect x="1099.3" y="533" width="0.1" height="15.0" fill="rgb(245,30,2)" rx="2" ry="2" />
<text  x="1102.30" y="543.5" ></text>
</g>
<g >
<title>tg/core/state.newObject (872 samples, 0.13%)</title><rect x="259.6" y="597" width="1.5" height="15.0" fill="rgb(235,99,28)" rx="2" ry="2" />
<text  x="262.58" y="607.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVMInterpreter).Run (65 samples, 0.01%)</title><rect x="415.7" y="357" width="0.1" height="15.0" fill="rgb(249,216,45)" rx="2" ry="2" />
<text  x="418.71" y="367.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb._Cfunc_lmdbgo_mdb_cursor_get2 (1,779 samples, 0.26%)</title><rect x="441.1" y="357" width="3.1" height="15.0" fill="rgb(208,143,10)" rx="2" ry="2" />
<text  x="444.14" y="367.5" ></text>
</g>
<g >
<title>runtime.mallocgc (108 samples, 0.02%)</title><rect x="1067.6" y="565" width="0.1" height="15.0" fill="rgb(217,99,29)" rx="2" ry="2" />
<text  x="1070.55" y="575.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (300 samples, 0.04%)</title><rect x="452.4" y="421" width="0.5" height="15.0" fill="rgb(240,193,18)" rx="2" ry="2" />
<text  x="455.36" y="431.5" ></text>
</g>
<g >
<title>sort.symMerge (7,921 samples, 1.14%)</title><rect x="179.7" y="469" width="13.5" height="15.0" fill="rgb(221,139,5)" rx="2" ry="2" />
<text  x="182.72" y="479.5" ></text>
</g>
<g >
<title>sort.rotate (149 samples, 0.02%)</title><rect x="187.5" y="293" width="0.3" height="15.0" fill="rgb(251,62,27)" rx="2" ry="2" />
<text  x="190.52" y="303.5" ></text>
</g>
<g >
<title>sync.(*RWMutex).Lock (64 samples, 0.01%)</title><rect x="433.2" y="501" width="0.1" height="15.0" fill="rgb(207,186,32)" rx="2" ry="2" />
<text  x="436.16" y="511.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*bufioEncWriter).endErr (120 samples, 0.02%)</title><rect x="785.2" y="645" width="0.2" height="15.0" fill="rgb(241,166,31)" rx="2" ry="2" />
<text  x="788.22" y="655.5" ></text>
</g>
<g >
<title>runtime.memhash_varlen (194 samples, 0.03%)</title><rect x="639.3" y="613" width="0.3" height="15.0" fill="rgb(233,47,15)" rx="2" ry="2" />
<text  x="642.27" y="623.5" ></text>
</g>
<g >
<title>runtime.hashGrow (112 samples, 0.02%)</title><rect x="860.1" y="517" width="0.2" height="15.0" fill="rgb(245,104,40)" rx="2" ry="2" />
<text  x="863.07" y="527.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find (579 samples, 0.08%)</title><rect x="523.4" y="437" width="1.0" height="15.0" fill="rgb(205,142,33)" rx="2" ry="2" />
<text  x="526.40" y="447.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).StaticCall (87 samples, 0.01%)</title><rect x="486.2" y="325" width="0.2" height="15.0" fill="rgb(249,94,49)" rx="2" ry="2" />
<text  x="489.23" y="335.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*ioDecReader).readn1 (68 samples, 0.01%)</title><rect x="1089.2" y="501" width="0.1" height="15.0" fill="rgb(235,69,36)" rx="2" ry="2" />
<text  x="1092.16" y="511.5" ></text>
</g>
<g >
<title>tg/turbo/trie.(*HashBuilder).completeLeafHash (4,997 samples, 0.72%)</title><rect x="770.1" y="597" width="8.5" height="15.0" fill="rgb(206,166,0)" rx="2" ry="2" />
<text  x="773.14" y="607.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (80 samples, 0.01%)</title><rect x="978.3" y="485" width="0.2" height="15.0" fill="rgb(217,174,14)" rx="2" ry="2" />
<text  x="981.32" y="495.5" ></text>
</g>
<g >
<title>tg/eth/stagedsync.(*HashPromoter).Promote (38,298 samples, 5.51%)</title><rect x="961.0" y="709" width="65.1" height="15.0" fill="rgb(230,91,44)" rx="2" ry="2" />
<text  x="964.01" y="719.5" >tg/eth/..</text>
</g>
<g >
<title>runtime.makeslice (86 samples, 0.01%)</title><rect x="1176.4" y="805" width="0.1" height="15.0" fill="rgb(208,36,49)" rx="2" ry="2" />
<text  x="1179.40" y="815.5" ></text>
</g>
<g >
<title>tg/ethdb.(*TxDb).Append (98 samples, 0.01%)</title><rect x="723.4" y="629" width="0.2" height="15.0" fill="rgb(208,190,39)" rx="2" ry="2" />
<text  x="726.39" y="639.5" ></text>
</g>
<g >
<title>github.com/holiman/uint256.(*Int).ToBig (254 samples, 0.04%)</title><rect x="626.5" y="661" width="0.4" height="15.0" fill="rgb(251,65,34)" rx="2" ry="2" />
<text  x="629.48" y="671.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (125 samples, 0.02%)</title><rect x="460.6" y="437" width="0.2" height="15.0" fill="rgb(210,113,19)" rx="2" ry="2" />
<text  x="463.64" y="447.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.(*state).Read (853 samples, 0.12%)</title><rect x="127.7" y="789" width="1.4" height="15.0" fill="rgb(235,215,49)" rx="2" ry="2" />
<text  x="130.67" y="799.5" ></text>
</g>
<g >
<title>runtime.mapaccess1 (75 samples, 0.01%)</title><rect x="264.5" y="597" width="0.2" height="15.0" fill="rgb(250,70,18)" rx="2" ry="2" />
<text  x="267.55" y="607.5" ></text>
</g>
<g >
<title>internal/poll.ignoringEINTR (512 samples, 0.07%)</title><rect x="1176.6" y="741" width="0.8" height="15.0" fill="rgb(221,133,24)" rx="2" ry="2" />
<text  x="1179.58" y="751.5" ></text>
</g>
<g >
<title>tg/core/vm.opJumpdest (82 samples, 0.01%)</title><rect x="530.5" y="597" width="0.1" height="15.0" fill="rgb(209,195,30)" rx="2" ry="2" />
<text  x="533.47" y="607.5" ></text>
</g>
<g >
<title>tg/core/vm.run (60 samples, 0.01%)</title><rect x="493.4" y="373" width="0.1" height="15.0" fill="rgb(253,50,44)" rx="2" ry="2" />
<text  x="496.44" y="383.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).getVal1 (244 samples, 0.04%)</title><rect x="960.1" y="597" width="0.5" height="15.0" fill="rgb(253,68,48)" rx="2" ry="2" />
<text  x="963.15" y="607.5" ></text>
</g>
<g >
<title>sort.symMerge (1,574 samples, 0.23%)</title><rect x="1074.6" y="341" width="2.6" height="15.0" fill="rgb(240,15,47)" rx="2" ry="2" />
<text  x="1077.56" y="351.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (64 samples, 0.01%)</title><rect x="463.2" y="309" width="0.1" height="15.0" fill="rgb(218,32,51)" rx="2" ry="2" />
<text  x="466.21" y="319.5" ></text>
</g>
<g >
<title>container/heap.down (145 samples, 0.02%)</title><rect x="1046.4" y="661" width="0.3" height="15.0" fill="rgb(217,97,14)" rx="2" ry="2" />
<text  x="1049.45" y="671.5" ></text>
</g>
<g >
<title>runtime.duffcopy (164 samples, 0.02%)</title><rect x="762.4" y="549" width="0.3" height="15.0" fill="rgb(213,105,39)" rx="2" ry="2" />
<text  x="765.42" y="559.5" ></text>
</g>
<g >
<title>tg/rlp.makePtrWriter.func1 (2,030 samples, 0.29%)</title><rect x="1108.5" y="565" width="3.4" height="15.0" fill="rgb(206,13,47)" rx="2" ry="2" />
<text  x="1111.45" y="575.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*encWr).writestr (121 samples, 0.02%)</title><rect x="1040.7" y="469" width="0.2" height="15.0" fill="rgb(213,42,23)" rx="2" ry="2" />
<text  x="1043.67" y="479.5" ></text>
</g>
<g >
<title>tg/ethdb.(*LmdbKV).View (31,013 samples, 4.46%)</title><rect x="899.0" y="549" width="52.6" height="15.0" fill="rgb(220,37,16)" rx="2" ry="2" />
<text  x="901.97" y="559.5" >tg/et..</text>
</g>
<g >
<title>tg/core/vm.opSha3 (1,996 samples, 0.29%)</title><rect x="429.4" y="533" width="3.4" height="15.0" fill="rgb(248,70,5)" rx="2" ry="2" />
<text  x="432.40" y="543.5" ></text>
</g>
<g >
<title>tg/rlp.makeStructWriter.func1 (1,998 samples, 0.29%)</title><rect x="1108.5" y="549" width="3.4" height="15.0" fill="rgb(242,113,51)" rx="2" ry="2" />
<text  x="1111.51" y="559.5" ></text>
</g>
<g >
<title>runtime.removespecial (178 samples, 0.03%)</title><rect x="850.8" y="437" width="0.3" height="15.0" fill="rgb(210,200,5)" rx="2" ry="2" />
<text  x="853.78" y="447.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (111 samples, 0.02%)</title><rect x="495.0" y="437" width="0.2" height="15.0" fill="rgb(248,129,13)" rx="2" ry="2" />
<text  x="497.97" y="447.5" ></text>
</g>
<g >
<title>tg/rlp.(*encbuf).encodeUint (97 samples, 0.01%)</title><rect x="747.4" y="501" width="0.1" height="15.0" fill="rgb(225,220,13)" rx="2" ry="2" />
<text  x="750.38" y="511.5" ></text>
</g>
<g >
<title>tg/eth/stagedsync.spawnTxPool (9,003 samples, 1.30%)</title><rect x="214.8" y="741" width="15.3" height="15.0" fill="rgb(226,58,15)" rx="2" ry="2" />
<text  x="217.79" y="751.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVMInterpreter).Run (157 samples, 0.02%)</title><rect x="498.2" y="421" width="0.3" height="15.0" fill="rgb(248,58,47)" rx="2" ry="2" />
<text  x="501.25" y="431.5" ></text>
</g>
<g >
<title>runtime.makeslicecopy (253 samples, 0.04%)</title><rect x="1012.8" y="549" width="0.4" height="15.0" fill="rgb(232,3,48)" rx="2" ry="2" />
<text  x="1015.77" y="559.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).insert (5,187 samples, 0.75%)</title><rect x="704.9" y="549" width="8.8" height="15.0" fill="rgb(211,89,5)" rx="2" ry="2" />
<text  x="707.91" y="559.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find (68 samples, 0.01%)</title><rect x="422.8" y="389" width="0.1" height="15.0" fill="rgb(254,203,39)" rx="2" ry="2" />
<text  x="425.78" y="399.5" ></text>
</g>
<g >
<title>tg/core/vm.opEq (101 samples, 0.01%)</title><rect x="521.5" y="597" width="0.2" height="15.0" fill="rgb(225,117,46)" rx="2" ry="2" />
<text  x="524.53" y="607.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.(*state).padAndPermute (76 samples, 0.01%)</title><rect x="481.3" y="373" width="0.1" height="15.0" fill="rgb(219,90,20)" rx="2" ry="2" />
<text  x="484.29" y="383.5" ></text>
</g>
<g >
<title>runtime.mallocgc (65 samples, 0.01%)</title><rect x="657.8" y="645" width="0.1" height="15.0" fill="rgb(209,16,0)" rx="2" ry="2" />
<text  x="660.77" y="655.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).Call (470 samples, 0.07%)</title><rect x="496.8" y="389" width="0.8" height="15.0" fill="rgb(210,72,33)" rx="2" ry="2" />
<text  x="499.76" y="399.5" ></text>
</g>
<g >
<title>tg/eth.(*chainSyncer).startSync.func1 (572,252 samples, 82.36%)</title><rect x="135.0" y="869" width="971.8" height="15.0" fill="rgb(208,219,28)" rx="2" ry="2" />
<text  x="137.99" y="879.5" >tg/eth.(*chainSyncer).startSync.func1</text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (388 samples, 0.06%)</title><rect x="778.8" y="613" width="0.6" height="15.0" fill="rgb(222,30,11)" rx="2" ry="2" />
<text  x="781.75" y="623.5" ></text>
</g>
<g >
<title>tg/crypto/secp256k1.RecoverPubkeyWithContext.func1 (1,392 samples, 0.20%)</title><rect x="598.6" y="501" width="2.3" height="15.0" fill="rgb(238,107,43)" rx="2" ry="2" />
<text  x="601.58" y="511.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (86 samples, 0.01%)</title><rect x="984.5" y="469" width="0.2" height="15.0" fill="rgb(213,28,54)" rx="2" ry="2" />
<text  x="987.51" y="479.5" ></text>
</g>
<g >
<title>runtime.newobject (110 samples, 0.02%)</title><rect x="659.5" y="645" width="0.1" height="15.0" fill="rgb(215,148,26)" rx="2" ry="2" />
<text  x="662.45" y="655.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*cborDecDriver).advanceNil (71 samples, 0.01%)</title><rect x="817.3" y="517" width="0.1" height="15.0" fill="rgb(210,222,1)" rx="2" ry="2" />
<text  x="820.31" y="527.5" ></text>
</g>
<g >
<title>runtime.mallocgc (72 samples, 0.01%)</title><rect x="170.3" y="501" width="0.1" height="15.0" fill="rgb(227,41,17)" rx="2" ry="2" />
<text  x="173.30" y="511.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find (176 samples, 0.03%)</title><rect x="440.5" y="405" width="0.3" height="15.0" fill="rgb(219,58,40)" rx="2" ry="2" />
<text  x="443.54" y="415.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (80 samples, 0.01%)</title><rect x="501.2" y="325" width="0.2" height="15.0" fill="rgb(243,106,47)" rx="2" ry="2" />
<text  x="504.22" y="335.5" ></text>
</g>
<g >
<title>tg/core/state.(*stateObject).GetState (79 samples, 0.01%)</title><rect x="497.9" y="373" width="0.2" height="15.0" fill="rgb(240,193,8)" rx="2" ry="2" />
<text  x="500.93" y="383.5" ></text>
</g>
<g >
<title>tg/ethdb.(*LmdbCursor).getBothRange (742 samples, 0.11%)</title><rect x="819.3" y="581" width="1.2" height="15.0" fill="rgb(216,99,41)" rx="2" ry="2" />
<text  x="822.28" y="591.5" ></text>
</g>
<g >
<title>tg/core.CanTransfer (87 samples, 0.01%)</title><rect x="268.1" y="629" width="0.1" height="15.0" fill="rgb(212,12,48)" rx="2" ry="2" />
<text  x="271.05" y="639.5" ></text>
</g>
<g >
<title>tg/common/etl.(*oldestEntrySortableBuffer).Put (455 samples, 0.07%)</title><rect x="823.9" y="549" width="0.8" height="15.0" fill="rgb(212,78,53)" rx="2" ry="2" />
<text  x="826.88" y="559.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (155 samples, 0.02%)</title><rect x="690.8" y="597" width="0.2" height="15.0" fill="rgb(232,26,46)" rx="2" ry="2" />
<text  x="693.75" y="607.5" ></text>
</g>
<g >
<title>tg/core/vm.codeBitmap (64 samples, 0.01%)</title><rect x="417.1" y="421" width="0.1" height="15.0" fill="rgb(232,183,40)" rx="2" ry="2" />
<text  x="420.06" y="431.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.(*Bitmap).And (455 samples, 0.07%)</title><rect x="156.5" y="581" width="0.8" height="15.0" fill="rgb(231,126,21)" rx="2" ry="2" />
<text  x="159.51" y="591.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVMInterpreter).Run (74 samples, 0.01%)</title><rect x="493.3" y="357" width="0.1" height="15.0" fill="rgb(240,212,42)" rx="2" ry="2" />
<text  x="496.31" y="367.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).insert (184 samples, 0.03%)</title><rect x="665.3" y="581" width="0.3" height="15.0" fill="rgb(251,48,19)" rx="2" ry="2" />
<text  x="668.33" y="591.5" ></text>
</g>
<g >
<title>cmpbody (141 samples, 0.02%)</title><rect x="1070.7" y="437" width="0.2" height="15.0" fill="rgb(226,196,40)" rx="2" ry="2" />
<text  x="1073.68" y="447.5" ></text>
</g>
<g >
<title>runtime.(*hmap).createOverflow (147 samples, 0.02%)</title><rect x="634.9" y="629" width="0.3" height="15.0" fill="rgb(224,166,7)" rx="2" ry="2" />
<text  x="637.92" y="639.5" ></text>
</g>
<g >
<title>tg/common/etl.(*oldestEntrySortableBuffer).Put (4,714 samples, 0.68%)</title><rect x="853.5" y="549" width="8.0" height="15.0" fill="rgb(251,218,14)" rx="2" ry="2" />
<text  x="856.50" y="559.5" ></text>
</g>
<g >
<title>tg/core.InsertBodyChain (5,517 samples, 0.79%)</title><rect x="1119.4" y="805" width="9.4" height="15.0" fill="rgb(246,128,51)" rx="2" ry="2" />
<text  x="1122.41" y="815.5" ></text>
</g>
<g >
<title>tg/core/vm.run (144 samples, 0.02%)</title><rect x="384.9" y="309" width="0.3" height="15.0" fill="rgb(243,201,31)" rx="2" ry="2" />
<text  x="387.94" y="319.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.(*state).permute (1,009 samples, 0.15%)</title><rect x="772.9" y="533" width="1.7" height="15.0" fill="rgb(212,110,36)" rx="2" ry="2" />
<text  x="775.87" y="543.5" ></text>
</g>
<g >
<title>github.com/holiman/uint256.(*Int).WriteToSlice (1,108 samples, 0.16%)</title><rect x="426.2" y="501" width="1.8" height="15.0" fill="rgb(205,173,24)" rx="2" ry="2" />
<text  x="429.15" y="511.5" ></text>
</g>
<g >
<title>runtime.mallocgc (126 samples, 0.02%)</title><rect x="1093.0" y="597" width="0.2" height="15.0" fill="rgb(218,225,39)" rx="2" ry="2" />
<text  x="1096.03" y="607.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVMInterpreter).Run (563 samples, 0.08%)</title><rect x="413.3" y="357" width="0.9" height="15.0" fill="rgb(212,134,7)" rx="2" ry="2" />
<text  x="416.26" y="367.5" ></text>
</g>
<g >
<title>sort.symMerge (2,993 samples, 0.43%)</title><rect x="989.0" y="421" width="5.1" height="15.0" fill="rgb(212,217,46)" rx="2" ry="2" />
<text  x="992.04" y="431.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).CreateAccount (79 samples, 0.01%)</title><rect x="623.8" y="613" width="0.1" height="15.0" fill="rgb(230,41,5)" rx="2" ry="2" />
<text  x="626.81" y="623.5" ></text>
</g>
<g >
<title>runtime.mallocgc (79 samples, 0.01%)</title><rect x="216.9" y="373" width="0.1" height="15.0" fill="rgb(253,15,36)" rx="2" ry="2" />
<text  x="219.91" y="383.5" ></text>
</g>
<g >
<title>runtime.exitsyscallfast (69 samples, 0.01%)</title><rect x="929.3" y="389" width="0.1" height="15.0" fill="rgb(238,37,18)" rx="2" ry="2" />
<text  x="932.26" y="399.5" ></text>
</g>
<g >
<title>tg/rlp.Decode (3,546 samples, 0.51%)</title><rect x="197.6" y="469" width="6.0" height="15.0" fill="rgb(236,69,47)" rx="2" ry="2" />
<text  x="200.58" y="479.5" ></text>
</g>
<g >
<title>runtime.mstart (2,173 samples, 0.31%)</title><rect x="123.4" y="869" width="3.7" height="15.0" fill="rgb(218,227,30)" rx="2" ry="2" />
<text  x="126.44" y="879.5" ></text>
</g>
<g >
<title>tg/core/vm.run (147 samples, 0.02%)</title><rect x="484.4" y="181" width="0.3" height="15.0" fill="rgb(242,2,49)" rx="2" ry="2" />
<text  x="487.44" y="191.5" ></text>
</g>
<g >
<title>sort.Search (107 samples, 0.02%)</title><rect x="703.6" y="533" width="0.2" height="15.0" fill="rgb(233,159,23)" rx="2" ry="2" />
<text  x="706.63" y="543.5" ></text>
</g>
<g >
<title>sort.symMerge (5,586 samples, 0.80%)</title><rect x="183.5" y="389" width="9.5" height="15.0" fill="rgb(210,189,48)" rx="2" ry="2" />
<text  x="186.49" y="399.5" ></text>
</g>
<g >
<title>sort.quickSort (419 samples, 0.06%)</title><rect x="1028.2" y="469" width="0.7" height="15.0" fill="rgb(249,15,27)" rx="2" ry="2" />
<text  x="1031.22" y="479.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*bufioEncWriter).flushErr (70 samples, 0.01%)</title><rect x="995.0" y="501" width="0.1" height="15.0" fill="rgb(240,10,46)" rx="2" ry="2" />
<text  x="997.98" y="511.5" ></text>
</g>
<g >
<title>runtime.mallocgc (224 samples, 0.03%)</title><rect x="1123.5" y="533" width="0.4" height="15.0" fill="rgb(212,85,41)" rx="2" ry="2" />
<text  x="1126.48" y="543.5" ></text>
</g>
<g >
<title>tg/turbo/trie.(*RootHashAggregator).genStructAccount (300 samples, 0.04%)</title><rect x="1029.1" y="677" width="0.5" height="15.0" fill="rgb(252,69,25)" rx="2" ry="2" />
<text  x="1032.08" y="687.5" ></text>
</g>
<g >
<title>runtime.newobject (311 samples, 0.04%)</title><rect x="317.6" y="581" width="0.5" height="15.0" fill="rgb(252,47,26)" rx="2" ry="2" />
<text  x="320.55" y="591.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (176 samples, 0.03%)</title><rect x="641.4" y="581" width="0.3" height="15.0" fill="rgb(223,63,46)" rx="2" ry="2" />
<text  x="644.37" y="591.5" ></text>
</g>
<g >
<title>runtime.newobject (68 samples, 0.01%)</title><rect x="1048.0" y="613" width="0.1" height="15.0" fill="rgb(249,9,6)" rx="2" ry="2" />
<text  x="1050.96" y="623.5" ></text>
</g>
<g >
<title>tg/crypto/secp256k1.RecoverPubkeyWithContext (90 samples, 0.01%)</title><rect x="420.4" y="325" width="0.1" height="15.0" fill="rgb(213,182,41)" rx="2" ry="2" />
<text  x="423.39" y="335.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*decRd).readb (164 samples, 0.02%)</title><rect x="1089.4" y="533" width="0.3" height="15.0" fill="rgb(225,86,24)" rx="2" ry="2" />
<text  x="1092.42" y="543.5" ></text>
</g>
<g >
<title>runtime.unlockWithRank (104 samples, 0.01%)</title><rect x="1012.1" y="533" width="0.2" height="15.0" fill="rgb(249,136,1)" rx="2" ry="2" />
<text  x="1015.10" y="543.5" ></text>
</g>
<g >
<title>syscall.Write (105 samples, 0.02%)</title><rect x="1079.3" y="421" width="0.2" height="15.0" fill="rgb(217,141,39)" rx="2" ry="2" />
<text  x="1082.32" y="431.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb._Cfunc_lmdbgo_mdb_cursor_put2 (76 samples, 0.01%)</title><rect x="723.4" y="565" width="0.1" height="15.0" fill="rgb(246,97,54)" rx="2" ry="2" />
<text  x="726.41" y="575.5" ></text>
</g>
<g >
<title>internal/poll.(*FD).Write (137 samples, 0.02%)</title><rect x="875.2" y="405" width="0.2" height="15.0" fill="rgb(234,50,18)" rx="2" ry="2" />
<text  x="878.17" y="415.5" ></text>
</g>
<g >
<title>cmpbody (109 samples, 0.02%)</title><rect x="179.7" y="437" width="0.2" height="15.0" fill="rgb(227,220,22)" rx="2" ry="2" />
<text  x="182.73" y="447.5" ></text>
</g>
<g >
<title>runtime.newobject (321 samples, 0.05%)</title><rect x="658.8" y="645" width="0.6" height="15.0" fill="rgb(240,102,14)" rx="2" ry="2" />
<text  x="661.84" y="655.5" ></text>
</g>
<g >
<title>runtime.newobject (117 samples, 0.02%)</title><rect x="635.0" y="613" width="0.2" height="15.0" fill="rgb(222,140,43)" rx="2" ry="2" />
<text  x="637.97" y="623.5" ></text>
</g>
<g >
<title>tg/ethdb.(*TxDb).Put (459 samples, 0.07%)</title><rect x="1057.1" y="581" width="0.8" height="15.0" fill="rgb(232,198,26)" rx="2" ry="2" />
<text  x="1060.11" y="591.5" ></text>
</g>
<g >
<title>tg/core/vm.run (108 samples, 0.02%)</title><rect x="515.6" y="245" width="0.2" height="15.0" fill="rgb(247,1,6)" rx="2" ry="2" />
<text  x="518.64" y="255.5" ></text>
</g>
<g >
<title>sync.(*RWMutex).Unlock (70 samples, 0.01%)</title><rect x="720.8" y="613" width="0.1" height="15.0" fill="rgb(205,129,20)" rx="2" ry="2" />
<text  x="723.76" y="623.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVMInterpreter).Run (78 samples, 0.01%)</title><rect x="480.6" y="293" width="0.2" height="15.0" fill="rgb(252,202,38)" rx="2" ry="2" />
<text  x="483.64" y="303.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find (201 samples, 0.03%)</title><rect x="499.5" y="325" width="0.4" height="15.0" fill="rgb(236,69,8)" rx="2" ry="2" />
<text  x="502.51" y="335.5" ></text>
</g>
<g >
<title>os.(*File).write (137 samples, 0.02%)</title><rect x="875.2" y="421" width="0.2" height="15.0" fill="rgb(225,224,26)" rx="2" ry="2" />
<text  x="878.17" y="431.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (152 samples, 0.02%)</title><rect x="734.7" y="565" width="0.3" height="15.0" fill="rgb(242,7,52)" rx="2" ry="2" />
<text  x="737.71" y="575.5" ></text>
</g>
<g >
<title>tg/core.Transfer (412 samples, 0.06%)</title><rect x="339.2" y="565" width="0.7" height="15.0" fill="rgb(247,81,48)" rx="2" ry="2" />
<text  x="342.22" y="575.5" ></text>
</g>
<g >
<title>cmpbody (167 samples, 0.02%)</title><rect x="1026.7" y="517" width="0.3" height="15.0" fill="rgb(222,6,43)" rx="2" ry="2" />
<text  x="1029.67" y="527.5" ></text>
</g>
<g >
<title>runtime.sweepone (12,485 samples, 1.80%)</title><rect x="13.0" y="853" width="21.2" height="15.0" fill="rgb(252,82,48)" rx="2" ry="2" />
<text  x="15.97" y="863.5" ></text>
</g>
<g >
<title>runtime.exitsyscall (94 samples, 0.01%)</title><rect x="1128.1" y="597" width="0.1" height="15.0" fill="rgb(236,93,4)" rx="2" ry="2" />
<text  x="1131.08" y="607.5" ></text>
</g>
<g >
<title>tg/core/state.(*stateObject).GetCommittedState (63 samples, 0.01%)</title><rect x="479.7" y="293" width="0.2" height="15.0" fill="rgb(238,129,2)" rx="2" ry="2" />
<text  x="482.74" y="303.5" ></text>
</g>
<g >
<title>tg/core/vm.memoryGasCost (86 samples, 0.01%)</title><rect x="453.3" y="517" width="0.1" height="15.0" fill="rgb(226,195,7)" rx="2" ry="2" />
<text  x="456.30" y="527.5" ></text>
</g>
<g >
<title>tg/core/vm.opSha3 (5,965 samples, 0.86%)</title><rect x="544.2" y="597" width="10.1" height="15.0" fill="rgb(218,13,23)" rx="2" ry="2" />
<text  x="547.16" y="607.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.(*state).padAndPermute (100 samples, 0.01%)</title><rect x="1113.4" y="645" width="0.2" height="15.0" fill="rgb(247,29,30)" rx="2" ry="2" />
<text  x="1116.44" y="655.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.rvZeroAddrK (73 samples, 0.01%)</title><rect x="785.0" y="613" width="0.1" height="15.0" fill="rgb(206,211,22)" rx="2" ry="2" />
<text  x="787.98" y="623.5" ></text>
</g>
<g >
<title>runtime.growslice (287 samples, 0.04%)</title><rect x="519.8" y="533" width="0.4" height="15.0" fill="rgb(253,116,9)" rx="2" ry="2" />
<text  x="522.75" y="543.5" ></text>
</g>
<g >
<title>tg/core/vm.gasSStoreEIP2200 (691 samples, 0.10%)</title><rect x="362.9" y="533" width="1.1" height="15.0" fill="rgb(207,29,0)" rx="2" ry="2" />
<text  x="365.85" y="543.5" ></text>
</g>
<g >
<title>tg/ethdb/cbor.Encoder (82 samples, 0.01%)</title><rect x="785.5" y="677" width="0.2" height="15.0" fill="rgb(243,152,54)" rx="2" ry="2" />
<text  x="788.54" y="687.5" ></text>
</g>
<g >
<title>cmpbody (94 samples, 0.01%)</title><rect x="499.6" y="261" width="0.1" height="15.0" fill="rgb(215,94,25)" rx="2" ry="2" />
<text  x="502.58" y="271.5" ></text>
</g>
<g >
<title>github.com/holiman/uint256.subMulTo (60 samples, 0.01%)</title><rect x="417.9" y="405" width="0.1" height="15.0" fill="rgb(253,62,34)" rx="2" ry="2" />
<text  x="420.93" y="415.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.(*runContainer16).toEfficientContainer (1,919 samples, 0.28%)</title><rect x="1053.0" y="549" width="3.3" height="15.0" fill="rgb(234,113,33)" rx="2" ry="2" />
<text  x="1056.02" y="559.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (64 samples, 0.01%)</title><rect x="464.0" y="453" width="0.1" height="15.0" fill="rgb(234,138,15)" rx="2" ry="2" />
<text  x="467.01" y="463.5" ></text>
</g>
<g >
<title>context.(*valueCtx).Value (322 samples, 0.05%)</title><rect x="642.7" y="597" width="0.5" height="15.0" fill="rgb(252,7,54)" rx="2" ry="2" />
<text  x="645.67" y="607.5" ></text>
</g>
<g >
<title>sort.rotate (200 samples, 0.03%)</title><rect x="987.4" y="469" width="0.3" height="15.0" fill="rgb(254,184,38)" rx="2" ry="2" />
<text  x="990.40" y="479.5" ></text>
</g>
<g >
<title>tg/common/etl.(*fileDataProvider).Next (1,050 samples, 0.15%)</title><rect x="1088.7" y="677" width="1.8" height="15.0" fill="rgb(233,124,39)" rx="2" ry="2" />
<text  x="1091.71" y="687.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (161 samples, 0.02%)</title><rect x="642.1" y="613" width="0.3" height="15.0" fill="rgb(227,70,4)" rx="2" ry="2" />
<text  x="645.08" y="623.5" ></text>
</g>
<g >
<title>tg/core/vm.makeLog.func1 (505 samples, 0.07%)</title><rect x="365.0" y="533" width="0.8" height="15.0" fill="rgb(210,218,30)" rx="2" ry="2" />
<text  x="367.96" y="543.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).DelegateCall (148 samples, 0.02%)</title><rect x="394.2" y="325" width="0.2" height="15.0" fill="rgb(241,144,53)" rx="2" ry="2" />
<text  x="397.17" y="335.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find.func1 (2,357 samples, 0.34%)</title><rect x="564.6" y="373" width="4.0" height="15.0" fill="rgb(246,130,24)" rx="2" ry="2" />
<text  x="567.55" y="383.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*BTree).Ascend (11,004 samples, 1.58%)</title><rect x="796.2" y="693" width="18.7" height="15.0" fill="rgb(241,35,54)" rx="2" ry="2" />
<text  x="799.21" y="703.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.keccakF1600 (545 samples, 0.08%)</title><rect x="748.0" y="597" width="1.0" height="15.0" fill="rgb(222,178,18)" rx="2" ry="2" />
<text  x="751.04" y="607.5" ></text>
</g>
<g >
<title>tg/ethdb.(*LmdbCursor).getBothRange (299 samples, 0.04%)</title><rect x="326.4" y="485" width="0.5" height="15.0" fill="rgb(232,226,45)" rx="2" ry="2" />
<text  x="329.42" y="495.5" ></text>
</g>
<g >
<title>runtime.mallocgc (355 samples, 0.05%)</title><rect x="977.2" y="581" width="0.6" height="15.0" fill="rgb(205,192,54)" rx="2" ry="2" />
<text  x="980.18" y="591.5" ></text>
</g>
<g >
<title>runtime.empty (65 samples, 0.01%)</title><rect x="823.3" y="549" width="0.1" height="15.0" fill="rgb(216,188,15)" rx="2" ry="2" />
<text  x="826.29" y="559.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).Create (2,015 samples, 0.29%)</title><rect x="460.5" y="581" width="3.4" height="15.0" fill="rgb(212,66,9)" rx="2" ry="2" />
<text  x="463.48" y="591.5" ></text>
</g>
<g >
<title>runtime.systemstack (1,256 samples, 0.18%)</title><rect x="10.8" y="853" width="2.1" height="15.0" fill="rgb(247,166,12)" rx="2" ry="2" />
<text  x="13.81" y="863.5" ></text>
</g>
<g >
<title>tg/core/vm.run (1,290 samples, 0.19%)</title><rect x="501.6" y="437" width="2.2" height="15.0" fill="rgb(250,190,46)" rx="2" ry="2" />
<text  x="504.56" y="447.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (164 samples, 0.02%)</title><rect x="99.1" y="805" width="0.3" height="15.0" fill="rgb(243,147,1)" rx="2" ry="2" />
<text  x="102.09" y="815.5" ></text>
</g>
<g >
<title>runtime.mallocgc (326 samples, 0.05%)</title><rect x="458.2" y="517" width="0.6" height="15.0" fill="rgb(246,182,47)" rx="2" ry="2" />
<text  x="461.20" y="527.5" ></text>
</g>
<g >
<title>tg/core/vm.run (352 samples, 0.05%)</title><rect x="602.9" y="501" width="0.6" height="15.0" fill="rgb(223,227,53)" rx="2" ry="2" />
<text  x="605.86" y="511.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (61 samples, 0.01%)</title><rect x="460.1" y="453" width="0.1" height="15.0" fill="rgb(225,148,0)" rx="2" ry="2" />
<text  x="463.13" y="463.5" ></text>
</g>
<g >
<title>tg/ethdb.(*mutation).Get (655 samples, 0.09%)</title><rect x="389.9" y="325" width="1.1" height="15.0" fill="rgb(219,216,40)" rx="2" ry="2" />
<text  x="392.88" y="335.5" ></text>
</g>
<g >
<title>sort.Search (1,108 samples, 0.16%)</title><rect x="273.1" y="453" width="1.9" height="15.0" fill="rgb(216,149,51)" rx="2" ry="2" />
<text  x="276.12" y="463.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVMInterpreter).Run (175 samples, 0.03%)</title><rect x="485.9" y="293" width="0.3" height="15.0" fill="rgb(212,147,25)" rx="2" ry="2" />
<text  x="488.88" y="303.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*ioDecReader).readb (223 samples, 0.03%)</title><rect x="169.8" y="501" width="0.4" height="15.0" fill="rgb(213,153,17)" rx="2" ry="2" />
<text  x="172.85" y="511.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find.func1 (156 samples, 0.02%)</title><rect x="1121.1" y="629" width="0.3" height="15.0" fill="rgb(216,3,45)" rx="2" ry="2" />
<text  x="1124.09" y="639.5" ></text>
</g>
<g >
<title>all (694,825 samples, 100%)</title><rect x="10.0" y="885" width="1180.0" height="15.0" fill="rgb(225,38,54)" rx="2" ry="2" />
<text  x="13.00" y="895.5" ></text>
</g>
<g >
<title>runtime.growWork (102 samples, 0.01%)</title><rect x="434.7" y="453" width="0.2" height="15.0" fill="rgb(225,128,29)" rx="2" ry="2" />
<text  x="437.68" y="463.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).Call (207 samples, 0.03%)</title><rect x="483.8" y="325" width="0.4" height="15.0" fill="rgb(214,66,39)" rx="2" ry="2" />
<text  x="486.83" y="335.5" ></text>
</g>
<g >
<title>runtime.epollwait (163 samples, 0.02%)</title><rect x="62.1" y="773" width="0.3" height="15.0" fill="rgb(209,229,25)" rx="2" ry="2" />
<text  x="65.08" y="783.5" ></text>
</g>
<g >
<title>bytes.Compare (68 samples, 0.01%)</title><rect x="863.3" y="469" width="0.2" height="15.0" fill="rgb(238,43,36)" rx="2" ry="2" />
<text  x="866.34" y="479.5" ></text>
</g>
<g >
<title>cmpbody (1,023 samples, 0.15%)</title><rect x="565.3" y="341" width="1.8" height="15.0" fill="rgb(212,60,31)" rx="2" ry="2" />
<text  x="568.33" y="351.5" ></text>
</g>
<g >
<title>tg/core/types.(*Header).Hash (621 samples, 0.09%)</title><rect x="1130.0" y="821" width="1.1" height="15.0" fill="rgb(230,163,5)" rx="2" ry="2" />
<text  x="1133.04" y="831.5" ></text>
</g>
<g >
<title>tg/ethdb.(*TxDb).Get (91 samples, 0.01%)</title><rect x="450.4" y="373" width="0.1" height="15.0" fill="rgb(208,229,43)" rx="2" ry="2" />
<text  x="453.37" y="383.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.copyOutUnaligned (98 samples, 0.01%)</title><rect x="655.2" y="597" width="0.2" height="15.0" fill="rgb(254,159,10)" rx="2" ry="2" />
<text  x="658.21" y="607.5" ></text>
</g>
<g >
<title>runtime.mallocgc (65 samples, 0.01%)</title><rect x="1063.0" y="597" width="0.1" height="15.0" fill="rgb(208,71,40)" rx="2" ry="2" />
<text  x="1065.97" y="607.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).GetCodeSize (752 samples, 0.11%)</title><rect x="422.4" y="517" width="1.2" height="15.0" fill="rgb(234,2,41)" rx="2" ry="2" />
<text  x="425.36" y="527.5" ></text>
</g>
<g >
<title>reflect.Value.Addr (161 samples, 0.02%)</title><rect x="789.0" y="501" width="0.3" height="15.0" fill="rgb(244,211,44)" rx="2" ry="2" />
<text  x="792.05" y="511.5" ></text>
</g>
<g >
<title>runtime.exitsyscall (125 samples, 0.02%)</title><rect x="929.2" y="405" width="0.2" height="15.0" fill="rgb(253,86,43)" rx="2" ry="2" />
<text  x="932.16" y="415.5" ></text>
</g>
<g >
<title>reflect.Copy (83 samples, 0.01%)</title><rect x="763.5" y="453" width="0.2" height="15.0" fill="rgb(231,1,3)" rx="2" ry="2" />
<text  x="766.52" y="463.5" ></text>
</g>
<g >
<title>tg/ethdb.(*LmdbCursor).delCurrent (102 samples, 0.01%)</title><rect x="797.3" y="565" width="0.2" height="15.0" fill="rgb(244,44,32)" rx="2" ry="2" />
<text  x="800.32" y="575.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.(*state).Read (100 samples, 0.01%)</title><rect x="1130.1" y="789" width="0.1" height="15.0" fill="rgb(228,12,3)" rx="2" ry="2" />
<text  x="1133.05" y="799.5" ></text>
</g>
<g >
<title>tg/ethdb.(*TxDb).Get (521 samples, 0.07%)</title><rect x="525.8" y="517" width="0.9" height="15.0" fill="rgb(223,184,7)" rx="2" ry="2" />
<text  x="528.80" y="527.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc.func1 (74 samples, 0.01%)</title><rect x="658.3" y="533" width="0.2" height="15.0" fill="rgb(215,34,32)" rx="2" ry="2" />
<text  x="661.34" y="543.5" ></text>
</g>
<g >
<title>tg/ethdb.(*LmdbCursor).set (715 samples, 0.10%)</title><rect x="1093.9" y="629" width="1.2" height="15.0" fill="rgb(236,229,38)" rx="2" ry="2" />
<text  x="1096.91" y="639.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (273 samples, 0.04%)</title><rect x="527.2" y="453" width="0.5" height="15.0" fill="rgb(228,207,54)" rx="2" ry="2" />
<text  x="530.19" y="463.5" ></text>
</g>
<g >
<title>tg/core/vm.run (880 samples, 0.13%)</title><rect x="514.6" y="437" width="1.5" height="15.0" fill="rgb(209,127,42)" rx="2" ry="2" />
<text  x="517.59" y="447.5" ></text>
</g>
<g >
<title>runtime.newobject (184 samples, 0.03%)</title><rect x="667.9" y="645" width="0.3" height="15.0" fill="rgb(243,32,8)" rx="2" ry="2" />
<text  x="670.90" y="655.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (60 samples, 0.01%)</title><rect x="261.6" y="517" width="0.1" height="15.0" fill="rgb(235,177,2)" rx="2" ry="2" />
<text  x="264.57" y="527.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).getVal1.func1 (430 samples, 0.06%)</title><rect x="525.9" y="453" width="0.7" height="15.0" fill="rgb(242,143,42)" rx="2" ry="2" />
<text  x="528.85" y="463.5" ></text>
</g>
<g >
<title>tg/eth/stagedsync.TxLookupTransform (28,406 samples, 4.09%)</title><rect x="166.6" y="725" width="48.2" height="15.0" fill="rgb(224,205,7)" rx="2" ry="2" />
<text  x="169.55" y="735.5" >tg/e..</text>
</g>
<g >
<title>cmpbody (140 samples, 0.02%)</title><rect x="288.2" y="405" width="0.2" height="15.0" fill="rgb(225,67,35)" rx="2" ry="2" />
<text  x="291.15" y="415.5" ></text>
</g>
<g >
<title>tg/common/etl.(*sortableBuffer).Swap (101 samples, 0.01%)</title><rect x="1072.6" y="373" width="0.2" height="15.0" fill="rgb(250,90,44)" rx="2" ry="2" />
<text  x="1075.62" y="383.5" ></text>
</g>
<g >
<title>tg/common/changeset.Walk.func1 (7,295 samples, 1.05%)</title><rect x="1031.3" y="661" width="12.4" height="15.0" fill="rgb(235,9,51)" rx="2" ry="2" />
<text  x="1034.35" y="671.5" ></text>
</g>
<g >
<title>sort.symMerge (3,673 samples, 0.53%)</title><rect x="1071.2" y="453" width="6.3" height="15.0" fill="rgb(230,124,18)" rx="2" ry="2" />
<text  x="1074.22" y="463.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).DelegateCall (605 samples, 0.09%)</title><rect x="603.5" y="517" width="1.0" height="15.0" fill="rgb(239,2,38)" rx="2" ry="2" />
<text  x="606.51" y="527.5" ></text>
</g>
<g >
<title>sort.rotate (60 samples, 0.01%)</title><rect x="191.1" y="213" width="0.1" height="15.0" fill="rgb(238,197,2)" rx="2" ry="2" />
<text  x="194.11" y="223.5" ></text>
</g>
<g >
<title>reflect.unsafe_New (344 samples, 0.05%)</title><rect x="1181.3" y="597" width="0.6" height="15.0" fill="rgb(232,19,2)" rx="2" ry="2" />
<text  x="1184.32" y="607.5" ></text>
</g>
<g >
<title>tg/core/state.(*stateObject).GetCommittedState (76 samples, 0.01%)</title><rect x="497.9" y="357" width="0.2" height="15.0" fill="rgb(209,210,50)" rx="2" ry="2" />
<text  x="500.94" y="367.5" ></text>
</g>
<g >
<title>io.ReadAtLeast (95 samples, 0.01%)</title><rect x="1091.9" y="597" width="0.2" height="15.0" fill="rgb(222,49,4)" rx="2" ry="2" />
<text  x="1094.94" y="607.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).create (1,895 samples, 0.27%)</title><rect x="460.5" y="565" width="3.2" height="15.0" fill="rgb(216,123,20)" rx="2" ry="2" />
<text  x="463.50" y="575.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*ioDecReader).ReadByte (120 samples, 0.02%)</title><rect x="969.4" y="453" width="0.2" height="15.0" fill="rgb(243,201,48)" rx="2" ry="2" />
<text  x="972.36" y="463.5" ></text>
</g>
<g >
<title>github.com/holiman/uint256.(*Int).Bytes (633 samples, 0.09%)</title><rect x="695.6" y="629" width="1.1" height="15.0" fill="rgb(210,23,39)" rx="2" ry="2" />
<text  x="698.58" y="639.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find (99 samples, 0.01%)</title><rect x="527.2" y="421" width="0.2" height="15.0" fill="rgb(253,31,7)" rx="2" ry="2" />
<text  x="530.22" y="431.5" ></text>
</g>
<g >
<title>sort.Search (2,070 samples, 0.30%)</title><rect x="576.0" y="421" width="3.5" height="15.0" fill="rgb(245,63,41)" rx="2" ry="2" />
<text  x="579.01" y="431.5" ></text>
</g>
<g >
<title>tg/core/vm.run (186 samples, 0.03%)</title><rect x="413.4" y="309" width="0.3" height="15.0" fill="rgb(237,27,23)" rx="2" ry="2" />
<text  x="416.40" y="319.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).getVal1.func1 (125 samples, 0.02%)</title><rect x="423.4" y="389" width="0.2" height="15.0" fill="rgb(228,85,19)" rx="2" ry="2" />
<text  x="426.39" y="399.5" ></text>
</g>
<g >
<title>runtime.newobject (126 samples, 0.02%)</title><rect x="1058.9" y="613" width="0.2" height="15.0" fill="rgb(205,72,29)" rx="2" ry="2" />
<text  x="1061.92" y="623.5" ></text>
</g>
<g >
<title>tg/common/etl.(*sortableBuffer).Swap (110 samples, 0.02%)</title><rect x="186.9" y="277" width="0.1" height="15.0" fill="rgb(253,53,4)" rx="2" ry="2" />
<text  x="189.85" y="287.5" ></text>
</g>
<g >
<title>runtime.mallocgc (297 samples, 0.04%)</title><rect x="984.3" y="549" width="0.5" height="15.0" fill="rgb(232,44,31)" rx="2" ry="2" />
<text  x="987.26" y="559.5" ></text>
</g>
<g >
<title>bytes.Compare (105 samples, 0.02%)</title><rect x="178.9" y="469" width="0.2" height="15.0" fill="rgb(214,39,13)" rx="2" ry="2" />
<text  x="181.92" y="479.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (1,059 samples, 0.15%)</title><rect x="288.0" y="549" width="1.8" height="15.0" fill="rgb(242,140,26)" rx="2" ry="2" />
<text  x="290.97" y="559.5" ></text>
</g>
<g >
<title>runtime.gcMarkTermination.func4 (113 samples, 0.02%)</title><rect x="36.7" y="805" width="0.2" height="15.0" fill="rgb(213,156,23)" rx="2" ry="2" />
<text  x="39.73" y="815.5" ></text>
</g>
<g >
<title>runtime.mapaccess1_faststr (97 samples, 0.01%)</title><rect x="933.7" y="485" width="0.2" height="15.0" fill="rgb(212,166,51)" rx="2" ry="2" />
<text  x="936.74" y="495.5" ></text>
</g>
<g >
<title>runtime.newobject (159 samples, 0.02%)</title><rect x="750.7" y="677" width="0.2" height="15.0" fill="rgb(225,121,7)" rx="2" ry="2" />
<text  x="753.68" y="687.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find (67 samples, 0.01%)</title><rect x="500.6" y="325" width="0.2" height="15.0" fill="rgb(249,172,8)" rx="2" ry="2" />
<text  x="503.64" y="335.5" ></text>
</g>
<g >
<title>tg/core/types.(*Transaction).EncodeRLP (3,252 samples, 0.47%)</title><rect x="742.3" y="597" width="5.5" height="15.0" fill="rgb(253,12,44)" rx="2" ry="2" />
<text  x="745.30" y="607.5" ></text>
</g>
<g >
<title>tg/rlp.makeStructDecoder.func1 (335 samples, 0.05%)</title><rect x="231.7" y="677" width="0.6" height="15.0" fill="rgb(228,228,39)" rx="2" ry="2" />
<text  x="234.71" y="687.5" ></text>
</g>
<g >
<title>bytes.(*Reader).Read (60 samples, 0.01%)</title><rect x="218.9" y="357" width="0.1" height="15.0" fill="rgb(243,45,1)" rx="2" ry="2" />
<text  x="221.85" y="367.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (223 samples, 0.03%)</title><rect x="625.2" y="549" width="0.4" height="15.0" fill="rgb(236,44,27)" rx="2" ry="2" />
<text  x="628.21" y="559.5" ></text>
</g>
<g >
<title>sync/atomic.(*Value).Store (110 samples, 0.02%)</title><rect x="787.5" y="549" width="0.2" height="15.0" fill="rgb(205,44,46)" rx="2" ry="2" />
<text  x="790.50" y="559.5" ></text>
</g>
<g >
<title>runtime.mallocgc (94 samples, 0.01%)</title><rect x="171.2" y="613" width="0.2" height="15.0" fill="rgb(251,33,22)" rx="2" ry="2" />
<text  x="174.21" y="623.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*bufioEncWriter).writestr (880 samples, 0.13%)</title><rect x="194.2" y="421" width="1.5" height="15.0" fill="rgb(207,188,26)" rx="2" ry="2" />
<text  x="197.21" y="431.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find (102 samples, 0.01%)</title><rect x="422.6" y="373" width="0.2" height="15.0" fill="rgb(234,125,52)" rx="2" ry="2" />
<text  x="425.61" y="383.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (75 samples, 0.01%)</title><rect x="487.0" y="245" width="0.1" height="15.0" fill="rgb(239,96,46)" rx="2" ry="2" />
<text  x="489.98" y="255.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).getVal1.func1 (150 samples, 0.02%)</title><rect x="146.3" y="581" width="0.3" height="15.0" fill="rgb(249,174,25)" rx="2" ry="2" />
<text  x="149.30" y="591.5" ></text>
</g>
<g >
<title>runtime.makeslice (66 samples, 0.01%)</title><rect x="320.1" y="581" width="0.1" height="15.0" fill="rgb(233,185,48)" rx="2" ry="2" />
<text  x="323.10" y="591.5" ></text>
</g>
<g >
<title>tg/ethdb.(*MutationItem).Less (203 samples, 0.03%)</title><rect x="436.8" y="293" width="0.3" height="15.0" fill="rgb(217,97,6)" rx="2" ry="2" />
<text  x="439.76" y="303.5" ></text>
</g>
<g >
<title>runtime.lock2 (99 samples, 0.01%)</title><rect x="166.3" y="645" width="0.1" height="15.0" fill="rgb(225,110,23)" rx="2" ry="2" />
<text  x="169.27" y="655.5" ></text>
</g>
<g >
<title>cmpbody (74 samples, 0.01%)</title><rect x="1068.9" y="485" width="0.2" height="15.0" fill="rgb(238,132,11)" rx="2" ry="2" />
<text  x="1071.93" y="495.5" ></text>
</g>
<g >
<title>runtime.selectnbrecv (521 samples, 0.07%)</title><rect x="892.6" y="517" width="0.9" height="15.0" fill="rgb(254,143,5)" rx="2" ry="2" />
<text  x="895.61" y="527.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.(*Bitmap).GetSizeInBytes (988 samples, 0.14%)</title><rect x="158.4" y="693" width="1.7" height="15.0" fill="rgb(245,84,35)" rx="2" ry="2" />
<text  x="161.38" y="703.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (453 samples, 0.07%)</title><rect x="491.1" y="325" width="0.8" height="15.0" fill="rgb(218,136,6)" rx="2" ry="2" />
<text  x="494.12" y="335.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).getStateObject (121 samples, 0.02%)</title><rect x="287.6" y="613" width="0.2" height="15.0" fill="rgb(241,188,23)" rx="2" ry="2" />
<text  x="290.61" y="623.5" ></text>
</g>
<g >
<title>runtime.cgoIsGoPointer (66 samples, 0.01%)</title><rect x="831.3" y="453" width="0.1" height="15.0" fill="rgb(242,62,49)" rx="2" ry="2" />
<text  x="834.26" y="463.5" ></text>
</g>
<g >
<title>tg/core/vm.opDelegateCall (181 samples, 0.03%)</title><rect x="448.8" y="469" width="0.3" height="15.0" fill="rgb(214,130,45)" rx="2" ry="2" />
<text  x="451.79" y="479.5" ></text>
</g>
<g >
<title>sort.swapRange (92 samples, 0.01%)</title><rect x="189.8" y="229" width="0.2" height="15.0" fill="rgb(239,157,47)" rx="2" ry="2" />
<text  x="192.84" y="239.5" ></text>
</g>
<g >
<title>tg/core/vm.(*Contract).UseGas (83 samples, 0.01%)</title><rect x="361.9" y="533" width="0.2" height="15.0" fill="rgb(240,108,20)" rx="2" ry="2" />
<text  x="364.94" y="543.5" ></text>
</g>
<g >
<title>runtime.newobject (67 samples, 0.01%)</title><rect x="1090.4" y="645" width="0.1" height="15.0" fill="rgb(232,87,17)" rx="2" ry="2" />
<text  x="1093.38" y="655.5" ></text>
</g>
<g >
<title>sort.Search (80 samples, 0.01%)</title><rect x="289.5" y="501" width="0.2" height="15.0" fill="rgb(216,96,40)" rx="2" ry="2" />
<text  x="292.55" y="511.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (113 samples, 0.02%)</title><rect x="910.1" y="405" width="0.2" height="15.0" fill="rgb(232,162,30)" rx="2" ry="2" />
<text  x="913.07" y="415.5" ></text>
</g>
<g >
<title>container/heap.Pop (600 samples, 0.09%)</title><rect x="815.0" y="645" width="1.0" height="15.0" fill="rgb(208,147,13)" rx="2" ry="2" />
<text  x="818.02" y="655.5" ></text>
</g>
<g >
<title>tg/crypto/ecies.(*PrivateKey).Decrypt (77 samples, 0.01%)</title><rect x="1187.5" y="725" width="0.1" height="15.0" fill="rgb(235,122,41)" rx="2" ry="2" />
<text  x="1190.49" y="735.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (71 samples, 0.01%)</title><rect x="735.9" y="613" width="0.1" height="15.0" fill="rgb(207,111,4)" rx="2" ry="2" />
<text  x="738.91" y="623.5" ></text>
</g>
<g >
<title>tg/consensus/ethash.makeHasher.func1 (247 samples, 0.04%)</title><rect x="134.0" y="741" width="0.4" height="15.0" fill="rgb(238,150,10)" rx="2" ry="2" />
<text  x="136.98" y="751.5" ></text>
</g>
<g >
<title>tg/core/vm.RunPrecompiledContract (301 samples, 0.04%)</title><rect x="371.0" y="501" width="0.5" height="15.0" fill="rgb(223,156,31)" rx="2" ry="2" />
<text  x="373.96" y="511.5" ></text>
</g>
<g >
<title>bytes.Compare (101 samples, 0.01%)</title><rect x="867.1" y="325" width="0.2" height="15.0" fill="rgb(245,42,45)" rx="2" ry="2" />
<text  x="870.11" y="335.5" ></text>
</g>
<g >
<title>tg/p2p/rlpx.(*Conn).Handshake (310 samples, 0.04%)</title><rect x="1187.2" y="773" width="0.5" height="15.0" fill="rgb(205,133,17)" rx="2" ry="2" />
<text  x="1190.22" y="783.5" ></text>
</g>
<g >
<title>runtime.(*mcache).releaseAll (99 samples, 0.01%)</title><rect x="36.7" y="741" width="0.2" height="15.0" fill="rgb(236,99,35)" rx="2" ry="2" />
<text  x="39.74" y="751.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).GetCode (66 samples, 0.01%)</title><rect x="379.0" y="437" width="0.1" height="15.0" fill="rgb(239,124,19)" rx="2" ry="2" />
<text  x="381.96" y="447.5" ></text>
</g>
<g >
<title>runtime.newobject (1,281 samples, 0.18%)</title><rect x="896.8" y="549" width="2.2" height="15.0" fill="rgb(230,156,7)" rx="2" ry="2" />
<text  x="899.79" y="559.5" ></text>
</g>
<g >
<title>runtime.mallocgc (64 samples, 0.01%)</title><rect x="959.9" y="629" width="0.1" height="15.0" fill="rgb(231,98,27)" rx="2" ry="2" />
<text  x="962.88" y="639.5" ></text>
</g>
<g >
<title>runtime.convI2I (90 samples, 0.01%)</title><rect x="772.5" y="581" width="0.2" height="15.0" fill="rgb(249,55,37)" rx="2" ry="2" />
<text  x="775.52" y="591.5" ></text>
</g>
<g >
<title>tg/rlp.cachedTypeInfo (109 samples, 0.02%)</title><rect x="767.0" y="517" width="0.2" height="15.0" fill="rgb(208,174,45)" rx="2" ry="2" />
<text  x="770.02" y="527.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (261 samples, 0.04%)</title><rect x="658.0" y="565" width="0.5" height="15.0" fill="rgb(211,40,1)" rx="2" ry="2" />
<text  x="661.02" y="575.5" ></text>
</g>
<g >
<title>runtime.cgoIsGoPointer (78 samples, 0.01%)</title><rect x="593.4" y="389" width="0.2" height="15.0" fill="rgb(241,96,29)" rx="2" ry="2" />
<text  x="596.44" y="399.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb._Cfunc_lmdbgo_mdb_cursor_get2 (8,818 samples, 1.27%)</title><rect x="911.8" y="453" width="15.0" height="15.0" fill="rgb(235,29,0)" rx="2" ry="2" />
<text  x="914.80" y="463.5" ></text>
</g>
<g >
<title>container/heap.Push (120 samples, 0.02%)</title><rect x="959.0" y="677" width="0.2" height="15.0" fill="rgb(254,58,26)" rx="2" ry="2" />
<text  x="961.97" y="687.5" ></text>
</g>
<g >
<title>runtime.mallocgc (314 samples, 0.05%)</title><rect x="700.5" y="549" width="0.5" height="15.0" fill="rgb(210,177,41)" rx="2" ry="2" />
<text  x="703.50" y="559.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (324 samples, 0.05%)</title><rect x="661.7" y="565" width="0.6" height="15.0" fill="rgb(234,125,30)" rx="2" ry="2" />
<text  x="664.70" y="575.5" ></text>
</g>
<g >
<title>runtime.lock2 (75 samples, 0.01%)</title><rect x="1039.1" y="597" width="0.1" height="15.0" fill="rgb(244,139,44)" rx="2" ry="2" />
<text  x="1042.06" y="607.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find.func1 (82 samples, 0.01%)</title><rect x="500.5" y="277" width="0.1" height="15.0" fill="rgb(246,209,0)" rx="2" ry="2" />
<text  x="503.49" y="287.5" ></text>
</g>
<g >
<title>runtime.mapassign (61 samples, 0.01%)</title><rect x="365.4" y="501" width="0.1" height="15.0" fill="rgb(226,11,1)" rx="2" ry="2" />
<text  x="368.41" y="511.5" ></text>
</g>
<g >
<title>sort.Search (765 samples, 0.11%)</title><rect x="717.6" y="549" width="1.3" height="15.0" fill="rgb(241,195,31)" rx="2" ry="2" />
<text  x="720.62" y="559.5" ></text>
</g>
<g >
<title>tg/turbo/trie.GenStructStep (857 samples, 0.12%)</title><rect x="1029.6" y="661" width="1.5" height="15.0" fill="rgb(248,222,24)" rx="2" ry="2" />
<text  x="1032.64" y="671.5" ></text>
</g>
<g >
<title>tg/core/vm/stack.(*Stack).Push (70 samples, 0.01%)</title><rect x="386.5" y="341" width="0.1" height="15.0" fill="rgb(247,100,11)" rx="2" ry="2" />
<text  x="389.48" y="351.5" ></text>
</g>
<g >
<title>runtime.(*bucket).mp (676 samples, 0.10%)</title><rect x="35.4" y="789" width="1.2" height="15.0" fill="rgb(223,132,52)" rx="2" ry="2" />
<text  x="38.45" y="799.5" ></text>
</g>
<g >
<title>runtime.newobject (60 samples, 0.01%)</title><rect x="818.5" y="613" width="0.1" height="15.0" fill="rgb(206,55,38)" rx="2" ry="2" />
<text  x="821.50" y="623.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (360 samples, 0.05%)</title><rect x="606.9" y="405" width="0.6" height="15.0" fill="rgb(225,24,23)" rx="2" ry="2" />
<text  x="609.87" y="415.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).getVal0.func1 (729 samples, 0.10%)</title><rect x="160.2" y="661" width="1.2" height="15.0" fill="rgb(241,62,4)" rx="2" ry="2" />
<text  x="163.18" y="671.5" ></text>
</g>
<g >
<title>tg/core/vm.opStaticCall (65 samples, 0.01%)</title><rect x="391.6" y="341" width="0.1" height="15.0" fill="rgb(236,200,13)" rx="2" ry="2" />
<text  x="394.61" y="351.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (182 samples, 0.03%)</title><rect x="340.1" y="453" width="0.4" height="15.0" fill="rgb(206,47,43)" rx="2" ry="2" />
<text  x="343.14" y="463.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.keccakF1600 (85 samples, 0.01%)</title><rect x="1130.6" y="725" width="0.1" height="15.0" fill="rgb(214,225,51)" rx="2" ry="2" />
<text  x="1133.58" y="735.5" ></text>
</g>
<g >
<title>tg/common.RightPadBytes (126 samples, 0.02%)</title><rect x="318.4" y="597" width="0.2" height="15.0" fill="rgb(219,5,7)" rx="2" ry="2" />
<text  x="321.35" y="607.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (237 samples, 0.03%)</title><rect x="826.9" y="485" width="0.4" height="15.0" fill="rgb(212,122,20)" rx="2" ry="2" />
<text  x="829.86" y="495.5" ></text>
</g>
<g >
<title>runtime.write (98 samples, 0.01%)</title><rect x="120.2" y="805" width="0.1" height="15.0" fill="rgb(229,148,39)" rx="2" ry="2" />
<text  x="123.16" y="815.5" ></text>
</g>
<g >
<title>tg/rlp.Decode (3,846 samples, 0.55%)</title><rect x="786.9" y="613" width="6.5" height="15.0" fill="rgb(228,130,44)" rx="2" ry="2" />
<text  x="789.92" y="623.5" ></text>
</g>
<g >
<title>github.com/holiman/uint256.(*Int).Add (79 samples, 0.01%)</title><rect x="316.0" y="597" width="0.1" height="15.0" fill="rgb(238,36,26)" rx="2" ry="2" />
<text  x="318.96" y="607.5" ></text>
</g>
<g >
<title>tg/common/etl.(*oldestEntrySortableBuffer).Swap (166 samples, 0.02%)</title><rect x="986.6" y="469" width="0.2" height="15.0" fill="rgb(241,1,45)" rx="2" ry="2" />
<text  x="989.56" y="479.5" ></text>
</g>
<g >
<title>tg/core/types.rlpHash (95 samples, 0.01%)</title><rect x="1107.0" y="757" width="0.1" height="15.0" fill="rgb(252,207,33)" rx="2" ry="2" />
<text  x="1109.96" y="767.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (60 samples, 0.01%)</title><rect x="1184.4" y="453" width="0.1" height="15.0" fill="rgb(244,179,20)" rx="2" ry="2" />
<text  x="1187.38" y="463.5" ></text>
</g>
<g >
<title>tg/common/etl.NewCollector.func2 (7,519 samples, 1.08%)</title><rect x="1067.2" y="613" width="12.7" height="15.0" fill="rgb(217,209,45)" rx="2" ry="2" />
<text  x="1070.17" y="623.5" ></text>
</g>
<g >
<title>runtime.convT2E (71 samples, 0.01%)</title><rect x="959.2" y="677" width="0.1" height="15.0" fill="rgb(229,176,33)" rx="2" ry="2" />
<text  x="962.18" y="687.5" ></text>
</g>
<g >
<title>reflect.packEface (538 samples, 0.08%)</title><rect x="1109.0" y="501" width="0.9" height="15.0" fill="rgb(213,83,40)" rx="2" ry="2" />
<text  x="1112.02" y="511.5" ></text>
</g>
<g >
<title>tg/core/types.rlpHash (97 samples, 0.01%)</title><rect x="737.6" y="677" width="0.2" height="15.0" fill="rgb(207,156,0)" rx="2" ry="2" />
<text  x="740.62" y="687.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*decRd).readn1IO (67 samples, 0.01%)</title><rect x="169.7" y="501" width="0.1" height="15.0" fill="rgb(237,23,45)" rx="2" ry="2" />
<text  x="172.67" y="511.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Txn).abort.func1 (1,529 samples, 0.22%)</title><rect x="947.2" y="485" width="2.6" height="15.0" fill="rgb(244,150,51)" rx="2" ry="2" />
<text  x="950.20" y="495.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).maybeSplitChild (277 samples, 0.04%)</title><rect x="675.8" y="549" width="0.5" height="15.0" fill="rgb(236,105,49)" rx="2" ry="2" />
<text  x="678.84" y="559.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.(*roaringArray).runOptimize (1,209 samples, 0.17%)</title><rect x="1099.9" y="565" width="2.0" height="15.0" fill="rgb(243,66,51)" rx="2" ry="2" />
<text  x="1102.89" y="575.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).StaticCall (59 samples, 0.01%)</title><rect x="497.4" y="325" width="0.1" height="15.0" fill="rgb(210,72,16)" rx="2" ry="2" />
<text  x="500.42" y="335.5" ></text>
</g>
<g >
<title>runtime.casgstatus (209 samples, 0.03%)</title><rect x="97.4" y="789" width="0.4" height="15.0" fill="rgb(248,28,0)" rx="2" ry="2" />
<text  x="100.43" y="799.5" ></text>
</g>
<g >
<title>cmpbody (108 samples, 0.02%)</title><rect x="1026.4" y="533" width="0.2" height="15.0" fill="rgb(230,35,5)" rx="2" ry="2" />
<text  x="1029.41" y="543.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).GetCodeHash (82 samples, 0.01%)</title><rect x="623.9" y="613" width="0.2" height="15.0" fill="rgb(213,141,31)" rx="2" ry="2" />
<text  x="626.94" y="623.5" ></text>
</g>
<g >
<title>tg/crypto/bn256/cloudflare.gfpMul (70 samples, 0.01%)</title><rect x="502.4" y="229" width="0.1" height="15.0" fill="rgb(219,116,51)" rx="2" ry="2" />
<text  x="505.38" y="239.5" ></text>
</g>
<g >
<title>runtime.selectnbsend (466 samples, 0.07%)</title><rect x="893.5" y="517" width="0.8" height="15.0" fill="rgb(254,142,2)" rx="2" ry="2" />
<text  x="896.53" y="527.5" ></text>
</g>
<g >
<title>tg/crypto/bn256/cloudflare.(*twistPoint).Double (63 samples, 0.01%)</title><rect x="446.4" y="389" width="0.1" height="15.0" fill="rgb(245,100,26)" rx="2" ry="2" />
<text  x="449.37" y="399.5" ></text>
</g>
<g >
<title>tg/ethdb.(*MutationItem).Less (103 samples, 0.01%)</title><rect x="690.4" y="549" width="0.1" height="15.0" fill="rgb(213,226,51)" rx="2" ry="2" />
<text  x="693.37" y="559.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find (127 samples, 0.02%)</title><rect x="326.0" y="421" width="0.2" height="15.0" fill="rgb(254,126,49)" rx="2" ry="2" />
<text  x="328.98" y="431.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).getVal0 (3,888 samples, 0.56%)</title><rect x="951.9" y="565" width="6.6" height="15.0" fill="rgb(208,145,17)" rx="2" ry="2" />
<text  x="954.92" y="575.5" ></text>
</g>
<g >
<title>tg/core/rawdb.ReadBodyRLP (85 samples, 0.01%)</title><rect x="1180.7" y="773" width="0.1" height="15.0" fill="rgb(211,136,41)" rx="2" ry="2" />
<text  x="1183.66" y="783.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find (1,765 samples, 0.25%)</title><rect x="714.3" y="549" width="3.0" height="15.0" fill="rgb(238,2,10)" rx="2" ry="2" />
<text  x="717.33" y="559.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.keccakF1600 (1,497 samples, 0.22%)</title><rect x="430.0" y="469" width="2.5" height="15.0" fill="rgb(224,147,11)" rx="2" ry="2" />
<text  x="432.96" y="479.5" ></text>
</g>
<g >
<title>tg/core/vm.opSload (927 samples, 0.13%)</title><rect x="389.4" y="405" width="1.6" height="15.0" fill="rgb(233,95,14)" rx="2" ry="2" />
<text  x="392.42" y="415.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).Put (82 samples, 0.01%)</title><rect x="723.4" y="597" width="0.1" height="15.0" fill="rgb(208,211,8)" rx="2" ry="2" />
<text  x="726.41" y="607.5" ></text>
</g>
<g >
<title>cmpbody (153 samples, 0.02%)</title><rect x="1027.0" y="501" width="0.3" height="15.0" fill="rgb(224,177,36)" rx="2" ry="2" />
<text  x="1030.04" y="511.5" ></text>
</g>
<g >
<title>runtime.memhash_varlen (99 samples, 0.01%)</title><rect x="558.8" y="517" width="0.1" height="15.0" fill="rgb(242,184,37)" rx="2" ry="2" />
<text  x="561.75" y="527.5" ></text>
</g>
<g >
<title>sync/atomic.(*Value).Store (84 samples, 0.01%)</title><rect x="216.2" y="453" width="0.1" height="15.0" fill="rgb(206,137,52)" rx="2" ry="2" />
<text  x="219.16" y="463.5" ></text>
</g>
<g >
<title>tg/ethdb.(*ObjectDatabase).Walk.func1 (80,098 samples, 11.53%)</title><rect x="822.5" y="629" width="136.1" height="15.0" fill="rgb(244,142,47)" rx="2" ry="2" />
<text  x="825.55" y="639.5" >tg/ethdb.(*Object..</text>
</g>
<g >
<title>github.com/google/btree.(*node).get (1,007 samples, 0.14%)</title><rect x="288.0" y="533" width="1.7" height="15.0" fill="rgb(208,47,49)" rx="2" ry="2" />
<text  x="290.97" y="543.5" ></text>
</g>
<g >
<title>tg/core/state.(*stateObject).GetCommittedState (123 samples, 0.02%)</title><rect x="406.0" y="357" width="0.2" height="15.0" fill="rgb(211,185,15)" rx="2" ry="2" />
<text  x="408.98" y="367.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVMInterpreter).Run (108 samples, 0.02%)</title><rect x="497.1" y="293" width="0.2" height="15.0" fill="rgb(206,160,43)" rx="2" ry="2" />
<text  x="500.10" y="303.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*BTree).Get (1,657 samples, 0.24%)</title><rect x="522.9" y="517" width="2.8" height="15.0" fill="rgb(234,59,3)" rx="2" ry="2" />
<text  x="525.89" y="527.5" ></text>
</g>
<g >
<title>runtime.gentraceback (178 samples, 0.03%)</title><rect x="60.0" y="757" width="0.4" height="15.0" fill="rgb(218,223,48)" rx="2" ry="2" />
<text  x="63.05" y="767.5" ></text>
</g>
<g >
<title>bytes.Compare (141 samples, 0.02%)</title><rect x="1075.9" y="277" width="0.2" height="15.0" fill="rgb(219,205,8)" rx="2" ry="2" />
<text  x="1078.86" y="287.5" ></text>
</g>
<g >
<title>tg/core/state.(*stateObject).GetState (22,086 samples, 3.18%)</title><rect x="556.6" y="565" width="37.5" height="15.0" fill="rgb(225,114,3)" rx="2" ry="2" />
<text  x="559.57" y="575.5" >tg/..</text>
</g>
<g >
<title>runtime.growWork_faststr (412 samples, 0.06%)</title><rect x="141.0" y="693" width="0.7" height="15.0" fill="rgb(243,172,31)" rx="2" ry="2" />
<text  x="143.97" y="703.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.keccakF1600 (248 samples, 0.04%)</title><rect x="490.1" y="405" width="0.4" height="15.0" fill="rgb(243,148,52)" rx="2" ry="2" />
<text  x="493.12" y="415.5" ></text>
</g>
<g >
<title>tg/rlp.(*Stream).readKind (107 samples, 0.02%)</title><rect x="200.9" y="309" width="0.2" height="15.0" fill="rgb(241,84,6)" rx="2" ry="2" />
<text  x="203.94" y="319.5" ></text>
</g>
<g >
<title>runtime.removefinalizer (499 samples, 0.07%)</title><rect x="950.3" y="453" width="0.9" height="15.0" fill="rgb(254,227,0)" rx="2" ry="2" />
<text  x="953.31" y="463.5" ></text>
</g>
<g >
<title>runtime.notewakeup (460 samples, 0.07%)</title><rect x="108.2" y="677" width="0.8" height="15.0" fill="rgb(242,116,50)" rx="2" ry="2" />
<text  x="111.18" y="687.5" ></text>
</g>
<g >
<title>runtime.SetFinalizer.func1 (626 samples, 0.09%)</title><rect x="950.2" y="469" width="1.0" height="15.0" fill="rgb(238,181,43)" rx="2" ry="2" />
<text  x="953.18" y="479.5" ></text>
</g>
<g >
<title>runtime.newobject (184 samples, 0.03%)</title><rect x="645.6" y="661" width="0.3" height="15.0" fill="rgb(243,147,11)" rx="2" ry="2" />
<text  x="648.57" y="671.5" ></text>
</g>
<g >
<title>sort.insertionSort (352 samples, 0.05%)</title><rect x="1067.9" y="533" width="0.6" height="15.0" fill="rgb(212,117,51)" rx="2" ry="2" />
<text  x="1070.88" y="543.5" ></text>
</g>
<g >
<title>tg/core/vm.run (699 samples, 0.10%)</title><rect x="608.4" y="501" width="1.2" height="15.0" fill="rgb(230,19,11)" rx="2" ry="2" />
<text  x="611.38" y="511.5" ></text>
</g>
<g >
<title>tg/ethdb.(*TxDb).Get (1,578 samples, 0.23%)</title><rect x="283.1" y="565" width="2.7" height="15.0" fill="rgb(252,108,32)" rx="2" ry="2" />
<text  x="286.12" y="575.5" ></text>
</g>
<g >
<title>tg/rlp.cachedTypeInfo (112 samples, 0.02%)</title><rect x="214.5" y="517" width="0.2" height="15.0" fill="rgb(240,51,39)" rx="2" ry="2" />
<text  x="217.52" y="527.5" ></text>
</g>
<g >
<title>bufio.(*Writer).Write (114 samples, 0.02%)</title><rect x="1079.3" y="501" width="0.2" height="15.0" fill="rgb(205,93,29)" rx="2" ry="2" />
<text  x="1082.31" y="511.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (81 samples, 0.01%)</title><rect x="325.8" y="421" width="0.2" height="15.0" fill="rgb(227,80,24)" rx="2" ry="2" />
<text  x="328.84" y="431.5" ></text>
</g>
<g >
<title>tg/p2p/enode.(*FairMix).runSource (76 samples, 0.01%)</title><rect x="1189.9" y="869" width="0.1" height="15.0" fill="rgb(226,31,54)" rx="2" ry="2" />
<text  x="1192.87" y="879.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.xorInUnaligned (106 samples, 0.02%)</title><rect x="553.3" y="533" width="0.2" height="15.0" fill="rgb(226,214,31)" rx="2" ry="2" />
<text  x="556.30" y="543.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (298 samples, 0.04%)</title><rect x="658.0" y="581" width="0.5" height="15.0" fill="rgb(244,30,15)" rx="2" ry="2" />
<text  x="661.02" y="591.5" ></text>
</g>
<g >
<title>tg/core/state.(*stateObject).SetBalance (479 samples, 0.07%)</title><rect x="264.8" y="613" width="0.8" height="15.0" fill="rgb(243,98,12)" rx="2" ry="2" />
<text  x="267.83" y="623.5" ></text>
</g>
<g >
<title>runtime.mallocgc (78 samples, 0.01%)</title><rect x="1033.9" y="581" width="0.2" height="15.0" fill="rgb(230,83,27)" rx="2" ry="2" />
<text  x="1036.92" y="591.5" ></text>
</g>
<g >
<title>tg/rlp.(*Stream).uint (195 samples, 0.03%)</title><rect x="201.4" y="357" width="0.4" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="204.42" y="367.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.beginTxn.func1 (83 samples, 0.01%)</title><rect x="230.2" y="629" width="0.1" height="15.0" fill="rgb(240,162,2)" rx="2" ry="2" />
<text  x="233.21" y="639.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.keccakF1600 (963 samples, 0.14%)</title><rect x="222.7" y="549" width="1.7" height="15.0" fill="rgb(210,118,10)" rx="2" ry="2" />
<text  x="225.73" y="559.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (101 samples, 0.01%)</title><rect x="972.8" y="533" width="0.1" height="15.0" fill="rgb(218,172,35)" rx="2" ry="2" />
<text  x="975.77" y="543.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.(*state).padAndPermute (8,117 samples, 1.17%)</title><rect x="877.6" y="517" width="13.8" height="15.0" fill="rgb(235,17,43)" rx="2" ry="2" />
<text  x="880.61" y="527.5" ></text>
</g>
<g >
<title>tg/ethdb.(*LmdbCursor).append (297 samples, 0.04%)</title><rect x="1127.8" y="677" width="0.5" height="15.0" fill="rgb(205,139,6)" rx="2" ry="2" />
<text  x="1130.76" y="687.5" ></text>
</g>
<g >
<title>tg/common/etl.(*sortableBuffer).Swap (148 samples, 0.02%)</title><rect x="1069.7" y="453" width="0.3" height="15.0" fill="rgb(230,161,32)" rx="2" ry="2" />
<text  x="1072.74" y="463.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (70 samples, 0.01%)</title><rect x="1013.0" y="469" width="0.1" height="15.0" fill="rgb(212,26,23)" rx="2" ry="2" />
<text  x="1015.96" y="479.5" ></text>
</g>
<g >
<title>tg/eth/stagedsync.promoteHashedStateIncrementally (84,603 samples, 12.18%)</title><rect x="814.9" y="725" width="143.7" height="15.0" fill="rgb(222,182,21)" rx="2" ry="2" />
<text  x="817.90" y="735.5" >tg/eth/stagedsync...</text>
</g>
<g >
<title>tg/core/vm/stack.(*Stack).Dup (59 samples, 0.01%)</title><rect x="406.8" y="469" width="0.1" height="15.0" fill="rgb(223,82,49)" rx="2" ry="2" />
<text  x="409.82" y="479.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*encWr).writestr (142 samples, 0.02%)</title><rect x="784.2" y="501" width="0.3" height="15.0" fill="rgb(246,124,50)" rx="2" ry="2" />
<text  x="787.24" y="511.5" ></text>
</g>
<g >
<title>reflect.Copy (129 samples, 0.02%)</title><rect x="1124.1" y="549" width="0.2" height="15.0" fill="rgb(215,52,31)" rx="2" ry="2" />
<text  x="1127.06" y="559.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).Put.func1 (2,139 samples, 0.31%)</title><rect x="803.5" y="533" width="3.6" height="15.0" fill="rgb(206,116,35)" rx="2" ry="2" />
<text  x="806.52" y="543.5" ></text>
</g>
<g >
<title>tg/turbo/trie.GenStructStep (5,632 samples, 0.81%)</title><rect x="769.1" y="645" width="9.5" height="15.0" fill="rgb(210,52,27)" rx="2" ry="2" />
<text  x="772.08" y="655.5" ></text>
</g>
<g >
<title>runtime.convI2I (79 samples, 0.01%)</title><rect x="1116.9" y="629" width="0.1" height="15.0" fill="rgb(221,111,31)" rx="2" ry="2" />
<text  x="1119.89" y="639.5" ></text>
</g>
<g >
<title>tg/common/etl.writeToDisk (253 samples, 0.04%)</title><rect x="1040.6" y="581" width="0.4" height="15.0" fill="rgb(234,148,12)" rx="2" ry="2" />
<text  x="1043.60" y="591.5" ></text>
</g>
<g >
<title>tg/core/vm.opMulmod (459 samples, 0.07%)</title><rect x="507.5" y="533" width="0.8" height="15.0" fill="rgb(216,6,47)" rx="2" ry="2" />
<text  x="510.50" y="543.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (509 samples, 0.07%)</title><rect x="491.1" y="341" width="0.9" height="15.0" fill="rgb(253,163,4)" rx="2" ry="2" />
<text  x="494.12" y="351.5" ></text>
</g>
<g >
<title>runtime.mallocgc (74 samples, 0.01%)</title><rect x="365.1" y="501" width="0.2" height="15.0" fill="rgb(238,55,23)" rx="2" ry="2" />
<text  x="368.15" y="511.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).getVal2 (304 samples, 0.04%)</title><rect x="390.5" y="261" width="0.5" height="15.0" fill="rgb(220,209,4)" rx="2" ry="2" />
<text  x="393.47" y="271.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (249 samples, 0.04%)</title><rect x="606.9" y="373" width="0.4" height="15.0" fill="rgb(242,60,47)" rx="2" ry="2" />
<text  x="609.89" y="383.5" ></text>
</g>
<g >
<title>tg/crypto/secp256k1._Cfunc_secp256k1_ext_ecdsa_recover (68 samples, 0.01%)</title><rect x="486.2" y="229" width="0.1" height="15.0" fill="rgb(207,141,47)" rx="2" ry="2" />
<text  x="489.23" y="239.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (67 samples, 0.01%)</title><rect x="597.7" y="453" width="0.1" height="15.0" fill="rgb(229,175,50)" rx="2" ry="2" />
<text  x="600.73" y="463.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*cborDecDriver).DecodeBytes (567 samples, 0.08%)</title><rect x="169.6" y="549" width="0.9" height="15.0" fill="rgb(218,156,0)" rx="2" ry="2" />
<text  x="172.58" y="559.5" ></text>
</g>
<g >
<title>tg/rlp.(*Stream).Bytes (223 samples, 0.03%)</title><rect x="216.9" y="405" width="0.4" height="15.0" fill="rgb(231,224,24)" rx="2" ry="2" />
<text  x="219.88" y="415.5" ></text>
</g>
<g >
<title>tg/common/etl.(*sortableBuffer).Swap (310 samples, 0.04%)</title><rect x="180.0" y="421" width="0.5" height="15.0" fill="rgb(233,74,41)" rx="2" ry="2" />
<text  x="183.01" y="431.5" ></text>
</g>
<g >
<title>runtime.growslice (97 samples, 0.01%)</title><rect x="263.2" y="565" width="0.1" height="15.0" fill="rgb(239,165,37)" rx="2" ry="2" />
<text  x="266.15" y="575.5" ></text>
</g>
<g >
<title>sort.swapRange (95 samples, 0.01%)</title><rect x="1074.0" y="341" width="0.2" height="15.0" fill="rgb(215,82,33)" rx="2" ry="2" />
<text  x="1077.00" y="351.5" ></text>
</g>
<g >
<title>runtime.cgocall (6,566 samples, 0.94%)</title><rect x="935.3" y="453" width="11.1" height="15.0" fill="rgb(236,21,37)" rx="2" ry="2" />
<text  x="938.25" y="463.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*Decoder).decode (186 samples, 0.03%)</title><rect x="145.2" y="613" width="0.3" height="15.0" fill="rgb(242,229,23)" rx="2" ry="2" />
<text  x="148.17" y="623.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).DelegateCall (627 samples, 0.09%)</title><rect x="484.2" y="325" width="1.1" height="15.0" fill="rgb(232,2,9)" rx="2" ry="2" />
<text  x="487.19" y="335.5" ></text>
</g>
<g >
<title>runtime.lock2 (154 samples, 0.02%)</title><rect x="1011.8" y="517" width="0.3" height="15.0" fill="rgb(219,193,17)" rx="2" ry="2" />
<text  x="1014.84" y="527.5" ></text>
</g>
<g >
<title>tg/core/vm.NewContract (82 samples, 0.01%)</title><rect x="370.8" y="501" width="0.2" height="15.0" fill="rgb(217,203,3)" rx="2" ry="2" />
<text  x="373.82" y="511.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).AddLog (799 samples, 0.11%)</title><rect x="329.8" y="581" width="1.4" height="15.0" fill="rgb(210,164,37)" rx="2" ry="2" />
<text  x="332.80" y="591.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Txn).Abort (67 samples, 0.01%)</title><rect x="230.8" y="661" width="0.1" height="15.0" fill="rgb(221,128,8)" rx="2" ry="2" />
<text  x="233.76" y="671.5" ></text>
</g>
<g >
<title>tg/core/vm/stack.(*Stack).Swap (356 samples, 0.05%)</title><rect x="457.3" y="533" width="0.6" height="15.0" fill="rgb(210,150,42)" rx="2" ry="2" />
<text  x="460.33" y="543.5" ></text>
</g>
<g >
<title>tg/eth/stagedsync.promoteLogIndex.func1 (7,431 samples, 1.07%)</title><rect x="145.6" y="677" width="12.6" height="15.0" fill="rgb(210,98,33)" rx="2" ry="2" />
<text  x="148.63" y="687.5" ></text>
</g>
<g >
<title>bytes.Compare (70 samples, 0.01%)</title><rect x="986.1" y="501" width="0.1" height="15.0" fill="rgb(248,63,43)" rx="2" ry="2" />
<text  x="989.13" y="511.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (138 samples, 0.02%)</title><rect x="238.3" y="533" width="0.2" height="15.0" fill="rgb(250,133,22)" rx="2" ry="2" />
<text  x="241.31" y="543.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring/roaring64.(*Bitmap).RunOptimize (141 samples, 0.02%)</title><rect x="1050.0" y="629" width="0.2" height="15.0" fill="rgb(236,109,27)" rx="2" ry="2" />
<text  x="1053.00" y="639.5" ></text>
</g>
<g >
<title>tg/eth/stagedsync.SpawnHashStateStage (84,603 samples, 12.18%)</title><rect x="814.9" y="741" width="143.7" height="15.0" fill="rgb(214,178,54)" rx="2" ry="2" />
<text  x="817.90" y="751.5" >tg/eth/stagedsync...</text>
</g>
<g >
<title>runtime.execute (312 samples, 0.04%)</title><rect x="97.3" y="805" width="0.5" height="15.0" fill="rgb(244,64,37)" rx="2" ry="2" />
<text  x="100.26" y="815.5" ></text>
</g>
<g >
<title>runtime.removespecial (255 samples, 0.04%)</title><rect x="950.6" y="437" width="0.4" height="15.0" fill="rgb(232,174,48)" rx="2" ry="2" />
<text  x="953.59" y="447.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.(*runContainer16).andArray (85 samples, 0.01%)</title><rect x="156.6" y="549" width="0.1" height="15.0" fill="rgb(244,201,39)" rx="2" ry="2" />
<text  x="159.57" y="559.5" ></text>
</g>
<g >
<title>runtime.cgocall (562 samples, 0.08%)</title><rect x="819.4" y="501" width="0.9" height="15.0" fill="rgb(223,154,48)" rx="2" ry="2" />
<text  x="822.36" y="511.5" ></text>
</g>
<g >
<title>tg/core/vm.run (194,409 samples, 27.98%)</title><rect x="293.6" y="629" width="330.2" height="15.0" fill="rgb(214,68,51)" rx="2" ry="2" />
<text  x="296.63" y="639.5" >tg/core/vm.run</text>
</g>
<g >
<title>tg/core/state.newJournal (482 samples, 0.07%)</title><rect x="643.7" y="677" width="0.8" height="15.0" fill="rgb(206,163,47)" rx="2" ry="2" />
<text  x="646.67" y="687.5" ></text>
</g>
<g >
<title>reflect.unsafe_New (74 samples, 0.01%)</title><rect x="201.9" y="341" width="0.1" height="15.0" fill="rgb(240,93,4)" rx="2" ry="2" />
<text  x="204.88" y="351.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc.func1 (261 samples, 0.04%)</title><rect x="1055.0" y="373" width="0.4" height="15.0" fill="rgb(251,81,52)" rx="2" ry="2" />
<text  x="1057.98" y="383.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*bufioEncWriter).flushErr (120 samples, 0.02%)</title><rect x="785.2" y="629" width="0.2" height="15.0" fill="rgb(228,35,12)" rx="2" ry="2" />
<text  x="788.22" y="639.5" ></text>
</g>
<g >
<title>tg/core/state.(*PlainStateReader).ReadAccountData (534 samples, 0.08%)</title><rect x="320.6" y="549" width="0.9" height="15.0" fill="rgb(213,70,50)" rx="2" ry="2" />
<text  x="323.63" y="559.5" ></text>
</g>
<g >
<title>tg/core/vm.opSha3 (342 samples, 0.05%)</title><rect x="490.0" y="469" width="0.6" height="15.0" fill="rgb(229,135,46)" rx="2" ry="2" />
<text  x="493.02" y="479.5" ></text>
</g>
<g >
<title>runtime.newobject (734 samples, 0.11%)</title><rect x="627.1" y="661" width="1.3" height="15.0" fill="rgb(205,163,38)" rx="2" ry="2" />
<text  x="630.14" y="671.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*Encoder).encode (748 samples, 0.11%)</title><rect x="1078.0" y="533" width="1.3" height="15.0" fill="rgb(239,43,0)" rx="2" ry="2" />
<text  x="1081.02" y="543.5" ></text>
</g>
<g >
<title>tg/common/etl.(*oldestEntrySortableBuffer).Swap (188 samples, 0.03%)</title><rect x="863.9" y="421" width="0.3" height="15.0" fill="rgb(236,171,28)" rx="2" ry="2" />
<text  x="866.92" y="431.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*cborDecDriver).advanceNil (239 samples, 0.03%)</title><rect x="165.6" y="613" width="0.4" height="15.0" fill="rgb(207,107,49)" rx="2" ry="2" />
<text  x="168.58" y="623.5" ></text>
</g>
<g >
<title>runtime.cgocall (742 samples, 0.11%)</title><rect x="798.3" y="485" width="1.2" height="15.0" fill="rgb(215,220,4)" rx="2" ry="2" />
<text  x="801.25" y="495.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).DelegateCall (1,852 samples, 0.27%)</title><rect x="392.9" y="453" width="3.1" height="15.0" fill="rgb(253,219,24)" rx="2" ry="2" />
<text  x="395.86" y="463.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.(*runContainer16).toArrayContainer (1,906 samples, 0.27%)</title><rect x="1053.0" y="533" width="3.3" height="15.0" fill="rgb(216,132,35)" rx="2" ry="2" />
<text  x="1056.02" y="543.5" ></text>
</g>
<g >
<title>cmpbody (209 samples, 0.03%)</title><rect x="439.4" y="309" width="0.3" height="15.0" fill="rgb(254,143,12)" rx="2" ry="2" />
<text  x="442.36" y="319.5" ></text>
</g>
<g >
<title>cmpbody (270 samples, 0.04%)</title><rect x="189.3" y="229" width="0.5" height="15.0" fill="rgb(224,154,21)" rx="2" ry="2" />
<text  x="192.35" y="239.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).GetCommittedState (106 samples, 0.02%)</title><rect x="363.3" y="517" width="0.2" height="15.0" fill="rgb(221,206,8)" rx="2" ry="2" />
<text  x="366.30" y="527.5" ></text>
</g>
<g >
<title>runtime.SetFinalizer (854 samples, 0.12%)</title><rect x="949.8" y="501" width="1.4" height="15.0" fill="rgb(238,11,9)" rx="2" ry="2" />
<text  x="952.80" y="511.5" ></text>
</g>
<g >
<title>cmpbody (123 samples, 0.02%)</title><rect x="1073.8" y="341" width="0.2" height="15.0" fill="rgb(253,156,52)" rx="2" ry="2" />
<text  x="1076.78" y="351.5" ></text>
</g>
<g >
<title>runtime.findObject (5,959 samples, 0.86%)</title><rect x="68.9" y="789" width="10.1" height="15.0" fill="rgb(223,215,29)" rx="2" ry="2" />
<text  x="71.93" y="799.5" ></text>
</g>
<g >
<title>tg/common/etl.writeToDisk (2,014 samples, 0.29%)</title><rect x="872.9" y="533" width="3.4" height="15.0" fill="rgb(224,216,20)" rx="2" ry="2" />
<text  x="875.92" y="543.5" ></text>
</g>
<g >
<title>tg/crypto/bn256/cloudflare.mulLine (85 samples, 0.01%)</title><rect x="446.8" y="421" width="0.1" height="15.0" fill="rgb(239,109,37)" rx="2" ry="2" />
<text  x="449.77" y="431.5" ></text>
</g>
<g >
<title>tg/core/types.DeriveSha.func1 (6,928 samples, 1.00%)</title><rect x="1107.3" y="709" width="11.8" height="15.0" fill="rgb(206,24,40)" rx="2" ry="2" />
<text  x="1110.32" y="719.5" ></text>
</g>
<g >
<title>tg/core/state.(*stateObject).SetState (158 samples, 0.02%)</title><rect x="404.4" y="437" width="0.3" height="15.0" fill="rgb(205,58,4)" rx="2" ry="2" />
<text  x="407.43" y="447.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (117 samples, 0.02%)</title><rect x="408.9" y="421" width="0.2" height="15.0" fill="rgb(245,55,17)" rx="2" ry="2" />
<text  x="411.88" y="431.5" ></text>
</g>
<g >
<title>tg/core/vm.opSload (79 samples, 0.01%)</title><rect x="451.1" y="405" width="0.1" height="15.0" fill="rgb(249,167,11)" rx="2" ry="2" />
<text  x="454.08" y="415.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*BTree).Get (531 samples, 0.08%)</title><rect x="491.1" y="373" width="0.9" height="15.0" fill="rgb(236,212,41)" rx="2" ry="2" />
<text  x="494.12" y="383.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (160 samples, 0.02%)</title><rect x="260.5" y="469" width="0.3" height="15.0" fill="rgb(216,69,16)" rx="2" ry="2" />
<text  x="263.55" y="479.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring/roaring64.New (96 samples, 0.01%)</title><rect x="1031.4" y="645" width="0.2" height="15.0" fill="rgb(224,37,23)" rx="2" ry="2" />
<text  x="1034.42" y="655.5" ></text>
</g>
<g >
<title>bytes.makeSlice (60 samples, 0.01%)</title><rect x="785.3" y="581" width="0.1" height="15.0" fill="rgb(239,17,16)" rx="2" ry="2" />
<text  x="788.26" y="591.5" ></text>
</g>
<g >
<title>runtime.cgocall (66 samples, 0.01%)</title><rect x="423.0" y="357" width="0.1" height="15.0" fill="rgb(228,52,52)" rx="2" ry="2" />
<text  x="426.00" y="367.5" ></text>
</g>
<g >
<title>runtime/internal/sys.LeadingZeros8 (207 samples, 0.03%)</title><rect x="29.8" y="725" width="0.3" height="15.0" fill="rgb(218,41,43)" rx="2" ry="2" />
<text  x="32.77" y="735.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (122 samples, 0.02%)</title><rect x="481.5" y="277" width="0.2" height="15.0" fill="rgb(235,179,27)" rx="2" ry="2" />
<text  x="484.54" y="287.5" ></text>
</g>
<g >
<title>tg/ethdb.(*mutation).CommitAndBegin (11,004 samples, 1.58%)</title><rect x="796.2" y="725" width="18.7" height="15.0" fill="rgb(242,131,15)" rx="2" ry="2" />
<text  x="799.21" y="735.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find.func1 (129 samples, 0.02%)</title><rect x="452.4" y="309" width="0.2" height="15.0" fill="rgb(239,12,45)" rx="2" ry="2" />
<text  x="455.39" y="319.5" ></text>
</g>
<g >
<title>runtime.makeslicecopy (59 samples, 0.01%)</title><rect x="1102.4" y="613" width="0.1" height="15.0" fill="rgb(246,41,41)" rx="2" ry="2" />
<text  x="1105.35" y="623.5" ></text>
</g>
<g >
<title>tg/core/vm.run (340 samples, 0.05%)</title><rect x="608.9" y="437" width="0.6" height="15.0" fill="rgb(239,62,48)" rx="2" ry="2" />
<text  x="611.91" y="447.5" ></text>
</g>
<g >
<title>tg/common.Stopped (81 samples, 0.01%)</title><rect x="1066.8" y="629" width="0.2" height="15.0" fill="rgb(252,134,20)" rx="2" ry="2" />
<text  x="1069.81" y="639.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.(*state).permute (4,594 samples, 0.66%)</title><rect x="545.7" y="549" width="7.8" height="15.0" fill="rgb(221,45,39)" rx="2" ry="2" />
<text  x="548.68" y="559.5" ></text>
</g>
<g >
<title>sort.doPivot (220 samples, 0.03%)</title><rect x="722.3" y="613" width="0.3" height="15.0" fill="rgb(230,91,4)" rx="2" ry="2" />
<text  x="725.25" y="623.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb._Cfunc_mdb_cursor_get (2,312 samples, 0.33%)</title><rect x="952.2" y="533" width="3.9" height="15.0" fill="rgb(212,130,51)" rx="2" ry="2" />
<text  x="955.22" y="543.5" ></text>
</g>
<g >
<title>tg/core/vm.run (1,034 samples, 0.15%)</title><rect x="496.5" y="437" width="1.7" height="15.0" fill="rgb(215,196,18)" rx="2" ry="2" />
<text  x="499.48" y="447.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (156 samples, 0.02%)</title><rect x="641.7" y="597" width="0.3" height="15.0" fill="rgb(215,140,11)" rx="2" ry="2" />
<text  x="644.75" y="607.5" ></text>
</g>
<g >
<title>tg/common/etl.(*sortableBuffer).Swap (188 samples, 0.03%)</title><rect x="1069.1" y="469" width="0.3" height="15.0" fill="rgb(228,14,25)" rx="2" ry="2" />
<text  x="1072.11" y="479.5" ></text>
</g>
<g >
<title>tg/common/etl.(*Heap).Push (63 samples, 0.01%)</title><rect x="966.8" y="629" width="0.1" height="15.0" fill="rgb(208,117,52)" rx="2" ry="2" />
<text  x="969.80" y="639.5" ></text>
</g>
<g >
<title>tg/core/vm.opExtCodeSize (379 samples, 0.05%)</title><rect x="396.3" y="469" width="0.6" height="15.0" fill="rgb(221,183,39)" rx="2" ry="2" />
<text  x="399.30" y="479.5" ></text>
</g>
<g >
<title>tg/common/etl.(*oldestEntrySortableBuffer).Swap (154 samples, 0.02%)</title><rect x="864.4" y="405" width="0.3" height="15.0" fill="rgb(222,113,34)" rx="2" ry="2" />
<text  x="867.41" y="415.5" ></text>
</g>
<g >
<title>runtime.newobject (206 samples, 0.03%)</title><rect x="293.3" y="613" width="0.3" height="15.0" fill="rgb(224,206,41)" rx="2" ry="2" />
<text  x="296.28" y="623.5" ></text>
</g>
<g >
<title>tg/core/state.(*PlainStateReader).ReadAccountStorage (942 samples, 0.14%)</title><rect x="491.1" y="405" width="1.6" height="15.0" fill="rgb(209,143,21)" rx="2" ry="2" />
<text  x="494.08" y="415.5" ></text>
</g>
<g >
<title>tg/core/vm.run (456 samples, 0.07%)</title><rect x="496.8" y="373" width="0.8" height="15.0" fill="rgb(231,33,13)" rx="2" ry="2" />
<text  x="499.79" y="383.5" ></text>
</g>
<g >
<title>tg/ethdb.(*mutation).Get (519 samples, 0.07%)</title><rect x="320.7" y="533" width="0.8" height="15.0" fill="rgb(228,124,11)" rx="2" ry="2" />
<text  x="323.65" y="543.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.keccakF1600 (759 samples, 0.11%)</title><rect x="127.8" y="741" width="1.2" height="15.0" fill="rgb(229,75,42)" rx="2" ry="2" />
<text  x="130.76" y="751.5" ></text>
</g>
<g >
<title>tg/common.HashData (10,105 samples, 1.45%)</title><rect x="877.2" y="549" width="17.1" height="15.0" fill="rgb(247,39,27)" rx="2" ry="2" />
<text  x="880.17" y="559.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).DelegateCall (161 samples, 0.02%)</title><rect x="498.2" y="453" width="0.3" height="15.0" fill="rgb(214,162,27)" rx="2" ry="2" />
<text  x="501.24" y="463.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (67 samples, 0.01%)</title><rect x="1051.9" y="485" width="0.1" height="15.0" fill="rgb(223,162,17)" rx="2" ry="2" />
<text  x="1054.90" y="495.5" ></text>
</g>
<g >
<title>runtime.convTslice (74 samples, 0.01%)</title><rect x="995.2" y="549" width="0.1" height="15.0" fill="rgb(236,15,47)" rx="2" ry="2" />
<text  x="998.18" y="559.5" ></text>
</g>
<g >
<title>runtime.goexit0 (192 samples, 0.03%)</title><rect x="95.9" y="853" width="0.3" height="15.0" fill="rgb(224,88,54)" rx="2" ry="2" />
<text  x="98.85" y="863.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (169 samples, 0.02%)</title><rect x="736.6" y="613" width="0.3" height="15.0" fill="rgb(224,24,8)" rx="2" ry="2" />
<text  x="739.59" y="623.5" ></text>
</g>
<g >
<title>tg/core/vm.(*Memory).Set32 (334 samples, 0.05%)</title><rect x="489.2" y="453" width="0.6" height="15.0" fill="rgb(247,184,45)" rx="2" ry="2" />
<text  x="492.19" y="463.5" ></text>
</g>
<g >
<title>runtime.startlockedm (254 samples, 0.04%)</title><rect x="122.1" y="821" width="0.4" height="15.0" fill="rgb(251,11,3)" rx="2" ry="2" />
<text  x="125.10" y="831.5" ></text>
</g>
<g >
<title>sort.swapRange (71 samples, 0.01%)</title><rect x="1074.4" y="325" width="0.2" height="15.0" fill="rgb(232,61,49)" rx="2" ry="2" />
<text  x="1077.44" y="335.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (71 samples, 0.01%)</title><rect x="597.4" y="405" width="0.1" height="15.0" fill="rgb(245,134,43)" rx="2" ry="2" />
<text  x="600.42" y="415.5" ></text>
</g>
<g >
<title>memeqbody (97 samples, 0.01%)</title><rect x="639.0" y="613" width="0.2" height="15.0" fill="rgb(217,20,9)" rx="2" ry="2" />
<text  x="641.99" y="623.5" ></text>
</g>
<g >
<title>tg/core/state.(*stateObject).GetCommittedState (75 samples, 0.01%)</title><rect x="414.0" y="293" width="0.1" height="15.0" fill="rgb(226,123,27)" rx="2" ry="2" />
<text  x="416.96" y="303.5" ></text>
</g>
<g >
<title>tg/core/rawdb.ReadTransactions.func1 (484 samples, 0.07%)</title><rect x="232.5" y="549" width="0.8" height="15.0" fill="rgb(223,192,46)" rx="2" ry="2" />
<text  x="235.52" y="559.5" ></text>
</g>
<g >
<title>tg/core/types.codecSelfer2.encSlicecommon_Hash (396 samples, 0.06%)</title><rect x="783.8" y="549" width="0.7" height="15.0" fill="rgb(205,45,33)" rx="2" ry="2" />
<text  x="786.81" y="559.5" ></text>
</g>
<g >
<title>sort.Search (82 samples, 0.01%)</title><rect x="369.8" y="341" width="0.1" height="15.0" fill="rgb(244,15,14)" rx="2" ry="2" />
<text  x="372.77" y="351.5" ></text>
</g>
<g >
<title>sort.symMerge (340 samples, 0.05%)</title><rect x="143.5" y="501" width="0.6" height="15.0" fill="rgb(217,104,37)" rx="2" ry="2" />
<text  x="146.52" y="511.5" ></text>
</g>
<g >
<title>tg/core/vm.opAnd (108 samples, 0.02%)</title><rect x="368.8" y="533" width="0.2" height="15.0" fill="rgb(248,169,37)" rx="2" ry="2" />
<text  x="371.79" y="543.5" ></text>
</g>
<g >
<title>runtime.cgocall (3,272 samples, 0.47%)</title><rect x="899.8" y="453" width="5.5" height="15.0" fill="rgb(253,15,0)" rx="2" ry="2" />
<text  x="902.79" y="463.5" ></text>
</g>
<g >
<title>tg/eth/stagedsync.getExtractCode.func1 (16,533 samples, 2.38%)</title><rect x="823.4" y="581" width="28.1" height="15.0" fill="rgb(252,72,31)" rx="2" ry="2" />
<text  x="826.40" y="591.5" >t..</text>
</g>
<g >
<title>container/heap.Pop (887 samples, 0.13%)</title><rect x="166.7" y="661" width="1.5" height="15.0" fill="rgb(215,156,12)" rx="2" ry="2" />
<text  x="169.72" y="671.5" ></text>
</g>
<g >
<title>tg/turbo/trie.(*HashBuilder).completeLeafHash (459 samples, 0.07%)</title><rect x="1030.0" y="613" width="0.8" height="15.0" fill="rgb(233,34,47)" rx="2" ry="2" />
<text  x="1033.01" y="623.5" ></text>
</g>
<g >
<title>tg/p2p/dnsdisc.(*Client).doResolveEntry (71 samples, 0.01%)</title><rect x="1189.9" y="757" width="0.1" height="15.0" fill="rgb(235,75,1)" rx="2" ry="2" />
<text  x="1192.87" y="767.5" ></text>
</g>
<g >
<title>tg/core/vm.opDiv (358 samples, 0.05%)</title><rect x="421.5" y="533" width="0.6" height="15.0" fill="rgb(227,110,38)" rx="2" ry="2" />
<text  x="424.54" y="543.5" ></text>
</g>
<g >
<title>bufio.(*Reader).Read (130 samples, 0.02%)</title><rect x="1089.5" y="485" width="0.2" height="15.0" fill="rgb(225,205,50)" rx="2" ry="2" />
<text  x="1092.48" y="495.5" ></text>
</g>
<g >
<title>tg/common/etl.extractBucketIntoFiles.func1 (75,898 samples, 10.92%)</title><rect x="822.7" y="597" width="128.9" height="15.0" fill="rgb(244,121,18)" rx="2" ry="2" />
<text  x="825.74" y="607.5" >tg/common/etl.ex..</text>
</g>
<g >
<title>runtime.mapiternext (200 samples, 0.03%)</title><rect x="862.2" y="517" width="0.3" height="15.0" fill="rgb(252,132,9)" rx="2" ry="2" />
<text  x="865.15" y="527.5" ></text>
</g>
<g >
<title>runtime.cgocall (70 samples, 0.01%)</title><rect x="231.0" y="581" width="0.2" height="15.0" fill="rgb(244,225,50)" rx="2" ry="2" />
<text  x="234.03" y="591.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).getVal1 (79 samples, 0.01%)</title><rect x="340.5" y="453" width="0.1" height="15.0" fill="rgb(251,150,33)" rx="2" ry="2" />
<text  x="343.50" y="463.5" ></text>
</g>
<g >
<title>tg/eth/downloader.(*Downloader).fetchBodies (7,324 samples, 1.05%)</title><rect x="1106.9" y="837" width="12.5" height="15.0" fill="rgb(210,182,21)" rx="2" ry="2" />
<text  x="1109.93" y="847.5" ></text>
</g>
<g >
<title>runtime.cgoIsGoPointer (283 samples, 0.04%)</title><rect x="957.2" y="501" width="0.5" height="15.0" fill="rgb(243,24,40)" rx="2" ry="2" />
<text  x="960.21" y="511.5" ></text>
</g>
<g >
<title>tg/core/vm.run (316 samples, 0.05%)</title><rect x="485.8" y="373" width="0.6" height="15.0" fill="rgb(232,222,54)" rx="2" ry="2" />
<text  x="488.84" y="383.5" ></text>
</g>
<g >
<title>runtime.newobject (220 samples, 0.03%)</title><rect x="244.6" y="581" width="0.3" height="15.0" fill="rgb(229,93,16)" rx="2" ry="2" />
<text  x="247.56" y="591.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (262 samples, 0.04%)</title><rect x="561.8" y="469" width="0.4" height="15.0" fill="rgb(215,64,27)" rx="2" ry="2" />
<text  x="564.79" y="479.5" ></text>
</g>
<g >
<title>tg/core/vm.run (100 samples, 0.01%)</title><rect x="416.5" y="373" width="0.1" height="15.0" fill="rgb(253,39,35)" rx="2" ry="2" />
<text  x="419.47" y="383.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.fastpathT.DecSliceBytesY (209 samples, 0.03%)</title><rect x="959.4" y="581" width="0.4" height="15.0" fill="rgb(219,203,1)" rx="2" ry="2" />
<text  x="962.45" y="591.5" ></text>
</g>
<g >
<title>syscall.Syscall (499 samples, 0.07%)</title><rect x="1176.6" y="693" width="0.8" height="15.0" fill="rgb(238,47,49)" rx="2" ry="2" />
<text  x="1179.60" y="703.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.beginTxn.func1 (2,043 samples, 0.29%)</title><rect x="828.1" y="485" width="3.5" height="15.0" fill="rgb(206,194,8)" rx="2" ry="2" />
<text  x="831.15" y="495.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (285 samples, 0.04%)</title><rect x="661.7" y="549" width="0.5" height="15.0" fill="rgb(209,156,44)" rx="2" ry="2" />
<text  x="664.71" y="559.5" ></text>
</g>
<g >
<title>github.com/holiman/uint256.(*Int).SetBytes (71 samples, 0.01%)</title><rect x="470.7" y="517" width="0.1" height="15.0" fill="rgb(237,84,30)" rx="2" ry="2" />
<text  x="473.69" y="527.5" ></text>
</g>
<g >
<title>tg/crypto/secp256k1.RecoverPubkeyWithContext.func1 (18,530 samples, 2.67%)</title><rect x="1134.7" y="789" width="31.4" height="15.0" fill="rgb(218,121,10)" rx="2" ry="2" />
<text  x="1137.67" y="799.5" >tg..</text>
</g>
<g >
<title>github.com/google/btree.(*BTree).Get (101 samples, 0.01%)</title><rect x="370.3" y="437" width="0.2" height="15.0" fill="rgb(217,217,37)" rx="2" ry="2" />
<text  x="373.34" y="447.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (184 samples, 0.03%)</title><rect x="238.3" y="549" width="0.3" height="15.0" fill="rgb(238,70,51)" rx="2" ry="2" />
<text  x="241.31" y="559.5" ></text>
</g>
<g >
<title>runtime.mapaccess1 (108 samples, 0.02%)</title><rect x="271.1" y="597" width="0.2" height="15.0" fill="rgb(229,94,36)" rx="2" ry="2" />
<text  x="274.10" y="607.5" ></text>
</g>
<g >
<title>tg/common/dbutils.GenerateStoragePrefix (279 samples, 0.04%)</title><rect x="1012.7" y="565" width="0.5" height="15.0" fill="rgb(254,22,15)" rx="2" ry="2" />
<text  x="1015.73" y="575.5" ></text>
</g>
<g >
<title>sort.rotate (89 samples, 0.01%)</title><rect x="1074.9" y="325" width="0.1" height="15.0" fill="rgb(211,36,54)" rx="2" ry="2" />
<text  x="1077.85" y="335.5" ></text>
</g>
<g >
<title>tg/crypto.EcrecoverWithContext (18,548 samples, 2.67%)</title><rect x="1134.6" y="821" width="31.5" height="15.0" fill="rgb(246,67,26)" rx="2" ry="2" />
<text  x="1137.64" y="831.5" >tg..</text>
</g>
<g >
<title>cmpbody (129 samples, 0.02%)</title><rect x="992.6" y="245" width="0.2" height="15.0" fill="rgb(234,133,33)" rx="2" ry="2" />
<text  x="995.56" y="255.5" ></text>
</g>
<g >
<title>cmpbody (1,593 samples, 0.23%)</title><rect x="677.6" y="485" width="2.7" height="15.0" fill="rgb(221,12,11)" rx="2" ry="2" />
<text  x="680.63" y="495.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (368 samples, 0.05%)</title><rect x="560.3" y="405" width="0.7" height="15.0" fill="rgb(234,185,11)" rx="2" ry="2" />
<text  x="563.34" y="415.5" ></text>
</g>
<g >
<title>tg/core/vm.(*Memory).GetCopy (79 samples, 0.01%)</title><rect x="320.1" y="597" width="0.1" height="15.0" fill="rgb(232,193,28)" rx="2" ry="2" />
<text  x="323.09" y="607.5" ></text>
</g>
<g >
<title>tg/ethdb.(*mutation).Get (145 samples, 0.02%)</title><rect x="501.2" y="389" width="0.3" height="15.0" fill="rgb(212,6,45)" rx="2" ry="2" />
<text  x="504.22" y="399.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.fastpathT.DecSliceBytesY (175 samples, 0.03%)</title><rect x="145.2" y="581" width="0.3" height="15.0" fill="rgb(249,31,0)" rx="2" ry="2" />
<text  x="148.19" y="591.5" ></text>
</g>
<g >
<title>tg/p2p/enode.(*DB).UpdateNode (744 samples, 0.11%)</title><rect x="1188.2" y="853" width="1.2" height="15.0" fill="rgb(245,84,36)" rx="2" ry="2" />
<text  x="1191.17" y="863.5" ></text>
</g>
<g >
<title>github.com/holiman/uint256.(*Int).WriteToSlice (305 samples, 0.04%)</title><rect x="211.6" y="373" width="0.6" height="15.0" fill="rgb(222,125,46)" rx="2" ry="2" />
<text  x="214.64" y="383.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).Put.func1 (2,881 samples, 0.41%)</title><rect x="171.6" y="581" width="4.9" height="15.0" fill="rgb(215,180,9)" rx="2" ry="2" />
<text  x="174.56" y="591.5" ></text>
</g>
<g >
<title>runtime.memmove (107 samples, 0.02%)</title><rect x="540.9" y="565" width="0.2" height="15.0" fill="rgb(234,216,17)" rx="2" ry="2" />
<text  x="543.89" y="575.5" ></text>
</g>
<g >
<title>time.Now (141 samples, 0.02%)</title><rect x="792.8" y="549" width="0.2" height="15.0" fill="rgb(232,146,50)" rx="2" ry="2" />
<text  x="795.78" y="559.5" ></text>
</g>
<g >
<title>runtime.efaceeq (78 samples, 0.01%)</title><rect x="643.3" y="613" width="0.1" height="15.0" fill="rgb(236,189,46)" rx="2" ry="2" />
<text  x="646.26" y="623.5" ></text>
</g>
<g >
<title>bytes.Compare (82 samples, 0.01%)</title><rect x="440.2" y="341" width="0.1" height="15.0" fill="rgb(246,75,20)" rx="2" ry="2" />
<text  x="443.21" y="351.5" ></text>
</g>
<g >
<title>runtime.exitsyscall (102 samples, 0.01%)</title><rect x="946.2" y="437" width="0.2" height="15.0" fill="rgb(222,133,1)" rx="2" ry="2" />
<text  x="949.23" y="447.5" ></text>
</g>
<g >
<title>tg/common/etl.(*sortableBuffer).Put (127 samples, 0.02%)</title><rect x="1040.0" y="597" width="0.2" height="15.0" fill="rgb(234,95,39)" rx="2" ry="2" />
<text  x="1042.97" y="607.5" ></text>
</g>
<g >
<title>runtime.mapaccess2_faststr (945 samples, 0.14%)</title><rect x="1063.3" y="629" width="1.6" height="15.0" fill="rgb(254,172,41)" rx="2" ry="2" />
<text  x="1066.33" y="639.5" ></text>
</g>
<g >
<title>tg/ethdb.(*mutation).Get (184 samples, 0.03%)</title><rect x="385.8" y="261" width="0.3" height="15.0" fill="rgb(228,202,23)" rx="2" ry="2" />
<text  x="388.80" y="271.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (157 samples, 0.02%)</title><rect x="669.6" y="469" width="0.3" height="15.0" fill="rgb(206,153,14)" rx="2" ry="2" />
<text  x="672.64" y="479.5" ></text>
</g>
<g >
<title>tg/rlp.cachedWriter (167 samples, 0.02%)</title><rect x="768.7" y="613" width="0.3" height="15.0" fill="rgb(233,127,2)" rx="2" ry="2" />
<text  x="771.73" y="623.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (167 samples, 0.02%)</title><rect x="832.1" y="421" width="0.2" height="15.0" fill="rgb(219,151,45)" rx="2" ry="2" />
<text  x="835.05" y="431.5" ></text>
</g>
<g >
<title>tg/core/vm.(*ecrecover).Run (1,417 samples, 0.20%)</title><rect x="598.5" y="549" width="2.4" height="15.0" fill="rgb(249,226,14)" rx="2" ry="2" />
<text  x="601.54" y="559.5" ></text>
</g>
<g >
<title>runtime.profilealloc (138 samples, 0.02%)</title><rect x="155.5" y="485" width="0.2" height="15.0" fill="rgb(243,129,29)" rx="2" ry="2" />
<text  x="158.46" y="495.5" ></text>
</g>
<g >
<title>tg/core/types.(*Body).SendersToTxs (190 samples, 0.03%)</title><rect x="795.3" y="709" width="0.4" height="15.0" fill="rgb(216,68,46)" rx="2" ry="2" />
<text  x="798.34" y="719.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (137 samples, 0.02%)</title><rect x="967.1" y="597" width="0.3" height="15.0" fill="rgb(228,43,54)" rx="2" ry="2" />
<text  x="970.12" y="607.5" ></text>
</g>
<g >
<title>runtime.mallocgc (185 samples, 0.03%)</title><rect x="519.8" y="517" width="0.3" height="15.0" fill="rgb(236,96,5)" rx="2" ry="2" />
<text  x="522.77" y="527.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb._Cfunc_mdb_cursor_open (1,002 samples, 0.14%)</title><rect x="930.4" y="437" width="1.7" height="15.0" fill="rgb(223,145,50)" rx="2" ry="2" />
<text  x="933.36" y="447.5" ></text>
</g>
<g >
<title>tg/core/vm.opStaticCall (921 samples, 0.13%)</title><rect x="608.0" y="533" width="1.6" height="15.0" fill="rgb(253,19,42)" rx="2" ry="2" />
<text  x="611.00" y="543.5" ></text>
</g>
<g >
<title>tg/rlp.makeStructWriter.func1 (162 samples, 0.02%)</title><rect x="1130.3" y="741" width="0.3" height="15.0" fill="rgb(221,214,17)" rx="2" ry="2" />
<text  x="1133.29" y="751.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*decRd).readn1IO (67 samples, 0.01%)</title><rect x="971.9" y="501" width="0.1" height="15.0" fill="rgb(242,127,30)" rx="2" ry="2" />
<text  x="974.87" y="511.5" ></text>
</g>
<g >
<title>runtime.makeslice (98 samples, 0.01%)</title><rect x="216.9" y="389" width="0.2" height="15.0" fill="rgb(228,10,16)" rx="2" ry="2" />
<text  x="219.89" y="399.5" ></text>
</g>
<g >
<title>runtime.mapaccess1 (886 samples, 0.13%)</title><rect x="636.0" y="629" width="1.5" height="15.0" fill="rgb(245,4,28)" rx="2" ry="2" />
<text  x="638.98" y="639.5" ></text>
</g>
<g >
<title>tg/core/vm.opAddmod (129 samples, 0.02%)</title><rect x="471.3" y="533" width="0.2" height="15.0" fill="rgb(212,222,30)" rx="2" ry="2" />
<text  x="474.31" y="543.5" ></text>
</g>
<g >
<title>tg/core/state.(*PlainStateReader).ReadAccountStorage (199 samples, 0.03%)</title><rect x="516.6" y="405" width="0.4" height="15.0" fill="rgb(223,115,24)" rx="2" ry="2" />
<text  x="519.62" y="415.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (69 samples, 0.01%)</title><rect x="895.5" y="501" width="0.2" height="15.0" fill="rgb(215,85,39)" rx="2" ry="2" />
<text  x="898.54" y="511.5" ></text>
</g>
<g >
<title>runtime.exitsyscall (161 samples, 0.02%)</title><rect x="931.8" y="405" width="0.3" height="15.0" fill="rgb(247,114,30)" rx="2" ry="2" />
<text  x="934.79" y="415.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (63 samples, 0.01%)</title><rect x="973.5" y="517" width="0.1" height="15.0" fill="rgb(247,159,46)" rx="2" ry="2" />
<text  x="976.54" y="527.5" ></text>
</g>
<g >
<title>tg/crypto/secp256k1.RecoverPubkey (4,929 samples, 0.71%)</title><rect x="342.4" y="533" width="8.4" height="15.0" fill="rgb(231,45,28)" rx="2" ry="2" />
<text  x="345.39" y="543.5" ></text>
</g>
<g >
<title>bytes.Compare (65 samples, 0.01%)</title><rect x="320.9" y="389" width="0.1" height="15.0" fill="rgb(254,131,35)" rx="2" ry="2" />
<text  x="323.91" y="399.5" ></text>
</g>
<g >
<title>runtime.mallocgc (83 samples, 0.01%)</title><rect x="1091.0" y="597" width="0.1" height="15.0" fill="rgb(216,137,40)" rx="2" ry="2" />
<text  x="1093.99" y="607.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find.func1 (2,171 samples, 0.31%)</title><rect x="683.6" y="533" width="3.7" height="15.0" fill="rgb(218,181,31)" rx="2" ry="2" />
<text  x="686.58" y="543.5" ></text>
</g>
<g >
<title>reflect.unsafe_New (70 samples, 0.01%)</title><rect x="785.0" y="597" width="0.1" height="15.0" fill="rgb(205,111,28)" rx="2" ry="2" />
<text  x="787.98" y="607.5" ></text>
</g>
<g >
<title>tg/core/types.rlpHash (4,861 samples, 0.70%)</title><rect x="206.5" y="565" width="8.2" height="15.0" fill="rgb(252,99,30)" rx="2" ry="2" />
<text  x="209.45" y="575.5" ></text>
</g>
<g >
<title>tg/core/vm.opDelegateCall (78 samples, 0.01%)</title><rect x="484.7" y="213" width="0.1" height="15.0" fill="rgb(254,13,44)" rx="2" ry="2" />
<text  x="487.69" y="223.5" ></text>
</g>
<g >
<title>tg/rlp.decodeByteArray (80 samples, 0.01%)</title><rect x="338.3" y="485" width="0.1" height="15.0" fill="rgb(239,29,6)" rx="2" ry="2" />
<text  x="341.30" y="495.5" ></text>
</g>
<g >
<title>cmpbody (101 samples, 0.01%)</title><rect x="192.1" y="149" width="0.1" height="15.0" fill="rgb(205,34,40)" rx="2" ry="2" />
<text  x="195.05" y="159.5" ></text>
</g>
<g >
<title>runtime.makeslice (211 samples, 0.03%)</title><rect x="170.8" y="629" width="0.4" height="15.0" fill="rgb(227,186,34)" rx="2" ry="2" />
<text  x="173.83" y="639.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVMInterpreter).Run (59 samples, 0.01%)</title><rect x="462.9" y="405" width="0.1" height="15.0" fill="rgb(237,182,19)" rx="2" ry="2" />
<text  x="465.91" y="415.5" ></text>
</g>
<g >
<title>runtime.mapassign (129 samples, 0.02%)</title><rect x="401.1" y="405" width="0.2" height="15.0" fill="rgb(233,134,13)" rx="2" ry="2" />
<text  x="404.06" y="415.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find (66 samples, 0.01%)</title><rect x="340.3" y="437" width="0.2" height="15.0" fill="rgb(220,158,30)" rx="2" ry="2" />
<text  x="343.34" y="447.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).Create2 (306 samples, 0.04%)</title><rect x="459.9" y="581" width="0.6" height="15.0" fill="rgb(211,10,18)" rx="2" ry="2" />
<text  x="462.93" y="591.5" ></text>
</g>
<g >
<title>sort.rotate (95 samples, 0.01%)</title><rect x="990.9" y="341" width="0.2" height="15.0" fill="rgb(210,17,5)" rx="2" ry="2" />
<text  x="993.92" y="351.5" ></text>
</g>
<g >
<title>runtime.(*mcache).prepareForSweep (111 samples, 0.02%)</title><rect x="36.7" y="757" width="0.2" height="15.0" fill="rgb(233,117,20)" rx="2" ry="2" />
<text  x="39.73" y="767.5" ></text>
</g>
<g >
<title>tg/eth/downloader.(*Downloader).fetchHeaders (105 samples, 0.02%)</title><rect x="1129.9" y="837" width="0.1" height="15.0" fill="rgb(234,29,45)" rx="2" ry="2" />
<text  x="1132.86" y="847.5" ></text>
</g>
<g >
<title>runtime.systemstack (79 samples, 0.01%)</title><rect x="860.1" y="453" width="0.2" height="15.0" fill="rgb(246,164,17)" rx="2" ry="2" />
<text  x="863.12" y="463.5" ></text>
</g>
<g >
<title>runtime.lockWithRank (174 samples, 0.03%)</title><rect x="100.4" y="837" width="0.3" height="15.0" fill="rgb(225,209,51)" rx="2" ry="2" />
<text  x="103.37" y="847.5" ></text>
</g>
<g >
<title>tg/core/state.(*journal).append (242 samples, 0.03%)</title><rect x="330.8" y="565" width="0.4" height="15.0" fill="rgb(209,181,54)" rx="2" ry="2" />
<text  x="333.75" y="575.5" ></text>
</g>
<g >
<title>tg/core/vm.run (142 samples, 0.02%)</title><rect x="394.2" y="309" width="0.2" height="15.0" fill="rgb(252,206,45)" rx="2" ry="2" />
<text  x="397.18" y="319.5" ></text>
</g>
<g >
<title>runtime.mallocgc (341 samples, 0.05%)</title><rect x="965.2" y="597" width="0.6" height="15.0" fill="rgb(231,136,49)" rx="2" ry="2" />
<text  x="968.18" y="607.5" ></text>
</g>
<g >
<title>runtime.mallocgc (250 samples, 0.04%)</title><rect x="240.4" y="581" width="0.4" height="15.0" fill="rgb(231,227,50)" rx="2" ry="2" />
<text  x="243.41" y="591.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVMInterpreter).Run (63 samples, 0.01%)</title><rect x="391.3" y="293" width="0.1" height="15.0" fill="rgb(219,183,37)" rx="2" ry="2" />
<text  x="394.26" y="303.5" ></text>
</g>
<g >
<title>runtime.newobject (217 samples, 0.03%)</title><rect x="239.3" y="613" width="0.3" height="15.0" fill="rgb(214,158,34)" rx="2" ry="2" />
<text  x="242.27" y="623.5" ></text>
</g>
<g >
<title>runtime.getitab (72 samples, 0.01%)</title><rect x="1116.9" y="613" width="0.1" height="15.0" fill="rgb(236,166,25)" rx="2" ry="2" />
<text  x="1119.90" y="623.5" ></text>
</g>
<g >
<title>runtime.cgocall (79 samples, 0.01%)</title><rect x="1026.2" y="613" width="0.1" height="15.0" fill="rgb(220,98,18)" rx="2" ry="2" />
<text  x="1029.18" y="623.5" ></text>
</g>
<g >
<title>tg/ethdb.(*LmdbCursor).put (440 samples, 0.06%)</title><rect x="1057.1" y="565" width="0.8" height="15.0" fill="rgb(207,40,6)" rx="2" ry="2" />
<text  x="1060.12" y="575.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (250 samples, 0.04%)</title><rect x="235.8" y="645" width="0.5" height="15.0" fill="rgb(234,215,6)" rx="2" ry="2" />
<text  x="238.84" y="655.5" ></text>
</g>
<g >
<title>github.com/holiman/uint256.(*Int).SetBytes (105 samples, 0.02%)</title><rect x="425.6" y="517" width="0.2" height="15.0" fill="rgb(234,34,38)" rx="2" ry="2" />
<text  x="428.59" y="527.5" ></text>
</g>
<g >
<title>runtime.cgoCheckArg (408 samples, 0.06%)</title><rect x="926.9" y="437" width="0.7" height="15.0" fill="rgb(236,123,39)" rx="2" ry="2" />
<text  x="929.87" y="447.5" ></text>
</g>
<g >
<title>tg/core/vm.opCall (103 samples, 0.01%)</title><rect x="393.7" y="213" width="0.2" height="15.0" fill="rgb(222,185,35)" rx="2" ry="2" />
<text  x="396.70" y="223.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.(*Bitmap).WriteTo (126 samples, 0.02%)</title><rect x="157.3" y="613" width="0.2" height="15.0" fill="rgb(228,59,53)" rx="2" ry="2" />
<text  x="160.33" y="623.5" ></text>
</g>
<g >
<title>sort.rotate (166 samples, 0.02%)</title><rect x="988.3" y="437" width="0.3" height="15.0" fill="rgb(228,45,49)" rx="2" ry="2" />
<text  x="991.34" y="447.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).Call (343 samples, 0.05%)</title><rect x="393.6" y="325" width="0.6" height="15.0" fill="rgb(214,134,28)" rx="2" ry="2" />
<text  x="396.58" y="335.5" ></text>
</g>
<g >
<title>tg/core/vm.opStaticCall (108 samples, 0.02%)</title><rect x="395.7" y="405" width="0.1" height="15.0" fill="rgb(237,129,20)" rx="2" ry="2" />
<text  x="398.65" y="415.5" ></text>
</g>
<g >
<title>aeshashbody (128 samples, 0.02%)</title><rect x="639.4" y="597" width="0.2" height="15.0" fill="rgb(219,95,12)" rx="2" ry="2" />
<text  x="642.35" y="607.5" ></text>
</g>
<g >
<title>runtime.typedmemmove (140 samples, 0.02%)</title><rect x="1123.2" y="533" width="0.2" height="15.0" fill="rgb(247,61,39)" rx="2" ry="2" />
<text  x="1126.17" y="543.5" ></text>
</g>
<g >
<title>runtime.cgoCheckPointer (271 samples, 0.04%)</title><rect x="946.4" y="469" width="0.5" height="15.0" fill="rgb(228,51,42)" rx="2" ry="2" />
<text  x="949.40" y="479.5" ></text>
</g>
<g >
<title>bytes.Compare (61 samples, 0.01%)</title><rect x="993.6" y="197" width="0.1" height="15.0" fill="rgb(210,150,23)" rx="2" ry="2" />
<text  x="996.60" y="207.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.newBitmapContainerFromRun (86 samples, 0.01%)</title><rect x="156.3" y="549" width="0.2" height="15.0" fill="rgb(208,107,2)" rx="2" ry="2" />
<text  x="159.32" y="559.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find (177 samples, 0.03%)</title><rect x="323.3" y="421" width="0.3" height="15.0" fill="rgb(234,174,24)" rx="2" ry="2" />
<text  x="326.29" y="431.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (67 samples, 0.01%)</title><rect x="435.3" y="389" width="0.1" height="15.0" fill="rgb(223,66,54)" rx="2" ry="2" />
<text  x="438.27" y="399.5" ></text>
</g>
<g >
<title>sync.(*RWMutex).RLock (377 samples, 0.05%)</title><rect x="582.0" y="501" width="0.7" height="15.0" fill="rgb(221,221,39)" rx="2" ry="2" />
<text  x="585.03" y="511.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).Get (1,403 samples, 0.20%)</title><rect x="289.8" y="533" width="2.4" height="15.0" fill="rgb(216,95,14)" rx="2" ry="2" />
<text  x="292.83" y="543.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).Call (96 samples, 0.01%)</title><rect x="386.9" y="261" width="0.2" height="15.0" fill="rgb(232,49,36)" rx="2" ry="2" />
<text  x="389.90" y="271.5" ></text>
</g>
<g >
<title>runtime.mallocgc (122 samples, 0.02%)</title><rect x="737.1" y="645" width="0.2" height="15.0" fill="rgb(250,144,16)" rx="2" ry="2" />
<text  x="740.06" y="655.5" ></text>
</g>
<g >
<title>sort.symMerge (1,148 samples, 0.17%)</title><rect x="190.6" y="229" width="2.0" height="15.0" fill="rgb(206,51,13)" rx="2" ry="2" />
<text  x="193.62" y="239.5" ></text>
</g>
<g >
<title>tg/ethdb.(*TxDb).Walk (5,062 samples, 0.73%)</title><rect x="786.0" y="661" width="8.6" height="15.0" fill="rgb(215,69,51)" rx="2" ry="2" />
<text  x="789.03" y="671.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*ioDecReader).readb (168 samples, 0.02%)</title><rect x="817.5" y="485" width="0.3" height="15.0" fill="rgb(254,12,4)" rx="2" ry="2" />
<text  x="820.47" y="495.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).iterate (10,697 samples, 1.54%)</title><rect x="796.2" y="613" width="18.2" height="15.0" fill="rgb(218,131,41)" rx="2" ry="2" />
<text  x="799.21" y="623.5" ></text>
</g>
<g >
<title>runtime.mcall (15,751 samples, 2.27%)</title><rect x="95.8" y="869" width="26.8" height="15.0" fill="rgb(224,213,30)" rx="2" ry="2" />
<text  x="98.84" y="879.5" >r..</text>
</g>
<g >
<title>runtime.(*mheap).allocMSpanLocked (83 samples, 0.01%)</title><rect x="1055.1" y="341" width="0.2" height="15.0" fill="rgb(205,205,18)" rx="2" ry="2" />
<text  x="1058.13" y="351.5" ></text>
</g>
<g >
<title>tg/core/state.(*PlainStateReader).ReadAccountStorage (152 samples, 0.02%)</title><rect x="501.2" y="405" width="0.3" height="15.0" fill="rgb(208,191,44)" rx="2" ry="2" />
<text  x="504.21" y="415.5" ></text>
</g>
<g >
<title>tg/common/etl.Heap.Swap (62 samples, 0.01%)</title><rect x="966.7" y="613" width="0.1" height="15.0" fill="rgb(241,31,0)" rx="2" ry="2" />
<text  x="969.69" y="623.5" ></text>
</g>
<g >
<title>runtime.cgocall (5,418 samples, 0.78%)</title><rect x="1166.7" y="741" width="9.2" height="15.0" fill="rgb(208,143,22)" rx="2" ry="2" />
<text  x="1169.74" y="751.5" ></text>
</g>
<g >
<title>runtime.mallocgc (252 samples, 0.04%)</title><rect x="594.8" y="533" width="0.5" height="15.0" fill="rgb(253,188,17)" rx="2" ry="2" />
<text  x="597.83" y="543.5" ></text>
</g>
<g >
<title>sort.symMerge (195 samples, 0.03%)</title><rect x="1040.2" y="517" width="0.3" height="15.0" fill="rgb(236,179,1)" rx="2" ry="2" />
<text  x="1043.20" y="527.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVMInterpreter).Run (141 samples, 0.02%)</title><rect x="386.2" y="293" width="0.2" height="15.0" fill="rgb(209,194,27)" rx="2" ry="2" />
<text  x="389.16" y="303.5" ></text>
</g>
<g >
<title>tg/core/vm.(*Contract).validJumpdest (61 samples, 0.01%)</title><rect x="449.4" y="453" width="0.1" height="15.0" fill="rgb(232,96,8)" rx="2" ry="2" />
<text  x="452.37" y="463.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find.func1 (110 samples, 0.02%)</title><rect x="390.1" y="197" width="0.1" height="15.0" fill="rgb(214,96,8)" rx="2" ry="2" />
<text  x="393.06" y="207.5" ></text>
</g>
<g >
<title>runtime.mallocgc (81 samples, 0.01%)</title><rect x="363.0" y="501" width="0.1" height="15.0" fill="rgb(207,30,48)" rx="2" ry="2" />
<text  x="366.01" y="511.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring/roaring64.(*roaringArray64).insertNewKeyValueAt (194 samples, 0.03%)</title><rect x="1062.8" y="629" width="0.4" height="15.0" fill="rgb(222,135,45)" rx="2" ry="2" />
<text  x="1065.82" y="639.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.(*Bitmap).RunOptimize (1,940 samples, 0.28%)</title><rect x="1053.0" y="581" width="3.3" height="15.0" fill="rgb(237,25,19)" rx="2" ry="2" />
<text  x="1055.98" y="591.5" ></text>
</g>
<g >
<title>runtime.mallocgc (334 samples, 0.05%)</title><rect x="1010.0" y="549" width="0.5" height="15.0" fill="rgb(232,4,7)" rx="2" ry="2" />
<text  x="1012.97" y="559.5" ></text>
</g>
<g >
<title>bytes.(*Reader).Read (70 samples, 0.01%)</title><rect x="201.2" y="309" width="0.1" height="15.0" fill="rgb(243,124,32)" rx="2" ry="2" />
<text  x="204.18" y="319.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find (84 samples, 0.01%)</title><rect x="452.6" y="357" width="0.2" height="15.0" fill="rgb(232,186,53)" rx="2" ry="2" />
<text  x="455.61" y="367.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).Put.func1 (1,697 samples, 0.24%)</title><rect x="811.5" y="549" width="2.9" height="15.0" fill="rgb(239,219,13)" rx="2" ry="2" />
<text  x="814.50" y="559.5" ></text>
</g>
<g >
<title>tg/rlp.Encode (483 samples, 0.07%)</title><rect x="1130.3" y="789" width="0.8" height="15.0" fill="rgb(221,18,39)" rx="2" ry="2" />
<text  x="1133.28" y="799.5" ></text>
</g>
<g >
<title>runtime.tgkill (78 samples, 0.01%)</title><rect x="51.3" y="741" width="0.1" height="15.0" fill="rgb(240,149,30)" rx="2" ry="2" />
<text  x="54.25" y="751.5" ></text>
</g>
<g >
<title>tg/ethdb/cbor.returnEncoderToPool (66 samples, 0.01%)</title><rect x="785.7" y="677" width="0.1" height="15.0" fill="rgb(253,12,14)" rx="2" ry="2" />
<text  x="788.68" y="687.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*cborDecDriver).DecodeBytes (134 samples, 0.02%)</title><rect x="959.5" y="565" width="0.3" height="15.0" fill="rgb(248,125,12)" rx="2" ry="2" />
<text  x="962.54" y="575.5" ></text>
</g>
<g >
<title>reflect.Value.Field (83 samples, 0.01%)</title><rect x="788.1" y="517" width="0.1" height="15.0" fill="rgb(252,22,54)" rx="2" ry="2" />
<text  x="791.11" y="527.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).StaticCall (423 samples, 0.06%)</title><rect x="517.0" y="453" width="0.7" height="15.0" fill="rgb(249,111,29)" rx="2" ry="2" />
<text  x="519.96" y="463.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).insert (9,956 samples, 1.43%)</title><rect x="672.6" y="597" width="16.9" height="15.0" fill="rgb(219,95,23)" rx="2" ry="2" />
<text  x="675.64" y="607.5" ></text>
</g>
<g >
<title>tg/core/state.(*PlainStateReader).ReadAccountData (886 samples, 0.13%)</title><rect x="498.6" y="421" width="1.5" height="15.0" fill="rgb(218,22,42)" rx="2" ry="2" />
<text  x="501.61" y="431.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.newRunContainer16FromContainer (79 samples, 0.01%)</title><rect x="1102.2" y="517" width="0.1" height="15.0" fill="rgb(210,96,3)" rx="2" ry="2" />
<text  x="1105.17" y="527.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (270 samples, 0.04%)</title><rect x="934.4" y="437" width="0.5" height="15.0" fill="rgb(247,92,26)" rx="2" ry="2" />
<text  x="937.43" y="447.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find.func1 (158 samples, 0.02%)</title><rect x="320.9" y="405" width="0.2" height="15.0" fill="rgb(227,142,6)" rx="2" ry="2" />
<text  x="323.85" y="415.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (62 samples, 0.01%)</title><rect x="271.6" y="533" width="0.1" height="15.0" fill="rgb(230,90,38)" rx="2" ry="2" />
<text  x="274.63" y="543.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (1,045 samples, 0.15%)</title><rect x="1053.6" y="405" width="1.8" height="15.0" fill="rgb(207,56,29)" rx="2" ry="2" />
<text  x="1056.65" y="415.5" ></text>
</g>
<g >
<title>runtime.unlockWithRank (98 samples, 0.01%)</title><rect x="909.5" y="453" width="0.2" height="15.0" fill="rgb(229,80,51)" rx="2" ry="2" />
<text  x="912.55" y="463.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).DelegateCall (939 samples, 0.14%)</title><rect x="514.5" y="453" width="1.6" height="15.0" fill="rgb(253,181,16)" rx="2" ry="2" />
<text  x="517.49" y="463.5" ></text>
</g>
<g >
<title>sort.Search (67 samples, 0.01%)</title><rect x="527.7" y="437" width="0.1" height="15.0" fill="rgb(236,18,7)" rx="2" ry="2" />
<text  x="530.66" y="447.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (87 samples, 0.01%)</title><rect x="1012.4" y="501" width="0.2" height="15.0" fill="rgb(209,142,48)" rx="2" ry="2" />
<text  x="1015.45" y="511.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find (98 samples, 0.01%)</title><rect x="323.6" y="437" width="0.2" height="15.0" fill="rgb(244,50,1)" rx="2" ry="2" />
<text  x="326.59" y="447.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (388 samples, 0.06%)</title><rect x="606.9" y="421" width="0.6" height="15.0" fill="rgb(243,85,24)" rx="2" ry="2" />
<text  x="609.87" y="431.5" ></text>
</g>
<g >
<title>runtime.cgocall (1,037 samples, 0.15%)</title><rect x="1043.9" y="581" width="1.8" height="15.0" fill="rgb(254,104,4)" rx="2" ry="2" />
<text  x="1046.94" y="591.5" ></text>
</g>
<g >
<title>runtime.convT2I (148 samples, 0.02%)</title><rect x="262.8" y="581" width="0.3" height="15.0" fill="rgb(215,217,4)" rx="2" ry="2" />
<text  x="265.85" y="591.5" ></text>
</g>
<g >
<title>tg/ethdb.(*MutationItem).Less (60 samples, 0.01%)</title><rect x="499.7" y="277" width="0.1" height="15.0" fill="rgb(209,147,16)" rx="2" ry="2" />
<text  x="502.75" y="287.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (235 samples, 0.03%)</title><rect x="641.3" y="597" width="0.4" height="15.0" fill="rgb(247,13,44)" rx="2" ry="2" />
<text  x="644.34" y="607.5" ></text>
</g>
<g >
<title>runtime.mallocgc (193 samples, 0.03%)</title><rect x="958.1" y="517" width="0.3" height="15.0" fill="rgb(224,6,40)" rx="2" ry="2" />
<text  x="961.10" y="527.5" ></text>
</g>
<g >
<title>tg/rlp.(*Stream).readUint (107 samples, 0.02%)</title><rect x="201.6" y="341" width="0.2" height="15.0" fill="rgb(212,112,9)" rx="2" ry="2" />
<text  x="204.57" y="351.5" ></text>
</g>
<g >
<title>tg/common/etl.FlushToDisk (76 samples, 0.01%)</title><rect x="994.3" y="565" width="0.1" height="15.0" fill="rgb(240,217,39)" rx="2" ry="2" />
<text  x="997.26" y="575.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (66 samples, 0.01%)</title><rect x="1123.7" y="469" width="0.1" height="15.0" fill="rgb(251,64,9)" rx="2" ry="2" />
<text  x="1126.69" y="479.5" ></text>
</g>
<g >
<title>tg/core/state.(*PlainStateReader).ReadAccountStorage (124 samples, 0.02%)</title><rect x="415.4" y="341" width="0.2" height="15.0" fill="rgb(216,162,39)" rx="2" ry="2" />
<text  x="418.42" y="351.5" ></text>
</g>
<g >
<title>sort.swapRange (65 samples, 0.01%)</title><rect x="992.1" y="277" width="0.1" height="15.0" fill="rgb(248,219,38)" rx="2" ry="2" />
<text  x="995.06" y="287.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (71 samples, 0.01%)</title><rect x="973.5" y="581" width="0.2" height="15.0" fill="rgb(226,127,22)" rx="2" ry="2" />
<text  x="976.53" y="591.5" ></text>
</g>
<g >
<title>cmpbody (248 samples, 0.04%)</title><rect x="190.1" y="213" width="0.4" height="15.0" fill="rgb(253,76,29)" rx="2" ry="2" />
<text  x="193.06" y="223.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (59 samples, 0.01%)</title><rect x="735.9" y="597" width="0.1" height="15.0" fill="rgb(236,129,23)" rx="2" ry="2" />
<text  x="738.92" y="607.5" ></text>
</g>
<g >
<title>cmpbody (68 samples, 0.01%)</title><rect x="865.6" y="373" width="0.1" height="15.0" fill="rgb(246,39,52)" rx="2" ry="2" />
<text  x="868.58" y="383.5" ></text>
</g>
<g >
<title>cmpbody (141 samples, 0.02%)</title><rect x="1075.0" y="293" width="0.3" height="15.0" fill="rgb(253,192,35)" rx="2" ry="2" />
<text  x="1078.04" y="303.5" ></text>
</g>
<g >
<title>sort.rotate (218 samples, 0.03%)</title><rect x="863.9" y="453" width="0.3" height="15.0" fill="rgb(238,100,40)" rx="2" ry="2" />
<text  x="866.86" y="463.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb._Cfunc_lmdbgo_mdb_cursor_put2 (1,757 samples, 0.25%)</title><rect x="730.9" y="565" width="3.0" height="15.0" fill="rgb(244,70,24)" rx="2" ry="2" />
<text  x="733.95" y="575.5" ></text>
</g>
<g >
<title>runtime.convT64 (83 samples, 0.01%)</title><rect x="946.9" y="469" width="0.1" height="15.0" fill="rgb(206,220,54)" rx="2" ry="2" />
<text  x="949.86" y="479.5" ></text>
</g>
<g >
<title>tg/rlp.cachedTypeInfo (103 samples, 0.01%)</title><rect x="212.4" y="437" width="0.1" height="15.0" fill="rgb(207,41,16)" rx="2" ry="2" />
<text  x="215.37" y="447.5" ></text>
</g>
<g >
<title>tg/core/types/accounts.(*Account).EncodeForStorage (109 samples, 0.02%)</title><rect x="670.9" y="613" width="0.2" height="15.0" fill="rgb(244,184,4)" rx="2" ry="2" />
<text  x="673.93" y="623.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).Get (845 samples, 0.12%)</title><rect x="798.2" y="549" width="1.4" height="15.0" fill="rgb(213,132,4)" rx="2" ry="2" />
<text  x="801.21" y="559.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (105 samples, 0.02%)</title><rect x="853.0" y="517" width="0.2" height="15.0" fill="rgb(217,39,1)" rx="2" ry="2" />
<text  x="856.01" y="527.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*ioDecReader).readb (157 samples, 0.02%)</title><rect x="1089.4" y="517" width="0.3" height="15.0" fill="rgb(234,53,47)" rx="2" ry="2" />
<text  x="1092.43" y="527.5" ></text>
</g>
<g >
<title>tg/ethdb/bitmapdb.WalkChunks64 (4,686 samples, 0.67%)</title><rect x="1049.9" y="645" width="8.0" height="15.0" fill="rgb(223,129,23)" rx="2" ry="2" />
<text  x="1052.93" y="655.5" ></text>
</g>
<g >
<title>runtime.newobject (362 samples, 0.05%)</title><rect x="162.6" y="565" width="0.6" height="15.0" fill="rgb(205,119,2)" rx="2" ry="2" />
<text  x="165.57" y="575.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).DelegateCall (74 samples, 0.01%)</title><rect x="479.5" y="325" width="0.1" height="15.0" fill="rgb(242,121,14)" rx="2" ry="2" />
<text  x="482.47" y="335.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.xorInUnaligned (105 samples, 0.02%)</title><rect x="655.0" y="581" width="0.2" height="15.0" fill="rgb(207,60,30)" rx="2" ry="2" />
<text  x="658.03" y="591.5" ></text>
</g>
<g >
<title>tg/rlp.Decode (161 samples, 0.02%)</title><rect x="794.8" y="677" width="0.2" height="15.0" fill="rgb(241,196,49)" rx="2" ry="2" />
<text  x="797.77" y="687.5" ></text>
</g>
<g >
<title>tg/core/state.(*stateObject).AddBalance (269 samples, 0.04%)</title><rect x="268.7" y="597" width="0.4" height="15.0" fill="rgb(221,165,49)" rx="2" ry="2" />
<text  x="271.67" y="607.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (1,454 samples, 0.21%)</title><rect x="246.5" y="485" width="2.5" height="15.0" fill="rgb(212,188,11)" rx="2" ry="2" />
<text  x="249.50" y="495.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (457 samples, 0.07%)</title><rect x="975.7" y="549" width="0.8" height="15.0" fill="rgb(213,45,40)" rx="2" ry="2" />
<text  x="978.69" y="559.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).GetState (240 samples, 0.03%)</title><rect x="516.6" y="453" width="0.4" height="15.0" fill="rgb(231,229,21)" rx="2" ry="2" />
<text  x="519.55" y="463.5" ></text>
</g>
<g >
<title>runtime.makeslicecopy (133 samples, 0.02%)</title><rect x="817.8" y="501" width="0.2" height="15.0" fill="rgb(213,83,25)" rx="2" ry="2" />
<text  x="820.75" y="511.5" ></text>
</g>
<g >
<title>runtime.mapaccess1 (108 samples, 0.02%)</title><rect x="1125.7" y="613" width="0.2" height="15.0" fill="rgb(252,195,5)" rx="2" ry="2" />
<text  x="1128.71" y="623.5" ></text>
</g>
<g >
<title>tg/core/vm.opCall (471 samples, 0.07%)</title><rect x="496.8" y="405" width="0.8" height="15.0" fill="rgb(237,188,12)" rx="2" ry="2" />
<text  x="499.76" y="415.5" ></text>
</g>
<g >
<title>github.com/holiman/uint256.(*Int).SetBytes (254 samples, 0.04%)</title><rect x="534.8" y="581" width="0.4" height="15.0" fill="rgb(212,133,26)" rx="2" ry="2" />
<text  x="537.79" y="591.5" ></text>
</g>
<g >
<title>tg/ethdb.(*lmdbTx).Rollback (71 samples, 0.01%)</title><rect x="230.8" y="677" width="0.1" height="15.0" fill="rgb(210,157,48)" rx="2" ry="2" />
<text  x="233.76" y="687.5" ></text>
</g>
<g >
<title>runtime.exitsyscall (207 samples, 0.03%)</title><rect x="726.8" y="533" width="0.3" height="15.0" fill="rgb(235,12,38)" rx="2" ry="2" />
<text  x="729.76" y="543.5" ></text>
</g>
<g >
<title>github.com/holiman/uint256.(*Int).Bytes32 (91 samples, 0.01%)</title><rect x="324.3" y="581" width="0.2" height="15.0" fill="rgb(240,171,43)" rx="2" ry="2" />
<text  x="327.34" y="591.5" ></text>
</g>
<g >
<title>runtime.mapaccess1 (136 samples, 0.02%)</title><rect x="433.4" y="485" width="0.3" height="15.0" fill="rgb(233,114,8)" rx="2" ry="2" />
<text  x="436.44" y="495.5" ></text>
</g>
<g >
<title>tg/core/types.rlpHash (96 samples, 0.01%)</title><rect x="1129.9" y="757" width="0.1" height="15.0" fill="rgb(226,210,9)" rx="2" ry="2" />
<text  x="1132.87" y="767.5" ></text>
</g>
<g >
<title>sort.symMerge (2,359 samples, 0.34%)</title><rect x="1073.3" y="389" width="4.0" height="15.0" fill="rgb(243,114,41)" rx="2" ry="2" />
<text  x="1076.32" y="399.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (153 samples, 0.02%)</title><rect x="907.1" y="373" width="0.3" height="15.0" fill="rgb(208,100,49)" rx="2" ry="2" />
<text  x="910.12" y="383.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (59 samples, 0.01%)</title><rect x="362.7" y="405" width="0.1" height="15.0" fill="rgb(211,141,10)" rx="2" ry="2" />
<text  x="365.65" y="415.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).SubBalance (1,275 samples, 0.18%)</title><rect x="241.8" y="613" width="2.1" height="15.0" fill="rgb(231,106,26)" rx="2" ry="2" />
<text  x="244.77" y="623.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).GetState (293 samples, 0.04%)</title><rect x="481.4" y="389" width="0.5" height="15.0" fill="rgb(226,52,5)" rx="2" ry="2" />
<text  x="484.44" y="399.5" ></text>
</g>
<g >
<title>runtime.(*pallocBits).summarize (1,829 samples, 0.26%)</title><rect x="26.6" y="725" width="3.1" height="15.0" fill="rgb(237,126,45)" rx="2" ry="2" />
<text  x="29.58" y="735.5" ></text>
</g>
<g >
<title>runtime.spanOf (69 samples, 0.01%)</title><rect x="950.9" y="421" width="0.1" height="15.0" fill="rgb(208,72,53)" rx="2" ry="2" />
<text  x="953.86" y="431.5" ></text>
</g>
<g >
<title>tg/common/etl.glob..func1 (2,326 samples, 0.33%)</title><rect x="818.6" y="645" width="3.9" height="15.0" fill="rgb(249,158,22)" rx="2" ry="2" />
<text  x="821.60" y="655.5" ></text>
</g>
<g >
<title>tg/core/state.(*journal).append (274 samples, 0.04%)</title><rect x="445.0" y="485" width="0.5" height="15.0" fill="rgb(218,162,26)" rx="2" ry="2" />
<text  x="448.00" y="495.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).getVal1 (152 samples, 0.02%)</title><rect x="146.3" y="597" width="0.3" height="15.0" fill="rgb(216,39,24)" rx="2" ry="2" />
<text  x="149.30" y="607.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*BTree).Get (75 samples, 0.01%)</title><rect x="504.8" y="453" width="0.1" height="15.0" fill="rgb(208,109,41)" rx="2" ry="2" />
<text  x="507.76" y="463.5" ></text>
</g>
<g >
<title>cmpbody (120 samples, 0.02%)</title><rect x="991.8" y="277" width="0.2" height="15.0" fill="rgb(216,169,9)" rx="2" ry="2" />
<text  x="994.84" y="287.5" ></text>
</g>
<g >
<title>runtime.growslice (291 samples, 0.04%)</title><rect x="734.7" y="645" width="0.5" height="15.0" fill="rgb(229,139,23)" rx="2" ry="2" />
<text  x="737.66" y="655.5" ></text>
</g>
<g >
<title>runtime.mallocgc (103 samples, 0.01%)</title><rect x="911.3" y="517" width="0.2" height="15.0" fill="rgb(248,18,4)" rx="2" ry="2" />
<text  x="914.30" y="527.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.(*state).Read (5,455 samples, 0.79%)</title><rect x="544.5" y="581" width="9.2" height="15.0" fill="rgb(252,138,49)" rx="2" ry="2" />
<text  x="547.46" y="591.5" ></text>
</g>
<g >
<title>tg/ethdb.(*MutationItem).Less (84 samples, 0.01%)</title><rect x="288.4" y="421" width="0.1" height="15.0" fill="rgb(217,41,52)" rx="2" ry="2" />
<text  x="291.40" y="431.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*Encoder).mustEncode (1,192 samples, 0.17%)</title><rect x="873.1" y="501" width="2.0" height="15.0" fill="rgb(222,102,27)" rx="2" ry="2" />
<text  x="876.10" y="511.5" ></text>
</g>
<g >
<title>tg/p2p.(*rlpxTransport).doEncHandshake (310 samples, 0.04%)</title><rect x="1187.2" y="789" width="0.5" height="15.0" fill="rgb(219,80,13)" rx="2" ry="2" />
<text  x="1190.22" y="799.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (94 samples, 0.01%)</title><rect x="561.1" y="389" width="0.2" height="15.0" fill="rgb(217,163,28)" rx="2" ry="2" />
<text  x="564.13" y="399.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.(*state).padAndPermute (1,799 samples, 0.26%)</title><rect x="429.6" y="501" width="3.0" height="15.0" fill="rgb(251,35,6)" rx="2" ry="2" />
<text  x="432.55" y="511.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).insert (9,299 samples, 1.34%)</title><rect x="704.1" y="597" width="15.8" height="15.0" fill="rgb(237,25,39)" rx="2" ry="2" />
<text  x="707.15" y="607.5" ></text>
</g>
<g >
<title>tg/core/vm.opSload (63 samples, 0.01%)</title><rect x="387.4" y="341" width="0.1" height="15.0" fill="rgb(213,78,3)" rx="2" ry="2" />
<text  x="390.38" y="351.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (94 samples, 0.01%)</title><rect x="594.9" y="501" width="0.2" height="15.0" fill="rgb(237,60,54)" rx="2" ry="2" />
<text  x="597.92" y="511.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (236 samples, 0.03%)</title><rect x="260.5" y="517" width="0.4" height="15.0" fill="rgb(251,89,28)" rx="2" ry="2" />
<text  x="263.53" y="527.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.keccakF1600 (201 samples, 0.03%)</title><rect x="134.0" y="677" width="0.4" height="15.0" fill="rgb(242,229,10)" rx="2" ry="2" />
<text  x="137.02" y="687.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find.func1 (199 samples, 0.03%)</title><rect x="525.1" y="437" width="0.4" height="15.0" fill="rgb(208,131,48)" rx="2" ry="2" />
<text  x="528.13" y="447.5" ></text>
</g>
<g >
<title>tg/rlp.makeNilPtrDecoder.func1 (471 samples, 0.07%)</title><rect x="201.8" y="373" width="0.8" height="15.0" fill="rgb(215,49,26)" rx="2" ry="2" />
<text  x="204.75" y="383.5" ></text>
</g>
<g >
<title>tg/ethdb.(*TxDb).Get (318 samples, 0.05%)</title><rect x="390.5" y="309" width="0.5" height="15.0" fill="rgb(216,138,47)" rx="2" ry="2" />
<text  x="393.45" y="319.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.(*runContainer16).toArrayContainer (65 samples, 0.01%)</title><rect x="1095.5" y="565" width="0.1" height="15.0" fill="rgb(224,20,35)" rx="2" ry="2" />
<text  x="1098.54" y="575.5" ></text>
</g>
<g >
<title>tg/ethdb.(*mutation).Get (1,340 samples, 0.19%)</title><rect x="510.0" y="453" width="2.3" height="15.0" fill="rgb(246,39,26)" rx="2" ry="2" />
<text  x="513.05" y="463.5" ></text>
</g>
<g >
<title>tg/core.NewStateTransition (865 samples, 0.12%)</title><rect x="624.7" y="661" width="1.4" height="15.0" fill="rgb(208,114,48)" rx="2" ry="2" />
<text  x="627.66" y="671.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (80 samples, 0.01%)</title><rect x="199.0" y="277" width="0.2" height="15.0" fill="rgb(233,105,24)" rx="2" ry="2" />
<text  x="202.02" y="287.5" ></text>
</g>
<g >
<title>tg/core/vm/stack.(*Stack).Pop (260 samples, 0.04%)</title><rect x="407.1" y="469" width="0.4" height="15.0" fill="rgb(228,199,11)" rx="2" ry="2" />
<text  x="410.07" y="479.5" ></text>
</g>
<g >
<title>tg/ethdb.(*MutationItem).Less (140 samples, 0.02%)</title><rect x="702.9" y="469" width="0.2" height="15.0" fill="rgb(211,148,8)" rx="2" ry="2" />
<text  x="705.91" y="479.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (60 samples, 0.01%)</title><rect x="853.0" y="437" width="0.1" height="15.0" fill="rgb(242,190,52)" rx="2" ry="2" />
<text  x="856.03" y="447.5" ></text>
</g>
<g >
<title>runtime.newobject (275 samples, 0.04%)</title><rect x="628.4" y="645" width="0.5" height="15.0" fill="rgb(228,167,12)" rx="2" ry="2" />
<text  x="631.44" y="655.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (84 samples, 0.01%)</title><rect x="1097.9" y="549" width="0.2" height="15.0" fill="rgb(211,12,19)" rx="2" ry="2" />
<text  x="1100.94" y="559.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find.func1 (100 samples, 0.01%)</title><rect x="422.6" y="341" width="0.2" height="15.0" fill="rgb(207,115,26)" rx="2" ry="2" />
<text  x="425.61" y="351.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.keccakF1600 (513 samples, 0.07%)</title><rect x="228.2" y="533" width="0.9" height="15.0" fill="rgb(235,221,48)" rx="2" ry="2" />
<text  x="231.20" y="543.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (6,392 samples, 0.92%)</title><rect x="245.7" y="517" width="10.9" height="15.0" fill="rgb(221,131,14)" rx="2" ry="2" />
<text  x="248.72" y="527.5" ></text>
</g>
<g >
<title>runtime.lock2 (94 samples, 0.01%)</title><rect x="120.3" y="805" width="0.2" height="15.0" fill="rgb(229,71,12)" rx="2" ry="2" />
<text  x="123.34" y="815.5" ></text>
</g>
<g >
<title>runtime.bgscavenge (1,362 samples, 0.20%)</title><rect x="10.6" y="869" width="2.3" height="15.0" fill="rgb(238,17,41)" rx="2" ry="2" />
<text  x="13.63" y="879.5" ></text>
</g>
<g >
<title>runtime.newobject (383 samples, 0.06%)</title><rect x="260.4" y="581" width="0.7" height="15.0" fill="rgb(215,3,21)" rx="2" ry="2" />
<text  x="263.41" y="591.5" ></text>
</g>
<g >
<title>tg/rlp.(*encbuf).encode (3,064 samples, 0.44%)</title><rect x="762.1" y="613" width="5.2" height="15.0" fill="rgb(231,119,45)" rx="2" ry="2" />
<text  x="765.14" y="623.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (75 samples, 0.01%)</title><rect x="644.1" y="597" width="0.1" height="15.0" fill="rgb(223,123,40)" rx="2" ry="2" />
<text  x="647.08" y="607.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.xorInUnaligned (107 samples, 0.02%)</title><rect x="759.9" y="597" width="0.2" height="15.0" fill="rgb(209,106,7)" rx="2" ry="2" />
<text  x="762.92" y="607.5" ></text>
</g>
<g >
<title>runtime.arenaIndex (92 samples, 0.01%)</title><rect x="898.1" y="517" width="0.1" height="15.0" fill="rgb(234,123,33)" rx="2" ry="2" />
<text  x="901.07" y="527.5" ></text>
</g>
<g >
<title>tg/crypto/secp256k1.RecoverPubkeyWithContext (170 samples, 0.02%)</title><rect x="492.9" y="389" width="0.3" height="15.0" fill="rgb(251,14,49)" rx="2" ry="2" />
<text  x="495.90" y="399.5" ></text>
</g>
<g >
<title>tg/core/vm.opSload (1,226 samples, 0.18%)</title><rect x="490.6" y="469" width="2.1" height="15.0" fill="rgb(249,29,12)" rx="2" ry="2" />
<text  x="493.60" y="479.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (291 samples, 0.04%)</title><rect x="452.4" y="405" width="0.5" height="15.0" fill="rgb(232,226,19)" rx="2" ry="2" />
<text  x="455.36" y="415.5" ></text>
</g>
<g >
<title>runtime.cgocall (2,061 samples, 0.30%)</title><rect x="1103.2" y="501" width="3.5" height="15.0" fill="rgb(234,8,18)" rx="2" ry="2" />
<text  x="1106.20" y="511.5" ></text>
</g>
<g >
<title>tg/core/vm.opJumpi (85 samples, 0.01%)</title><rect x="449.3" y="469" width="0.2" height="15.0" fill="rgb(244,142,11)" rx="2" ry="2" />
<text  x="452.33" y="479.5" ></text>
</g>
<g >
<title>runtime.entersyscall (79 samples, 0.01%)</title><rect x="1177.3" y="677" width="0.1" height="15.0" fill="rgb(234,177,52)" rx="2" ry="2" />
<text  x="1180.28" y="687.5" ></text>
</g>
<g >
<title>tg/rlp.cachedWriter (193 samples, 0.03%)</title><rect x="766.5" y="405" width="0.3" height="15.0" fill="rgb(243,173,41)" rx="2" ry="2" />
<text  x="769.47" y="415.5" ></text>
</g>
<g >
<title>tg/core/vm.codeBitmap (310 samples, 0.04%)</title><rect x="505.6" y="485" width="0.5" height="15.0" fill="rgb(225,185,38)" rx="2" ry="2" />
<text  x="508.59" y="495.5" ></text>
</g>
<g >
<title>tg/core/types.rlpHash (1,005 samples, 0.14%)</title><rect x="1132.4" y="805" width="1.7" height="15.0" fill="rgb(221,46,40)" rx="2" ry="2" />
<text  x="1135.41" y="815.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (73 samples, 0.01%)</title><rect x="435.3" y="405" width="0.1" height="15.0" fill="rgb(209,24,6)" rx="2" ry="2" />
<text  x="438.26" y="415.5" ></text>
</g>
<g >
<title>tg/rlp.makeStructWriter.func1 (2,138 samples, 0.31%)</title><rect x="763.3" y="501" width="3.6" height="15.0" fill="rgb(206,83,51)" rx="2" ry="2" />
<text  x="766.31" y="511.5" ></text>
</g>
<g >
<title>tg/core/state.(*stateObject).GetState (555 samples, 0.08%)</title><rect x="418.7" y="437" width="1.0" height="15.0" fill="rgb(222,41,1)" rx="2" ry="2" />
<text  x="421.72" y="447.5" ></text>
</g>
<g >
<title>container/heap.up (111 samples, 0.02%)</title><rect x="959.0" y="661" width="0.2" height="15.0" fill="rgb(249,204,45)" rx="2" ry="2" />
<text  x="961.98" y="671.5" ></text>
</g>
<g >
<title>aeshashbody (225 samples, 0.03%)</title><rect x="631.9" y="629" width="0.4" height="15.0" fill="rgb(210,34,31)" rx="2" ry="2" />
<text  x="634.92" y="639.5" ></text>
</g>
<g >
<title>tg/common/dbutils.PlainParseStoragePrefix (70 samples, 0.01%)</title><rect x="826.3" y="549" width="0.1" height="15.0" fill="rgb(213,7,39)" rx="2" ry="2" />
<text  x="829.25" y="559.5" ></text>
</g>
<g >
<title>bytes.Compare (129 samples, 0.02%)</title><rect x="1069.5" y="485" width="0.2" height="15.0" fill="rgb(217,58,51)" rx="2" ry="2" />
<text  x="1072.45" y="495.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*Encoder).mustEncode (1,208 samples, 0.17%)</title><rect x="783.2" y="661" width="2.0" height="15.0" fill="rgb(220,52,12)" rx="2" ry="2" />
<text  x="786.17" y="671.5" ></text>
</g>
<g >
<title>runtime.netpoll (169 samples, 0.02%)</title><rect x="62.1" y="789" width="0.3" height="15.0" fill="rgb(211,198,45)" rx="2" ry="2" />
<text  x="65.07" y="799.5" ></text>
</g>
<g >
<title>tg/ethdb.(*TxDb).Get (72 samples, 0.01%)</title><rect x="452.9" y="437" width="0.1" height="15.0" fill="rgb(240,149,13)" rx="2" ry="2" />
<text  x="455.88" y="447.5" ></text>
</g>
<g >
<title>tg/core/vm.(*Memory).Resize (70 samples, 0.01%)</title><rect x="421.4" y="485" width="0.1" height="15.0" fill="rgb(239,21,25)" rx="2" ry="2" />
<text  x="424.37" y="495.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (1,265 samples, 0.18%)</title><rect x="522.9" y="469" width="2.2" height="15.0" fill="rgb(230,227,24)" rx="2" ry="2" />
<text  x="525.92" y="479.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (81 samples, 0.01%)</title><rect x="516.6" y="325" width="0.2" height="15.0" fill="rgb(226,58,40)" rx="2" ry="2" />
<text  x="519.63" y="335.5" ></text>
</g>
<g >
<title>sort.rotate (81 samples, 0.01%)</title><rect x="869.6" y="245" width="0.2" height="15.0" fill="rgb(212,139,48)" rx="2" ry="2" />
<text  x="872.62" y="255.5" ></text>
</g>
<g >
<title>bufio.(*Writer).Flush (138 samples, 0.02%)</title><rect x="875.2" y="437" width="0.2" height="15.0" fill="rgb(251,213,13)" rx="2" ry="2" />
<text  x="878.17" y="447.5" ></text>
</g>
<g >
<title>runtime.mallocgc (560 samples, 0.08%)</title><rect x="778.7" y="661" width="0.9" height="15.0" fill="rgb(243,64,40)" rx="2" ry="2" />
<text  x="781.67" y="671.5" ></text>
</g>
<g >
<title>tg/core/vm.runBn256Pairing (354 samples, 0.05%)</title><rect x="501.9" y="341" width="0.6" height="15.0" fill="rgb(233,214,35)" rx="2" ry="2" />
<text  x="504.94" y="351.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).getVal1.func1 (4,979 samples, 0.72%)</title><rect x="1013.6" y="533" width="8.4" height="15.0" fill="rgb(215,111,16)" rx="2" ry="2" />
<text  x="1016.56" y="543.5" ></text>
</g>
<g >
<title>tg/core.(*TinyChainContext).GetHeader (63 samples, 0.01%)</title><rect x="369.0" y="501" width="0.1" height="15.0" fill="rgb(233,13,8)" rx="2" ry="2" />
<text  x="371.98" y="511.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring/roaring64.(*roaringArray64).getWritableContainerAtIndex (67 samples, 0.01%)</title><rect x="1034.7" y="613" width="0.2" height="15.0" fill="rgb(236,46,8)" rx="2" ry="2" />
<text  x="1037.74" y="623.5" ></text>
</g>
<g >
<title>tg/core/vm.opDiv (86 samples, 0.01%)</title><rect x="488.4" y="469" width="0.1" height="15.0" fill="rgb(240,143,10)" rx="2" ry="2" />
<text  x="491.37" y="479.5" ></text>
</g>
<g >
<title>sort.symMerge (2,694 samples, 0.39%)</title><rect x="1072.8" y="405" width="4.6" height="15.0" fill="rgb(217,214,46)" rx="2" ry="2" />
<text  x="1075.79" y="415.5" ></text>
</g>
<g >
<title>sort.Search (164 samples, 0.02%)</title><rect x="320.8" y="421" width="0.3" height="15.0" fill="rgb(216,211,37)" rx="2" ry="2" />
<text  x="323.84" y="431.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.(*arrayContainer).clone (178 samples, 0.03%)</title><rect x="1090.8" y="629" width="0.3" height="15.0" fill="rgb(213,85,9)" rx="2" ry="2" />
<text  x="1093.84" y="639.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.(*state).Write (1,079 samples, 0.16%)</title><rect x="212.6" y="517" width="1.8" height="15.0" fill="rgb(217,95,53)" rx="2" ry="2" />
<text  x="215.57" y="527.5" ></text>
</g>
<g >
<title>runtime.handoff (3,103 samples, 0.45%)</title><rect x="51.4" y="789" width="5.3" height="15.0" fill="rgb(241,175,25)" rx="2" ry="2" />
<text  x="54.40" y="799.5" ></text>
</g>
<g >
<title>tg/eth/downloader.(*queue).Results (110 samples, 0.02%)</title><rect x="1129.7" y="821" width="0.2" height="15.0" fill="rgb(247,16,10)" rx="2" ry="2" />
<text  x="1132.67" y="831.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).StaticCall (181 samples, 0.03%)</title><rect x="482.0" y="389" width="0.3" height="15.0" fill="rgb(231,45,11)" rx="2" ry="2" />
<text  x="484.98" y="399.5" ></text>
</g>
<g >
<title>tg/core/vm.opCall (64 samples, 0.01%)</title><rect x="416.1" y="277" width="0.2" height="15.0" fill="rgb(229,108,35)" rx="2" ry="2" />
<text  x="419.15" y="287.5" ></text>
</g>
<g >
<title>tg/ethdb.(*MutationItem).Less (847 samples, 0.12%)</title><rect x="567.1" y="357" width="1.5" height="15.0" fill="rgb(213,214,40)" rx="2" ry="2" />
<text  x="570.12" y="367.5" ></text>
</g>
<g >
<title>runtime.newobject (478 samples, 0.07%)</title><rect x="995.8" y="581" width="0.8" height="15.0" fill="rgb(227,104,13)" rx="2" ry="2" />
<text  x="998.78" y="591.5" ></text>
</g>
<g >
<title>tg/common/etl.(*Collector).Collect (1,077 samples, 0.16%)</title><rect x="142.8" y="709" width="1.8" height="15.0" fill="rgb(207,4,38)" rx="2" ry="2" />
<text  x="145.78" y="719.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find.func1 (618 samples, 0.09%)</title><rect x="436.1" y="309" width="1.0" height="15.0" fill="rgb(239,183,4)" rx="2" ry="2" />
<text  x="439.06" y="319.5" ></text>
</g>
<g >
<title>tg/ethdb.(*lmdbTx).GetOne (148 samples, 0.02%)</title><rect x="834.7" y="517" width="0.3" height="15.0" fill="rgb(234,157,8)" rx="2" ry="2" />
<text  x="837.74" y="527.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).DelegateCall (166 samples, 0.02%)</title><rect x="384.9" y="325" width="0.3" height="15.0" fill="rgb(247,75,34)" rx="2" ry="2" />
<text  x="387.90" y="335.5" ></text>
</g>
<g >
<title>tg/common.NewHasher (485 samples, 0.07%)</title><rect x="1010.6" y="565" width="0.9" height="15.0" fill="rgb(218,128,48)" rx="2" ry="2" />
<text  x="1013.65" y="575.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (89 samples, 0.01%)</title><rect x="895.4" y="469" width="0.1" height="15.0" fill="rgb(237,42,31)" rx="2" ry="2" />
<text  x="898.36" y="479.5" ></text>
</g>
<g >
<title>runtime.mallocgc (121 samples, 0.02%)</title><rect x="985.0" y="533" width="0.2" height="15.0" fill="rgb(250,67,46)" rx="2" ry="2" />
<text  x="988.04" y="543.5" ></text>
</g>
<g >
<title>container/heap.Push (188 samples, 0.03%)</title><rect x="1088.2" y="677" width="0.3" height="15.0" fill="rgb(227,146,26)" rx="2" ry="2" />
<text  x="1091.17" y="687.5" ></text>
</g>
<g >
<title>tg/rlp.makeEncoderWriter.func2 (1,618 samples, 0.23%)</title><rect x="764.1" y="453" width="2.7" height="15.0" fill="rgb(251,41,52)" rx="2" ry="2" />
<text  x="767.05" y="463.5" ></text>
</g>
<g >
<title>runtime.makeBucketArray (102 samples, 0.01%)</title><rect x="330.3" y="533" width="0.2" height="15.0" fill="rgb(244,43,5)" rx="2" ry="2" />
<text  x="333.32" y="543.5" ></text>
</g>
<g >
<title>tg/core/vm.gasCall (686 samples, 0.10%)</title><rect x="320.5" y="597" width="1.2" height="15.0" fill="rgb(217,192,30)" rx="2" ry="2" />
<text  x="323.51" y="607.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (620 samples, 0.09%)</title><rect x="1100.4" y="405" width="1.0" height="15.0" fill="rgb(236,58,5)" rx="2" ry="2" />
<text  x="1103.37" y="415.5" ></text>
</g>
<g >
<title>sort.swapRange (129 samples, 0.02%)</title><rect x="188.3" y="261" width="0.3" height="15.0" fill="rgb(212,134,16)" rx="2" ry="2" />
<text  x="191.34" y="271.5" ></text>
</g>
<g >
<title>bytes.Compare (117 samples, 0.02%)</title><rect x="990.3" y="357" width="0.2" height="15.0" fill="rgb(226,121,14)" rx="2" ry="2" />
<text  x="993.30" y="367.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (64 samples, 0.01%)</title><rect x="1180.2" y="725" width="0.1" height="15.0" fill="rgb(218,70,26)" rx="2" ry="2" />
<text  x="1183.23" y="735.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).setStateObject (61 samples, 0.01%)</title><rect x="270.7" y="613" width="0.1" height="15.0" fill="rgb(243,24,51)" rx="2" ry="2" />
<text  x="273.71" y="623.5" ></text>
</g>
<g >
<title>runtime.exitsyscallfast (59 samples, 0.01%)</title><rect x="733.8" y="517" width="0.1" height="15.0" fill="rgb(223,222,35)" rx="2" ry="2" />
<text  x="736.83" y="527.5" ></text>
</g>
<g >
<title>tg/core/vm.run (506 samples, 0.07%)</title><rect x="386.7" y="373" width="0.9" height="15.0" fill="rgb(246,175,11)" rx="2" ry="2" />
<text  x="389.73" y="383.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).Get (141 samples, 0.02%)</title><rect x="460.9" y="469" width="0.3" height="15.0" fill="rgb(241,175,39)" rx="2" ry="2" />
<text  x="463.93" y="479.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (68 samples, 0.01%)</title><rect x="463.2" y="341" width="0.1" height="15.0" fill="rgb(219,142,26)" rx="2" ry="2" />
<text  x="466.21" y="351.5" ></text>
</g>
<g >
<title>sort.Search (94 samples, 0.01%)</title><rect x="323.6" y="421" width="0.2" height="15.0" fill="rgb(205,136,14)" rx="2" ry="2" />
<text  x="326.60" y="431.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (66 samples, 0.01%)</title><rect x="362.6" y="421" width="0.2" height="15.0" fill="rgb(213,99,45)" rx="2" ry="2" />
<text  x="365.65" y="431.5" ></text>
</g>
<g >
<title>bytes.Compare (1,623 samples, 0.23%)</title><rect x="677.6" y="501" width="2.8" height="15.0" fill="rgb(210,225,6)" rx="2" ry="2" />
<text  x="680.61" y="511.5" ></text>
</g>
<g >
<title>runtime.mallocgc (88 samples, 0.01%)</title><rect x="318.4" y="565" width="0.1" height="15.0" fill="rgb(244,150,3)" rx="2" ry="2" />
<text  x="321.39" y="575.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).getStateObject (114 samples, 0.02%)</title><rect x="594.5" y="549" width="0.2" height="15.0" fill="rgb(231,18,2)" rx="2" ry="2" />
<text  x="597.50" y="559.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (199 samples, 0.03%)</title><rect x="238.3" y="565" width="0.3" height="15.0" fill="rgb(233,227,25)" rx="2" ry="2" />
<text  x="241.30" y="575.5" ></text>
</g>
<g >
<title>runtime.cgocall (6,018 samples, 0.87%)</title><rect x="583.0" y="405" width="10.2" height="15.0" fill="rgb(239,197,53)" rx="2" ry="2" />
<text  x="586.02" y="415.5" ></text>
</g>
<g >
<title>container/heap.up (162 samples, 0.02%)</title><rect x="816.1" y="629" width="0.2" height="15.0" fill="rgb(218,149,8)" rx="2" ry="2" />
<text  x="819.06" y="639.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find (69 samples, 0.01%)</title><rect x="527.7" y="453" width="0.1" height="15.0" fill="rgb(248,3,51)" rx="2" ry="2" />
<text  x="530.65" y="463.5" ></text>
</g>
<g >
<title>tg/common/etl.(*Heap).Pop (94 samples, 0.01%)</title><rect x="815.9" y="629" width="0.1" height="15.0" fill="rgb(239,105,41)" rx="2" ry="2" />
<text  x="818.86" y="639.5" ></text>
</g>
<g >
<title>tg/rlp.cachedTypeInfo (154 samples, 0.02%)</title><rect x="202.7" y="389" width="0.3" height="15.0" fill="rgb(235,105,21)" rx="2" ry="2" />
<text  x="205.70" y="399.5" ></text>
</g>
<g >
<title>sort.Search (565 samples, 0.08%)</title><rect x="523.4" y="421" width="1.0" height="15.0" fill="rgb(217,221,53)" rx="2" ry="2" />
<text  x="526.42" y="431.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*Decoder).decodeValue (2,458 samples, 0.35%)</title><rect x="161.8" y="645" width="4.2" height="15.0" fill="rgb(233,59,46)" rx="2" ry="2" />
<text  x="164.82" y="655.5" ></text>
</g>
<g >
<title>tg/turbo/trie.(*HashBuilder).branchHash (424 samples, 0.06%)</title><rect x="1113.4" y="677" width="0.7" height="15.0" fill="rgb(224,207,38)" rx="2" ry="2" />
<text  x="1116.40" y="687.5" ></text>
</g>
<g >
<title>runtime.makeslice (67 samples, 0.01%)</title><rect x="1180.2" y="805" width="0.1" height="15.0" fill="rgb(208,157,30)" rx="2" ry="2" />
<text  x="1183.23" y="815.5" ></text>
</g>
<g >
<title>tg/ethdb.(*MutationItem).Less (84 samples, 0.01%)</title><rect x="401.8" y="229" width="0.2" height="15.0" fill="rgb(229,228,25)" rx="2" ry="2" />
<text  x="404.83" y="239.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (82 samples, 0.01%)</title><rect x="876.1" y="469" width="0.1" height="15.0" fill="rgb(242,171,32)" rx="2" ry="2" />
<text  x="879.09" y="479.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).getVal2.func1 (467 samples, 0.07%)</title><rect x="511.5" y="373" width="0.8" height="15.0" fill="rgb(212,43,6)" rx="2" ry="2" />
<text  x="514.50" y="383.5" ></text>
</g>
<g >
<title>tg/crypto/bn256/cloudflare.mulLine (200 samples, 0.03%)</title><rect x="503.3" y="293" width="0.4" height="15.0" fill="rgb(251,182,33)" rx="2" ry="2" />
<text  x="506.33" y="303.5" ></text>
</g>
<g >
<title>tg/eth/stagedsync.spawnBodyDownloadStage (98 samples, 0.01%)</title><rect x="232.3" y="741" width="0.2" height="15.0" fill="rgb(223,198,39)" rx="2" ry="2" />
<text  x="235.32" y="751.5" ></text>
</g>
<g >
<title>tg/common/bitutil.fastXORBytes (127 samples, 0.02%)</title><rect x="127.3" y="805" width="0.2" height="15.0" fill="rgb(205,196,33)" rx="2" ry="2" />
<text  x="130.32" y="815.5" ></text>
</g>
<g >
<title>tg/ethdb.(*mutation).Get (258 samples, 0.04%)</title><rect x="500.5" y="405" width="0.4" height="15.0" fill="rgb(244,173,26)" rx="2" ry="2" />
<text  x="503.46" y="415.5" ></text>
</g>
<g >
<title>tg/ethdb.(*TxDb).Put (1,954 samples, 0.28%)</title><rect x="819.2" y="613" width="3.3" height="15.0" fill="rgb(228,41,54)" rx="2" ry="2" />
<text  x="822.23" y="623.5" ></text>
</g>
<g >
<title>bufio.(*Reader).Read (417 samples, 0.06%)</title><rect x="970.4" y="453" width="0.7" height="15.0" fill="rgb(248,127,54)" rx="2" ry="2" />
<text  x="973.39" y="463.5" ></text>
</g>
<g >
<title>tg/consensus/ethash.(*Ethash).verifySeal (3,084 samples, 0.44%)</title><rect x="129.2" y="821" width="5.2" height="15.0" fill="rgb(219,161,37)" rx="2" ry="2" />
<text  x="132.17" y="831.5" ></text>
</g>
<g >
<title>github.com/golang/snappy.Decode (277 samples, 0.04%)</title><rect x="1176.1" y="821" width="0.4" height="15.0" fill="rgb(240,23,52)" rx="2" ry="2" />
<text  x="1179.07" y="831.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).close (659 samples, 0.09%)</title><rect x="928.4" y="469" width="1.1" height="15.0" fill="rgb(218,125,21)" rx="2" ry="2" />
<text  x="931.42" y="479.5" ></text>
</g>
<g >
<title>tg/ethdb.(*mutation).Delete (206 samples, 0.03%)</title><rect x="665.3" y="645" width="0.4" height="15.0" fill="rgb(212,114,0)" rx="2" ry="2" />
<text  x="668.32" y="655.5" ></text>
</g>
<g >
<title>bufio.(*Reader).ReadByte (79 samples, 0.01%)</title><rect x="969.4" y="437" width="0.2" height="15.0" fill="rgb(214,96,29)" rx="2" ry="2" />
<text  x="972.43" y="447.5" ></text>
</g>
<g >
<title>sort.quickSort (1,497 samples, 0.22%)</title><rect x="1026.4" y="597" width="2.5" height="15.0" fill="rgb(217,40,51)" rx="2" ry="2" />
<text  x="1029.39" y="607.5" ></text>
</g>
<g >
<title>tg/common/etl.writeToDisk (1,730 samples, 0.25%)</title><rect x="193.7" y="549" width="3.0" height="15.0" fill="rgb(223,94,42)" rx="2" ry="2" />
<text  x="196.73" y="559.5" ></text>
</g>
<g >
<title>runtime.mapassign (336 samples, 0.05%)</title><rect x="597.1" y="549" width="0.6" height="15.0" fill="rgb(217,183,21)" rx="2" ry="2" />
<text  x="600.12" y="559.5" ></text>
</g>
<g >
<title>tg/ethdb.(*ObjectDatabase).Walk.func1 (87 samples, 0.01%)</title><rect x="232.3" y="677" width="0.2" height="15.0" fill="rgb(228,33,39)" rx="2" ry="2" />
<text  x="235.34" y="687.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (80 samples, 0.01%)</title><rect x="631.7" y="581" width="0.1" height="15.0" fill="rgb(215,7,1)" rx="2" ry="2" />
<text  x="634.68" y="591.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (128 samples, 0.02%)</title><rect x="967.1" y="565" width="0.2" height="15.0" fill="rgb(216,115,49)" rx="2" ry="2" />
<text  x="970.13" y="575.5" ></text>
</g>
<g >
<title>tg/eth.(*ProtocolManager).runPeer (3,924 samples, 0.56%)</title><rect x="1180.5" y="837" width="6.6" height="15.0" fill="rgb(222,153,14)" rx="2" ry="2" />
<text  x="1183.46" y="847.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).StaticCall (189 samples, 0.03%)</title><rect x="609.1" y="389" width="0.4" height="15.0" fill="rgb(215,128,26)" rx="2" ry="2" />
<text  x="612.14" y="399.5" ></text>
</g>
<g >
<title>tg/core/vm.RunPrecompiledContract (5,064 samples, 0.73%)</title><rect x="342.2" y="565" width="8.6" height="15.0" fill="rgb(206,55,25)" rx="2" ry="2" />
<text  x="345.22" y="575.5" ></text>
</g>
<g >
<title>runtime.getitab (70 samples, 0.01%)</title><rect x="741.0" y="645" width="0.2" height="15.0" fill="rgb(230,190,22)" rx="2" ry="2" />
<text  x="744.04" y="655.5" ></text>
</g>
<g >
<title>runtime.exitsyscall (67 samples, 0.01%)</title><rect x="205.4" y="389" width="0.1" height="15.0" fill="rgb(214,220,2)" rx="2" ry="2" />
<text  x="208.37" y="399.5" ></text>
</g>
<g >
<title>tg/common/etl.loadFilesIntoBucket.func1 (2,215 samples, 0.32%)</title><rect x="1103.1" y="597" width="3.7" height="15.0" fill="rgb(224,61,21)" rx="2" ry="2" />
<text  x="1106.07" y="607.5" ></text>
</g>
<g >
<title>tg/core/state.(*PlainStateReader).ReadAccountStorage (67 samples, 0.01%)</title><rect x="414.0" y="277" width="0.1" height="15.0" fill="rgb(228,150,14)" rx="2" ry="2" />
<text  x="416.97" y="287.5" ></text>
</g>
<g >
<title>tg/core/vm.(*Contract).isCode (1,612 samples, 0.23%)</title><rect x="531.6" y="565" width="2.8" height="15.0" fill="rgb(250,26,33)" rx="2" ry="2" />
<text  x="534.63" y="575.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (79 samples, 0.01%)</title><rect x="631.7" y="565" width="0.1" height="15.0" fill="rgb(234,37,39)" rx="2" ry="2" />
<text  x="634.69" y="575.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb._Cfunc_lmdbgo_mdb_cursor_get2 (744 samples, 0.11%)</title><rect x="798.2" y="501" width="1.3" height="15.0" fill="rgb(227,95,21)" rx="2" ry="2" />
<text  x="801.25" y="511.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb._Cfunc_lmdbgo_mdb_cursor_put2 (275 samples, 0.04%)</title><rect x="1127.8" y="629" width="0.4" height="15.0" fill="rgb(205,205,2)" rx="2" ry="2" />
<text  x="1130.77" y="639.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.(*state).Write (108 samples, 0.02%)</title><rect x="760.4" y="645" width="0.2" height="15.0" fill="rgb(247,34,50)" rx="2" ry="2" />
<text  x="763.43" y="655.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVMInterpreter).Run (464 samples, 0.07%)</title><rect x="487.3" y="357" width="0.8" height="15.0" fill="rgb(222,206,9)" rx="2" ry="2" />
<text  x="490.33" y="367.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).Call (154 samples, 0.02%)</title><rect x="448.5" y="453" width="0.3" height="15.0" fill="rgb(244,138,48)" rx="2" ry="2" />
<text  x="451.49" y="463.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).insert (161 samples, 0.02%)</title><rect x="665.3" y="565" width="0.3" height="15.0" fill="rgb(227,35,19)" rx="2" ry="2" />
<text  x="668.33" y="575.5" ></text>
</g>
<g >
<title>container/heap.up (105 samples, 0.02%)</title><rect x="168.2" y="645" width="0.2" height="15.0" fill="rgb(248,62,21)" rx="2" ry="2" />
<text  x="171.24" y="655.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb._Cfunc_lmdbgo_mdb_cursor_get2 (442 samples, 0.06%)</title><rect x="511.5" y="357" width="0.8" height="15.0" fill="rgb(254,161,43)" rx="2" ry="2" />
<text  x="514.51" y="367.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (68 samples, 0.01%)</title><rect x="260.0" y="485" width="0.1" height="15.0" fill="rgb(207,220,44)" rx="2" ry="2" />
<text  x="263.03" y="495.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (75 samples, 0.01%)</title><rect x="1012.5" y="485" width="0.1" height="15.0" fill="rgb(254,119,35)" rx="2" ry="2" />
<text  x="1015.46" y="495.5" ></text>
</g>
<g >
<title>runtime.convTslice (158 samples, 0.02%)</title><rect x="875.7" y="517" width="0.3" height="15.0" fill="rgb(251,19,44)" rx="2" ry="2" />
<text  x="878.73" y="527.5" ></text>
</g>
<g >
<title>sort.symMerge (706 samples, 0.10%)</title><rect x="142.9" y="613" width="1.2" height="15.0" fill="rgb(252,193,38)" rx="2" ry="2" />
<text  x="145.95" y="623.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find.func1 (74 samples, 0.01%)</title><rect x="460.7" y="389" width="0.1" height="15.0" fill="rgb(252,27,10)" rx="2" ry="2" />
<text  x="463.72" y="399.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.(*Bitmap).GetSizeInBytes (969 samples, 0.14%)</title><rect x="1083.0" y="597" width="1.7" height="15.0" fill="rgb(206,206,8)" rx="2" ry="2" />
<text  x="1086.01" y="607.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.(*state).padAndPermute (247 samples, 0.04%)</title><rect x="418.2" y="437" width="0.4" height="15.0" fill="rgb(207,208,27)" rx="2" ry="2" />
<text  x="421.22" y="447.5" ></text>
</g>
<g >
<title>tg/crypto/secp256k1.RecoverPubkeyWithContext (79 samples, 0.01%)</title><rect x="450.6" y="389" width="0.1" height="15.0" fill="rgb(228,29,24)" rx="2" ry="2" />
<text  x="453.56" y="399.5" ></text>
</g>
<g >
<title>runtime.futex (171 samples, 0.02%)</title><rect x="123.1" y="741" width="0.3" height="15.0" fill="rgb(214,203,6)" rx="2" ry="2" />
<text  x="126.13" y="751.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).GetOrNewStateObject (68 samples, 0.01%)</title><rect x="598.1" y="549" width="0.1" height="15.0" fill="rgb(252,183,45)" rx="2" ry="2" />
<text  x="601.06" y="559.5" ></text>
</g>
<g >
<title>runtime.notesleep (139 samples, 0.02%)</title><rect x="122.3" y="789" width="0.2" height="15.0" fill="rgb(234,117,50)" rx="2" ry="2" />
<text  x="125.29" y="799.5" ></text>
</g>
<g >
<title>runtime.makemap_small (139 samples, 0.02%)</title><rect x="737.0" y="677" width="0.3" height="15.0" fill="rgb(211,69,51)" rx="2" ry="2" />
<text  x="740.04" y="687.5" ></text>
</g>
<g >
<title>sort.swapRange (160 samples, 0.02%)</title><rect x="988.3" y="421" width="0.3" height="15.0" fill="rgb(230,107,27)" rx="2" ry="2" />
<text  x="991.35" y="431.5" ></text>
</g>
<g >
<title>runtime.hashGrow (105 samples, 0.02%)</title><rect x="330.3" y="549" width="0.2" height="15.0" fill="rgb(218,161,22)" rx="2" ry="2" />
<text  x="333.32" y="559.5" ></text>
</g>
<g >
<title>tg/core/state.(*stateObject).GetState (275 samples, 0.04%)</title><rect x="395.1" y="373" width="0.5" height="15.0" fill="rgb(241,50,4)" rx="2" ry="2" />
<text  x="398.13" y="383.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.(*runContainer16).toEfficientContainer (65 samples, 0.01%)</title><rect x="1095.5" y="581" width="0.1" height="15.0" fill="rgb(233,14,19)" rx="2" ry="2" />
<text  x="1098.54" y="591.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).DelegateCall (65 samples, 0.01%)</title><rect x="384.3" y="261" width="0.1" height="15.0" fill="rgb(250,16,50)" rx="2" ry="2" />
<text  x="387.25" y="271.5" ></text>
</g>
<g >
<title>tg/rlp.Encode (1,267 samples, 0.18%)</title><rect x="764.6" y="421" width="2.2" height="15.0" fill="rgb(254,99,13)" rx="2" ry="2" />
<text  x="767.65" y="431.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Txn).commit.func1 (490 samples, 0.07%)</title><rect x="1128.8" y="741" width="0.9" height="15.0" fill="rgb(223,90,7)" rx="2" ry="2" />
<text  x="1131.83" y="751.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*encWr).end (101 samples, 0.01%)</title><rect x="195.8" y="517" width="0.1" height="15.0" fill="rgb(227,121,1)" rx="2" ry="2" />
<text  x="198.76" y="527.5" ></text>
</g>
<g >
<title>tg/common.CopyBytes (130 samples, 0.02%)</title><rect x="823.5" y="565" width="0.3" height="15.0" fill="rgb(212,119,6)" rx="2" ry="2" />
<text  x="826.54" y="575.5" ></text>
</g>
<g >
<title>cmpbody (89 samples, 0.01%)</title><rect x="993.2" y="213" width="0.1" height="15.0" fill="rgb(229,49,3)" rx="2" ry="2" />
<text  x="996.16" y="223.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).Put (82 samples, 0.01%)</title><rect x="814.6" y="565" width="0.1" height="15.0" fill="rgb(246,211,26)" rx="2" ry="2" />
<text  x="817.56" y="575.5" ></text>
</g>
<g >
<title>runtime.mallocgc (174 samples, 0.03%)</title><rect x="876.0" y="501" width="0.3" height="15.0" fill="rgb(233,2,53)" rx="2" ry="2" />
<text  x="879.02" y="511.5" ></text>
</g>
<g >
<title>reflect.Value.Slice (78 samples, 0.01%)</title><rect x="232.0" y="645" width="0.1" height="15.0" fill="rgb(211,161,35)" rx="2" ry="2" />
<text  x="234.95" y="655.5" ></text>
</g>
<g >
<title>tg/ethdb.(*mutation).Get (474 samples, 0.07%)</title><rect x="418.9" y="389" width="0.8" height="15.0" fill="rgb(251,218,9)" rx="2" ry="2" />
<text  x="421.86" y="399.5" ></text>
</g>
<g >
<title>cmpbody (59 samples, 0.01%)</title><rect x="607.1" y="293" width="0.1" height="15.0" fill="rgb(224,66,48)" rx="2" ry="2" />
<text  x="610.13" y="303.5" ></text>
</g>
<g >
<title>tg/core/vm.run (577 samples, 0.08%)</title><rect x="383.3" y="245" width="0.9" height="15.0" fill="rgb(221,157,0)" rx="2" ry="2" />
<text  x="386.26" y="255.5" ></text>
</g>
<g >
<title>tg/core/state.(*stateObject).GetCommittedState (210 samples, 0.03%)</title><rect x="486.9" y="357" width="0.4" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="489.92" y="367.5" ></text>
</g>
<g >
<title>runtime.unlockWithRank (109 samples, 0.02%)</title><rect x="1011.3" y="533" width="0.2" height="15.0" fill="rgb(210,195,24)" rx="2" ry="2" />
<text  x="1014.28" y="543.5" ></text>
</g>
<g >
<title>tg/core/state.(*stateObject).AddBalance (61 samples, 0.01%)</title><rect x="339.5" y="533" width="0.1" height="15.0" fill="rgb(242,32,17)" rx="2" ry="2" />
<text  x="342.45" y="543.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).Put.func1 (1,015 samples, 0.15%)</title><rect x="820.6" y="549" width="1.7" height="15.0" fill="rgb(245,4,43)" rx="2" ry="2" />
<text  x="823.55" y="559.5" ></text>
</g>
<g >
<title>tg/ethdb.(*TxDb).AppendDup (2,355 samples, 0.34%)</title><rect x="723.6" y="629" width="4.0" height="15.0" fill="rgb(222,149,38)" rx="2" ry="2" />
<text  x="726.56" y="639.5" ></text>
</g>
<g >
<title>runtime.mallocgc (89 samples, 0.01%)</title><rect x="1121.7" y="693" width="0.2" height="15.0" fill="rgb(229,70,8)" rx="2" ry="2" />
<text  x="1124.74" y="703.5" ></text>
</g>
<g >
<title>runtime.mapaccess1 (83 samples, 0.01%)</title><rect x="241.6" y="581" width="0.2" height="15.0" fill="rgb(252,220,27)" rx="2" ry="2" />
<text  x="244.63" y="591.5" ></text>
</g>
<g >
<title>tg/crypto/bn256/cloudflare.(*twistPoint).Mul (353 samples, 0.05%)</title><rect x="501.9" y="277" width="0.6" height="15.0" fill="rgb(208,166,45)" rx="2" ry="2" />
<text  x="504.94" y="287.5" ></text>
</g>
<g >
<title>tg/core/vm.(*Memory).Set32 (1,256 samples, 0.18%)</title><rect x="426.0" y="517" width="2.1" height="15.0" fill="rgb(225,223,0)" rx="2" ry="2" />
<text  x="428.99" y="527.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).DelegateCall (470 samples, 0.07%)</title><rect x="480.0" y="389" width="0.8" height="15.0" fill="rgb(210,194,43)" rx="2" ry="2" />
<text  x="483.05" y="399.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVMInterpreter).Run (1,016 samples, 0.15%)</title><rect x="496.5" y="421" width="1.7" height="15.0" fill="rgb(232,85,2)" rx="2" ry="2" />
<text  x="499.49" y="431.5" ></text>
</g>
<g >
<title>tg/core/types.codecSelfer2.encLogs (724 samples, 0.10%)</title><rect x="783.4" y="581" width="1.2" height="15.0" fill="rgb(254,140,31)" rx="2" ry="2" />
<text  x="786.37" y="591.5" ></text>
</g>
<g >
<title>sync.(*Once).doSlow (1,082 samples, 0.16%)</title><rect x="127.3" y="853" width="1.9" height="15.0" fill="rgb(241,87,46)" rx="2" ry="2" />
<text  x="130.32" y="863.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).DelegateCall (326 samples, 0.05%)</title><rect x="485.8" y="389" width="0.6" height="15.0" fill="rgb(231,216,28)" rx="2" ry="2" />
<text  x="488.83" y="399.5" ></text>
</g>
<g >
<title>sort.Search (384 samples, 0.06%)</title><rect x="524.4" y="437" width="0.7" height="15.0" fill="rgb(218,178,21)" rx="2" ry="2" />
<text  x="527.41" y="447.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (102 samples, 0.01%)</title><rect x="495.0" y="405" width="0.1" height="15.0" fill="rgb(247,78,35)" rx="2" ry="2" />
<text  x="497.97" y="415.5" ></text>
</g>
<g >
<title>tg/rlp.writeUint256NoPtr (550 samples, 0.08%)</title><rect x="1124.6" y="597" width="0.9" height="15.0" fill="rgb(241,185,45)" rx="2" ry="2" />
<text  x="1127.58" y="607.5" ></text>
</g>
<g >
<title>tg/core/rawdb.ReadHeader (850 samples, 0.12%)</title><rect x="230.9" y="725" width="1.4" height="15.0" fill="rgb(208,32,27)" rx="2" ry="2" />
<text  x="233.88" y="735.5" ></text>
</g>
<g >
<title>runtime.newobject (527 samples, 0.08%)</title><rect x="657.9" y="661" width="0.9" height="15.0" fill="rgb(245,159,11)" rx="2" ry="2" />
<text  x="660.90" y="671.5" ></text>
</g>
<g >
<title>tg/core/vm.opCall (224 samples, 0.03%)</title><rect x="414.3" y="341" width="0.4" height="15.0" fill="rgb(241,89,46)" rx="2" ry="2" />
<text  x="417.35" y="351.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).getStateObject (420 samples, 0.06%)</title><rect x="452.3" y="485" width="0.7" height="15.0" fill="rgb(244,142,42)" rx="2" ry="2" />
<text  x="455.29" y="495.5" ></text>
</g>
<g >
<title>tg/crypto.Keccak256Hash (86 samples, 0.01%)</title><rect x="462.1" y="533" width="0.2" height="15.0" fill="rgb(230,131,16)" rx="2" ry="2" />
<text  x="465.11" y="543.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Txn).commit.func1 (330 samples, 0.05%)</title><rect x="1188.2" y="773" width="0.5" height="15.0" fill="rgb(218,147,42)" rx="2" ry="2" />
<text  x="1191.19" y="783.5" ></text>
</g>
<g >
<title>runtime.memhash_varlen (252 samples, 0.04%)</title><rect x="631.9" y="645" width="0.4" height="15.0" fill="rgb(233,212,6)" rx="2" ry="2" />
<text  x="634.89" y="655.5" ></text>
</g>
<g >
<title>bytes.Compare (130 samples, 0.02%)</title><rect x="1072.3" y="405" width="0.3" height="15.0" fill="rgb(213,186,36)" rx="2" ry="2" />
<text  x="1075.33" y="415.5" ></text>
</g>
<g >
<title>runtime.startm (131 samples, 0.02%)</title><rect x="124.7" y="821" width="0.2" height="15.0" fill="rgb(216,6,24)" rx="2" ry="2" />
<text  x="127.72" y="831.5" ></text>
</g>
<g >
<title>runtime.cgoIsGoPointer (59 samples, 0.01%)</title><rect x="932.2" y="421" width="0.1" height="15.0" fill="rgb(238,112,52)" rx="2" ry="2" />
<text  x="935.18" y="431.5" ></text>
</g>
<g >
<title>tg/common/etl.(*sortableBuffer).Put (384 samples, 0.06%)</title><rect x="176.9" y="565" width="0.7" height="15.0" fill="rgb(240,13,42)" rx="2" ry="2" />
<text  x="179.91" y="575.5" ></text>
</g>
<g >
<title>tg/core/state.(*stateObject).GetState (1,581 samples, 0.23%)</title><rect x="509.6" y="501" width="2.7" height="15.0" fill="rgb(244,208,19)" rx="2" ry="2" />
<text  x="512.64" y="511.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).getVal2 (83 samples, 0.01%)</title><rect x="386.0" y="197" width="0.1" height="15.0" fill="rgb(225,30,49)" rx="2" ry="2" />
<text  x="388.97" y="207.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).Put (2,269 samples, 0.33%)</title><rect x="799.7" y="549" width="3.8" height="15.0" fill="rgb(220,209,8)" rx="2" ry="2" />
<text  x="802.65" y="559.5" ></text>
</g>
<g >
<title>runtime.evacuated (89 samples, 0.01%)</title><rect x="978.8" y="565" width="0.2" height="15.0" fill="rgb(205,124,26)" rx="2" ry="2" />
<text  x="981.82" y="575.5" ></text>
</g>
<g >
<title>tg/crypto/bn256/cloudflare.(*gfP6).Mul (67 samples, 0.01%)</title><rect x="502.6" y="261" width="0.1" height="15.0" fill="rgb(215,216,51)" rx="2" ry="2" />
<text  x="505.55" y="271.5" ></text>
</g>
<g >
<title>tg/core/vm.(*ecrecover).Run (173 samples, 0.02%)</title><rect x="492.9" y="421" width="0.3" height="15.0" fill="rgb(237,209,17)" rx="2" ry="2" />
<text  x="495.89" y="431.5" ></text>
</g>
<g >
<title>tg/rlp.makeEncoderWriter.func2 (1,785 samples, 0.26%)</title><rect x="225.0" y="549" width="3.0" height="15.0" fill="rgb(209,125,45)" rx="2" ry="2" />
<text  x="228.01" y="559.5" ></text>
</g>
<g >
<title>bytes.Compare (1,136 samples, 0.16%)</title><rect x="250.0" y="437" width="1.9" height="15.0" fill="rgb(210,14,13)" rx="2" ry="2" />
<text  x="252.97" y="447.5" ></text>
</g>
<g >
<title>tg/core/vm.opStaticCall (87 samples, 0.01%)</title><rect x="486.2" y="341" width="0.2" height="15.0" fill="rgb(206,191,15)" rx="2" ry="2" />
<text  x="489.23" y="351.5" ></text>
</g>
<g >
<title>tg/ethdb.(*lmdbTx).GetOne (4,301 samples, 0.62%)</title><rect x="927.8" y="517" width="7.3" height="15.0" fill="rgb(216,29,0)" rx="2" ry="2" />
<text  x="930.83" y="527.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (180 samples, 0.03%)</title><rect x="523.1" y="437" width="0.3" height="15.0" fill="rgb(215,217,11)" rx="2" ry="2" />
<text  x="526.10" y="447.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (160 samples, 0.02%)</title><rect x="965.3" y="549" width="0.3" height="15.0" fill="rgb(229,45,11)" rx="2" ry="2" />
<text  x="968.32" y="559.5" ></text>
</g>
<g >
<title>tg/rlp.(*Stream).readKind (111 samples, 0.02%)</title><rect x="790.7" y="453" width="0.2" height="15.0" fill="rgb(208,18,27)" rx="2" ry="2" />
<text  x="793.68" y="463.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.(*state).permute (201 samples, 0.03%)</title><rect x="1030.2" y="565" width="0.3" height="15.0" fill="rgb(244,215,53)" rx="2" ry="2" />
<text  x="1033.17" y="575.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find.func1 (111 samples, 0.02%)</title><rect x="419.0" y="261" width="0.2" height="15.0" fill="rgb(216,53,43)" rx="2" ry="2" />
<text  x="422.02" y="271.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find.func1 (76 samples, 0.01%)</title><rect x="464.6" y="389" width="0.1" height="15.0" fill="rgb(245,202,11)" rx="2" ry="2" />
<text  x="467.56" y="399.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).Call (714 samples, 0.10%)</title><rect x="393.5" y="389" width="1.2" height="15.0" fill="rgb(233,229,20)" rx="2" ry="2" />
<text  x="396.47" y="399.5" ></text>
</g>
<g >
<title>tg/rlp.Encode (1,994 samples, 0.29%)</title><rect x="1122.5" y="661" width="3.4" height="15.0" fill="rgb(231,210,40)" rx="2" ry="2" />
<text  x="1125.51" y="671.5" ></text>
</g>
<g >
<title>runtime.mallocgc (197 samples, 0.03%)</title><rect x="218.1" y="357" width="0.3" height="15.0" fill="rgb(227,148,5)" rx="2" ry="2" />
<text  x="221.05" y="367.5" ></text>
</g>
<g >
<title>tg/turbo/trie.(*HashBuilder).leafHash (5,108 samples, 0.74%)</title><rect x="770.0" y="629" width="8.6" height="15.0" fill="rgb(208,83,22)" rx="2" ry="2" />
<text  x="772.95" y="639.5" ></text>
</g>
<g >
<title>bytes.Compare (102 samples, 0.01%)</title><rect x="867.5" y="309" width="0.2" height="15.0" fill="rgb(205,211,19)" rx="2" ry="2" />
<text  x="870.50" y="319.5" ></text>
</g>
<g >
<title>tg/core/vm.run (187 samples, 0.03%)</title><rect x="406.2" y="373" width="0.3" height="15.0" fill="rgb(213,184,29)" rx="2" ry="2" />
<text  x="409.21" y="383.5" ></text>
</g>
<g >
<title>runtime.casgstatus (103 samples, 0.01%)</title><rect x="955.6" y="485" width="0.1" height="15.0" fill="rgb(219,67,15)" rx="2" ry="2" />
<text  x="958.57" y="495.5" ></text>
</g>
<g >
<title>tg/rlp.cachedTypeInfo (131 samples, 0.02%)</title><rect x="766.6" y="389" width="0.2" height="15.0" fill="rgb(252,79,50)" rx="2" ry="2" />
<text  x="769.58" y="399.5" ></text>
</g>
<g >
<title>tg/eth/stagedsync.DefaultStages.func12.1 (28,406 samples, 4.09%)</title><rect x="166.6" y="757" width="48.2" height="15.0" fill="rgb(208,149,49)" rx="2" ry="2" />
<text  x="169.55" y="767.5" >tg/e..</text>
</g>
<g >
<title>github.com/google/btree.items.find.func1 (200 samples, 0.03%)</title><rect x="491.4" y="261" width="0.3" height="15.0" fill="rgb(230,127,36)" rx="2" ry="2" />
<text  x="494.39" y="271.5" ></text>
</g>
<g >
<title>runtime.evacuated (108 samples, 0.02%)</title><rect x="853.7" y="533" width="0.2" height="15.0" fill="rgb(226,51,4)" rx="2" ry="2" />
<text  x="856.73" y="543.5" ></text>
</g>
<g >
<title>tg/core/vm.(*Contract).validJumpdest (81 samples, 0.01%)</title><rect x="417.0" y="453" width="0.2" height="15.0" fill="rgb(221,159,51)" rx="2" ry="2" />
<text  x="420.03" y="463.5" ></text>
</g>
<g >
<title>tg/core/vm.opExtCodeSize (71 samples, 0.01%)</title><rect x="604.7" y="533" width="0.1" height="15.0" fill="rgb(236,21,51)" rx="2" ry="2" />
<text  x="607.66" y="543.5" ></text>
</g>
<g >
<title>bytes.Compare (158 samples, 0.02%)</title><rect x="1027.0" y="517" width="0.3" height="15.0" fill="rgb(233,148,31)" rx="2" ry="2" />
<text  x="1030.03" y="527.5" ></text>
</g>
<g >
<title>runtime.newobject (110 samples, 0.02%)</title><rect x="657.2" y="645" width="0.2" height="15.0" fill="rgb(214,86,1)" rx="2" ry="2" />
<text  x="660.22" y="655.5" ></text>
</g>
<g >
<title>runtime.mallocgc (190 samples, 0.03%)</title><rect x="595.6" y="517" width="0.3" height="15.0" fill="rgb(234,190,41)" rx="2" ry="2" />
<text  x="598.62" y="527.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (65 samples, 0.01%)</title><rect x="628.8" y="613" width="0.1" height="15.0" fill="rgb(237,225,20)" rx="2" ry="2" />
<text  x="631.76" y="623.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (93 samples, 0.01%)</title><rect x="658.6" y="629" width="0.1" height="15.0" fill="rgb(242,49,48)" rx="2" ry="2" />
<text  x="661.57" y="639.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (390 samples, 0.06%)</title><rect x="621.5" y="485" width="0.7" height="15.0" fill="rgb(235,77,33)" rx="2" ry="2" />
<text  x="624.55" y="495.5" ></text>
</g>
<g >
<title>runtime.cgocall (1,474 samples, 0.21%)</title><rect x="1022.5" y="549" width="2.5" height="15.0" fill="rgb(214,95,11)" rx="2" ry="2" />
<text  x="1025.51" y="559.5" ></text>
</g>
<g >
<title>runtime.mallocgc (84 samples, 0.01%)</title><rect x="287.2" y="533" width="0.1" height="15.0" fill="rgb(206,34,9)" rx="2" ry="2" />
<text  x="290.16" y="543.5" ></text>
</g>
<g >
<title>sort.rotate (105 samples, 0.02%)</title><rect x="867.7" y="309" width="0.1" height="15.0" fill="rgb(235,169,30)" rx="2" ry="2" />
<text  x="870.67" y="319.5" ></text>
</g>
<g >
<title>tg/common/etl.(*oldestEntrySortableBuffer).Swap (80 samples, 0.01%)</title><rect x="867.7" y="277" width="0.1" height="15.0" fill="rgb(241,37,5)" rx="2" ry="2" />
<text  x="870.71" y="287.5" ></text>
</g>
<g >
<title>reflect.unsafe_New (378 samples, 0.05%)</title><rect x="743.9" y="469" width="0.7" height="15.0" fill="rgb(232,11,54)" rx="2" ry="2" />
<text  x="746.93" y="479.5" ></text>
</g>
<g >
<title>runtime.mallocgc (896 samples, 0.13%)</title><rect x="906.5" y="469" width="1.5" height="15.0" fill="rgb(210,36,28)" rx="2" ry="2" />
<text  x="909.48" y="479.5" ></text>
</g>
<g >
<title>cmpbody (196 samples, 0.03%)</title><rect x="184.9" y="325" width="0.4" height="15.0" fill="rgb(205,121,36)" rx="2" ry="2" />
<text  x="187.93" y="335.5" ></text>
</g>
<g >
<title>runtime.memmove (294 samples, 0.04%)</title><rect x="155.8" y="517" width="0.5" height="15.0" fill="rgb(236,99,19)" rx="2" ry="2" />
<text  x="158.80" y="527.5" ></text>
</g>
<g >
<title>github.com/holiman/uint256.(*Int).SetBytes (70 samples, 0.01%)</title><rect x="434.1" y="469" width="0.1" height="15.0" fill="rgb(242,56,0)" rx="2" ry="2" />
<text  x="437.09" y="479.5" ></text>
</g>
<g >
<title>sort.rotate (360 samples, 0.05%)</title><rect x="179.9" y="453" width="0.6" height="15.0" fill="rgb(240,74,33)" rx="2" ry="2" />
<text  x="182.92" y="463.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (129 samples, 0.02%)</title><rect x="481.5" y="293" width="0.3" height="15.0" fill="rgb(236,98,24)" rx="2" ry="2" />
<text  x="484.54" y="303.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.keccakF1600 (60 samples, 0.01%)</title><rect x="385.6" y="277" width="0.1" height="15.0" fill="rgb(248,149,28)" rx="2" ry="2" />
<text  x="388.57" y="287.5" ></text>
</g>
<g >
<title>tg/eth/downloader.(*Downloader).processBodiesStage (6,180 samples, 0.89%)</title><rect x="1119.4" y="837" width="10.5" height="15.0" fill="rgb(235,133,33)" rx="2" ry="2" />
<text  x="1122.37" y="847.5" ></text>
</g>
<g >
<title>sort.symMerge (2,808 samples, 0.40%)</title><rect x="867.5" y="325" width="4.7" height="15.0" fill="rgb(224,151,0)" rx="2" ry="2" />
<text  x="870.46" y="335.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.copyOutUnaligned (121 samples, 0.02%)</title><rect x="1009.3" y="533" width="0.2" height="15.0" fill="rgb(248,167,6)" rx="2" ry="2" />
<text  x="1012.31" y="543.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (1,655 samples, 0.24%)</title><rect x="522.9" y="501" width="2.8" height="15.0" fill="rgb(209,229,4)" rx="2" ry="2" />
<text  x="525.89" y="511.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).getVal1 (435 samples, 0.06%)</title><rect x="525.8" y="469" width="0.8" height="15.0" fill="rgb(216,25,9)" rx="2" ry="2" />
<text  x="528.84" y="479.5" ></text>
</g>
<g >
<title>reflect.Value.Interface (476 samples, 0.07%)</title><rect x="210.0" y="405" width="0.8" height="15.0" fill="rgb(249,203,19)" rx="2" ry="2" />
<text  x="213.02" y="415.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.(*runContainer16).iandBitmapContainer (117 samples, 0.02%)</title><rect x="1102.1" y="533" width="0.2" height="15.0" fill="rgb(248,176,3)" rx="2" ry="2" />
<text  x="1105.10" y="543.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.(*runContainer16).iandBitmapContainer (310 samples, 0.04%)</title><rect x="156.7" y="549" width="0.5" height="15.0" fill="rgb(232,168,3)" rx="2" ry="2" />
<text  x="159.71" y="559.5" ></text>
</g>
<g >
<title>github.com/holiman/uint256.reciprocal2by1 (99 samples, 0.01%)</title><rect x="520.8" y="549" width="0.2" height="15.0" fill="rgb(216,139,17)" rx="2" ry="2" />
<text  x="523.84" y="559.5" ></text>
</g>
<g >
<title>tg/consensus/ethash.generateCache (950 samples, 0.14%)</title><rect x="127.5" y="821" width="1.7" height="15.0" fill="rgb(249,33,39)" rx="2" ry="2" />
<text  x="130.54" y="831.5" ></text>
</g>
<g >
<title>runtime.makeslice (76 samples, 0.01%)</title><rect x="1048.7" y="597" width="0.1" height="15.0" fill="rgb(205,15,23)" rx="2" ry="2" />
<text  x="1051.67" y="607.5" ></text>
</g>
<g >
<title>tg/ethdb.(*MutationItem).Less (638 samples, 0.09%)</title><rect x="255.5" y="453" width="1.1" height="15.0" fill="rgb(226,0,30)" rx="2" ry="2" />
<text  x="258.48" y="463.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find (405 samples, 0.06%)</title><rect x="524.4" y="453" width="0.7" height="15.0" fill="rgb(221,0,7)" rx="2" ry="2" />
<text  x="527.39" y="463.5" ></text>
</g>
<g >
<title>sort.swapRange (194 samples, 0.03%)</title><rect x="864.8" y="405" width="0.3" height="15.0" fill="rgb(205,97,45)" rx="2" ry="2" />
<text  x="867.80" y="415.5" ></text>
</g>
<g >
<title>sort.Search (4,216 samples, 0.61%)</title><rect x="568.7" y="405" width="7.2" height="15.0" fill="rgb(224,40,45)" rx="2" ry="2" />
<text  x="571.69" y="415.5" ></text>
</g>
<g >
<title>tg/rlp.(*encbuf).encode (2,170 samples, 0.31%)</title><rect x="763.3" y="533" width="3.6" height="15.0" fill="rgb(231,168,47)" rx="2" ry="2" />
<text  x="766.26" y="543.5" ></text>
</g>
<g >
<title>tg/core/vm.opJump (69 samples, 0.01%)</title><rect x="488.7" y="469" width="0.2" height="15.0" fill="rgb(237,133,53)" rx="2" ry="2" />
<text  x="491.75" y="479.5" ></text>
</g>
<g >
<title>sync.(*WaitGroup).Add (59 samples, 0.01%)</title><rect x="899.2" y="517" width="0.1" height="15.0" fill="rgb(220,209,31)" rx="2" ry="2" />
<text  x="902.24" y="527.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring/roaring64.(*Bitmap).AddRange (1,246 samples, 0.18%)</title><rect x="1050.3" y="613" width="2.1" height="15.0" fill="rgb(214,142,48)" rx="2" ry="2" />
<text  x="1053.32" y="623.5" ></text>
</g>
<g >
<title>tg/ethdb.Walk (22,523 samples, 3.24%)</title><rect x="176.5" y="629" width="38.3" height="15.0" fill="rgb(254,173,22)" rx="2" ry="2" />
<text  x="179.54" y="639.5" >tg/..</text>
</g>
<g >
<title>github.com/google/btree.items.find (4,318 samples, 0.62%)</title><rect x="568.6" y="421" width="7.3" height="15.0" fill="rgb(240,74,24)" rx="2" ry="2" />
<text  x="571.57" y="431.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (159 samples, 0.02%)</title><rect x="460.6" y="453" width="0.3" height="15.0" fill="rgb(248,220,32)" rx="2" ry="2" />
<text  x="463.63" y="463.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.(*state).permute (1,007 samples, 0.14%)</title><rect x="206.8" y="517" width="1.8" height="15.0" fill="rgb(243,169,30)" rx="2" ry="2" />
<text  x="209.84" y="527.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).getStateObject (108 samples, 0.02%)</title><rect x="241.6" y="597" width="0.2" height="15.0" fill="rgb(254,69,40)" rx="2" ry="2" />
<text  x="244.59" y="607.5" ></text>
</g>
<g >
<title>sort.swapRange (181 samples, 0.03%)</title><rect x="1068.6" y="501" width="0.3" height="15.0" fill="rgb(249,125,11)" rx="2" ry="2" />
<text  x="1071.61" y="511.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb._Cfunc_lmdbgo_mdb_cursor_get1 (108 samples, 0.02%)</title><rect x="146.3" y="565" width="0.2" height="15.0" fill="rgb(247,15,45)" rx="2" ry="2" />
<text  x="149.31" y="575.5" ></text>
</g>
<g >
<title>tg/core/types.CreateBloom (6,457 samples, 0.93%)</title><rect x="750.2" y="693" width="11.0" height="15.0" fill="rgb(224,95,51)" rx="2" ry="2" />
<text  x="753.25" y="703.5" ></text>
</g>
<g >
<title>tg/core/vm.run (336 samples, 0.05%)</title><rect x="393.6" y="309" width="0.6" height="15.0" fill="rgb(248,164,34)" rx="2" ry="2" />
<text  x="396.59" y="319.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*bufioEncWriter).flushErr (170 samples, 0.02%)</title><rect x="875.1" y="469" width="0.3" height="15.0" fill="rgb(241,210,29)" rx="2" ry="2" />
<text  x="878.13" y="479.5" ></text>
</g>
<g >
<title>tg/common/etl.(*sortableBuffer).Swap (172 samples, 0.02%)</title><rect x="1068.6" y="485" width="0.3" height="15.0" fill="rgb(233,132,5)" rx="2" ry="2" />
<text  x="1071.62" y="495.5" ></text>
</g>
<g >
<title>tg/core/state.(*stateObject).GetCommittedState (226 samples, 0.03%)</title><rect x="385.7" y="293" width="0.4" height="15.0" fill="rgb(242,176,21)" rx="2" ry="2" />
<text  x="388.73" y="303.5" ></text>
</g>
<g >
<title>tg/rlp.Decode (370 samples, 0.05%)</title><rect x="231.7" y="709" width="0.6" height="15.0" fill="rgb(244,84,13)" rx="2" ry="2" />
<text  x="234.69" y="719.5" ></text>
</g>
<g >
<title>github.com/holiman/uint256.(*Int).WriteToSlice (59 samples, 0.01%)</title><rect x="481.1" y="373" width="0.1" height="15.0" fill="rgb(246,145,48)" rx="2" ry="2" />
<text  x="484.13" y="383.5" ></text>
</g>
<g >
<title>runtime.memmove (165 samples, 0.02%)</title><rect x="974.7" y="581" width="0.3" height="15.0" fill="rgb(249,213,6)" rx="2" ry="2" />
<text  x="977.71" y="591.5" ></text>
</g>
<g >
<title>runtime.makeBucketArray (112 samples, 0.02%)</title><rect x="860.1" y="501" width="0.2" height="15.0" fill="rgb(224,149,43)" rx="2" ry="2" />
<text  x="863.07" y="511.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).setStateObject (323 samples, 0.05%)</title><rect x="286.8" y="613" width="0.6" height="15.0" fill="rgb(232,208,42)" rx="2" ry="2" />
<text  x="289.84" y="623.5" ></text>
</g>
<g >
<title>runtime.cgocall (1,038 samples, 0.15%)</title><rect x="203.7" y="405" width="1.8" height="15.0" fill="rgb(227,135,1)" rx="2" ry="2" />
<text  x="206.72" y="415.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVMInterpreter).Run (564 samples, 0.08%)</title><rect x="419.8" y="421" width="1.0" height="15.0" fill="rgb(235,76,15)" rx="2" ry="2" />
<text  x="422.84" y="431.5" ></text>
</g>
<g >
<title>tg/ethdb.(*TxDb).Get (85 samples, 0.01%)</title><rect x="386.0" y="245" width="0.1" height="15.0" fill="rgb(211,157,43)" rx="2" ry="2" />
<text  x="388.97" y="255.5" ></text>
</g>
<g >
<title>runtime.(*mheap).allocSpan (109 samples, 0.02%)</title><rect x="622.2" y="453" width="0.2" height="15.0" fill="rgb(246,132,39)" rx="2" ry="2" />
<text  x="625.21" y="463.5" ></text>
</g>
<g >
<title>runtime.park_m (12,664 samples, 1.82%)</title><rect x="101.1" y="853" width="21.5" height="15.0" fill="rgb(231,33,48)" rx="2" ry="2" />
<text  x="104.08" y="863.5" >r..</text>
</g>
<g >
<title>sort.symMerge (4,613 samples, 0.66%)</title><rect x="986.4" y="517" width="7.9" height="15.0" fill="rgb(237,132,23)" rx="2" ry="2" />
<text  x="989.43" y="527.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.keccakF1600 (67 samples, 0.01%)</title><rect x="481.3" y="341" width="0.1" height="15.0" fill="rgb(206,170,0)" rx="2" ry="2" />
<text  x="484.30" y="351.5" ></text>
</g>
<g >
<title>tg/ethdb.(*MutationItem).Less (798 samples, 0.11%)</title><rect x="277.5" y="437" width="1.4" height="15.0" fill="rgb(212,144,15)" rx="2" ry="2" />
<text  x="280.51" y="447.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (130 samples, 0.02%)</title><rect x="736.6" y="533" width="0.2" height="15.0" fill="rgb(247,119,12)" rx="2" ry="2" />
<text  x="739.61" y="543.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVMInterpreter).Run (88 samples, 0.01%)</title><rect x="395.7" y="357" width="0.1" height="15.0" fill="rgb(253,111,30)" rx="2" ry="2" />
<text  x="398.68" y="367.5" ></text>
</g>
<g >
<title>tg/core/types.codecSelfer2.deccommon_Address (127 samples, 0.02%)</title><rect x="165.3" y="533" width="0.3" height="15.0" fill="rgb(225,136,2)" rx="2" ry="2" />
<text  x="168.34" y="543.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*cborEncDriver).EncodeStringBytesRaw (1,043 samples, 0.15%)</title><rect x="873.3" y="437" width="1.8" height="15.0" fill="rgb(224,209,29)" rx="2" ry="2" />
<text  x="876.28" y="447.5" ></text>
</g>
<g >
<title>tg/ethdb.(*LmdbCursor).set (75 samples, 0.01%)</title><rect x="321.4" y="501" width="0.1" height="15.0" fill="rgb(227,8,44)" rx="2" ry="2" />
<text  x="324.40" y="511.5" ></text>
</g>
<g >
<title>cmpbody (96 samples, 0.01%)</title><rect x="867.1" y="309" width="0.2" height="15.0" fill="rgb(237,64,49)" rx="2" ry="2" />
<text  x="870.11" y="319.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (92 samples, 0.01%)</title><rect x="965.4" y="501" width="0.1" height="15.0" fill="rgb(241,228,32)" rx="2" ry="2" />
<text  x="968.36" y="511.5" ></text>
</g>
<g >
<title>tg/core/vm.opCall (189 samples, 0.03%)</title><rect x="413.4" y="341" width="0.3" height="15.0" fill="rgb(219,70,49)" rx="2" ry="2" />
<text  x="416.39" y="351.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).Call (1,052 samples, 0.15%)</title><rect x="496.4" y="453" width="1.8" height="15.0" fill="rgb(205,63,33)" rx="2" ry="2" />
<text  x="499.45" y="463.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (61 samples, 0.01%)</title><rect x="146.8" y="453" width="0.1" height="15.0" fill="rgb(233,100,41)" rx="2" ry="2" />
<text  x="149.83" y="463.5" ></text>
</g>
<g >
<title>runtime.growWork_faststr (963 samples, 0.14%)</title><rect x="858.4" y="517" width="1.7" height="15.0" fill="rgb(207,80,47)" rx="2" ry="2" />
<text  x="861.43" y="527.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).GetState (135 samples, 0.02%)</title><rect x="406.0" y="389" width="0.2" height="15.0" fill="rgb(234,174,26)" rx="2" ry="2" />
<text  x="408.96" y="399.5" ></text>
</g>
<g >
<title>runtime.cgoCheckPointer (257 samples, 0.04%)</title><rect x="848.3" y="469" width="0.4" height="15.0" fill="rgb(249,26,50)" rx="2" ry="2" />
<text  x="851.30" y="479.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).getStateObject (381 samples, 0.05%)</title><rect x="369.6" y="485" width="0.6" height="15.0" fill="rgb(211,113,21)" rx="2" ry="2" />
<text  x="372.59" y="495.5" ></text>
</g>
<g >
<title>tg/rlp.(*Stream).readUint (100 samples, 0.01%)</title><rect x="791.3" y="485" width="0.2" height="15.0" fill="rgb(205,208,22)" rx="2" ry="2" />
<text  x="794.28" y="495.5" ></text>
</g>
<g >
<title>reflect.packEface (65 samples, 0.01%)</title><rect x="199.9" y="325" width="0.2" height="15.0" fill="rgb(218,90,9)" rx="2" ry="2" />
<text  x="202.95" y="335.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).getVal2 (69 samples, 0.01%)</title><rect x="487.2" y="261" width="0.1" height="15.0" fill="rgb(244,84,46)" rx="2" ry="2" />
<text  x="490.16" y="271.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*Encoder).encode (145 samples, 0.02%)</title><rect x="1040.6" y="533" width="0.3" height="15.0" fill="rgb(242,153,25)" rx="2" ry="2" />
<text  x="1043.64" y="543.5" ></text>
</g>
<g >
<title>tg/ethdb.(*LmdbCursor).set (72 samples, 0.01%)</title><rect x="396.8" y="373" width="0.1" height="15.0" fill="rgb(209,155,7)" rx="2" ry="2" />
<text  x="399.82" y="383.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.New (72 samples, 0.01%)</title><rect x="135.0" y="725" width="0.1" height="15.0" fill="rgb(238,8,43)" rx="2" ry="2" />
<text  x="138.02" y="735.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).getVal0.func1 (522 samples, 0.08%)</title><rect x="221.0" y="485" width="0.9" height="15.0" fill="rgb(224,96,24)" rx="2" ry="2" />
<text  x="224.05" y="495.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).Get (296 samples, 0.04%)</title><rect x="326.4" y="469" width="0.5" height="15.0" fill="rgb(220,55,31)" rx="2" ry="2" />
<text  x="329.42" y="479.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVMInterpreter).Run (355 samples, 0.05%)</title><rect x="478.9" y="293" width="0.6" height="15.0" fill="rgb(224,40,12)" rx="2" ry="2" />
<text  x="481.85" y="303.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (395 samples, 0.06%)</title><rect x="527.2" y="501" width="0.6" height="15.0" fill="rgb(215,8,45)" rx="2" ry="2" />
<text  x="530.18" y="511.5" ></text>
</g>
<g >
<title>runtime.chansend (146 samples, 0.02%)</title><rect x="893.6" y="501" width="0.2" height="15.0" fill="rgb(216,68,17)" rx="2" ry="2" />
<text  x="896.60" y="511.5" ></text>
</g>
<g >
<title>tg/ethdb.(*mutation).Get (169 samples, 0.02%)</title><rect x="396.4" y="405" width="0.3" height="15.0" fill="rgb(230,143,11)" rx="2" ry="2" />
<text  x="399.39" y="415.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (89 samples, 0.01%)</title><rect x="450.2" y="357" width="0.2" height="15.0" fill="rgb(249,66,9)" rx="2" ry="2" />
<text  x="453.21" y="367.5" ></text>
</g>
<g >
<title>runtime.makeslice (298 samples, 0.04%)</title><rect x="790.0" y="469" width="0.5" height="15.0" fill="rgb(239,74,50)" rx="2" ry="2" />
<text  x="792.97" y="479.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).Call (73 samples, 0.01%)</title><rect x="483.9" y="261" width="0.1" height="15.0" fill="rgb(235,132,31)" rx="2" ry="2" />
<text  x="486.88" y="271.5" ></text>
</g>
<g >
<title>bytes.Compare (110 samples, 0.02%)</title><rect x="719.5" y="533" width="0.2" height="15.0" fill="rgb(234,39,47)" rx="2" ry="2" />
<text  x="722.50" y="543.5" ></text>
</g>
<g >
<title>sort.symMerge (1,289 samples, 0.19%)</title><rect x="1075.0" y="325" width="2.2" height="15.0" fill="rgb(244,11,24)" rx="2" ry="2" />
<text  x="1078.00" y="335.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).getVal2.func1 (69 samples, 0.01%)</title><rect x="487.2" y="245" width="0.1" height="15.0" fill="rgb(224,138,45)" rx="2" ry="2" />
<text  x="490.16" y="255.5" ></text>
</g>
<g >
<title>tg/core/vm.opIszero (93 samples, 0.01%)</title><rect x="423.7" y="533" width="0.2" height="15.0" fill="rgb(231,0,4)" rx="2" ry="2" />
<text  x="426.71" y="543.5" ></text>
</g>
<g >
<title>memeqbody (976 samples, 0.14%)</title><rect x="856.6" y="517" width="1.6" height="15.0" fill="rgb(215,206,23)" rx="2" ry="2" />
<text  x="859.57" y="527.5" ></text>
</g>
<g >
<title>runtime.mallocgc (485 samples, 0.07%)</title><rect x="767.6" y="581" width="0.8" height="15.0" fill="rgb(250,228,23)" rx="2" ry="2" />
<text  x="770.57" y="591.5" ></text>
</g>
<g >
<title>runtime.futexwakeup (219 samples, 0.03%)</title><rect x="120.7" y="757" width="0.4" height="15.0" fill="rgb(226,100,34)" rx="2" ry="2" />
<text  x="123.70" y="767.5" ></text>
</g>
<g >
<title>tg/common/etl.(*oldestEntrySortableBuffer).Swap (63 samples, 0.01%)</title><rect x="868.6" y="245" width="0.1" height="15.0" fill="rgb(206,105,39)" rx="2" ry="2" />
<text  x="871.64" y="255.5" ></text>
</g>
<g >
<title>tg/ethdb.(*MutationItem).Less (260 samples, 0.04%)</title><rect x="257.5" y="469" width="0.4" height="15.0" fill="rgb(241,17,38)" rx="2" ry="2" />
<text  x="260.46" y="479.5" ></text>
</g>
<g >
<title>tg/params.isForked (256 samples, 0.04%)</title><rect x="659.7" y="661" width="0.4" height="15.0" fill="rgb(226,211,24)" rx="2" ry="2" />
<text  x="662.67" y="671.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).DelegateCall (84 samples, 0.01%)</title><rect x="413.7" y="325" width="0.2" height="15.0" fill="rgb(205,136,35)" rx="2" ry="2" />
<text  x="416.71" y="335.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring/roaring64.(*roaringArray64).getIndex (223 samples, 0.03%)</title><rect x="1034.4" y="613" width="0.3" height="15.0" fill="rgb(251,65,36)" rx="2" ry="2" />
<text  x="1037.37" y="623.5" ></text>
</g>
<g >
<title>tg/core/vm.opDelegateCall (161 samples, 0.02%)</title><rect x="498.2" y="469" width="0.3" height="15.0" fill="rgb(253,31,33)" rx="2" ry="2" />
<text  x="501.24" y="479.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (166 samples, 0.02%)</title><rect x="461.3" y="421" width="0.2" height="15.0" fill="rgb(241,93,48)" rx="2" ry="2" />
<text  x="464.25" y="431.5" ></text>
</g>
<g >
<title>runtime.exitsyscallfast (66 samples, 0.01%)</title><rect x="1086.4" y="549" width="0.1" height="15.0" fill="rgb(251,219,15)" rx="2" ry="2" />
<text  x="1089.41" y="559.5" ></text>
</g>
<g >
<title>runtime.systemstack (261 samples, 0.04%)</title><rect x="1055.0" y="389" width="0.4" height="15.0" fill="rgb(229,173,42)" rx="2" ry="2" />
<text  x="1057.98" y="399.5" ></text>
</g>
<g >
<title>tg/core/vm.opAddmod (89 samples, 0.01%)</title><rect x="412.6" y="469" width="0.1" height="15.0" fill="rgb(206,150,46)" rx="2" ry="2" />
<text  x="415.58" y="479.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb._Cfunc_lmdbgo_mdb_cursor_get2 (238 samples, 0.03%)</title><rect x="607.6" y="357" width="0.4" height="15.0" fill="rgb(249,154,34)" rx="2" ry="2" />
<text  x="610.56" y="367.5" ></text>
</g>
<g >
<title>tg/common/dbutils.GenerateCompositeStorageKey (819 samples, 0.12%)</title><rect x="894.3" y="549" width="1.4" height="15.0" fill="rgb(220,216,18)" rx="2" ry="2" />
<text  x="897.33" y="559.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*cborEncDriver).EncodeStringBytesRaw (60 samples, 0.01%)</title><rect x="784.5" y="533" width="0.1" height="15.0" fill="rgb(228,90,1)" rx="2" ry="2" />
<text  x="787.50" y="543.5" ></text>
</g>
<g >
<title>tg/core/vm.makePush.func1 (327 samples, 0.05%)</title><rect x="470.3" y="533" width="0.6" height="15.0" fill="rgb(230,212,40)" rx="2" ry="2" />
<text  x="473.34" y="543.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.(*arrayContainer).numberOfRuns (309 samples, 0.04%)</title><rect x="1062.2" y="565" width="0.6" height="15.0" fill="rgb(207,224,11)" rx="2" ry="2" />
<text  x="1065.25" y="575.5" ></text>
</g>
<g >
<title>runtime.mSysStatInc (66 samples, 0.01%)</title><rect x="30.3" y="757" width="0.1" height="15.0" fill="rgb(229,167,48)" rx="2" ry="2" />
<text  x="33.30" y="767.5" ></text>
</g>
<g >
<title>sort.symMerge (393 samples, 0.06%)</title><rect x="143.4" y="517" width="0.7" height="15.0" fill="rgb(208,43,45)" rx="2" ry="2" />
<text  x="146.44" y="527.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (435 samples, 0.06%)</title><rect x="320.7" y="501" width="0.7" height="15.0" fill="rgb(233,39,4)" rx="2" ry="2" />
<text  x="323.65" y="511.5" ></text>
</g>
<g >
<title>sort.swapRange (185 samples, 0.03%)</title><rect x="864.4" y="421" width="0.3" height="15.0" fill="rgb(216,193,50)" rx="2" ry="2" />
<text  x="867.35" y="431.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (201 samples, 0.03%)</title><rect x="369.7" y="389" width="0.3" height="15.0" fill="rgb(232,12,46)" rx="2" ry="2" />
<text  x="372.68" y="399.5" ></text>
</g>
<g >
<title>sort.rotate (280 samples, 0.04%)</title><rect x="178.4" y="485" width="0.5" height="15.0" fill="rgb(243,87,51)" rx="2" ry="2" />
<text  x="181.44" y="495.5" ></text>
</g>
<g >
<title>tg/core/state.(*PlainStateReader).ReadAccountStorage (72 samples, 0.01%)</title><rect x="451.1" y="341" width="0.1" height="15.0" fill="rgb(250,97,40)" rx="2" ry="2" />
<text  x="454.09" y="351.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find.func1 (1,298 samples, 0.19%)</title><rect x="246.8" y="437" width="2.2" height="15.0" fill="rgb(226,222,10)" rx="2" ry="2" />
<text  x="249.76" y="447.5" ></text>
</g>
<g >
<title>runtime.SetFinalizer (384 samples, 0.06%)</title><rect x="932.8" y="469" width="0.7" height="15.0" fill="rgb(248,109,6)" rx="2" ry="2" />
<text  x="935.82" y="479.5" ></text>
</g>
<g >
<title>runtime.mallocgc (261 samples, 0.04%)</title><rect x="694.9" y="629" width="0.5" height="15.0" fill="rgb(207,16,5)" rx="2" ry="2" />
<text  x="697.93" y="639.5" ></text>
</g>
<g >
<title>tg/eth/stagedsync.SpawnAccountHistoryIndex (15,659 samples, 2.25%)</title><rect x="1031.3" y="741" width="26.6" height="15.0" fill="rgb(254,27,16)" rx="2" ry="2" />
<text  x="1034.29" y="751.5" >t..</text>
</g>
<g >
<title>tg/common/etl.(*sortableBuffer).Swap (135 samples, 0.02%)</title><rect x="186.1" y="293" width="0.2" height="15.0" fill="rgb(222,111,28)" rx="2" ry="2" />
<text  x="189.12" y="303.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (73 samples, 0.01%)</title><rect x="631.7" y="549" width="0.1" height="15.0" fill="rgb(213,65,9)" rx="2" ry="2" />
<text  x="634.69" y="559.5" ></text>
</g>
<g >
<title>tg/ethdb.(*LmdbCursor).getBothRange (337 samples, 0.05%)</title><rect x="797.5" y="565" width="0.6" height="15.0" fill="rgb(231,29,42)" rx="2" ry="2" />
<text  x="800.50" y="575.5" ></text>
</g>
<g >
<title>sync.(*WaitGroup).Done (67 samples, 0.01%)</title><rect x="899.2" y="533" width="0.1" height="15.0" fill="rgb(252,193,10)" rx="2" ry="2" />
<text  x="902.23" y="543.5" ></text>
</g>
<g >
<title>tg/ethdb.(*LmdbCursor).set (136 samples, 0.02%)</title><rect x="423.4" y="437" width="0.2" height="15.0" fill="rgb(245,72,36)" rx="2" ry="2" />
<text  x="426.39" y="447.5" ></text>
</g>
<g >
<title>tg/eth/downloader.(*Downloader).fetchBodies.func1 (7,161 samples, 1.03%)</title><rect x="1106.9" y="805" width="12.2" height="15.0" fill="rgb(239,207,26)" rx="2" ry="2" />
<text  x="1109.94" y="815.5" ></text>
</g>
<g >
<title>tg/core/vm.makePush.func1 (380 samples, 0.05%)</title><rect x="377.5" y="469" width="0.6" height="15.0" fill="rgb(245,154,5)" rx="2" ry="2" />
<text  x="380.45" y="479.5" ></text>
</g>
<g >
<title>tg/core/vm.opPop (377 samples, 0.05%)</title><rect x="541.5" y="597" width="0.6" height="15.0" fill="rgb(212,62,18)" rx="2" ry="2" />
<text  x="544.45" y="607.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (140 samples, 0.02%)</title><rect x="155.2" y="485" width="0.2" height="15.0" fill="rgb(250,54,1)" rx="2" ry="2" />
<text  x="158.19" y="495.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).getVal1 (389 samples, 0.06%)</title><rect x="527.9" y="469" width="0.7" height="15.0" fill="rgb(210,215,12)" rx="2" ry="2" />
<text  x="530.89" y="479.5" ></text>
</g>
<g >
<title>runtime.cgocall (90 samples, 0.01%)</title><rect x="420.4" y="277" width="0.1" height="15.0" fill="rgb(222,224,30)" rx="2" ry="2" />
<text  x="423.39" y="287.5" ></text>
</g>
<g >
<title>sort.rotate (62 samples, 0.01%)</title><rect x="870.1" y="229" width="0.1" height="15.0" fill="rgb(229,165,9)" rx="2" ry="2" />
<text  x="873.13" y="239.5" ></text>
</g>
<g >
<title>runtime.growslice (61 samples, 0.01%)</title><rect x="392.6" y="405" width="0.1" height="15.0" fill="rgb(221,71,38)" rx="2" ry="2" />
<text  x="395.55" y="415.5" ></text>
</g>
<g >
<title>tg/ethdb.(*lmdbTx).stdCursor (721 samples, 0.10%)</title><rect x="933.9" y="501" width="1.2" height="15.0" fill="rgb(211,184,9)" rx="2" ry="2" />
<text  x="936.91" y="511.5" ></text>
</g>
<g >
<title>runtime.mallocgc (144 samples, 0.02%)</title><rect x="329.6" y="565" width="0.2" height="15.0" fill="rgb(207,146,10)" rx="2" ry="2" />
<text  x="332.55" y="575.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).StaticCall (100 samples, 0.01%)</title><rect x="415.6" y="389" width="0.2" height="15.0" fill="rgb(236,107,42)" rx="2" ry="2" />
<text  x="418.65" y="399.5" ></text>
</g>
<g >
<title>tg/rlp.decodeListSlice (3,573 samples, 0.51%)</title><rect x="1181.0" y="661" width="6.0" height="15.0" fill="rgb(206,63,49)" rx="2" ry="2" />
<text  x="1183.97" y="671.5" ></text>
</g>
<g >
<title>container/heap.up (478 samples, 0.07%)</title><rect x="966.0" y="629" width="0.8" height="15.0" fill="rgb(228,10,24)" rx="2" ry="2" />
<text  x="968.98" y="639.5" ></text>
</g>
<g >
<title>sort.Search (159 samples, 0.02%)</title><rect x="666.2" y="533" width="0.3" height="15.0" fill="rgb(221,209,23)" rx="2" ry="2" />
<text  x="669.24" y="543.5" ></text>
</g>
<g >
<title>cmpbody (124 samples, 0.02%)</title><rect x="867.9" y="277" width="0.2" height="15.0" fill="rgb(240,169,53)" rx="2" ry="2" />
<text  x="870.89" y="287.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.keccakF1600 (413 samples, 0.06%)</title><rect x="825.2" y="485" width="0.7" height="15.0" fill="rgb(220,124,11)" rx="2" ry="2" />
<text  x="828.18" y="495.5" ></text>
</g>
<g >
<title>runtime.cgocall (92 samples, 0.01%)</title><rect x="481.8" y="213" width="0.1" height="15.0" fill="rgb(220,12,41)" rx="2" ry="2" />
<text  x="484.77" y="223.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb._Cfunc_mdb_txn_begin (3,297 samples, 0.47%)</title><rect x="899.7" y="469" width="5.6" height="15.0" fill="rgb(226,16,30)" rx="2" ry="2" />
<text  x="902.75" y="479.5" ></text>
</g>
<g >
<title>tg/rlp.(*Stream).Bytes (227 samples, 0.03%)</title><rect x="1183.0" y="533" width="0.4" height="15.0" fill="rgb(244,37,29)" rx="2" ry="2" />
<text  x="1185.99" y="543.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.fastpathDecodeTypeSwitch (259 samples, 0.04%)</title><rect x="1047.1" y="597" width="0.5" height="15.0" fill="rgb(247,103,23)" rx="2" ry="2" />
<text  x="1050.12" y="607.5" ></text>
</g>
<g >
<title>runtime.memmove (121 samples, 0.02%)</title><rect x="177.4" y="533" width="0.2" height="15.0" fill="rgb(227,154,29)" rx="2" ry="2" />
<text  x="180.36" y="543.5" ></text>
</g>
<g >
<title>runtime.mallocgc.func1 (114 samples, 0.02%)</title><rect x="983.8" y="469" width="0.2" height="15.0" fill="rgb(208,21,40)" rx="2" ry="2" />
<text  x="986.81" y="479.5" ></text>
</g>
<g >
<title>github.com/holiman/uint256.udivremKnuth (76 samples, 0.01%)</title><rect x="421.9" y="485" width="0.2" height="15.0" fill="rgb(222,49,42)" rx="2" ry="2" />
<text  x="424.94" y="495.5" ></text>
</g>
<g >
<title>tg/crypto/bn256/cloudflare.gfpMul (59 samples, 0.01%)</title><rect x="502.7" y="229" width="0.1" height="15.0" fill="rgb(218,209,49)" rx="2" ry="2" />
<text  x="505.71" y="239.5" ></text>
</g>
<g >
<title>sync.(*RWMutex).Unlock (88 samples, 0.01%)</title><rect x="721.5" y="677" width="0.2" height="15.0" fill="rgb(228,27,28)" rx="2" ry="2" />
<text  x="724.54" y="687.5" ></text>
</g>
<g >
<title>runtime.callers (120 samples, 0.02%)</title><rect x="155.5" y="453" width="0.2" height="15.0" fill="rgb(206,65,13)" rx="2" ry="2" />
<text  x="158.47" y="463.5" ></text>
</g>
<g >
<title>runtime.mallocgc (86 samples, 0.01%)</title><rect x="1176.4" y="789" width="0.1" height="15.0" fill="rgb(233,18,5)" rx="2" ry="2" />
<text  x="1179.40" y="799.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).insert (175 samples, 0.03%)</title><rect x="665.7" y="597" width="0.3" height="15.0" fill="rgb(236,102,51)" rx="2" ry="2" />
<text  x="668.68" y="607.5" ></text>
</g>
<g >
<title>tg/rlp.makeByteArrayWriter.func1 (171 samples, 0.02%)</title><rect x="763.5" y="485" width="0.3" height="15.0" fill="rgb(252,85,38)" rx="2" ry="2" />
<text  x="766.48" y="495.5" ></text>
</g>
<g >
<title>runtime.mallocgc.func1 (65 samples, 0.01%)</title><rect x="1180.2" y="757" width="0.1" height="15.0" fill="rgb(232,6,6)" rx="2" ry="2" />
<text  x="1183.23" y="767.5" ></text>
</g>
<g >
<title>tg/core/vm/stack.(*Stack).Pop (1,319 samples, 0.19%)</title><rect x="612.6" y="597" width="2.3" height="15.0" fill="rgb(227,107,49)" rx="2" ry="2" />
<text  x="615.64" y="607.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).Call (151 samples, 0.02%)</title><rect x="484.4" y="197" width="0.3" height="15.0" fill="rgb(236,223,26)" rx="2" ry="2" />
<text  x="487.43" y="207.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).StaticCall (625 samples, 0.09%)</title><rect x="419.7" y="453" width="1.1" height="15.0" fill="rgb(225,47,18)" rx="2" ry="2" />
<text  x="422.75" y="463.5" ></text>
</g>
<g >
<title>tg/rlp.cachedWriter (137 samples, 0.02%)</title><rect x="212.3" y="453" width="0.2" height="15.0" fill="rgb(241,116,52)" rx="2" ry="2" />
<text  x="215.31" y="463.5" ></text>
</g>
<g >
<title>tg/common/etl.(*oldestEntrySortableBuffer).Swap (111 samples, 0.02%)</title><rect x="989.3" y="373" width="0.2" height="15.0" fill="rgb(234,135,44)" rx="2" ry="2" />
<text  x="992.27" y="383.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).create (119 samples, 0.02%)</title><rect x="495.5" y="501" width="0.2" height="15.0" fill="rgb(218,119,28)" rx="2" ry="2" />
<text  x="498.45" y="511.5" ></text>
</g>
<g >
<title>runtime.mallocgc (277 samples, 0.04%)</title><rect x="215.2" y="501" width="0.5" height="15.0" fill="rgb(230,4,9)" rx="2" ry="2" />
<text  x="218.23" y="511.5" ></text>
</g>
<g >
<title>tg/core/state.(*ChangeSetWriter).GetStorageChanges (959 samples, 0.14%)</title><rect x="735.4" y="677" width="1.6" height="15.0" fill="rgb(253,64,6)" rx="2" ry="2" />
<text  x="738.39" y="687.5" ></text>
</g>
<g >
<title>tg/core/vm.opDelegateCall (522 samples, 0.08%)</title><rect x="414.2" y="405" width="0.9" height="15.0" fill="rgb(248,54,48)" rx="2" ry="2" />
<text  x="417.23" y="415.5" ></text>
</g>
<g >
<title>sort.stable (200 samples, 0.03%)</title><rect x="1040.2" y="549" width="0.3" height="15.0" fill="rgb(240,116,11)" rx="2" ry="2" />
<text  x="1043.19" y="559.5" ></text>
</g>
<g >
<title>runtime.mallocgc (105 samples, 0.02%)</title><rect x="146.8" y="533" width="0.2" height="15.0" fill="rgb(222,209,29)" rx="2" ry="2" />
<text  x="149.80" y="543.5" ></text>
</g>
<g >
<title>tg/rlp.Encode (82 samples, 0.01%)</title><rect x="1107.0" y="741" width="0.1" height="15.0" fill="rgb(250,143,42)" rx="2" ry="2" />
<text  x="1109.98" y="751.5" ></text>
</g>
<g >
<title>tg/rlp.writeUint256NoPtr (637 samples, 0.09%)</title><rect x="1110.7" y="533" width="1.1" height="15.0" fill="rgb(238,16,34)" rx="2" ry="2" />
<text  x="1113.69" y="543.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (64 samples, 0.01%)</title><rect x="701.7" y="517" width="0.1" height="15.0" fill="rgb(253,10,45)" rx="2" ry="2" />
<text  x="704.69" y="527.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.keccakF1600 (976 samples, 0.14%)</title><rect x="206.9" y="501" width="1.6" height="15.0" fill="rgb(244,17,5)" rx="2" ry="2" />
<text  x="209.86" y="511.5" ></text>
</g>
<g >
<title>sort.doPivot (188 samples, 0.03%)</title><rect x="729.0" y="597" width="0.3" height="15.0" fill="rgb(233,213,28)" rx="2" ry="2" />
<text  x="732.02" y="607.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (76 samples, 0.01%)</title><rect x="164.4" y="469" width="0.1" height="15.0" fill="rgb(225,162,38)" rx="2" ry="2" />
<text  x="167.38" y="479.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.decByteSlice (104 samples, 0.01%)</title><rect x="959.6" y="549" width="0.2" height="15.0" fill="rgb(215,1,5)" rx="2" ry="2" />
<text  x="962.59" y="559.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (126 samples, 0.02%)</title><rect x="1112.3" y="565" width="0.2" height="15.0" fill="rgb(205,104,21)" rx="2" ry="2" />
<text  x="1115.29" y="575.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring/roaring64.(*roaringArray64).getWritableContainerAtIndex (59 samples, 0.01%)</title><rect x="1061.2" y="613" width="0.1" height="15.0" fill="rgb(217,58,19)" rx="2" ry="2" />
<text  x="1064.22" y="623.5" ></text>
</g>
<g >
<title>tg/common/etl.(*fileDataProvider).Next (3,581 samples, 0.52%)</title><rect x="967.7" y="645" width="6.1" height="15.0" fill="rgb(234,56,17)" rx="2" ry="2" />
<text  x="970.74" y="655.5" ></text>
</g>
<g >
<title>sort.rotate (137 samples, 0.02%)</title><rect x="1073.1" y="389" width="0.2" height="15.0" fill="rgb(233,33,4)" rx="2" ry="2" />
<text  x="1076.09" y="399.5" ></text>
</g>
<g >
<title>runtime.growslice (73 samples, 0.01%)</title><rect x="1040.1" y="581" width="0.1" height="15.0" fill="rgb(211,170,44)" rx="2" ry="2" />
<text  x="1043.07" y="591.5" ></text>
</g>
<g >
<title>cmpbody (84 samples, 0.01%)</title><rect x="402.7" y="245" width="0.1" height="15.0" fill="rgb(253,25,8)" rx="2" ry="2" />
<text  x="405.67" y="255.5" ></text>
</g>
<g >
<title>tg/core/vm.makeLog.func1 (77 samples, 0.01%)</title><rect x="476.5" y="469" width="0.1" height="15.0" fill="rgb(231,55,37)" rx="2" ry="2" />
<text  x="479.47" y="479.5" ></text>
</g>
<g >
<title>tg/ethdb.(*MutationItem).Less (1,526 samples, 0.22%)</title><rect x="573.3" y="373" width="2.6" height="15.0" fill="rgb(246,76,13)" rx="2" ry="2" />
<text  x="576.26" y="383.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).StaticCall (1,327 samples, 0.19%)</title><rect x="501.5" y="453" width="2.3" height="15.0" fill="rgb(219,125,5)" rx="2" ry="2" />
<text  x="504.50" y="463.5" ></text>
</g>
<g >
<title>runtime.makeslice (177 samples, 0.03%)</title><rect x="235.1" y="661" width="0.3" height="15.0" fill="rgb(212,188,26)" rx="2" ry="2" />
<text  x="238.13" y="671.5" ></text>
</g>
<g >
<title>tg/ethdb.(*LmdbKV).View (66 samples, 0.01%)</title><rect x="1180.7" y="709" width="0.1" height="15.0" fill="rgb(225,135,10)" rx="2" ry="2" />
<text  x="1183.67" y="719.5" ></text>
</g>
<g >
<title>tg/core/vm.(*Contract).isCode (99 samples, 0.01%)</title><rect x="530.3" y="565" width="0.2" height="15.0" fill="rgb(251,99,13)" rx="2" ry="2" />
<text  x="533.29" y="575.5" ></text>
</g>
<g >
<title>tg/ethdb.(*LmdbCursor).set (109 samples, 0.02%)</title><rect x="370.5" y="421" width="0.2" height="15.0" fill="rgb(223,69,17)" rx="2" ry="2" />
<text  x="373.52" y="431.5" ></text>
</g>
<g >
<title>runtime.cgocall (1,327 samples, 0.19%)</title><rect x="947.3" y="453" width="2.2" height="15.0" fill="rgb(214,11,28)" rx="2" ry="2" />
<text  x="950.29" y="463.5" ></text>
</g>
<g >
<title>tg/core/vm.(*Contract).validJumpdest (368 samples, 0.05%)</title><rect x="505.5" y="517" width="0.6" height="15.0" fill="rgb(215,143,21)" rx="2" ry="2" />
<text  x="508.49" y="527.5" ></text>
</g>
<g >
<title>runtime.mapaccess2 (114 samples, 0.02%)</title><rect x="596.9" y="517" width="0.2" height="15.0" fill="rgb(238,215,27)" rx="2" ry="2" />
<text  x="599.89" y="527.5" ></text>
</g>
<g >
<title>tg/ethdb.Walk (65 samples, 0.01%)</title><rect x="1180.7" y="677" width="0.1" height="15.0" fill="rgb(242,174,2)" rx="2" ry="2" />
<text  x="1183.67" y="687.5" ></text>
</g>
<g >
<title>runtime.makeslice (287 samples, 0.04%)</title><rect x="1184.1" y="501" width="0.5" height="15.0" fill="rgb(235,22,33)" rx="2" ry="2" />
<text  x="1187.08" y="511.5" ></text>
</g>
<g >
<title>runtime.tgkill (153 samples, 0.02%)</title><rect x="124.5" y="773" width="0.2" height="15.0" fill="rgb(238,15,50)" rx="2" ry="2" />
<text  x="127.45" y="783.5" ></text>
</g>
<g >
<title>tg/common/etl.(*Collector).Collect (160 samples, 0.02%)</title><rect x="1030.8" y="629" width="0.3" height="15.0" fill="rgb(205,32,39)" rx="2" ry="2" />
<text  x="1033.81" y="639.5" ></text>
</g>
<g >
<title>tg/ethdb.(*TxDb).Get (76 samples, 0.01%)</title><rect x="321.4" y="517" width="0.1" height="15.0" fill="rgb(221,83,33)" rx="2" ry="2" />
<text  x="324.40" y="527.5" ></text>
</g>
<g >
<title>sort.doPivot (242 samples, 0.03%)</title><rect x="728.6" y="613" width="0.4" height="15.0" fill="rgb(252,175,26)" rx="2" ry="2" />
<text  x="731.57" y="623.5" ></text>
</g>
<g >
<title>tg/common.CopyBytes (216 samples, 0.03%)</title><rect x="1119.6" y="757" width="0.3" height="15.0" fill="rgb(210,137,54)" rx="2" ry="2" />
<text  x="1122.56" y="767.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).GetCodeHash (493 samples, 0.07%)</title><rect x="461.2" y="549" width="0.8" height="15.0" fill="rgb(251,188,20)" rx="2" ry="2" />
<text  x="464.18" y="559.5" ></text>
</g>
<g >
<title>tg/ethdb.(*LmdbCursor).set (5,019 samples, 0.72%)</title><rect x="1013.5" y="581" width="8.5" height="15.0" fill="rgb(205,111,20)" rx="2" ry="2" />
<text  x="1016.52" y="591.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.fastpathT.EncSliceBytesV (262 samples, 0.04%)</title><rect x="994.5" y="485" width="0.5" height="15.0" fill="rgb(205,8,5)" rx="2" ry="2" />
<text  x="997.52" y="495.5" ></text>
</g>
<g >
<title>tg/rlp.(*Stream).Kind (181 samples, 0.03%)</title><rect x="218.5" y="373" width="0.3" height="15.0" fill="rgb(245,223,21)" rx="2" ry="2" />
<text  x="221.50" y="383.5" ></text>
</g>
<g >
<title>tg/core/vm.opStaticCall (626 samples, 0.09%)</title><rect x="419.7" y="469" width="1.1" height="15.0" fill="rgb(246,210,25)" rx="2" ry="2" />
<text  x="422.75" y="479.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (303 samples, 0.04%)</title><rect x="767.7" y="501" width="0.5" height="15.0" fill="rgb(232,78,37)" rx="2" ry="2" />
<text  x="770.69" y="511.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (169 samples, 0.02%)</title><rect x="340.9" y="485" width="0.3" height="15.0" fill="rgb(234,112,29)" rx="2" ry="2" />
<text  x="343.92" y="495.5" ></text>
</g>
<g >
<title>runtime.unlockWithRank (591 samples, 0.09%)</title><rect x="31.3" y="789" width="1.0" height="15.0" fill="rgb(224,186,47)" rx="2" ry="2" />
<text  x="34.27" y="799.5" ></text>
</g>
<g >
<title>tg/core/vm.opCall (1,195 samples, 0.17%)</title><rect x="382.9" y="341" width="2.0" height="15.0" fill="rgb(220,141,21)" rx="2" ry="2" />
<text  x="385.86" y="351.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (103 samples, 0.01%)</title><rect x="975.8" y="485" width="0.2" height="15.0" fill="rgb(248,29,53)" rx="2" ry="2" />
<text  x="978.83" y="495.5" ></text>
</g>
<g >
<title>github.com/holiman/uint256.subMulTo (100 samples, 0.01%)</title><rect x="508.0" y="469" width="0.2" height="15.0" fill="rgb(231,202,21)" rx="2" ry="2" />
<text  x="511.02" y="479.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.keccakF1600 (6,060 samples, 0.87%)</title><rect x="880.6" y="485" width="10.3" height="15.0" fill="rgb(232,63,34)" rx="2" ry="2" />
<text  x="883.57" y="495.5" ></text>
</g>
<g >
<title>tg/core/vm.run (373 samples, 0.05%)</title><rect x="391.1" y="373" width="0.7" height="15.0" fill="rgb(236,205,6)" rx="2" ry="2" />
<text  x="394.13" y="383.5" ></text>
</g>
<g >
<title>tg/turbo/trie.(*HashBuilder).leafHashWithKeyVal (468 samples, 0.07%)</title><rect x="1030.0" y="629" width="0.8" height="15.0" fill="rgb(210,218,19)" rx="2" ry="2" />
<text  x="1033.00" y="639.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (76 samples, 0.01%)</title><rect x="860.1" y="389" width="0.2" height="15.0" fill="rgb(238,47,45)" rx="2" ry="2" />
<text  x="863.12" y="399.5" ></text>
</g>
<g >
<title>tg/core/vm/stack.(*Stack).Push (121 samples, 0.02%)</title><rect x="421.1" y="469" width="0.2" height="15.0" fill="rgb(225,88,28)" rx="2" ry="2" />
<text  x="424.06" y="479.5" ></text>
</g>
<g >
<title>tg/rlp.decodeByteArray (160 samples, 0.02%)</title><rect x="231.9" y="661" width="0.3" height="15.0" fill="rgb(243,51,29)" rx="2" ry="2" />
<text  x="234.93" y="671.5" ></text>
</g>
<g >
<title>tg/core/vm.(*Contract).isCode (219 samples, 0.03%)</title><rect x="397.5" y="437" width="0.4" height="15.0" fill="rgb(239,86,13)" rx="2" ry="2" />
<text  x="400.48" y="447.5" ></text>
</g>
<g >
<title>sort.Search (162 samples, 0.02%)</title><rect x="289.3" y="485" width="0.2" height="15.0" fill="rgb(208,167,32)" rx="2" ry="2" />
<text  x="292.26" y="495.5" ></text>
</g>
<g >
<title>sort.swapRange (89 samples, 0.01%)</title><rect x="1073.6" y="357" width="0.1" height="15.0" fill="rgb(212,188,18)" rx="2" ry="2" />
<text  x="1076.58" y="367.5" ></text>
</g>
<g >
<title>tg/ethdb.(*TxDb).cursor (148 samples, 0.02%)</title><rect x="727.3" y="613" width="0.3" height="15.0" fill="rgb(239,218,53)" rx="2" ry="2" />
<text  x="730.30" y="623.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.(*arrayContainer).toEfficientContainer (311 samples, 0.04%)</title><rect x="1062.2" y="581" width="0.6" height="15.0" fill="rgb(253,35,28)" rx="2" ry="2" />
<text  x="1065.24" y="591.5" ></text>
</g>
<g >
<title>bufio.(*Reader).Read (64 samples, 0.01%)</title><rect x="1047.4" y="485" width="0.1" height="15.0" fill="rgb(215,56,36)" rx="2" ry="2" />
<text  x="1050.37" y="495.5" ></text>
</g>
<g >
<title>tg/crypto/secp256k1.RecoverPubkey (84 samples, 0.01%)</title><rect x="608.2" y="469" width="0.2" height="15.0" fill="rgb(210,81,5)" rx="2" ry="2" />
<text  x="611.24" y="479.5" ></text>
</g>
<g >
<title>syscall.write (105 samples, 0.02%)</title><rect x="1079.3" y="405" width="0.2" height="15.0" fill="rgb(216,178,32)" rx="2" ry="2" />
<text  x="1082.32" y="415.5" ></text>
</g>
<g >
<title>tg/ethdb.(*mutation).Get (196 samples, 0.03%)</title><rect x="516.6" y="389" width="0.4" height="15.0" fill="rgb(206,1,39)" rx="2" ry="2" />
<text  x="519.63" y="399.5" ></text>
</g>
<g >
<title>tg/core/vm.opPush1 (97 samples, 0.01%)</title><rect x="489.8" y="469" width="0.2" height="15.0" fill="rgb(252,154,18)" rx="2" ry="2" />
<text  x="492.84" y="479.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).Get (1,476 samples, 0.21%)</title><rect x="1043.8" y="645" width="2.5" height="15.0" fill="rgb(251,184,18)" rx="2" ry="2" />
<text  x="1046.78" y="655.5" ></text>
</g>
<g >
<title>tg/rlp.(*encbuf).encode (690 samples, 0.10%)</title><rect x="1132.7" y="773" width="1.2" height="15.0" fill="rgb(237,120,0)" rx="2" ry="2" />
<text  x="1135.74" y="783.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.(*roaringArray).readFrom (476 samples, 0.07%)</title><rect x="1048.5" y="629" width="0.8" height="15.0" fill="rgb(233,21,0)" rx="2" ry="2" />
<text  x="1051.46" y="639.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*bufioEncWriter).endErr (98 samples, 0.01%)</title><rect x="195.8" y="501" width="0.1" height="15.0" fill="rgb(237,1,43)" rx="2" ry="2" />
<text  x="198.76" y="511.5" ></text>
</g>
<g >
<title>cmpbody (66 samples, 0.01%)</title><rect x="866.4" y="341" width="0.1" height="15.0" fill="rgb(236,166,40)" rx="2" ry="2" />
<text  x="869.36" y="351.5" ></text>
</g>
<g >
<title>cmpbody (208 samples, 0.03%)</title><rect x="186.4" y="293" width="0.4" height="15.0" fill="rgb(219,9,53)" rx="2" ry="2" />
<text  x="189.41" y="303.5" ></text>
</g>
<g >
<title>runtime.mapaccess2 (342 samples, 0.05%)</title><rect x="556.7" y="549" width="0.6" height="15.0" fill="rgb(214,128,41)" rx="2" ry="2" />
<text  x="559.75" y="559.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find (178 samples, 0.03%)</title><rect x="702.1" y="501" width="0.3" height="15.0" fill="rgb(247,61,50)" rx="2" ry="2" />
<text  x="705.08" y="511.5" ></text>
</g>
<g >
<title>runtime.cgoCheckArg (81 samples, 0.01%)</title><rect x="1021.8" y="501" width="0.1" height="15.0" fill="rgb(233,66,37)" rx="2" ry="2" />
<text  x="1024.77" y="511.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (159 samples, 0.02%)</title><rect x="826.9" y="437" width="0.3" height="15.0" fill="rgb(209,182,10)" rx="2" ry="2" />
<text  x="829.90" y="447.5" ></text>
</g>
<g >
<title>runtime.mapaccess1 (117 samples, 0.02%)</title><rect x="1133.5" y="709" width="0.2" height="15.0" fill="rgb(251,106,17)" rx="2" ry="2" />
<text  x="1136.48" y="719.5" ></text>
</g>
<g >
<title>tg/core/vm.memorySha3 (89 samples, 0.01%)</title><rect x="336.8" y="597" width="0.2" height="15.0" fill="rgb(215,15,51)" rx="2" ry="2" />
<text  x="339.82" y="607.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).Get (1,890 samples, 0.27%)</title><rect x="441.1" y="405" width="3.2" height="15.0" fill="rgb(249,31,48)" rx="2" ry="2" />
<text  x="444.09" y="415.5" ></text>
</g>
<g >
<title>github.com/holiman/uint256.(*Int).Mod (94 samples, 0.01%)</title><rect x="471.3" y="501" width="0.2" height="15.0" fill="rgb(228,181,29)" rx="2" ry="2" />
<text  x="474.35" y="511.5" ></text>
</g>
<g >
<title>tg/core/vm.run (200 samples, 0.03%)</title><rect x="483.8" y="309" width="0.4" height="15.0" fill="rgb(217,19,9)" rx="2" ry="2" />
<text  x="486.84" y="319.5" ></text>
</g>
<g >
<title>github.com/holiman/uint256.(*Int).MulMod (425 samples, 0.06%)</title><rect x="507.6" y="517" width="0.7" height="15.0" fill="rgb(215,3,54)" rx="2" ry="2" />
<text  x="510.56" y="527.5" ></text>
</g>
<g >
<title>tg/ethdb.(*MutationItem).Less (59 samples, 0.01%)</title><rect x="282.9" y="485" width="0.1" height="15.0" fill="rgb(229,24,37)" rx="2" ry="2" />
<text  x="285.86" y="495.5" ></text>
</g>
<g >
<title>tg/core/vm.opDelegateCall (606 samples, 0.09%)</title><rect x="603.5" y="533" width="1.0" height="15.0" fill="rgb(205,186,29)" rx="2" ry="2" />
<text  x="606.50" y="543.5" ></text>
</g>
<g >
<title>tg/crypto/secp256k1.RecoverPubkeyWithContext.func1 (68 samples, 0.01%)</title><rect x="486.2" y="245" width="0.1" height="15.0" fill="rgb(249,137,2)" rx="2" ry="2" />
<text  x="489.23" y="255.5" ></text>
</g>
<g >
<title>tg/rlp.writeUint256 (684 samples, 0.10%)</title><rect x="746.2" y="501" width="1.2" height="15.0" fill="rgb(214,173,35)" rx="2" ry="2" />
<text  x="749.22" y="511.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring/roaring64.(*Bitmap).RunOptimize (866 samples, 0.12%)</title><rect x="1061.4" y="629" width="1.4" height="15.0" fill="rgb(254,96,22)" rx="2" ry="2" />
<text  x="1064.35" y="639.5" ></text>
</g>
<g >
<title>reflect.typedmemmove (79 samples, 0.01%)</title><rect x="225.8" y="405" width="0.1" height="15.0" fill="rgb(215,48,16)" rx="2" ry="2" />
<text  x="228.76" y="415.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*Decoder).decode (1,962 samples, 0.28%)</title><rect x="968.7" y="581" width="3.3" height="15.0" fill="rgb(231,170,33)" rx="2" ry="2" />
<text  x="971.69" y="591.5" ></text>
</g>
<g >
<title>tg/rlp.(*Stream).uint (182 samples, 0.03%)</title><rect x="219.0" y="405" width="0.4" height="15.0" fill="rgb(220,129,24)" rx="2" ry="2" />
<text  x="222.04" y="415.5" ></text>
</g>
<g >
<title>runtime.mallocgc (211 samples, 0.03%)</title><rect x="973.4" y="597" width="0.4" height="15.0" fill="rgb(241,42,25)" rx="2" ry="2" />
<text  x="976.41" y="607.5" ></text>
</g>
<g >
<title>tg/core/types/accounts.(*Account).DecodeForStorage (88 samples, 0.01%)</title><rect x="995.4" y="597" width="0.2" height="15.0" fill="rgb(248,158,15)" rx="2" ry="2" />
<text  x="998.44" y="607.5" ></text>
</g>
<g >
<title>tg/core/vm.opCall (1,867 samples, 0.27%)</title><rect x="412.8" y="469" width="3.1" height="15.0" fill="rgb(219,107,37)" rx="2" ry="2" />
<text  x="415.76" y="479.5" ></text>
</g>
<g >
<title>runtime.getempty (2,416 samples, 0.35%)</title><rect x="51.4" y="773" width="4.1" height="15.0" fill="rgb(215,22,14)" rx="2" ry="2" />
<text  x="54.40" y="783.5" ></text>
</g>
<g >
<title>tg/core/vm.(*Contract).validJumpdest (1,883 samples, 0.27%)</title><rect x="531.2" y="581" width="3.2" height="15.0" fill="rgb(218,172,37)" rx="2" ry="2" />
<text  x="534.17" y="591.5" ></text>
</g>
<g >
<title>runtime.(*Frames).Next (60 samples, 0.01%)</title><rect x="1128.6" y="741" width="0.1" height="15.0" fill="rgb(253,28,18)" rx="2" ry="2" />
<text  x="1131.58" y="751.5" ></text>
</g>
<g >
<title>memeqbody (646 samples, 0.09%)</title><rect x="980.9" y="549" width="1.1" height="15.0" fill="rgb(244,205,1)" rx="2" ry="2" />
<text  x="983.94" y="559.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.fastpathT.EncSliceBytesV (122 samples, 0.02%)</title><rect x="144.2" y="581" width="0.2" height="15.0" fill="rgb(207,38,1)" rx="2" ry="2" />
<text  x="147.24" y="591.5" ></text>
</g>
<g >
<title>tg/core/vm.opCall (137 samples, 0.02%)</title><rect x="480.2" y="341" width="0.2" height="15.0" fill="rgb(222,108,5)" rx="2" ry="2" />
<text  x="483.21" y="351.5" ></text>
</g>
<g >
<title>runtime.bgsweep (12,503 samples, 1.80%)</title><rect x="12.9" y="869" width="21.3" height="15.0" fill="rgb(214,222,4)" rx="2" ry="2" />
<text  x="15.94" y="879.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find (84 samples, 0.01%)</title><rect x="289.5" y="517" width="0.2" height="15.0" fill="rgb(230,133,46)" rx="2" ry="2" />
<text  x="292.54" y="527.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.keccakF1600 (973 samples, 0.14%)</title><rect x="772.9" y="517" width="1.6" height="15.0" fill="rgb(221,142,14)" rx="2" ry="2" />
<text  x="775.89" y="527.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.(*state).Write (1,078 samples, 0.16%)</title><rect x="1178.4" y="805" width="1.8" height="15.0" fill="rgb(239,191,34)" rx="2" ry="2" />
<text  x="1181.39" y="815.5" ></text>
</g>
<g >
<title>sort.symMerge (139 samples, 0.02%)</title><rect x="143.8" y="437" width="0.3" height="15.0" fill="rgb(212,92,12)" rx="2" ry="2" />
<text  x="146.84" y="447.5" ></text>
</g>
<g >
<title>tg/eth/stagedsync.DefaultStages.func13.1 (9,003 samples, 1.30%)</title><rect x="214.8" y="757" width="15.3" height="15.0" fill="rgb(249,218,18)" rx="2" ry="2" />
<text  x="217.79" y="767.5" ></text>
</g>
<g >
<title>runtime.slicebytetostring (516 samples, 0.07%)</title><rect x="984.1" y="565" width="0.8" height="15.0" fill="rgb(231,147,25)" rx="2" ry="2" />
<text  x="987.06" y="575.5" ></text>
</g>
<g >
<title>runtime.mapiternext (122 samples, 0.02%)</title><rect x="1081.4" y="613" width="0.2" height="15.0" fill="rgb(243,142,34)" rx="2" ry="2" />
<text  x="1084.44" y="623.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.(*state).Write (90 samples, 0.01%)</title><rect x="655.6" y="629" width="0.1" height="15.0" fill="rgb(251,214,12)" rx="2" ry="2" />
<text  x="658.59" y="639.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).GetState (263 samples, 0.04%)</title><rect x="450.1" y="453" width="0.4" height="15.0" fill="rgb(237,126,48)" rx="2" ry="2" />
<text  x="453.08" y="463.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.beginTxn.func1 (80 samples, 0.01%)</title><rect x="231.0" y="613" width="0.2" height="15.0" fill="rgb(212,222,34)" rx="2" ry="2" />
<text  x="234.03" y="623.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (152 samples, 0.02%)</title><rect x="720.1" y="581" width="0.3" height="15.0" fill="rgb(228,153,13)" rx="2" ry="2" />
<text  x="723.13" y="591.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).SetState (232 samples, 0.03%)</title><rect x="404.4" y="453" width="0.4" height="15.0" fill="rgb(205,202,21)" rx="2" ry="2" />
<text  x="407.39" y="463.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.(*arrayContainer).iaddRange (81 samples, 0.01%)</title><rect x="1050.1" y="549" width="0.1" height="15.0" fill="rgb(253,199,36)" rx="2" ry="2" />
<text  x="1053.09" y="559.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).getStateObject (97 samples, 0.01%)</title><rect x="269.4" y="581" width="0.2" height="15.0" fill="rgb(213,78,14)" rx="2" ry="2" />
<text  x="272.41" y="591.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).StaticCall (60 samples, 0.01%)</title><rect x="501.7" y="325" width="0.1" height="15.0" fill="rgb(212,69,1)" rx="2" ry="2" />
<text  x="504.74" y="335.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).maybeSplitChild (115 samples, 0.02%)</title><rect x="717.3" y="565" width="0.2" height="15.0" fill="rgb(209,209,17)" rx="2" ry="2" />
<text  x="720.33" y="575.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*ioDecReader).ReadByte (62 samples, 0.01%)</title><rect x="1089.2" y="485" width="0.1" height="15.0" fill="rgb(236,215,54)" rx="2" ry="2" />
<text  x="1092.17" y="495.5" ></text>
</g>
<g >
<title>runtime.growslice (113 samples, 0.02%)</title><rect x="1048.2" y="629" width="0.1" height="15.0" fill="rgb(229,136,28)" rx="2" ry="2" />
<text  x="1051.16" y="639.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find (394 samples, 0.06%)</title><rect x="498.8" y="309" width="0.7" height="15.0" fill="rgb(228,63,2)" rx="2" ry="2" />
<text  x="501.84" y="319.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find (214 samples, 0.03%)</title><rect x="491.4" y="293" width="0.3" height="15.0" fill="rgb(228,221,37)" rx="2" ry="2" />
<text  x="494.36" y="303.5" ></text>
</g>
<g >
<title>tg/turbo/trie.(*HashBuilder).leafHash (2,897 samples, 0.42%)</title><rect x="1114.1" y="677" width="4.9" height="15.0" fill="rgb(235,210,31)" rx="2" ry="2" />
<text  x="1117.12" y="687.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).DelegateCall (517 samples, 0.07%)</title><rect x="386.7" y="389" width="0.9" height="15.0" fill="rgb(242,96,38)" rx="2" ry="2" />
<text  x="389.72" y="399.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find.func1 (174 samples, 0.03%)</title><rect x="1120.6" y="613" width="0.3" height="15.0" fill="rgb(222,79,26)" rx="2" ry="2" />
<text  x="1123.63" y="623.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (75 samples, 0.01%)</title><rect x="329.6" y="501" width="0.1" height="15.0" fill="rgb(234,104,54)" rx="2" ry="2" />
<text  x="332.60" y="511.5" ></text>
</g>
<g >
<title>tg/ethdb/bitmapdb.WalkChunkWithKeys64.func1 (2,651 samples, 0.38%)</title><rect x="1102.3" y="629" width="4.5" height="15.0" fill="rgb(216,129,17)" rx="2" ry="2" />
<text  x="1105.33" y="639.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.decByteSlice (114 samples, 0.02%)</title><rect x="165.0" y="485" width="0.2" height="15.0" fill="rgb(207,213,45)" rx="2" ry="2" />
<text  x="168.04" y="495.5" ></text>
</g>
<g >
<title>runtime.futexsleep (103 samples, 0.01%)</title><rect x="123.8" y="789" width="0.2" height="15.0" fill="rgb(248,121,50)" rx="2" ry="2" />
<text  x="126.80" y="799.5" ></text>
</g>
<g >
<title>tg/crypto/bn256/cloudflare.(*gfP2).Mul (65 samples, 0.01%)</title><rect x="502.7" y="245" width="0.1" height="15.0" fill="rgb(220,16,8)" rx="2" ry="2" />
<text  x="505.70" y="255.5" ></text>
</g>
<g >
<title>tg/core/rawdb.ReadTransactions.func1 (3,931 samples, 0.57%)</title><rect x="196.9" y="485" width="6.7" height="15.0" fill="rgb(217,168,16)" rx="2" ry="2" />
<text  x="199.93" y="495.5" ></text>
</g>
<g >
<title>sort.symMerge (6,050 samples, 0.87%)</title><rect x="182.8" y="405" width="10.2" height="15.0" fill="rgb(220,74,31)" rx="2" ry="2" />
<text  x="185.75" y="415.5" ></text>
</g>
<g >
<title>tg/core/types.rlpHash (4,515 samples, 0.65%)</title><rect x="222.4" y="613" width="7.7" height="15.0" fill="rgb(250,16,13)" rx="2" ry="2" />
<text  x="225.40" y="623.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).getVal1 (69 samples, 0.01%)</title><rect x="396.8" y="341" width="0.1" height="15.0" fill="rgb(215,144,25)" rx="2" ry="2" />
<text  x="399.82" y="351.5" ></text>
</g>
<g >
<title>tg/ethdb.(*LmdbKV).View (574 samples, 0.08%)</title><rect x="232.5" y="709" width="1.0" height="15.0" fill="rgb(238,90,11)" rx="2" ry="2" />
<text  x="235.49" y="719.5" ></text>
</g>
<g >
<title>tg/core/vm/stack.(*Stack).Pop (151 samples, 0.02%)</title><rect x="494.0" y="469" width="0.3" height="15.0" fill="rgb(252,77,44)" rx="2" ry="2" />
<text  x="497.02" y="479.5" ></text>
</g>
<g >
<title>tg/rlp.cachedTypeInfo (101 samples, 0.01%)</title><rect x="229.9" y="565" width="0.2" height="15.0" fill="rgb(244,105,20)" rx="2" ry="2" />
<text  x="232.90" y="575.5" ></text>
</g>
<g >
<title>runtime.exitsyscallfast (145 samples, 0.02%)</title><rect x="726.9" y="517" width="0.2" height="15.0" fill="rgb(250,66,2)" rx="2" ry="2" />
<text  x="729.87" y="527.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (67 samples, 0.01%)</title><rect x="164.4" y="437" width="0.1" height="15.0" fill="rgb(232,118,4)" rx="2" ry="2" />
<text  x="167.39" y="447.5" ></text>
</g>
<g >
<title>tg/rlp.(*encbuf).encodeString (137 samples, 0.02%)</title><rect x="745.7" y="501" width="0.2" height="15.0" fill="rgb(254,11,22)" rx="2" ry="2" />
<text  x="748.69" y="511.5" ></text>
</g>
<g >
<title>tg/rlp.cachedTypeInfo (114 samples, 0.02%)</title><rect x="1111.9" y="565" width="0.2" height="15.0" fill="rgb(245,6,7)" rx="2" ry="2" />
<text  x="1114.95" y="575.5" ></text>
</g>
<g >
<title>bytes.Compare (125 samples, 0.02%)</title><rect x="1073.8" y="357" width="0.2" height="15.0" fill="rgb(229,178,50)" rx="2" ry="2" />
<text  x="1076.78" y="367.5" ></text>
</g>
<g >
<title>tg/core/state.updateAccount (5,916 samples, 0.85%)</title><rect x="633.4" y="661" width="10.0" height="15.0" fill="rgb(228,117,37)" rx="2" ry="2" />
<text  x="636.39" y="671.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (107 samples, 0.02%)</title><rect x="852.2" y="501" width="0.2" height="15.0" fill="rgb(205,40,47)" rx="2" ry="2" />
<text  x="855.22" y="511.5" ></text>
</g>
<g >
<title>runtime.mapiternext (130 samples, 0.02%)</title><rect x="985.4" y="549" width="0.2" height="15.0" fill="rgb(237,141,1)" rx="2" ry="2" />
<text  x="988.40" y="559.5" ></text>
</g>
<g >
<title>cmpbody (126 samples, 0.02%)</title><rect x="1074.2" y="325" width="0.2" height="15.0" fill="rgb(230,139,51)" rx="2" ry="2" />
<text  x="1077.21" y="335.5" ></text>
</g>
<g >
<title>bytes.Compare (281 samples, 0.04%)</title><rect x="189.3" y="245" width="0.5" height="15.0" fill="rgb(248,98,23)" rx="2" ry="2" />
<text  x="192.33" y="255.5" ></text>
</g>
<g >
<title>tg/common/etl.extractBucketIntoFiles (22,523 samples, 3.24%)</title><rect x="176.5" y="693" width="38.3" height="15.0" fill="rgb(214,0,11)" rx="2" ry="2" />
<text  x="179.54" y="703.5" >tg/..</text>
</g>
<g >
<title>runtime.(*mheap).alloc (85 samples, 0.01%)</title><rect x="1010.3" y="469" width="0.1" height="15.0" fill="rgb(224,186,36)" rx="2" ry="2" />
<text  x="1013.29" y="479.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*Decoder).decode (646 samples, 0.09%)</title><rect x="1089.0" y="613" width="1.1" height="15.0" fill="rgb(232,159,20)" rx="2" ry="2" />
<text  x="1091.98" y="623.5" ></text>
</g>
<g >
<title>runtime.convTslice (152 samples, 0.02%)</title><rect x="196.2" y="533" width="0.2" height="15.0" fill="rgb(229,141,17)" rx="2" ry="2" />
<text  x="199.16" y="543.5" ></text>
</g>
<g >
<title>cmpbody (68 samples, 0.01%)</title><rect x="728.7" y="581" width="0.1" height="15.0" fill="rgb(228,171,39)" rx="2" ry="2" />
<text  x="731.69" y="591.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring/internal.(*ByteInputAdapter).Next (91 samples, 0.01%)</title><rect x="1092.5" y="597" width="0.2" height="15.0" fill="rgb(244,148,29)" rx="2" ry="2" />
<text  x="1095.55" y="607.5" ></text>
</g>
<g >
<title>tg/ethdb/bitmapdb.CutLeft64.func1 (265 samples, 0.04%)</title><rect x="1056.3" y="597" width="0.4" height="15.0" fill="rgb(239,151,11)" rx="2" ry="2" />
<text  x="1059.28" y="607.5" ></text>
</g>
<g >
<title>runtime.cgoCheckUnknownPointer (141 samples, 0.02%)</title><rect x="946.5" y="437" width="0.2" height="15.0" fill="rgb(213,6,39)" rx="2" ry="2" />
<text  x="949.47" y="447.5" ></text>
</g>
<g >
<title>runtime.memmove (87 samples, 0.01%)</title><rect x="985.2" y="533" width="0.2" height="15.0" fill="rgb(216,133,44)" rx="2" ry="2" />
<text  x="988.25" y="543.5" ></text>
</g>
<g >
<title>runtime.unlock2 (185 samples, 0.03%)</title><rect x="100.0" y="789" width="0.3" height="15.0" fill="rgb(207,10,17)" rx="2" ry="2" />
<text  x="103.03" y="799.5" ></text>
</g>
<g >
<title>tg/rlp.Encode (2,200 samples, 0.32%)</title><rect x="1108.4" y="597" width="3.7" height="15.0" fill="rgb(214,82,7)" rx="2" ry="2" />
<text  x="1111.40" y="607.5" ></text>
</g>
<g >
<title>cmpbody (123 samples, 0.02%)</title><rect x="1027.4" y="485" width="0.2" height="15.0" fill="rgb(233,176,19)" rx="2" ry="2" />
<text  x="1030.38" y="495.5" ></text>
</g>
<g >
<title>runtime.evacuate (65 samples, 0.01%)</title><rect x="698.7" y="581" width="0.1" height="15.0" fill="rgb(248,128,30)" rx="2" ry="2" />
<text  x="701.70" y="591.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (140 samples, 0.02%)</title><rect x="832.1" y="389" width="0.2" height="15.0" fill="rgb(240,227,20)" rx="2" ry="2" />
<text  x="835.07" y="399.5" ></text>
</g>
<g >
<title>cmpbody (165 samples, 0.02%)</title><rect x="868.8" y="245" width="0.3" height="15.0" fill="rgb(206,10,30)" rx="2" ry="2" />
<text  x="871.80" y="255.5" ></text>
</g>
<g >
<title>runtime.systemstack (79 samples, 0.01%)</title><rect x="768.1" y="485" width="0.1" height="15.0" fill="rgb(250,211,13)" rx="2" ry="2" />
<text  x="771.08" y="495.5" ></text>
</g>
<g >
<title>tg/rlp.(*Stream).Kind (178 samples, 0.03%)</title><rect x="1184.6" y="501" width="0.3" height="15.0" fill="rgb(254,149,35)" rx="2" ry="2" />
<text  x="1187.64" y="511.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).Call (159 samples, 0.02%)</title><rect x="416.1" y="389" width="0.3" height="15.0" fill="rgb(229,96,43)" rx="2" ry="2" />
<text  x="419.11" y="399.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring/roaring64.New (105 samples, 0.02%)</title><rect x="1095.7" y="629" width="0.2" height="15.0" fill="rgb(205,30,44)" rx="2" ry="2" />
<text  x="1098.67" y="639.5" ></text>
</g>
<g >
<title>tg/p2p.(*Server).SetupConn (363 samples, 0.05%)</title><rect x="1187.2" y="821" width="0.6" height="15.0" fill="rgb(224,18,14)" rx="2" ry="2" />
<text  x="1190.20" y="831.5" ></text>
</g>
<g >
<title>runtime.mallocgc (110 samples, 0.02%)</title><rect x="202.2" y="309" width="0.2" height="15.0" fill="rgb(242,159,45)" rx="2" ry="2" />
<text  x="205.23" y="319.5" ></text>
</g>
<g >
<title>runtime.cgoIsGoPointer (137 samples, 0.02%)</title><rect x="1025.4" y="533" width="0.2" height="15.0" fill="rgb(240,140,54)" rx="2" ry="2" />
<text  x="1028.37" y="543.5" ></text>
</g>
<g >
<title>tg/core/vm.opMul (166 samples, 0.02%)</title><rect x="541.1" y="597" width="0.3" height="15.0" fill="rgb(240,196,7)" rx="2" ry="2" />
<text  x="544.09" y="607.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (65 samples, 0.01%)</title><rect x="788.5" y="405" width="0.1" height="15.0" fill="rgb(230,38,2)" rx="2" ry="2" />
<text  x="791.51" y="415.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.rangeOfOnes (410 samples, 0.06%)</title><rect x="147.3" y="597" width="0.7" height="15.0" fill="rgb(229,209,42)" rx="2" ry="2" />
<text  x="150.28" y="607.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (389 samples, 0.06%)</title><rect x="767.7" y="565" width="0.6" height="15.0" fill="rgb(227,141,3)" rx="2" ry="2" />
<text  x="770.65" y="575.5" ></text>
</g>
<g >
<title>runtime.lock2 (71 samples, 0.01%)</title><rect x="950.5" y="421" width="0.1" height="15.0" fill="rgb(223,197,24)" rx="2" ry="2" />
<text  x="953.46" y="431.5" ></text>
</g>
<g >
<title>runtime._System (365 samples, 0.05%)</title><rect x="10.0" y="869" width="0.6" height="15.0" fill="rgb(205,23,6)" rx="2" ry="2" />
<text  x="13.01" y="879.5" ></text>
</g>
<g >
<title>tg/core/state.(*stateObject).SetBalance (443 samples, 0.06%)</title><rect x="262.8" y="597" width="0.8" height="15.0" fill="rgb(224,42,8)" rx="2" ry="2" />
<text  x="265.83" y="607.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*decRd).readn1 (59 samples, 0.01%)</title><rect x="169.5" y="517" width="0.1" height="15.0" fill="rgb(211,183,4)" rx="2" ry="2" />
<text  x="172.48" y="527.5" ></text>
</g>
<g >
<title>tg/core/vm.opMstore (113 samples, 0.02%)</title><rect x="449.5" y="469" width="0.2" height="15.0" fill="rgb(246,160,42)" rx="2" ry="2" />
<text  x="452.50" y="479.5" ></text>
</g>
<g >
<title>tg/rlp.decodeUint256 (760 samples, 0.11%)</title><rect x="200.1" y="357" width="1.2" height="15.0" fill="rgb(254,136,8)" rx="2" ry="2" />
<text  x="203.06" y="367.5" ></text>
</g>
<g >
<title>tg/core/vm.run (1,784 samples, 0.26%)</title><rect x="393.0" y="437" width="3.0" height="15.0" fill="rgb(253,14,41)" rx="2" ry="2" />
<text  x="395.98" y="447.5" ></text>
</g>
<g >
<title>tg/core/state.(*PlainStateReader).ReadAccountCode (226 samples, 0.03%)</title><rect x="370.3" y="469" width="0.4" height="15.0" fill="rgb(248,28,14)" rx="2" ry="2" />
<text  x="373.33" y="479.5" ></text>
</g>
<g >
<title>runtime.(*itabTableType).find (90 samples, 0.01%)</title><rect x="968.0" y="581" width="0.2" height="15.0" fill="rgb(209,29,49)" rx="2" ry="2" />
<text  x="971.03" y="591.5" ></text>
</g>
<g >
<title>runtime.mProf_Malloc (60 samples, 0.01%)</title><rect x="1055.9" y="453" width="0.1" height="15.0" fill="rgb(215,158,27)" rx="2" ry="2" />
<text  x="1058.92" y="463.5" ></text>
</g>
<g >
<title>sort.symMerge (7,428 samples, 1.07%)</title><rect x="180.5" y="453" width="12.6" height="15.0" fill="rgb(230,105,6)" rx="2" ry="2" />
<text  x="183.53" y="463.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (63 samples, 0.01%)</title><rect x="1183.0" y="485" width="0.2" height="15.0" fill="rgb(243,130,5)" rx="2" ry="2" />
<text  x="1186.05" y="495.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).getVal0 (557 samples, 0.08%)</title><rect x="793.6" y="597" width="0.9" height="15.0" fill="rgb(254,11,19)" rx="2" ry="2" />
<text  x="796.57" y="607.5" ></text>
</g>
<g >
<title>sort.Search (69 samples, 0.01%)</title><rect x="665.4" y="517" width="0.1" height="15.0" fill="rgb(254,65,5)" rx="2" ry="2" />
<text  x="668.39" y="527.5" ></text>
</g>
<g >
<title>tg/core/vm.opCall (75 samples, 0.01%)</title><rect x="493.3" y="405" width="0.1" height="15.0" fill="rgb(254,31,48)" rx="2" ry="2" />
<text  x="496.31" y="415.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).GetBalance (84 samples, 0.01%)</title><rect x="263.8" y="629" width="0.1" height="15.0" fill="rgb(224,72,29)" rx="2" ry="2" />
<text  x="266.78" y="639.5" ></text>
</g>
<g >
<title>runtime.mallocgc (102 samples, 0.01%)</title><rect x="816.4" y="629" width="0.2" height="15.0" fill="rgb(244,168,43)" rx="2" ry="2" />
<text  x="819.40" y="639.5" ></text>
</g>
<g >
<title>tg/core/state.(*PlainStateReader).ReadAccountStorage (187 samples, 0.03%)</title><rect x="385.8" y="277" width="0.3" height="15.0" fill="rgb(240,34,33)" rx="2" ry="2" />
<text  x="388.79" y="287.5" ></text>
</g>
<g >
<title>tg/ethdb.(*MutationItem).Less (1,187 samples, 0.17%)</title><rect x="680.4" y="501" width="2.1" height="15.0" fill="rgb(243,162,0)" rx="2" ry="2" />
<text  x="683.44" y="511.5" ></text>
</g>
<g >
<title>sync.(*WaitGroup).Add (203 samples, 0.03%)</title><rect x="910.8" y="501" width="0.3" height="15.0" fill="rgb(235,165,17)" rx="2" ry="2" />
<text  x="913.76" y="511.5" ></text>
</g>
<g >
<title>bytes.Compare (66 samples, 0.01%)</title><rect x="1027.9" y="469" width="0.1" height="15.0" fill="rgb(244,131,50)" rx="2" ry="2" />
<text  x="1030.88" y="479.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (177 samples, 0.03%)</title><rect x="628.0" y="629" width="0.3" height="15.0" fill="rgb(219,19,38)" rx="2" ry="2" />
<text  x="630.98" y="639.5" ></text>
</g>
<g >
<title>runtime.mallocgc (66 samples, 0.01%)</title><rect x="1049.4" y="629" width="0.1" height="15.0" fill="rgb(216,185,50)" rx="2" ry="2" />
<text  x="1052.38" y="639.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (7,551 samples, 1.09%)</title><rect x="245.6" y="549" width="12.8" height="15.0" fill="rgb(206,197,34)" rx="2" ry="2" />
<text  x="248.59" y="559.5" ></text>
</g>
<g >
<title>runtime.growslice (447 samples, 0.06%)</title><rect x="458.1" y="533" width="0.8" height="15.0" fill="rgb(219,69,3)" rx="2" ry="2" />
<text  x="461.12" y="543.5" ></text>
</g>
<g >
<title>runtime.reentersyscall (78 samples, 0.01%)</title><rect x="1177.3" y="661" width="0.1" height="15.0" fill="rgb(212,70,44)" rx="2" ry="2" />
<text  x="1180.28" y="671.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (158 samples, 0.02%)</title><rect x="734.7" y="581" width="0.3" height="15.0" fill="rgb(214,196,36)" rx="2" ry="2" />
<text  x="737.70" y="591.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).AddBalance (550 samples, 0.08%)</title><rect x="452.1" y="517" width="1.0" height="15.0" fill="rgb(219,141,32)" rx="2" ry="2" />
<text  x="455.15" y="527.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.keccakF1600 (114 samples, 0.02%)</title><rect x="449.8" y="405" width="0.2" height="15.0" fill="rgb(227,201,38)" rx="2" ry="2" />
<text  x="452.84" y="415.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (289 samples, 0.04%)</title><rect x="422.5" y="421" width="0.5" height="15.0" fill="rgb(232,33,20)" rx="2" ry="2" />
<text  x="425.47" y="431.5" ></text>
</g>
<g >
<title>tg/crypto/bn256/cloudflare.(*gfP6).Mul (160 samples, 0.02%)</title><rect x="503.3" y="277" width="0.3" height="15.0" fill="rgb(220,202,31)" rx="2" ry="2" />
<text  x="506.34" y="287.5" ></text>
</g>
<g >
<title>bytes.Compare (277 samples, 0.04%)</title><rect x="718.0" y="517" width="0.5" height="15.0" fill="rgb(222,59,31)" rx="2" ry="2" />
<text  x="721.01" y="527.5" ></text>
</g>
<g >
<title>tg/core/state.(*stateObject).GetCommittedState (21,625 samples, 3.11%)</title><rect x="557.3" y="549" width="36.8" height="15.0" fill="rgb(217,37,33)" rx="2" ry="2" />
<text  x="560.34" y="559.5" >tg/..</text>
</g>
<g >
<title>runtime.cgocall (2,260 samples, 0.33%)</title><rect x="952.3" y="517" width="3.8" height="15.0" fill="rgb(211,40,51)" rx="2" ry="2" />
<text  x="955.31" y="527.5" ></text>
</g>
<g >
<title>tg/common/changeset.Walk (17,094 samples, 2.46%)</title><rect x="1057.9" y="709" width="29.0" height="15.0" fill="rgb(242,68,30)" rx="2" ry="2" />
<text  x="1060.89" y="719.5" >tg..</text>
</g>
<g >
<title>tg/core/vm.opStaticCall (100 samples, 0.01%)</title><rect x="415.6" y="405" width="0.2" height="15.0" fill="rgb(232,134,11)" rx="2" ry="2" />
<text  x="418.65" y="415.5" ></text>
</g>
<g >
<title>cmpbody (101 samples, 0.01%)</title><rect x="866.7" y="325" width="0.2" height="15.0" fill="rgb(224,50,10)" rx="2" ry="2" />
<text  x="869.73" y="335.5" ></text>
</g>
<g >
<title>runtime.getitab (74 samples, 0.01%)</title><rect x="723.6" y="597" width="0.1" height="15.0" fill="rgb(208,172,35)" rx="2" ry="2" />
<text  x="726.61" y="607.5" ></text>
</g>
<g >
<title>tg/rlp.decodeUint256NoPtr (1,092 samples, 0.16%)</title><rect x="199.5" y="373" width="1.8" height="15.0" fill="rgb(218,47,16)" rx="2" ry="2" />
<text  x="202.49" y="383.5" ></text>
</g>
<g >
<title>runtime.mallocgc (119 samples, 0.02%)</title><rect x="199.0" y="325" width="0.2" height="15.0" fill="rgb(225,100,18)" rx="2" ry="2" />
<text  x="201.99" y="335.5" ></text>
</g>
<g >
<title>tg/core/vm.opSload (128 samples, 0.02%)</title><rect x="463.2" y="453" width="0.2" height="15.0" fill="rgb(224,121,19)" rx="2" ry="2" />
<text  x="466.15" y="463.5" ></text>
</g>
<g >
<title>runtime.unlock2 (135 samples, 0.02%)</title><rect x="894.1" y="485" width="0.2" height="15.0" fill="rgb(206,168,35)" rx="2" ry="2" />
<text  x="897.10" y="495.5" ></text>
</g>
<g >
<title>tg/core/types.rlpHash (226 samples, 0.03%)</title><rect x="1166.2" y="789" width="0.4" height="15.0" fill="rgb(254,26,32)" rx="2" ry="2" />
<text  x="1169.19" y="799.5" ></text>
</g>
<g >
<title>runtime.stopm (1,058 samples, 0.15%)</title><rect x="118.4" y="805" width="1.7" height="15.0" fill="rgb(238,96,18)" rx="2" ry="2" />
<text  x="121.35" y="815.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (63 samples, 0.01%)</title><rect x="1051.2" y="517" width="0.1" height="15.0" fill="rgb(238,125,5)" rx="2" ry="2" />
<text  x="1054.19" y="527.5" ></text>
</g>
<g >
<title>runtime.duffzero (298 samples, 0.04%)</title><rect x="635.4" y="629" width="0.5" height="15.0" fill="rgb(230,38,26)" rx="2" ry="2" />
<text  x="638.39" y="639.5" ></text>
</g>
<g >
<title>tg/core/vm.run (76 samples, 0.01%)</title><rect x="484.7" y="181" width="0.1" height="15.0" fill="rgb(214,37,44)" rx="2" ry="2" />
<text  x="487.70" y="191.5" ></text>
</g>
<g >
<title>runtime.makeslice (116 samples, 0.02%)</title><rect x="1183.0" y="517" width="0.2" height="15.0" fill="rgb(245,130,53)" rx="2" ry="2" />
<text  x="1186.01" y="527.5" ></text>
</g>
<g >
<title>tg/core/vm.run (88 samples, 0.01%)</title><rect x="484.5" y="117" width="0.1" height="15.0" fill="rgb(214,79,26)" rx="2" ry="2" />
<text  x="487.48" y="127.5" ></text>
</g>
<g >
<title>tg/core/vm.opDelegateCall (939 samples, 0.14%)</title><rect x="514.5" y="469" width="1.6" height="15.0" fill="rgb(244,37,14)" rx="2" ry="2" />
<text  x="517.49" y="479.5" ></text>
</g>
<g >
<title>tg/rlp.(*Stream).readKind (106 samples, 0.02%)</title><rect x="218.6" y="357" width="0.2" height="15.0" fill="rgb(205,129,4)" rx="2" ry="2" />
<text  x="221.62" y="367.5" ></text>
</g>
<g >
<title>tg/common/etl.readElementFromDisk (298 samples, 0.04%)</title><rect x="145.1" y="661" width="0.5" height="15.0" fill="rgb(239,142,30)" rx="2" ry="2" />
<text  x="148.12" y="671.5" ></text>
</g>
<g >
<title>runtime.systemstack (303 samples, 0.04%)</title><rect x="929.6" y="453" width="0.5" height="15.0" fill="rgb(254,124,27)" rx="2" ry="2" />
<text  x="932.61" y="463.5" ></text>
</g>
<g >
<title>tg/core/state.(*ChangeSetWriter).GetAccountChanges (710 samples, 0.10%)</title><rect x="734.2" y="677" width="1.2" height="15.0" fill="rgb(245,30,46)" rx="2" ry="2" />
<text  x="737.19" y="687.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.NewLegacyKeccak256 (76 samples, 0.01%)</title><rect x="1134.2" y="805" width="0.1" height="15.0" fill="rgb(224,207,36)" rx="2" ry="2" />
<text  x="1137.16" y="815.5" ></text>
</g>
<g >
<title>tg/core/vm.opDelegateCall (63 samples, 0.01%)</title><rect x="493.4" y="405" width="0.1" height="15.0" fill="rgb(209,169,3)" rx="2" ry="2" />
<text  x="496.43" y="415.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).Call (107 samples, 0.02%)</title><rect x="479.0" y="261" width="0.2" height="15.0" fill="rgb(242,122,19)" rx="2" ry="2" />
<text  x="481.97" y="271.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.(*state).Write (267 samples, 0.04%)</title><rect x="769.5" y="613" width="0.4" height="15.0" fill="rgb(213,180,30)" rx="2" ry="2" />
<text  x="772.49" y="623.5" ></text>
</g>
<g >
<title>tg/core/vm.opStaticCall (591 samples, 0.09%)</title><rect x="450.5" y="469" width="1.0" height="15.0" fill="rgb(225,222,7)" rx="2" ry="2" />
<text  x="453.53" y="479.5" ></text>
</g>
<g >
<title>tg/p2p.(*dialScheduler).startDial.func1 (419 samples, 0.06%)</title><rect x="1187.2" y="869" width="0.7" height="15.0" fill="rgb(239,31,15)" rx="2" ry="2" />
<text  x="1190.20" y="879.5" ></text>
</g>
<g >
<title>runtime.makeslice (121 samples, 0.02%)</title><rect x="933.5" y="485" width="0.2" height="15.0" fill="rgb(224,111,5)" rx="2" ry="2" />
<text  x="936.50" y="495.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find (94 samples, 0.01%)</title><rect x="321.1" y="453" width="0.2" height="15.0" fill="rgb(224,15,17)" rx="2" ry="2" />
<text  x="324.12" y="463.5" ></text>
</g>
<g >
<title>tg/common/etl.(*oldestEntrySortableBuffer).Swap (63 samples, 0.01%)</title><rect x="869.1" y="229" width="0.1" height="15.0" fill="rgb(227,199,24)" rx="2" ry="2" />
<text  x="872.13" y="239.5" ></text>
</g>
<g >
<title>tg/rlp.makePtrWriter.func1 (163 samples, 0.02%)</title><rect x="210.9" y="405" width="0.3" height="15.0" fill="rgb(209,204,26)" rx="2" ry="2" />
<text  x="213.92" y="415.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (83 samples, 0.01%)</title><rect x="146.8" y="485" width="0.2" height="15.0" fill="rgb(242,119,46)" rx="2" ry="2" />
<text  x="149.81" y="495.5" ></text>
</g>
<g >
<title>tg/ethdb.(*LmdbCursor).initCursor (2,086 samples, 0.30%)</title><rect x="930.2" y="501" width="3.5" height="15.0" fill="rgb(239,147,28)" rx="2" ry="2" />
<text  x="933.16" y="511.5" ></text>
</g>
<g >
<title>sync.(*Pool).Get (79 samples, 0.01%)</title><rect x="760.9" y="645" width="0.1" height="15.0" fill="rgb(216,208,9)" rx="2" ry="2" />
<text  x="763.89" y="655.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (174 samples, 0.03%)</title><rect x="658.9" y="613" width="0.3" height="15.0" fill="rgb(244,200,44)" rx="2" ry="2" />
<text  x="661.94" y="623.5" ></text>
</g>
<g >
<title>runtime.newobject (734 samples, 0.11%)</title><rect x="624.9" y="645" width="1.2" height="15.0" fill="rgb(252,19,50)" rx="2" ry="2" />
<text  x="627.88" y="655.5" ></text>
</g>
<g >
<title>tg/core/vm.makeDup.func1 (79 samples, 0.01%)</title><rect x="412.0" y="469" width="0.2" height="15.0" fill="rgb(230,26,14)" rx="2" ry="2" />
<text  x="415.03" y="479.5" ></text>
</g>
<g >
<title>tg/rlp.cachedWriter (134 samples, 0.02%)</title><rect x="227.8" y="501" width="0.2" height="15.0" fill="rgb(213,0,8)" rx="2" ry="2" />
<text  x="230.81" y="511.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find (567 samples, 0.08%)</title><rect x="689.6" y="597" width="1.0" height="15.0" fill="rgb(234,69,18)" rx="2" ry="2" />
<text  x="692.62" y="607.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find (227 samples, 0.03%)</title><rect x="1121.0" y="661" width="0.4" height="15.0" fill="rgb(250,177,52)" rx="2" ry="2" />
<text  x="1124.00" y="671.5" ></text>
</g>
<g >
<title>tg/core/vm.run (557 samples, 0.08%)</title><rect x="603.6" y="501" width="0.9" height="15.0" fill="rgb(254,114,8)" rx="2" ry="2" />
<text  x="606.59" y="511.5" ></text>
</g>
<g >
<title>tg/core/vm.opDelegateCall (518 samples, 0.07%)</title><rect x="386.7" y="405" width="0.9" height="15.0" fill="rgb(224,113,35)" rx="2" ry="2" />
<text  x="389.71" y="415.5" ></text>
</g>
<g >
<title>runtime.mallocgc (81 samples, 0.01%)</title><rect x="1048.2" y="613" width="0.1" height="15.0" fill="rgb(205,190,6)" rx="2" ry="2" />
<text  x="1051.18" y="623.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (385 samples, 0.06%)</title><rect x="661.6" y="613" width="0.7" height="15.0" fill="rgb(240,206,30)" rx="2" ry="2" />
<text  x="664.64" y="623.5" ></text>
</g>
<g >
<title>runtime.notewakeup (129 samples, 0.02%)</title><rect x="124.7" y="805" width="0.2" height="15.0" fill="rgb(226,50,22)" rx="2" ry="2" />
<text  x="127.73" y="815.5" ></text>
</g>
<g >
<title>tg/p2p/rlpx.(*handshakeState).readFrame (1,744 samples, 0.25%)</title><rect x="1177.5" y="821" width="2.9" height="15.0" fill="rgb(213,217,18)" rx="2" ry="2" />
<text  x="1180.47" y="831.5" ></text>
</g>
<g >
<title>tg/core/vm/stack.(*Stack).Pop (87 samples, 0.01%)</title><rect x="609.7" y="533" width="0.1" height="15.0" fill="rgb(215,4,4)" rx="2" ry="2" />
<text  x="612.69" y="543.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find (75 samples, 0.01%)</title><rect x="504.3" y="373" width="0.2" height="15.0" fill="rgb(214,77,46)" rx="2" ry="2" />
<text  x="507.33" y="383.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find (60 samples, 0.01%)</title><rect x="390.2" y="245" width="0.1" height="15.0" fill="rgb(248,180,17)" rx="2" ry="2" />
<text  x="393.25" y="255.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (417 samples, 0.06%)</title><rect x="320.7" y="485" width="0.7" height="15.0" fill="rgb(207,29,40)" rx="2" ry="2" />
<text  x="323.66" y="495.5" ></text>
</g>
<g >
<title>tg/ethdb.(*mutation).Put (9,924 samples, 1.43%)</title><rect x="704.0" y="629" width="16.9" height="15.0" fill="rgb(227,166,22)" rx="2" ry="2" />
<text  x="707.02" y="639.5" ></text>
</g>
<g >
<title>sort.Search (221 samples, 0.03%)</title><rect x="401.6" y="261" width="0.4" height="15.0" fill="rgb(228,83,50)" rx="2" ry="2" />
<text  x="404.59" y="271.5" ></text>
</g>
<g >
<title>sort.symMerge (200 samples, 0.03%)</title><rect x="1040.2" y="533" width="0.3" height="15.0" fill="rgb(251,147,18)" rx="2" ry="2" />
<text  x="1043.19" y="543.5" ></text>
</g>
<g >
<title>runtime.mallocgc (95 samples, 0.01%)</title><rect x="330.3" y="501" width="0.2" height="15.0" fill="rgb(238,46,2)" rx="2" ry="2" />
<text  x="333.32" y="511.5" ></text>
</g>
<g >
<title>tg/core/state.(*stateObject).GetState (99 samples, 0.01%)</title><rect x="485.5" y="309" width="0.1" height="15.0" fill="rgb(224,20,12)" rx="2" ry="2" />
<text  x="488.46" y="319.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (99 samples, 0.01%)</title><rect x="500.5" y="325" width="0.1" height="15.0" fill="rgb(227,61,42)" rx="2" ry="2" />
<text  x="503.47" y="335.5" ></text>
</g>
<g >
<title>bytes.NewBuffer (153 samples, 0.02%)</title><rect x="1058.7" y="629" width="0.2" height="15.0" fill="rgb(210,134,37)" rx="2" ry="2" />
<text  x="1061.66" y="639.5" ></text>
</g>
<g >
<title>tg/core/state.(*stateObject).GetState (982 samples, 0.14%)</title><rect x="322.6" y="565" width="1.6" height="15.0" fill="rgb(217,156,44)" rx="2" ry="2" />
<text  x="325.58" y="575.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb._Cfunc_lmdbgo_mdb_cursor_put2 (997 samples, 0.14%)</title><rect x="820.6" y="533" width="1.6" height="15.0" fill="rgb(245,198,43)" rx="2" ry="2" />
<text  x="823.56" y="543.5" ></text>
</g>
<g >
<title>sort.doPivot (118 samples, 0.02%)</title><rect x="1027.9" y="485" width="0.2" height="15.0" fill="rgb(212,35,50)" rx="2" ry="2" />
<text  x="1030.86" y="495.5" ></text>
</g>
<g >
<title>tg/common/etl.(*currentTableReader).Get (232 samples, 0.03%)</title><rect x="1049.5" y="661" width="0.4" height="15.0" fill="rgb(228,62,25)" rx="2" ry="2" />
<text  x="1052.52" y="671.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb._Cfunc_lmdbgo_mdb_cursor_get1 (1,331 samples, 0.19%)</title><rect x="289.9" y="485" width="2.2" height="15.0" fill="rgb(249,189,49)" rx="2" ry="2" />
<text  x="292.85" y="495.5" ></text>
</g>
<g >
<title>tg/crypto/bn256/cloudflare.finalExponentiation (194 samples, 0.03%)</title><rect x="502.5" y="309" width="0.4" height="15.0" fill="rgb(209,221,51)" rx="2" ry="2" />
<text  x="505.55" y="319.5" ></text>
</g>
<g >
<title>runtime.mallocgc (285 samples, 0.04%)</title><rect x="876.6" y="533" width="0.5" height="15.0" fill="rgb(222,106,20)" rx="2" ry="2" />
<text  x="879.57" y="543.5" ></text>
</g>
<g >
<title>tg/core/vm.opSha3 (644 samples, 0.09%)</title><rect x="399.4" y="469" width="1.1" height="15.0" fill="rgb(252,146,46)" rx="2" ry="2" />
<text  x="402.44" y="479.5" ></text>
</g>
<g >
<title>runtime.futex (127 samples, 0.02%)</title><rect x="122.3" y="757" width="0.2" height="15.0" fill="rgb(215,53,2)" rx="2" ry="2" />
<text  x="125.32" y="767.5" ></text>
</g>
<g >
<title>tg/core.CanTransfer (93 samples, 0.01%)</title><rect x="263.8" y="645" width="0.1" height="15.0" fill="rgb(208,140,36)" rx="2" ry="2" />
<text  x="266.76" y="655.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb._Cfunc_lmdbgo_mdb_cursor_get1 (165 samples, 0.02%)</title><rect x="461.7" y="405" width="0.3" height="15.0" fill="rgb(239,60,16)" rx="2" ry="2" />
<text  x="464.71" y="415.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).Call (69 samples, 0.01%)</title><rect x="493.3" y="325" width="0.1" height="15.0" fill="rgb(239,39,14)" rx="2" ry="2" />
<text  x="496.31" y="335.5" ></text>
</g>
<g >
<title>tg/ethdb.(*LmdbCursor).getBothRange (256 samples, 0.04%)</title><rect x="607.6" y="421" width="0.4" height="15.0" fill="rgb(211,96,26)" rx="2" ry="2" />
<text  x="610.56" y="431.5" ></text>
</g>
<g >
<title>runtime.memhash_varlen (219 samples, 0.03%)</title><rect x="637.1" y="613" width="0.4" height="15.0" fill="rgb(218,55,40)" rx="2" ry="2" />
<text  x="640.11" y="623.5" ></text>
</g>
<g >
<title>tg/core/types/accounts.(*Account).IsEmptyCodeHash (70 samples, 0.01%)</title><rect x="671.7" y="645" width="0.1" height="15.0" fill="rgb(249,101,45)" rx="2" ry="2" />
<text  x="674.72" y="655.5" ></text>
</g>
<g >
<title>runtime.convT64 (141 samples, 0.02%)</title><rect x="831.4" y="469" width="0.2" height="15.0" fill="rgb(238,162,19)" rx="2" ry="2" />
<text  x="834.38" y="479.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring/roaring64.(*Bitmap).Or (318 samples, 0.05%)</title><rect x="1047.9" y="661" width="0.5" height="15.0" fill="rgb(222,194,10)" rx="2" ry="2" />
<text  x="1050.86" y="671.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (144 samples, 0.02%)</title><rect x="641.4" y="565" width="0.2" height="15.0" fill="rgb(216,7,15)" rx="2" ry="2" />
<text  x="644.38" y="575.5" ></text>
</g>
<g >
<title>runtime.newobject (88 samples, 0.01%)</title><rect x="1098.4" y="581" width="0.2" height="15.0" fill="rgb(225,216,28)" rx="2" ry="2" />
<text  x="1101.45" y="591.5" ></text>
</g>
<g >
<title>runtime.growslice (85 samples, 0.01%)</title><rect x="610.2" y="533" width="0.1" height="15.0" fill="rgb(232,180,9)" rx="2" ry="2" />
<text  x="613.16" y="543.5" ></text>
</g>
<g >
<title>sort.swapRange (217 samples, 0.03%)</title><rect x="863.9" y="437" width="0.3" height="15.0" fill="rgb(249,166,20)" rx="2" ry="2" />
<text  x="866.87" y="447.5" ></text>
</g>
<g >
<title>tg/rlp.cachedTypeInfo (123 samples, 0.02%)</title><rect x="747.6" y="549" width="0.2" height="15.0" fill="rgb(205,228,15)" rx="2" ry="2" />
<text  x="750.61" y="559.5" ></text>
</g>
<g >
<title>tg/core/vm.(*Contract).GetByte (77 samples, 0.01%)</title><rect x="361.8" y="533" width="0.1" height="15.0" fill="rgb(221,95,54)" rx="2" ry="2" />
<text  x="364.81" y="543.5" ></text>
</g>
<g >
<title>sort.rotate (80 samples, 0.01%)</title><rect x="991.7" y="309" width="0.1" height="15.0" fill="rgb(229,134,18)" rx="2" ry="2" />
<text  x="994.67" y="319.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).getStateObject (220 samples, 0.03%)</title><rect x="396.3" y="437" width="0.4" height="15.0" fill="rgb(252,172,2)" rx="2" ry="2" />
<text  x="399.33" y="447.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*encWr).end (129 samples, 0.02%)</title><rect x="1079.3" y="549" width="0.2" height="15.0" fill="rgb(238,73,29)" rx="2" ry="2" />
<text  x="1082.29" y="559.5" ></text>
</g>
<g >
<title>runtime.growslice (67 samples, 0.01%)</title><rect x="822.4" y="565" width="0.1" height="15.0" fill="rgb(233,134,51)" rx="2" ry="2" />
<text  x="825.38" y="575.5" ></text>
</g>
<g >
<title>runtime.cgoCheckPointer (1,093 samples, 0.16%)</title><rect x="956.1" y="533" width="1.9" height="15.0" fill="rgb(228,51,8)" rx="2" ry="2" />
<text  x="959.15" y="543.5" ></text>
</g>
<g >
<title>tg/core/vm.makePush.func1 (2,243 samples, 0.32%)</title><rect x="331.2" y="597" width="3.8" height="15.0" fill="rgb(211,174,29)" rx="2" ry="2" />
<text  x="334.16" y="607.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (85 samples, 0.01%)</title><rect x="408.9" y="373" width="0.1" height="15.0" fill="rgb(251,22,51)" rx="2" ry="2" />
<text  x="411.90" y="383.5" ></text>
</g>
<g >
<title>tg/core/vm.(*Contract).isCode (67 samples, 0.01%)</title><rect x="417.1" y="437" width="0.1" height="15.0" fill="rgb(250,31,45)" rx="2" ry="2" />
<text  x="420.06" y="447.5" ></text>
</g>
<g >
<title>tg/crypto/bn256/cloudflare.PairingCheck (666 samples, 0.10%)</title><rect x="502.5" y="325" width="1.2" height="15.0" fill="rgb(248,51,49)" rx="2" ry="2" />
<text  x="505.54" y="335.5" ></text>
</g>
<g >
<title>tg/core/vm.opMstore (64 samples, 0.01%)</title><rect x="486.6" y="405" width="0.1" height="15.0" fill="rgb(242,48,16)" rx="2" ry="2" />
<text  x="489.63" y="415.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring/internal.(*ByteInputAdapter).SkipBytes (94 samples, 0.01%)</title><rect x="1092.5" y="613" width="0.2" height="15.0" fill="rgb(249,91,8)" rx="2" ry="2" />
<text  x="1095.54" y="623.5" ></text>
</g>
<g >
<title>runtime.newobject (1,119 samples, 0.16%)</title><rect x="906.3" y="485" width="1.9" height="15.0" fill="rgb(215,131,9)" rx="2" ry="2" />
<text  x="909.31" y="495.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb._Cfunc_lmdbgo_mdb_cursor_get1 (200 samples, 0.03%)</title><rect x="960.2" y="565" width="0.3" height="15.0" fill="rgb(228,205,1)" rx="2" ry="2" />
<text  x="963.16" y="575.5" ></text>
</g>
<g >
<title>tg/ethdb.(*LmdbCursor).getBothRange (192 samples, 0.03%)</title><rect x="323.9" y="485" width="0.3" height="15.0" fill="rgb(230,188,30)" rx="2" ry="2" />
<text  x="326.90" y="495.5" ></text>
</g>
<g >
<title>tg/rlp.cachedWriter (157 samples, 0.02%)</title><rect x="766.9" y="533" width="0.3" height="15.0" fill="rgb(246,111,48)" rx="2" ry="2" />
<text  x="769.94" y="543.5" ></text>
</g>
<g >
<title>tg/crypto/secp256k1._Cfunc_secp256k1_ext_ecdsa_recover (5,418 samples, 0.78%)</title><rect x="1166.7" y="757" width="9.2" height="15.0" fill="rgb(233,33,28)" rx="2" ry="2" />
<text  x="1169.74" y="767.5" ></text>
</g>
<g >
<title>tg/ethdb.(*LmdbCursor).next (821 samples, 0.12%)</title><rect x="160.2" y="709" width="1.3" height="15.0" fill="rgb(221,86,20)" rx="2" ry="2" />
<text  x="163.15" y="719.5" ></text>
</g>
<g >
<title>runtime.mapaccess2_faststr (248 samples, 0.04%)</title><rect x="824.0" y="533" width="0.4" height="15.0" fill="rgb(254,10,5)" rx="2" ry="2" />
<text  x="826.97" y="543.5" ></text>
</g>
<g >
<title>tg/eth/stagedsync.InsertHeaderChain (307 samples, 0.04%)</title><rect x="1131.1" y="821" width="0.5" height="15.0" fill="rgb(215,98,10)" rx="2" ry="2" />
<text  x="1134.10" y="831.5" ></text>
</g>
<g >
<title>runtime.convT2I (211 samples, 0.03%)</title><rect x="242.3" y="565" width="0.3" height="15.0" fill="rgb(231,45,21)" rx="2" ry="2" />
<text  x="245.28" y="575.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (294 samples, 0.04%)</title><rect x="625.2" y="597" width="0.5" height="15.0" fill="rgb(251,174,13)" rx="2" ry="2" />
<text  x="628.16" y="607.5" ></text>
</g>
<g >
<title>memeqbody (112 samples, 0.02%)</title><rect x="636.9" y="613" width="0.2" height="15.0" fill="rgb(232,215,11)" rx="2" ry="2" />
<text  x="639.87" y="623.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).Put.func1 (293 samples, 0.04%)</title><rect x="1127.8" y="645" width="0.5" height="15.0" fill="rgb(211,204,8)" rx="2" ry="2" />
<text  x="1130.77" y="655.5" ></text>
</g>
<g >
<title>tg/core/vm.opJumpi (477 samples, 0.07%)</title><rect x="604.9" y="533" width="0.8" height="15.0" fill="rgb(216,72,24)" rx="2" ry="2" />
<text  x="607.89" y="543.5" ></text>
</g>
<g >
<title>runtime.memmove (83 samples, 0.01%)</title><rect x="768.4" y="597" width="0.2" height="15.0" fill="rgb(211,85,36)" rx="2" ry="2" />
<text  x="771.45" y="607.5" ></text>
</g>
<g >
<title>tg/core/vm.makeSwap.func1 (68 samples, 0.01%)</title><rect x="477.0" y="469" width="0.1" height="15.0" fill="rgb(210,86,15)" rx="2" ry="2" />
<text  x="480.02" y="479.5" ></text>
</g>
<g >
<title>runtime.makeslice (558 samples, 0.08%)</title><rect x="975.6" y="597" width="0.9" height="15.0" fill="rgb(227,30,44)" rx="2" ry="2" />
<text  x="978.57" y="607.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (75 samples, 0.01%)</title><rect x="260.0" y="501" width="0.2" height="15.0" fill="rgb(226,209,53)" rx="2" ry="2" />
<text  x="263.03" y="511.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Txn).commit (297 samples, 0.04%)</title><rect x="1188.9" y="773" width="0.5" height="15.0" fill="rgb(252,73,32)" rx="2" ry="2" />
<text  x="1191.85" y="783.5" ></text>
</g>
<g >
<title>sort.symMerge (1,273 samples, 0.18%)</title><rect x="991.8" y="309" width="2.2" height="15.0" fill="rgb(206,106,8)" rx="2" ry="2" />
<text  x="994.81" y="319.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVMInterpreter).Run (133 samples, 0.02%)</title><rect x="517.4" y="357" width="0.2" height="15.0" fill="rgb(230,137,52)" rx="2" ry="2" />
<text  x="520.41" y="367.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb._Cfunc_lmdbgo_mdb_cursor_get2 (92 samples, 0.01%)</title><rect x="481.8" y="229" width="0.1" height="15.0" fill="rgb(205,186,49)" rx="2" ry="2" />
<text  x="484.77" y="239.5" ></text>
</g>
<g >
<title>runtime.newobject (144 samples, 0.02%)</title><rect x="1058.7" y="613" width="0.2" height="15.0" fill="rgb(224,64,54)" rx="2" ry="2" />
<text  x="1061.68" y="623.5" ></text>
</g>
<g >
<title>tg/core/types.codecSelfer2.deccommon_Hash (443 samples, 0.06%)</title><rect x="164.6" y="517" width="0.7" height="15.0" fill="rgb(235,92,47)" rx="2" ry="2" />
<text  x="167.59" y="527.5" ></text>
</g>
<g >
<title>tg/common/etl.(*oldestEntrySortableBuffer).Swap (127 samples, 0.02%)</title><rect x="988.4" y="405" width="0.2" height="15.0" fill="rgb(214,203,1)" rx="2" ry="2" />
<text  x="991.41" y="415.5" ></text>
</g>
<g >
<title>tg/common/etl.(*oldestEntrySortableBuffer).Swap (193 samples, 0.03%)</title><rect x="987.0" y="453" width="0.3" height="15.0" fill="rgb(253,106,34)" rx="2" ry="2" />
<text  x="989.97" y="463.5" ></text>
</g>
<g >
<title>tg/core/vm.run (272 samples, 0.04%)</title><rect x="515.4" y="309" width="0.5" height="15.0" fill="rgb(254,46,11)" rx="2" ry="2" />
<text  x="518.39" y="319.5" ></text>
</g>
<g >
<title>bytes.Compare (165 samples, 0.02%)</title><rect x="184.3" y="357" width="0.2" height="15.0" fill="rgb(252,94,7)" rx="2" ry="2" />
<text  x="187.25" y="367.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).Get (166 samples, 0.02%)</title><rect x="419.4" y="341" width="0.3" height="15.0" fill="rgb(214,172,31)" rx="2" ry="2" />
<text  x="422.37" y="351.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (165 samples, 0.02%)</title><rect x="286.4" y="517" width="0.3" height="15.0" fill="rgb(207,43,48)" rx="2" ry="2" />
<text  x="289.43" y="527.5" ></text>
</g>
<g >
<title>runtime.exitsyscall (138 samples, 0.02%)</title><rect x="848.1" y="437" width="0.2" height="15.0" fill="rgb(227,30,48)" rx="2" ry="2" />
<text  x="851.07" y="447.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb._Cfunc_lmdbgo_mdb_cursor_put2 (426 samples, 0.06%)</title><rect x="1057.1" y="517" width="0.7" height="15.0" fill="rgb(212,120,18)" rx="2" ry="2" />
<text  x="1060.12" y="527.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).getVal2.func1 (85 samples, 0.01%)</title><rect x="450.4" y="309" width="0.1" height="15.0" fill="rgb(219,182,11)" rx="2" ry="2" />
<text  x="453.38" y="319.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (85 samples, 0.01%)</title><rect x="370.3" y="389" width="0.2" height="15.0" fill="rgb(246,177,48)" rx="2" ry="2" />
<text  x="373.34" y="399.5" ></text>
</g>
<g >
<title>tg/ethdb/bitmapdb.WalkChunkWithKeys.func1 (542 samples, 0.08%)</title><rect x="157.3" y="629" width="0.9" height="15.0" fill="rgb(214,50,22)" rx="2" ry="2" />
<text  x="160.32" y="639.5" ></text>
</g>
<g >
<title>runtime.mapaccess1 (64 samples, 0.01%)</title><rect x="522.3" y="549" width="0.1" height="15.0" fill="rgb(244,207,11)" rx="2" ry="2" />
<text  x="525.31" y="559.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb._Cfunc_lmdbgo_mdb_get (6,582 samples, 0.95%)</title><rect x="935.2" y="469" width="11.2" height="15.0" fill="rgb(208,36,47)" rx="2" ry="2" />
<text  x="938.22" y="479.5" ></text>
</g>
<g >
<title>github.com/holiman/uint256.(*Int).Mod (65 samples, 0.01%)</title><rect x="412.6" y="437" width="0.1" height="15.0" fill="rgb(212,165,11)" rx="2" ry="2" />
<text  x="415.61" y="447.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring/roaring64.(*roaringArray64).insertNewKeyValueAt (178 samples, 0.03%)</title><rect x="1035.3" y="629" width="0.3" height="15.0" fill="rgb(241,60,31)" rx="2" ry="2" />
<text  x="1038.33" y="639.5" ></text>
</g>
<g >
<title>sort.symMerge (248 samples, 0.04%)</title><rect x="192.0" y="181" width="0.4" height="15.0" fill="rgb(210,200,35)" rx="2" ry="2" />
<text  x="195.00" y="191.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).Call (180 samples, 0.03%)</title><rect x="485.9" y="325" width="0.3" height="15.0" fill="rgb(205,164,40)" rx="2" ry="2" />
<text  x="488.88" y="335.5" ></text>
</g>
<g >
<title>runtime.growslice (218 samples, 0.03%)</title><rect x="1060.4" y="597" width="0.4" height="15.0" fill="rgb(205,198,17)" rx="2" ry="2" />
<text  x="1063.38" y="607.5" ></text>
</g>
<g >
<title>bytes.Compare (101 samples, 0.01%)</title><rect x="863.1" y="469" width="0.1" height="15.0" fill="rgb(229,69,29)" rx="2" ry="2" />
<text  x="866.06" y="479.5" ></text>
</g>
<g >
<title>sort.symMerge (445 samples, 0.06%)</title><rect x="993.1" y="245" width="0.8" height="15.0" fill="rgb(252,195,17)" rx="2" ry="2" />
<text  x="996.12" y="255.5" ></text>
</g>
<g >
<title>runtime.futex (102 samples, 0.01%)</title><rect x="123.8" y="773" width="0.2" height="15.0" fill="rgb(215,16,16)" rx="2" ry="2" />
<text  x="126.80" y="783.5" ></text>
</g>
<g >
<title>runtime.memmove (129 samples, 0.02%)</title><rect x="170.0" y="453" width="0.2" height="15.0" fill="rgb(237,168,2)" rx="2" ry="2" />
<text  x="173.01" y="463.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (67 samples, 0.01%)</title><rect x="827.6" y="533" width="0.1" height="15.0" fill="rgb(229,52,24)" rx="2" ry="2" />
<text  x="830.61" y="543.5" ></text>
</g>
<g >
<title>sync.(*WaitGroup).Add (61 samples, 0.01%)</title><rect x="951.5" y="501" width="0.1" height="15.0" fill="rgb(215,115,17)" rx="2" ry="2" />
<text  x="954.46" y="511.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.(*runContainer16).toArrayContainer (81 samples, 0.01%)</title><rect x="1050.1" y="565" width="0.1" height="15.0" fill="rgb(246,187,44)" rx="2" ry="2" />
<text  x="1053.09" y="575.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (90 samples, 0.01%)</title><rect x="199.0" y="293" width="0.2" height="15.0" fill="rgb(241,182,41)" rx="2" ry="2" />
<text  x="202.02" y="303.5" ></text>
</g>
<g >
<title>tg/core/types.(*Transaction).EncodeRLP (1,787 samples, 0.26%)</title><rect x="209.5" y="485" width="3.0" height="15.0" fill="rgb(219,156,42)" rx="2" ry="2" />
<text  x="212.51" y="495.5" ></text>
</g>
<g >
<title>os.(*File).write (67 samples, 0.01%)</title><rect x="195.8" y="437" width="0.1" height="15.0" fill="rgb(224,44,39)" rx="2" ry="2" />
<text  x="198.80" y="447.5" ></text>
</g>
<g >
<title>tg/core/vm.opCall (14,017 samples, 2.02%)</title><rect x="471.6" y="533" width="23.8" height="15.0" fill="rgb(244,50,30)" rx="2" ry="2" />
<text  x="474.61" y="543.5" >t..</text>
</g>
<g >
<title>context.(*valueCtx).Value (112 samples, 0.02%)</title><rect x="642.9" y="549" width="0.1" height="15.0" fill="rgb(209,110,35)" rx="2" ry="2" />
<text  x="645.86" y="559.5" ></text>
</g>
<g >
<title>cmpbody (59 samples, 0.01%)</title><rect x="986.1" y="485" width="0.1" height="15.0" fill="rgb(230,49,47)" rx="2" ry="2" />
<text  x="989.14" y="495.5" ></text>
</g>
<g >
<title>sort.symMerge (197 samples, 0.03%)</title><rect x="1076.7" y="245" width="0.4" height="15.0" fill="rgb(231,38,53)" rx="2" ry="2" />
<text  x="1079.72" y="255.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find.func1 (380 samples, 0.05%)</title><rect x="288.6" y="453" width="0.6" height="15.0" fill="rgb(226,69,18)" rx="2" ry="2" />
<text  x="291.60" y="463.5" ></text>
</g>
<g >
<title>tg/ethdb.(*LmdbCursor).set (152 samples, 0.02%)</title><rect x="464.1" y="485" width="0.3" height="15.0" fill="rgb(206,218,46)" rx="2" ry="2" />
<text  x="467.14" y="495.5" ></text>
</g>
<g >
<title>tg/ethdb.(*LmdbCursor).set (412 samples, 0.06%)</title><rect x="527.9" y="501" width="0.7" height="15.0" fill="rgb(228,58,34)" rx="2" ry="2" />
<text  x="530.89" y="511.5" ></text>
</g>
<g >
<title>runtime.memmove (197 samples, 0.03%)</title><rect x="970.8" y="437" width="0.3" height="15.0" fill="rgb(206,169,41)" rx="2" ry="2" />
<text  x="973.76" y="447.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (381 samples, 0.05%)</title><rect x="897.4" y="485" width="0.7" height="15.0" fill="rgb(239,60,25)" rx="2" ry="2" />
<text  x="900.41" y="495.5" ></text>
</g>
<g >
<title>tg/common/etl.(*sortableBuffer).Swap (62 samples, 0.01%)</title><rect x="1068.4" y="517" width="0.1" height="15.0" fill="rgb(250,183,6)" rx="2" ry="2" />
<text  x="1071.38" y="527.5" ></text>
</g>
<g >
<title>tg/core/state.(*stateObject).GetState (228 samples, 0.03%)</title><rect x="385.7" y="309" width="0.4" height="15.0" fill="rgb(207,215,16)" rx="2" ry="2" />
<text  x="388.73" y="319.5" ></text>
</g>
<g >
<title>tg/rlp.(*Stream).uint (193 samples, 0.03%)</title><rect x="1185.3" y="533" width="0.3" height="15.0" fill="rgb(221,32,51)" rx="2" ry="2" />
<text  x="1188.25" y="543.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find (154 samples, 0.02%)</title><rect x="511.0" y="373" width="0.2" height="15.0" fill="rgb(234,59,2)" rx="2" ry="2" />
<text  x="513.99" y="383.5" ></text>
</g>
<g >
<title>tg/core/vm.run (369 samples, 0.05%)</title><rect x="493.2" y="437" width="0.6" height="15.0" fill="rgb(233,23,37)" rx="2" ry="2" />
<text  x="496.19" y="447.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (80 samples, 0.01%)</title><rect x="861.0" y="485" width="0.1" height="15.0" fill="rgb(216,193,35)" rx="2" ry="2" />
<text  x="863.97" y="495.5" ></text>
</g>
<g >
<title>runtime.scanstack.func1 (152 samples, 0.02%)</title><rect x="60.1" y="741" width="0.3" height="15.0" fill="rgb(217,62,34)" rx="2" ry="2" />
<text  x="63.09" y="751.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb._Cfunc_lmdbgo_mdb_cursor_get2 (247 samples, 0.04%)</title><rect x="818.7" y="517" width="0.4" height="15.0" fill="rgb(227,41,46)" rx="2" ry="2" />
<text  x="821.69" y="527.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring/internal.(*ByteInputAdapter).ReadUInt32 (125 samples, 0.02%)</title><rect x="1092.3" y="613" width="0.2" height="15.0" fill="rgb(239,168,42)" rx="2" ry="2" />
<text  x="1095.33" y="623.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).GetOrNewStateObject (293 samples, 0.04%)</title><rect x="264.3" y="629" width="0.5" height="15.0" fill="rgb(219,146,29)" rx="2" ry="2" />
<text  x="267.33" y="639.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (265 samples, 0.04%)</title><rect x="934.4" y="421" width="0.5" height="15.0" fill="rgb(241,28,45)" rx="2" ry="2" />
<text  x="937.43" y="431.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (197 samples, 0.03%)</title><rect x="458.3" y="437" width="0.3" height="15.0" fill="rgb(240,196,25)" rx="2" ry="2" />
<text  x="461.31" y="447.5" ></text>
</g>
<g >
<title>tg/common/etl.Heap.Less (141 samples, 0.02%)</title><rect x="167.5" y="629" width="0.3" height="15.0" fill="rgb(216,21,30)" rx="2" ry="2" />
<text  x="170.54" y="639.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVMInterpreter).Run (330 samples, 0.05%)</title><rect x="393.6" y="293" width="0.6" height="15.0" fill="rgb(229,153,39)" rx="2" ry="2" />
<text  x="396.59" y="303.5" ></text>
</g>
<g >
<title>runtime.mapaccess2_faststr (1,172 samples, 0.17%)</title><rect x="1035.8" y="629" width="2.0" height="15.0" fill="rgb(232,48,10)" rx="2" ry="2" />
<text  x="1038.79" y="639.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*Encoder).Encode (986 samples, 0.14%)</title><rect x="1077.9" y="565" width="1.7" height="15.0" fill="rgb(237,101,6)" rx="2" ry="2" />
<text  x="1080.95" y="575.5" ></text>
</g>
<g >
<title>runtime.mapaccess1 (108 samples, 0.02%)</title><rect x="747.6" y="533" width="0.2" height="15.0" fill="rgb(231,85,4)" rx="2" ry="2" />
<text  x="750.64" y="543.5" ></text>
</g>
<g >
<title>runtime.cgocall (589 samples, 0.08%)</title><rect x="258.5" y="469" width="1.0" height="15.0" fill="rgb(228,173,34)" rx="2" ry="2" />
<text  x="261.49" y="479.5" ></text>
</g>
<g >
<title>runtime.cgocall (442 samples, 0.06%)</title><rect x="511.5" y="341" width="0.8" height="15.0" fill="rgb(230,119,1)" rx="2" ry="2" />
<text  x="514.51" y="351.5" ></text>
</g>
<g >
<title>tg/ethdb.(*LmdbCursor).put (2,894 samples, 0.42%)</title><rect x="171.5" y="613" width="5.0" height="15.0" fill="rgb(226,217,5)" rx="2" ry="2" />
<text  x="174.54" y="623.5" ></text>
</g>
<g >
<title>tg/rlp.makeStructDecoder.func1 (2,159 samples, 0.31%)</title><rect x="216.4" y="437" width="3.6" height="15.0" fill="rgb(213,66,51)" rx="2" ry="2" />
<text  x="219.37" y="447.5" ></text>
</g>
<g >
<title>bytes.Compare (565 samples, 0.08%)</title><rect x="247.2" y="421" width="1.0" height="15.0" fill="rgb(245,224,37)" rx="2" ry="2" />
<text  x="250.20" y="431.5" ></text>
</g>
<g >
<title>tg/core/vm.run (150 samples, 0.02%)</title><rect x="448.5" y="437" width="0.3" height="15.0" fill="rgb(246,81,17)" rx="2" ry="2" />
<text  x="451.50" y="447.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.(*Bitmap).Add (902 samples, 0.13%)</title><rect x="1032.2" y="613" width="1.5" height="15.0" fill="rgb(246,106,11)" rx="2" ry="2" />
<text  x="1035.21" y="623.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).getVal2.func1 (1,872 samples, 0.27%)</title><rect x="441.1" y="373" width="3.2" height="15.0" fill="rgb(245,17,38)" rx="2" ry="2" />
<text  x="444.12" y="383.5" ></text>
</g>
<g >
<title>tg/core/state.(*stateObject).GetCommittedState (112 samples, 0.02%)</title><rect x="463.2" y="405" width="0.2" height="15.0" fill="rgb(210,71,13)" rx="2" ry="2" />
<text  x="466.18" y="415.5" ></text>
</g>
<g >
<title>runtime.growslice (242 samples, 0.03%)</title><rect x="736.6" y="645" width="0.4" height="15.0" fill="rgb(222,102,46)" rx="2" ry="2" />
<text  x="739.57" y="655.5" ></text>
</g>
<g >
<title>tg/core/state.(*stateObject).updateTrie (5,161 samples, 0.74%)</title><rect x="633.7" y="645" width="8.7" height="15.0" fill="rgb(247,205,21)" rx="2" ry="2" />
<text  x="636.67" y="655.5" ></text>
</g>
<g >
<title>runtime.mapaccess1 (91 samples, 0.01%)</title><rect x="227.9" y="469" width="0.1" height="15.0" fill="rgb(244,148,12)" rx="2" ry="2" />
<text  x="230.88" y="479.5" ></text>
</g>
<g >
<title>tg/rlp.decodeByteArray (192 samples, 0.03%)</title><rect x="1186.0" y="533" width="0.3" height="15.0" fill="rgb(208,88,1)" rx="2" ry="2" />
<text  x="1188.95" y="543.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (64 samples, 0.01%)</title><rect x="996.5" y="565" width="0.1" height="15.0" fill="rgb(251,93,12)" rx="2" ry="2" />
<text  x="999.47" y="575.5" ></text>
</g>
<g >
<title>tg/common/etl.FlushToDisk (182 samples, 0.03%)</title><rect x="1077.6" y="581" width="0.3" height="15.0" fill="rgb(238,168,5)" rx="2" ry="2" />
<text  x="1080.61" y="591.5" ></text>
</g>
<g >
<title>sort.rotate (200 samples, 0.03%)</title><rect x="864.8" y="421" width="0.3" height="15.0" fill="rgb(211,147,35)" rx="2" ry="2" />
<text  x="867.79" y="431.5" ></text>
</g>
<g >
<title>tg/ethdb.(*MutationItem).Less (602 samples, 0.09%)</title><rect x="674.8" y="485" width="1.0" height="15.0" fill="rgb(212,13,4)" rx="2" ry="2" />
<text  x="677.80" y="495.5" ></text>
</g>
<g >
<title>github.com/holiman/uint256.(*Int).SetBytes (87 samples, 0.01%)</title><rect x="377.8" y="453" width="0.2" height="15.0" fill="rgb(247,225,7)" rx="2" ry="2" />
<text  x="380.84" y="463.5" ></text>
</g>
<g >
<title>tg/core/vm.opSload (23,427 samples, 3.37%)</title><rect x="554.3" y="597" width="39.8" height="15.0" fill="rgb(238,137,18)" rx="2" ry="2" />
<text  x="557.29" y="607.5" >tg/..</text>
</g>
<g >
<title>tg/crypto/bn256/cloudflare.(*gfP6).Mul (121 samples, 0.02%)</title><rect x="502.9" y="277" width="0.2" height="15.0" fill="rgb(212,120,47)" rx="2" ry="2" />
<text  x="505.89" y="287.5" ></text>
</g>
<g >
<title>tg/core/vm.opDelegateCall (148 samples, 0.02%)</title><rect x="394.2" y="341" width="0.2" height="15.0" fill="rgb(248,7,14)" rx="2" ry="2" />
<text  x="397.17" y="351.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (113 samples, 0.02%)</title><rect x="978.3" y="549" width="0.2" height="15.0" fill="rgb(219,39,12)" rx="2" ry="2" />
<text  x="981.30" y="559.5" ></text>
</g>
<g >
<title>bytes.Compare (70 samples, 0.01%)</title><rect x="989.1" y="405" width="0.1" height="15.0" fill="rgb(249,26,6)" rx="2" ry="2" />
<text  x="992.09" y="415.5" ></text>
</g>
<g >
<title>tg/ethdb.(*LmdbCursor).getBothRange (1,896 samples, 0.27%)</title><rect x="441.1" y="421" width="3.2" height="15.0" fill="rgb(206,6,34)" rx="2" ry="2" />
<text  x="444.08" y="431.5" ></text>
</g>
<g >
<title>tg/core.ApplyTransaction (252,725 samples, 36.37%)</title><rect x="234.4" y="693" width="429.2" height="15.0" fill="rgb(241,185,6)" rx="2" ry="2" />
<text  x="237.37" y="703.5" >tg/core.ApplyTransaction</text>
</g>
<g >
<title>github.com/google/btree.items.find.func1 (195 samples, 0.03%)</title><rect x="703.3" y="501" width="0.3" height="15.0" fill="rgb(237,181,35)" rx="2" ry="2" />
<text  x="706.27" y="511.5" ></text>
</g>
<g >
<title>runtime.mallocgc (75 samples, 0.01%)</title><rect x="138.2" y="677" width="0.1" height="15.0" fill="rgb(225,217,10)" rx="2" ry="2" />
<text  x="141.19" y="687.5" ></text>
</g>
<g >
<title>tg/core/state.(*stateObject).SetBalance (1,011 samples, 0.15%)</title><rect x="242.2" y="581" width="1.7" height="15.0" fill="rgb(232,117,32)" rx="2" ry="2" />
<text  x="245.22" y="591.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).getStateObject (400 samples, 0.06%)</title><rect x="340.0" y="549" width="0.7" height="15.0" fill="rgb(241,42,45)" rx="2" ry="2" />
<text  x="343.01" y="559.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (74 samples, 0.01%)</title><rect x="434.9" y="309" width="0.1" height="15.0" fill="rgb(238,221,18)" rx="2" ry="2" />
<text  x="437.89" y="319.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.(*state).permute (1,557 samples, 0.22%)</title><rect x="429.9" y="485" width="2.7" height="15.0" fill="rgb(208,7,37)" rx="2" ry="2" />
<text  x="432.91" y="495.5" ></text>
</g>
<g >
<title>bytes.Compare (76 samples, 0.01%)</title><rect x="1068.9" y="501" width="0.2" height="15.0" fill="rgb(210,200,39)" rx="2" ry="2" />
<text  x="1071.93" y="511.5" ></text>
</g>
<g >
<title>runtime.mallocgc (88 samples, 0.01%)</title><rect x="1087.1" y="645" width="0.1" height="15.0" fill="rgb(239,58,1)" rx="2" ry="2" />
<text  x="1090.05" y="655.5" ></text>
</g>
<g >
<title>tg/crypto/bn256/cloudflare.(*gfP2).Mul (91 samples, 0.01%)</title><rect x="502.9" y="261" width="0.2" height="15.0" fill="rgb(215,20,50)" rx="2" ry="2" />
<text  x="505.91" y="271.5" ></text>
</g>
<g >
<title>runtime.chanrecv (167 samples, 0.02%)</title><rect x="892.7" y="501" width="0.3" height="15.0" fill="rgb(230,146,21)" rx="2" ry="2" />
<text  x="895.72" y="511.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).GetCodeSize (571 samples, 0.08%)</title><rect x="504.1" y="517" width="1.0" height="15.0" fill="rgb(250,187,26)" rx="2" ry="2" />
<text  x="507.14" y="527.5" ></text>
</g>
<g >
<title>tg/eth/stagedsync.needFlush64 (1,646 samples, 0.24%)</title><rect x="1082.1" y="629" width="2.8" height="15.0" fill="rgb(210,90,35)" rx="2" ry="2" />
<text  x="1085.10" y="639.5" ></text>
</g>
<g >
<title>sort.symMerge (100 samples, 0.01%)</title><rect x="143.9" y="421" width="0.2" height="15.0" fill="rgb(228,154,2)" rx="2" ry="2" />
<text  x="146.90" y="431.5" ></text>
</g>
<g >
<title>tg/core/vm.(*Memory).Resize (1,178 samples, 0.17%)</title><rect x="621.1" y="613" width="2.0" height="15.0" fill="rgb(215,197,31)" rx="2" ry="2" />
<text  x="624.14" y="623.5" ></text>
</g>
<g >
<title>runtime.futex (124 samples, 0.02%)</title><rect x="124.7" y="773" width="0.2" height="15.0" fill="rgb(217,35,0)" rx="2" ry="2" />
<text  x="127.74" y="783.5" ></text>
</g>
<g >
<title>runtime.systemstack (72 samples, 0.01%)</title><rect x="897.9" y="437" width="0.1" height="15.0" fill="rgb(225,226,2)" rx="2" ry="2" />
<text  x="900.87" y="447.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*BTree).Get (237 samples, 0.03%)</title><rect x="369.7" y="437" width="0.4" height="15.0" fill="rgb(238,95,39)" rx="2" ry="2" />
<text  x="372.67" y="447.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*encWr).writestr (621 samples, 0.09%)</title><rect x="1078.2" y="469" width="1.0" height="15.0" fill="rgb(214,170,30)" rx="2" ry="2" />
<text  x="1081.19" y="479.5" ></text>
</g>
<g >
<title>tg/common/etl.NewCollector.func1 (1,036 samples, 0.15%)</title><rect x="142.9" y="677" width="1.7" height="15.0" fill="rgb(229,40,19)" rx="2" ry="2" />
<text  x="145.85" y="687.5" ></text>
</g>
<g >
<title>runtime.cgocall (276 samples, 0.04%)</title><rect x="326.4" y="405" width="0.5" height="15.0" fill="rgb(214,197,6)" rx="2" ry="2" />
<text  x="329.44" y="415.5" ></text>
</g>
<g >
<title>tg/common/etl.(*Collector).Load (8,621 samples, 1.24%)</title><rect x="961.9" y="677" width="14.6" height="15.0" fill="rgb(212,97,40)" rx="2" ry="2" />
<text  x="964.89" y="687.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*Decoder).Decode (1,055 samples, 0.15%)</title><rect x="169.0" y="629" width="1.8" height="15.0" fill="rgb(222,122,3)" rx="2" ry="2" />
<text  x="172.04" y="639.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*Decoder).Decode (777 samples, 0.11%)</title><rect x="1088.9" y="645" width="1.3" height="15.0" fill="rgb(216,81,6)" rx="2" ry="2" />
<text  x="1091.88" y="655.5" ></text>
</g>
<g >
<title>tg/common/etl.(*Collector).Load (6,822 samples, 0.98%)</title><rect x="1046.3" y="709" width="11.6" height="15.0" fill="rgb(244,38,17)" rx="2" ry="2" />
<text  x="1049.30" y="719.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (70 samples, 0.01%)</title><rect x="895.4" y="421" width="0.1" height="15.0" fill="rgb(231,201,52)" rx="2" ry="2" />
<text  x="898.37" y="431.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).Call (891 samples, 0.13%)</title><rect x="478.5" y="389" width="1.5" height="15.0" fill="rgb(223,168,39)" rx="2" ry="2" />
<text  x="481.51" y="399.5" ></text>
</g>
<g >
<title>runtime.mallocgc (137 samples, 0.02%)</title><rect x="818.2" y="597" width="0.3" height="15.0" fill="rgb(249,164,30)" rx="2" ry="2" />
<text  x="821.24" y="607.5" ></text>
</g>
<g >
<title>tg/core/vm.opAnd (219 samples, 0.03%)</title><rect x="337.6" y="597" width="0.4" height="15.0" fill="rgb(250,214,54)" rx="2" ry="2" />
<text  x="340.64" y="607.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).getVal1 (637 samples, 0.09%)</title><rect x="1093.9" y="597" width="1.1" height="15.0" fill="rgb(214,35,39)" rx="2" ry="2" />
<text  x="1096.94" y="607.5" ></text>
</g>
<g >
<title>runtime.newobject (107 samples, 0.02%)</title><rect x="735.2" y="645" width="0.2" height="15.0" fill="rgb(232,88,14)" rx="2" ry="2" />
<text  x="738.21" y="655.5" ></text>
</g>
<g >
<title>tg/eth/stagedsync.NotifyRpcDaemon (1,319 samples, 0.19%)</title><rect x="230.1" y="741" width="2.2" height="15.0" fill="rgb(216,151,27)" rx="2" ry="2" />
<text  x="233.08" y="751.5" ></text>
</g>
<g >
<title>tg/core/vm.opDelegateCall (1,857 samples, 0.27%)</title><rect x="392.9" y="469" width="3.1" height="15.0" fill="rgb(205,165,8)" rx="2" ry="2" />
<text  x="395.85" y="479.5" ></text>
</g>
<g >
<title>sort.Sort (1,497 samples, 0.22%)</title><rect x="1026.4" y="629" width="2.5" height="15.0" fill="rgb(233,226,53)" rx="2" ry="2" />
<text  x="1029.39" y="639.5" ></text>
</g>
<g >
<title>tg/core/vm.run (126 samples, 0.02%)</title><rect x="480.2" y="309" width="0.2" height="15.0" fill="rgb(244,136,42)" rx="2" ry="2" />
<text  x="483.23" y="319.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).DelegateCall (255 samples, 0.04%)</title><rect x="604.0" y="389" width="0.4" height="15.0" fill="rgb(210,168,19)" rx="2" ry="2" />
<text  x="606.96" y="399.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find (98 samples, 0.01%)</title><rect x="491.7" y="309" width="0.2" height="15.0" fill="rgb(224,69,2)" rx="2" ry="2" />
<text  x="494.73" y="319.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.(*state).Read (253 samples, 0.04%)</title><rect x="1030.1" y="597" width="0.4" height="15.0" fill="rgb(230,160,6)" rx="2" ry="2" />
<text  x="1033.09" y="607.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.(*Bitmap).And (277 samples, 0.04%)</title><rect x="1052.4" y="597" width="0.5" height="15.0" fill="rgb(229,77,8)" rx="2" ry="2" />
<text  x="1055.44" y="607.5" ></text>
</g>
<g >
<title>sort.Search (366 samples, 0.05%)</title><rect x="402.0" y="277" width="0.6" height="15.0" fill="rgb(233,195,25)" rx="2" ry="2" />
<text  x="404.98" y="287.5" ></text>
</g>
<g >
<title>memeqbody (405 samples, 0.06%)</title><rect x="140.2" y="693" width="0.7" height="15.0" fill="rgb(211,123,11)" rx="2" ry="2" />
<text  x="143.17" y="703.5" ></text>
</g>
<g >
<title>tg/core/vm.(*Contract).Address (529 samples, 0.08%)</title><rect x="318.6" y="597" width="0.9" height="15.0" fill="rgb(227,14,37)" rx="2" ry="2" />
<text  x="321.62" y="607.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVMInterpreter).Run (451 samples, 0.06%)</title><rect x="496.8" y="357" width="0.8" height="15.0" fill="rgb(210,50,17)" rx="2" ry="2" />
<text  x="499.79" y="367.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*Decoder).Decode (2,500 samples, 0.36%)</title><rect x="968.3" y="613" width="4.3" height="15.0" fill="rgb(220,14,35)" rx="2" ry="2" />
<text  x="971.33" y="623.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb._Cfunc_lmdbgo_mdb_cursor_get1 (366 samples, 0.05%)</title><rect x="527.9" y="437" width="0.6" height="15.0" fill="rgb(239,133,33)" rx="2" ry="2" />
<text  x="530.90" y="447.5" ></text>
</g>
<g >
<title>runtime.mallocgc (61 samples, 0.01%)</title><rect x="561.5" y="501" width="0.1" height="15.0" fill="rgb(238,23,16)" rx="2" ry="2" />
<text  x="564.51" y="511.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).Close (1,013 samples, 0.15%)</title><rect x="928.4" y="485" width="1.7" height="15.0" fill="rgb(254,1,11)" rx="2" ry="2" />
<text  x="931.41" y="495.5" ></text>
</g>
<g >
<title>sort.Search (88 samples, 0.01%)</title><rect x="500.5" y="293" width="0.1" height="15.0" fill="rgb(253,31,6)" rx="2" ry="2" />
<text  x="503.48" y="303.5" ></text>
</g>
<g >
<title>tg/core/vm.opMstore (190 samples, 0.03%)</title><rect x="605.7" y="533" width="0.4" height="15.0" fill="rgb(209,119,32)" rx="2" ry="2" />
<text  x="608.75" y="543.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).Call (70,979 samples, 10.22%)</title><rect x="338.8" y="581" width="120.5" height="15.0" fill="rgb(254,35,25)" rx="2" ry="2" />
<text  x="341.78" y="591.5" >tg/core/vm.(*EV..</text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*Encoder).encode (1,172 samples, 0.17%)</title><rect x="873.1" y="485" width="2.0" height="15.0" fill="rgb(232,186,52)" rx="2" ry="2" />
<text  x="876.14" y="495.5" ></text>
</g>
<g >
<title>tg/common/etl.readElementFromDisk (1,039 samples, 0.15%)</title><rect x="816.8" y="629" width="1.8" height="15.0" fill="rgb(242,116,22)" rx="2" ry="2" />
<text  x="819.83" y="639.5" ></text>
</g>
<g >
<title>runtime.makeBucketArray (343 samples, 0.05%)</title><rect x="700.5" y="581" width="0.6" height="15.0" fill="rgb(233,108,32)" rx="2" ry="2" />
<text  x="703.48" y="591.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).Call (23,679 samples, 3.41%)</title><rect x="369.2" y="517" width="40.2" height="15.0" fill="rgb(230,185,38)" rx="2" ry="2" />
<text  x="372.19" y="527.5" >tg/..</text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).Get (183 samples, 0.03%)</title><rect x="341.2" y="469" width="0.3" height="15.0" fill="rgb(207,215,35)" rx="2" ry="2" />
<text  x="344.23" y="479.5" ></text>
</g>
<g >
<title>tg/ethdb.(*TxDb).Get (69 samples, 0.01%)</title><rect x="487.2" y="309" width="0.1" height="15.0" fill="rgb(234,68,17)" rx="2" ry="2" />
<text  x="490.16" y="319.5" ></text>
</g>
<g >
<title>runtime.newstack (506 samples, 0.07%)</title><rect x="122.6" y="853" width="0.8" height="15.0" fill="rgb(250,220,22)" rx="2" ry="2" />
<text  x="125.59" y="863.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (75 samples, 0.01%)</title><rect x="1112.3" y="533" width="0.1" height="15.0" fill="rgb(220,24,2)" rx="2" ry="2" />
<text  x="1115.29" y="543.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (277 samples, 0.04%)</title><rect x="461.2" y="469" width="0.5" height="15.0" fill="rgb(250,0,41)" rx="2" ry="2" />
<text  x="464.23" y="479.5" ></text>
</g>
<g >
<title>tg/rlp.Decode (190 samples, 0.03%)</title><rect x="338.2" y="533" width="0.3" height="15.0" fill="rgb(227,108,10)" rx="2" ry="2" />
<text  x="341.17" y="543.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).getVal1 (101 samples, 0.01%)</title><rect x="370.5" y="389" width="0.2" height="15.0" fill="rgb(239,226,48)" rx="2" ry="2" />
<text  x="373.52" y="399.5" ></text>
</g>
<g >
<title>sort.symMerge (155 samples, 0.02%)</title><rect x="1040.3" y="405" width="0.2" height="15.0" fill="rgb(218,11,14)" rx="2" ry="2" />
<text  x="1043.27" y="415.5" ></text>
</g>
<g >
<title>runtime.cgoCheckArg (161 samples, 0.02%)</title><rect x="221.6" y="453" width="0.3" height="15.0" fill="rgb(230,207,19)" rx="2" ry="2" />
<text  x="224.61" y="463.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.(*Bitmap).RunOptimize (1,209 samples, 0.17%)</title><rect x="1099.9" y="581" width="2.0" height="15.0" fill="rgb(220,61,26)" rx="2" ry="2" />
<text  x="1102.89" y="591.5" ></text>
</g>
<g >
<title>tg/core/vm.run (60 samples, 0.01%)</title><rect x="462.9" y="421" width="0.1" height="15.0" fill="rgb(238,201,11)" rx="2" ry="2" />
<text  x="465.91" y="431.5" ></text>
</g>
<g >
<title>tg/core/state.(*stateObject).SetBalance (62 samples, 0.01%)</title><rect x="339.8" y="517" width="0.1" height="15.0" fill="rgb(248,20,8)" rx="2" ry="2" />
<text  x="342.81" y="527.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*decRd).readn1 (76 samples, 0.01%)</title><rect x="971.9" y="517" width="0.1" height="15.0" fill="rgb(238,57,35)" rx="2" ry="2" />
<text  x="974.86" y="527.5" ></text>
</g>
<g >
<title>cmpbody (178 samples, 0.03%)</title><rect x="288.7" y="421" width="0.3" height="15.0" fill="rgb(214,44,8)" rx="2" ry="2" />
<text  x="291.68" y="431.5" ></text>
</g>
<g >
<title>cmpbody (60 samples, 0.01%)</title><rect x="865.2" y="389" width="0.1" height="15.0" fill="rgb(248,93,49)" rx="2" ry="2" />
<text  x="868.16" y="399.5" ></text>
</g>
<g >
<title>container/heap.Push (571 samples, 0.08%)</title><rect x="965.9" y="645" width="1.0" height="15.0" fill="rgb(230,137,51)" rx="2" ry="2" />
<text  x="968.93" y="655.5" ></text>
</g>
<g >
<title>tg/core/state.(*PlainStateReader).ReadAccountData (80 samples, 0.01%)</title><rect x="264.7" y="597" width="0.1" height="15.0" fill="rgb(239,89,42)" rx="2" ry="2" />
<text  x="267.67" y="607.5" ></text>
</g>
<g >
<title>runtime.exitsyscall (257 samples, 0.04%)</title><rect x="1024.6" y="533" width="0.4" height="15.0" fill="rgb(211,181,40)" rx="2" ry="2" />
<text  x="1027.58" y="543.5" ></text>
</g>
<g >
<title>runtime.mallocgc (109 samples, 0.02%)</title><rect x="631.7" y="597" width="0.2" height="15.0" fill="rgb(251,149,14)" rx="2" ry="2" />
<text  x="634.68" y="607.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*cborDecDriver).advanceNil (232 samples, 0.03%)</title><rect x="969.7" y="517" width="0.4" height="15.0" fill="rgb(252,43,41)" rx="2" ry="2" />
<text  x="972.70" y="527.5" ></text>
</g>
<g >
<title>tg/core/vm/stack.(*Stack).Len (82 samples, 0.01%)</title><rect x="453.7" y="533" width="0.1" height="15.0" fill="rgb(227,145,45)" rx="2" ry="2" />
<text  x="456.70" y="543.5" ></text>
</g>
<g >
<title>internal/poll.ignoringEINTR (66 samples, 0.01%)</title><rect x="195.8" y="405" width="0.1" height="15.0" fill="rgb(252,153,31)" rx="2" ry="2" />
<text  x="198.80" y="415.5" ></text>
</g>
<g >
<title>runtime.makeslice (241 samples, 0.03%)</title><rect x="200.3" y="325" width="0.5" height="15.0" fill="rgb(228,3,27)" rx="2" ry="2" />
<text  x="203.35" y="335.5" ></text>
</g>
<g >
<title>tg/core/state.(*stateObject).GetCommittedState (65 samples, 0.01%)</title><rect x="608.8" y="421" width="0.1" height="15.0" fill="rgb(205,65,38)" rx="2" ry="2" />
<text  x="611.78" y="431.5" ></text>
</g>
<g >
<title>tg/core/vm.opExtCodeSize (768 samples, 0.11%)</title><rect x="422.3" y="533" width="1.3" height="15.0" fill="rgb(216,129,53)" rx="2" ry="2" />
<text  x="425.33" y="543.5" ></text>
</g>
<g >
<title>tg/core/vm.makePush.func1 (1,092 samples, 0.16%)</title><rect x="365.8" y="533" width="1.9" height="15.0" fill="rgb(222,127,2)" rx="2" ry="2" />
<text  x="368.82" y="543.5" ></text>
</g>
<g >
<title>tg/core/state.(*stateObject).SetNonce (593 samples, 0.09%)</title><rect x="266.4" y="629" width="1.0" height="15.0" fill="rgb(223,83,47)" rx="2" ry="2" />
<text  x="269.38" y="639.5" ></text>
</g>
<g >
<title>runtime.memmove (147 samples, 0.02%)</title><rect x="745.0" y="437" width="0.3" height="15.0" fill="rgb(247,14,38)" rx="2" ry="2" />
<text  x="748.02" y="447.5" ></text>
</g>
<g >
<title>sort.symMerge (188 samples, 0.03%)</title><rect x="1040.2" y="501" width="0.3" height="15.0" fill="rgb(217,90,21)" rx="2" ry="2" />
<text  x="1043.21" y="511.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (169 samples, 0.02%)</title><rect x="734.7" y="613" width="0.3" height="15.0" fill="rgb(220,167,4)" rx="2" ry="2" />
<text  x="737.70" y="623.5" ></text>
</g>
<g >
<title>tg/core/vm/stack.(*Stack).Push (454 samples, 0.07%)</title><rect x="518.7" y="533" width="0.8" height="15.0" fill="rgb(233,169,14)" rx="2" ry="2" />
<text  x="521.70" y="543.5" ></text>
</g>
<g >
<title>sort.symMerge (3,253 samples, 0.47%)</title><rect x="988.6" y="437" width="5.5" height="15.0" fill="rgb(219,35,3)" rx="2" ry="2" />
<text  x="991.62" y="447.5" ></text>
</g>
<g >
<title>tg/eth/downloader.(*Downloader).processHeaders (934 samples, 0.13%)</title><rect x="1130.0" y="837" width="1.6" height="15.0" fill="rgb(252,113,9)" rx="2" ry="2" />
<text  x="1133.04" y="847.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find (117 samples, 0.02%)</title><rect x="419.0" y="293" width="0.2" height="15.0" fill="rgb(229,218,23)" rx="2" ry="2" />
<text  x="422.01" y="303.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*encWr).writestr (974 samples, 0.14%)</title><rect x="873.4" y="421" width="1.7" height="15.0" fill="rgb(248,175,46)" rx="2" ry="2" />
<text  x="876.40" y="431.5" ></text>
</g>
<g >
<title>tg/ethdb.(*LmdbCursor).append (581 samples, 0.08%)</title><rect x="1126.7" y="661" width="1.0" height="15.0" fill="rgb(250,139,17)" rx="2" ry="2" />
<text  x="1129.73" y="671.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).GetCodeHash (121 samples, 0.02%)</title><rect x="292.5" y="629" width="0.2" height="15.0" fill="rgb(248,126,13)" rx="2" ry="2" />
<text  x="295.48" y="639.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (95 samples, 0.01%)</title><rect x="516.6" y="341" width="0.2" height="15.0" fill="rgb(219,220,3)" rx="2" ry="2" />
<text  x="519.63" y="351.5" ></text>
</g>
<g >
<title>tg/eth/stagedsync.(*OldestAppearedLoad).LoadFunc (1,595 samples, 0.23%)</title><rect x="973.8" y="645" width="2.7" height="15.0" fill="rgb(205,31,13)" rx="2" ry="2" />
<text  x="976.82" y="655.5" ></text>
</g>
<g >
<title>tg/core/vm.run (232 samples, 0.03%)</title><rect x="383.4" y="181" width="0.4" height="15.0" fill="rgb(219,62,47)" rx="2" ry="2" />
<text  x="386.44" y="191.5" ></text>
</g>
<g >
<title>tg/core/vm.opSha3 (276 samples, 0.04%)</title><rect x="389.0" y="405" width="0.4" height="15.0" fill="rgb(250,60,3)" rx="2" ry="2" />
<text  x="391.95" y="415.5" ></text>
</g>
<g >
<title>runtime.cgoCheckUnknownPointer (98 samples, 0.01%)</title><rect x="848.4" y="437" width="0.2" height="15.0" fill="rgb(230,123,31)" rx="2" ry="2" />
<text  x="851.39" y="447.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).Get (126 samples, 0.02%)</title><rect x="1026.2" y="677" width="0.2" height="15.0" fill="rgb(230,217,27)" rx="2" ry="2" />
<text  x="1029.16" y="687.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVMInterpreter).Run (4,783 samples, 0.69%)</title><rect x="495.8" y="485" width="8.1" height="15.0" fill="rgb(230,174,27)" rx="2" ry="2" />
<text  x="498.80" y="495.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (65 samples, 0.01%)</title><rect x="744.3" y="437" width="0.1" height="15.0" fill="rgb(248,137,39)" rx="2" ry="2" />
<text  x="747.27" y="447.5" ></text>
</g>
<g >
<title>sort.swapRange (187 samples, 0.03%)</title><rect x="987.9" y="437" width="0.3" height="15.0" fill="rgb(233,52,18)" rx="2" ry="2" />
<text  x="990.88" y="447.5" ></text>
</g>
<g >
<title>tg/common/etl.(*Collector).Load (4,505 samples, 0.65%)</title><rect x="814.9" y="677" width="7.6" height="15.0" fill="rgb(216,56,47)" rx="2" ry="2" />
<text  x="817.90" y="687.5" ></text>
</g>
<g >
<title>tg/core/rawdb.ReadBody (562 samples, 0.08%)</title><rect x="232.5" y="645" width="1.0" height="15.0" fill="rgb(223,8,16)" rx="2" ry="2" />
<text  x="235.51" y="655.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVMInterpreter).Run (380 samples, 0.05%)</title><rect x="517.0" y="421" width="0.7" height="15.0" fill="rgb(212,66,39)" rx="2" ry="2" />
<text  x="520.02" y="431.5" ></text>
</g>
<g >
<title>tg/rlp.Decode (452 samples, 0.07%)</title><rect x="232.6" y="533" width="0.7" height="15.0" fill="rgb(219,74,31)" rx="2" ry="2" />
<text  x="235.57" y="543.5" ></text>
</g>
<g >
<title>tg/core/vm.opSuicide (600 samples, 0.09%)</title><rect x="452.1" y="533" width="1.1" height="15.0" fill="rgb(238,58,3)" rx="2" ry="2" />
<text  x="455.14" y="543.5" ></text>
</g>
<g >
<title>runtime.makeslicecopy (177 samples, 0.03%)</title><rect x="170.2" y="517" width="0.3" height="15.0" fill="rgb(252,28,6)" rx="2" ry="2" />
<text  x="173.23" y="527.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (112 samples, 0.02%)</title><rect x="491.2" y="293" width="0.2" height="15.0" fill="rgb(221,175,31)" rx="2" ry="2" />
<text  x="494.17" y="303.5" ></text>
</g>
<g >
<title>bytes.Compare (247 samples, 0.04%)</title><rect x="523.6" y="389" width="0.5" height="15.0" fill="rgb(249,86,37)" rx="2" ry="2" />
<text  x="526.63" y="399.5" ></text>
</g>
<g >
<title>tg/core/state.(*stateObject).GetState (2,090 samples, 0.30%)</title><rect x="400.8" y="437" width="3.6" height="15.0" fill="rgb(248,214,10)" rx="2" ry="2" />
<text  x="403.81" y="447.5" ></text>
</g>
<g >
<title>sort.symMerge (2,290 samples, 0.33%)</title><rect x="868.3" y="293" width="3.9" height="15.0" fill="rgb(213,5,35)" rx="2" ry="2" />
<text  x="871.30" y="303.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.newArrayContainer (92 samples, 0.01%)</title><rect x="1060.8" y="613" width="0.1" height="15.0" fill="rgb(239,126,9)" rx="2" ry="2" />
<text  x="1063.79" y="623.5" ></text>
</g>
<g >
<title>runtime.mallocgc (101 samples, 0.01%)</title><rect x="737.3" y="661" width="0.2" height="15.0" fill="rgb(212,229,21)" rx="2" ry="2" />
<text  x="740.30" y="671.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (65 samples, 0.01%)</title><rect x="832.6" y="469" width="0.1" height="15.0" fill="rgb(210,215,16)" rx="2" ry="2" />
<text  x="835.56" y="479.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).GetCodeSize (372 samples, 0.05%)</title><rect x="396.3" y="453" width="0.6" height="15.0" fill="rgb(246,213,35)" rx="2" ry="2" />
<text  x="399.31" y="463.5" ></text>
</g>
<g >
<title>tg/crypto/secp256k1.(*BitCurve).ScalarMult (60 samples, 0.01%)</title><rect x="1187.5" y="693" width="0.1" height="15.0" fill="rgb(237,73,41)" rx="2" ry="2" />
<text  x="1190.51" y="703.5" ></text>
</g>
<g >
<title>bytes.(*Buffer).Write (102 samples, 0.01%)</title><rect x="1126.0" y="709" width="0.1" height="15.0" fill="rgb(229,174,3)" rx="2" ry="2" />
<text  x="1128.96" y="719.5" ></text>
</g>
<g >
<title>tg/core/vm.opMstore (299 samples, 0.04%)</title><rect x="535.3" y="597" width="0.5" height="15.0" fill="rgb(247,112,22)" rx="2" ry="2" />
<text  x="538.25" y="607.5" ></text>
</g>
<g >
<title>tg/core/vm.(*bn256ScalarMulIstanbul).Run (62 samples, 0.01%)</title><rect x="515.2" y="357" width="0.1" height="15.0" fill="rgb(212,149,10)" rx="2" ry="2" />
<text  x="518.18" y="367.5" ></text>
</g>
<g >
<title>runtime.mapaccess1 (127 samples, 0.02%)</title><rect x="793.2" y="565" width="0.2" height="15.0" fill="rgb(248,145,8)" rx="2" ry="2" />
<text  x="796.23" y="575.5" ></text>
</g>
<g >
<title>runtime.mallocgc.func1 (104 samples, 0.01%)</title><rect x="861.8" y="469" width="0.2" height="15.0" fill="rgb(231,95,14)" rx="2" ry="2" />
<text  x="864.78" y="479.5" ></text>
</g>
<g >
<title>tg/core/state.(*stateObject).SetState (548 samples, 0.08%)</title><rect x="444.7" y="501" width="0.9" height="15.0" fill="rgb(252,111,17)" rx="2" ry="2" />
<text  x="447.67" y="511.5" ></text>
</g>
<g >
<title>tg/ethdb.(*LmdbCursor).getBothRange (353 samples, 0.05%)</title><rect x="492.1" y="357" width="0.6" height="15.0" fill="rgb(242,48,25)" rx="2" ry="2" />
<text  x="495.06" y="367.5" ></text>
</g>
<g >
<title>runtime.selectgo (413 samples, 0.06%)</title><rect x="1065.9" y="629" width="0.7" height="15.0" fill="rgb(215,101,0)" rx="2" ry="2" />
<text  x="1068.91" y="639.5" ></text>
</g>
<g >
<title>tg/core/state.(*PlainStateReader).ReadAccountStorage (690 samples, 0.10%)</title><rect x="606.8" y="469" width="1.2" height="15.0" fill="rgb(226,58,26)" rx="2" ry="2" />
<text  x="609.83" y="479.5" ></text>
</g>
<g >
<title>runtime.(*_type).typeOff (75 samples, 0.01%)</title><rect x="217.5" y="373" width="0.1" height="15.0" fill="rgb(215,74,4)" rx="2" ry="2" />
<text  x="220.49" y="383.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).GetCodeHash (125 samples, 0.02%)</title><rect x="410.2" y="501" width="0.2" height="15.0" fill="rgb(252,202,9)" rx="2" ry="2" />
<text  x="413.23" y="511.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb._Cfunc_lmdbgo_mdb_cursor_get1 (103 samples, 0.01%)</title><rect x="504.9" y="373" width="0.2" height="15.0" fill="rgb(209,27,5)" rx="2" ry="2" />
<text  x="507.90" y="383.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVMInterpreter).Run (61 samples, 0.01%)</title><rect x="416.1" y="229" width="0.2" height="15.0" fill="rgb(225,16,6)" rx="2" ry="2" />
<text  x="419.15" y="239.5" ></text>
</g>
<g >
<title>tg/ethdb.(*MutationItem).Less (495 samples, 0.07%)</title><rect x="716.5" y="501" width="0.8" height="15.0" fill="rgb(251,137,13)" rx="2" ry="2" />
<text  x="719.45" y="511.5" ></text>
</g>
<g >
<title>cmpbody (74 samples, 0.01%)</title><rect x="1076.7" y="213" width="0.2" height="15.0" fill="rgb(236,111,22)" rx="2" ry="2" />
<text  x="1079.74" y="223.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.(*arrayContainer).iaddRange (4,251 samples, 0.61%)</title><rect x="149.1" y="533" width="7.2" height="15.0" fill="rgb(254,117,23)" rx="2" ry="2" />
<text  x="152.08" y="543.5" ></text>
</g>
<g >
<title>runtime.convT2Enoptr (62 samples, 0.01%)</title><rect x="795.4" y="693" width="0.1" height="15.0" fill="rgb(231,179,24)" rx="2" ry="2" />
<text  x="798.35" y="703.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find.func1 (120 samples, 0.02%)</title><rect x="326.0" y="389" width="0.2" height="15.0" fill="rgb(245,124,37)" rx="2" ry="2" />
<text  x="328.99" y="399.5" ></text>
</g>
<g >
<title>tg/core/vm.opSload (72 samples, 0.01%)</title><rect x="384.5" y="277" width="0.2" height="15.0" fill="rgb(235,74,28)" rx="2" ry="2" />
<text  x="387.55" y="287.5" ></text>
</g>
<g >
<title>sort.symMerge (4,433 samples, 0.64%)</title><rect x="1070.0" y="485" width="7.5" height="15.0" fill="rgb(230,173,53)" rx="2" ry="2" />
<text  x="1072.99" y="495.5" ></text>
</g>
<g >
<title>runtime.systemstack (74 samples, 0.01%)</title><rect x="658.3" y="549" width="0.2" height="15.0" fill="rgb(205,87,13)" rx="2" ry="2" />
<text  x="661.34" y="559.5" ></text>
</g>
<g >
<title>tg/ethdb.(*mutation).Get (60 samples, 0.01%)</title><rect x="410.1" y="453" width="0.1" height="15.0" fill="rgb(251,3,21)" rx="2" ry="2" />
<text  x="413.13" y="463.5" ></text>
</g>
<g >
<title>sort.symMerge (4,726 samples, 0.68%)</title><rect x="184.9" y="357" width="8.0" height="15.0" fill="rgb(228,73,10)" rx="2" ry="2" />
<text  x="187.88" y="367.5" ></text>
</g>
<g >
<title>tg/rlp.makePtrWriter.func1 (1,619 samples, 0.23%)</title><rect x="209.6" y="437" width="2.7" height="15.0" fill="rgb(228,43,39)" rx="2" ry="2" />
<text  x="212.56" y="447.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.(*Bitmap).RunOptimize (149 samples, 0.02%)</title><rect x="1095.4" y="613" width="0.3" height="15.0" fill="rgb(208,80,11)" rx="2" ry="2" />
<text  x="1098.40" y="623.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).Get (69 samples, 0.01%)</title><rect x="396.8" y="357" width="0.1" height="15.0" fill="rgb(250,54,33)" rx="2" ry="2" />
<text  x="399.82" y="367.5" ></text>
</g>
<g >
<title>runtime.mallocgc (66 samples, 0.01%)</title><rect x="1066.6" y="613" width="0.1" height="15.0" fill="rgb(245,78,22)" rx="2" ry="2" />
<text  x="1069.64" y="623.5" ></text>
</g>
<g >
<title>tg/core/rawdb.ReadTransactions (5,452 samples, 0.78%)</title><rect x="196.8" y="565" width="9.3" height="15.0" fill="rgb(209,139,38)" rx="2" ry="2" />
<text  x="199.81" y="575.5" ></text>
</g>
<g >
<title>sort.swapRange (72 samples, 0.01%)</title><rect x="991.7" y="293" width="0.1" height="15.0" fill="rgb(229,82,53)" rx="2" ry="2" />
<text  x="994.69" y="303.5" ></text>
</g>
<g >
<title>runtime.makeslice (150 samples, 0.02%)</title><rect x="241.0" y="565" width="0.3" height="15.0" fill="rgb(215,80,9)" rx="2" ry="2" />
<text  x="244.04" y="575.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (206 samples, 0.03%)</title><rect x="661.7" y="533" width="0.4" height="15.0" fill="rgb(210,65,19)" rx="2" ry="2" />
<text  x="664.72" y="543.5" ></text>
</g>
<g >
<title>tg/common/etl.readElementFromDisk (3,307 samples, 0.48%)</title><rect x="968.2" y="629" width="5.6" height="15.0" fill="rgb(236,116,1)" rx="2" ry="2" />
<text  x="971.20" y="639.5" ></text>
</g>
<g >
<title>tg/core/state.(*stateObject).GetState (216 samples, 0.03%)</title><rect x="486.9" y="373" width="0.4" height="15.0" fill="rgb(253,109,32)" rx="2" ry="2" />
<text  x="489.91" y="383.5" ></text>
</g>
<g >
<title>context.WithValue (1,647 samples, 0.24%)</title><rect x="660.3" y="661" width="2.8" height="15.0" fill="rgb(246,78,21)" rx="2" ry="2" />
<text  x="663.31" y="671.5" ></text>
</g>
<g >
<title>runtime.memmove (117 samples, 0.02%)</title><rect x="1123.2" y="517" width="0.2" height="15.0" fill="rgb(246,214,52)" rx="2" ry="2" />
<text  x="1126.21" y="527.5" ></text>
</g>
<g >
<title>tg/crypto/secp256k1._Cfunc_secp256k1_ext_ecdsa_recover (90 samples, 0.01%)</title><rect x="420.4" y="293" width="0.1" height="15.0" fill="rgb(229,228,54)" rx="2" ry="2" />
<text  x="423.39" y="303.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (66 samples, 0.01%)</title><rect x="892.4" y="517" width="0.2" height="15.0" fill="rgb(213,140,5)" rx="2" ry="2" />
<text  x="895.45" y="527.5" ></text>
</g>
<g >
<title>tg/rlp.decodeUint256NoPtr (1,243 samples, 0.18%)</title><rect x="789.0" y="517" width="2.1" height="15.0" fill="rgb(214,84,16)" rx="2" ry="2" />
<text  x="791.98" y="527.5" ></text>
</g>
<g >
<title>tg/eth/stagedsync.incrementalTxPoolUpdate.func2 (8,996 samples, 1.29%)</title><rect x="214.8" y="645" width="15.3" height="15.0" fill="rgb(232,122,16)" rx="2" ry="2" />
<text  x="217.79" y="655.5" ></text>
</g>
<g >
<title>tg/ethdb.(*mutation).Get (2,656 samples, 0.38%)</title><rect x="288.0" y="581" width="4.5" height="15.0" fill="rgb(233,218,0)" rx="2" ry="2" />
<text  x="290.96" y="591.5" ></text>
</g>
<g >
<title>tg/core/vm.opSload (6,831 samples, 0.98%)</title><rect x="432.8" y="533" width="11.6" height="15.0" fill="rgb(240,167,37)" rx="2" ry="2" />
<text  x="435.80" y="543.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (68 samples, 0.01%)</title><rect x="977.5" y="485" width="0.2" height="15.0" fill="rgb(213,168,14)" rx="2" ry="2" />
<text  x="980.54" y="495.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (101 samples, 0.01%)</title><rect x="487.0" y="293" width="0.1" height="15.0" fill="rgb(241,222,32)" rx="2" ry="2" />
<text  x="489.98" y="303.5" ></text>
</g>
<g >
<title>tg/core/state.(*PlainStateWriter).UpdateAccountData (14,463 samples, 2.08%)</title><rect x="666.9" y="661" width="24.5" height="15.0" fill="rgb(253,25,25)" rx="2" ry="2" />
<text  x="669.88" y="671.5" >t..</text>
</g>
<g >
<title>tg/common/etl.(*sortableBuffer).Swap (202 samples, 0.03%)</title><rect x="181.7" y="389" width="0.3" height="15.0" fill="rgb(226,78,36)" rx="2" ry="2" />
<text  x="184.70" y="399.5" ></text>
</g>
<g >
<title>runtime.systemstack (109 samples, 0.02%)</title><rect x="561.1" y="453" width="0.2" height="15.0" fill="rgb(226,2,9)" rx="2" ry="2" />
<text  x="564.11" y="463.5" ></text>
</g>
<g >
<title>tg/eth/stagedsync.incrementIntermediateHashes.func4 (556 samples, 0.08%)</title><rect x="960.1" y="677" width="0.9" height="15.0" fill="rgb(219,17,25)" rx="2" ry="2" />
<text  x="963.07" y="687.5" ></text>
</g>
<g >
<title>runtime.cgocall (2,122 samples, 0.31%)</title><rect x="803.5" y="501" width="3.6" height="15.0" fill="rgb(224,8,17)" rx="2" ry="2" />
<text  x="806.52" y="511.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.(*state).permute (118 samples, 0.02%)</title><rect x="449.8" y="421" width="0.2" height="15.0" fill="rgb(245,82,3)" rx="2" ry="2" />
<text  x="452.83" y="431.5" ></text>
</g>
<g >
<title>runtime.newobject (70 samples, 0.01%)</title><rect x="1052.6" y="549" width="0.1" height="15.0" fill="rgb(237,50,48)" rx="2" ry="2" />
<text  x="1055.63" y="559.5" ></text>
</g>
<g >
<title>tg/core/state.(*PlainStateReader).ReadAccountCodeSize (209 samples, 0.03%)</title><rect x="504.8" y="501" width="0.3" height="15.0" fill="rgb(230,27,5)" rx="2" ry="2" />
<text  x="507.75" y="511.5" ></text>
</g>
<g >
<title>tg/core/vm.pureMemoryGascost (346 samples, 0.05%)</title><rect x="610.7" y="597" width="0.5" height="15.0" fill="rgb(230,32,14)" rx="2" ry="2" />
<text  x="613.65" y="607.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find (238 samples, 0.03%)</title><rect x="525.1" y="469" width="0.4" height="15.0" fill="rgb(249,161,13)" rx="2" ry="2" />
<text  x="528.07" y="479.5" ></text>
</g>
<g >
<title>runtime.notetsleep (112 samples, 0.02%)</title><rect x="123.8" y="821" width="0.2" height="15.0" fill="rgb(216,140,31)" rx="2" ry="2" />
<text  x="126.79" y="831.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (271 samples, 0.04%)</title><rect x="561.8" y="485" width="0.4" height="15.0" fill="rgb(240,61,40)" rx="2" ry="2" />
<text  x="564.78" y="495.5" ></text>
</g>
<g >
<title>runtime.hashGrow (91 samples, 0.01%)</title><rect x="287.2" y="581" width="0.1" height="15.0" fill="rgb(248,199,26)" rx="2" ry="2" />
<text  x="290.15" y="591.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.(*arrayContainer).iaddRange (1,893 samples, 0.27%)</title><rect x="1053.0" y="517" width="3.3" height="15.0" fill="rgb(212,0,36)" rx="2" ry="2" />
<text  x="1056.04" y="527.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring/roaring64.(*Bitmap).RunOptimize (155 samples, 0.02%)</title><rect x="1095.4" y="629" width="0.3" height="15.0" fill="rgb(252,218,26)" rx="2" ry="2" />
<text  x="1098.40" y="639.5" ></text>
</g>
<g >
<title>cmpbody (245 samples, 0.04%)</title><rect x="523.6" y="373" width="0.5" height="15.0" fill="rgb(220,119,49)" rx="2" ry="2" />
<text  x="526.63" y="383.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (212 samples, 0.03%)</title><rect x="669.6" y="533" width="0.4" height="15.0" fill="rgb(231,119,43)" rx="2" ry="2" />
<text  x="672.63" y="543.5" ></text>
</g>
<g >
<title>tg/core/vm.opMstore (236 samples, 0.03%)</title><rect x="388.3" y="405" width="0.4" height="15.0" fill="rgb(218,188,41)" rx="2" ry="2" />
<text  x="391.32" y="415.5" ></text>
</g>
<g >
<title>sort.symMerge (2,567 samples, 0.37%)</title><rect x="867.8" y="309" width="4.4" height="15.0" fill="rgb(220,138,35)" rx="2" ry="2" />
<text  x="870.85" y="319.5" ></text>
</g>
<g >
<title>tg/rlp.(*Stream).Kind (188 samples, 0.03%)</title><rect x="200.8" y="325" width="0.3" height="15.0" fill="rgb(238,101,32)" rx="2" ry="2" />
<text  x="203.80" y="335.5" ></text>
</g>
<g >
<title>runtime.mallocgc (423 samples, 0.06%)</title><rect x="972.6" y="597" width="0.7" height="15.0" fill="rgb(207,61,41)" rx="2" ry="2" />
<text  x="975.60" y="607.5" ></text>
</g>
<g >
<title>tg/core/vm.run (251 samples, 0.04%)</title><rect x="604.0" y="373" width="0.4" height="15.0" fill="rgb(230,190,33)" rx="2" ry="2" />
<text  x="606.97" y="383.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.(*arrayContainer).clone (144 samples, 0.02%)</title><rect x="1099.2" y="565" width="0.2" height="15.0" fill="rgb(245,131,29)" rx="2" ry="2" />
<text  x="1102.17" y="575.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.(*state).Read (1,288 samples, 0.19%)</title><rect x="738.7" y="661" width="2.2" height="15.0" fill="rgb(247,100,34)" rx="2" ry="2" />
<text  x="741.72" y="671.5" ></text>
</g>
<g >
<title>runtime.exitsyscall (60 samples, 0.01%)</title><rect x="730.5" y="533" width="0.1" height="15.0" fill="rgb(237,9,34)" rx="2" ry="2" />
<text  x="733.51" y="543.5" ></text>
</g>
<g >
<title>runtime.mallocgc (69 samples, 0.01%)</title><rect x="293.1" y="581" width="0.2" height="15.0" fill="rgb(248,117,28)" rx="2" ry="2" />
<text  x="296.14" y="591.5" ></text>
</g>
<g >
<title>runtime.mallocgc (246 samples, 0.04%)</title><rect x="734.7" y="629" width="0.4" height="15.0" fill="rgb(206,26,0)" rx="2" ry="2" />
<text  x="737.69" y="639.5" ></text>
</g>
<g >
<title>tg/core/vm.opExtCodeSize (94 samples, 0.01%)</title><rect x="416.7" y="469" width="0.2" height="15.0" fill="rgb(217,212,6)" rx="2" ry="2" />
<text  x="419.74" y="479.5" ></text>
</g>
<g >
<title>tg/rlp.cachedDecoder (183 samples, 0.03%)</title><rect x="792.5" y="549" width="0.3" height="15.0" fill="rgb(237,113,49)" rx="2" ry="2" />
<text  x="795.47" y="559.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.NewLegacyKeccak256 (326 samples, 0.05%)</title><rect x="317.5" y="597" width="0.6" height="15.0" fill="rgb(231,164,19)" rx="2" ry="2" />
<text  x="320.53" y="607.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (94 samples, 0.01%)</title><rect x="833.7" y="421" width="0.2" height="15.0" fill="rgb(234,66,6)" rx="2" ry="2" />
<text  x="836.71" y="431.5" ></text>
</g>
<g >
<title>tg/rlp.cachedTypeInfo (116 samples, 0.02%)</title><rect x="768.8" y="597" width="0.2" height="15.0" fill="rgb(245,177,36)" rx="2" ry="2" />
<text  x="771.82" y="607.5" ></text>
</g>
<g >
<title>tg/ethdb.(*LmdbCursor).next (542 samples, 0.08%)</title><rect x="221.0" y="533" width="0.9" height="15.0" fill="rgb(222,212,3)" rx="2" ry="2" />
<text  x="224.02" y="543.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (134 samples, 0.02%)</title><rect x="967.1" y="581" width="0.3" height="15.0" fill="rgb(219,19,41)" rx="2" ry="2" />
<text  x="970.12" y="591.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find (76 samples, 0.01%)</title><rect x="325.9" y="405" width="0.1" height="15.0" fill="rgb(209,141,33)" rx="2" ry="2" />
<text  x="328.85" y="415.5" ></text>
</g>
<g >
<title>tg/crypto/secp256k1.RecoverPubkey (320 samples, 0.05%)</title><rect x="512.7" y="469" width="0.6" height="15.0" fill="rgb(239,148,5)" rx="2" ry="2" />
<text  x="515.75" y="479.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*cborDecDriver).DecodeBytes (1,332 samples, 0.19%)</title><rect x="969.6" y="533" width="2.2" height="15.0" fill="rgb(209,213,29)" rx="2" ry="2" />
<text  x="972.56" y="543.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (69 samples, 0.01%)</title><rect x="415.4" y="293" width="0.1" height="15.0" fill="rgb(225,146,13)" rx="2" ry="2" />
<text  x="418.42" y="303.5" ></text>
</g>
<g >
<title>tg/ethdb.(*LmdbCursor).put (1,022 samples, 0.15%)</title><rect x="820.5" y="581" width="1.8" height="15.0" fill="rgb(254,181,8)" rx="2" ry="2" />
<text  x="823.54" y="591.5" ></text>
</g>
<g >
<title>tg/core/vm.opExp (61 samples, 0.01%)</title><rect x="422.2" y="533" width="0.1" height="15.0" fill="rgb(205,6,48)" rx="2" ry="2" />
<text  x="425.22" y="543.5" ></text>
</g>
<g >
<title>runtime.mallocgc (115 samples, 0.02%)</title><rect x="1092.8" y="597" width="0.2" height="15.0" fill="rgb(228,107,41)" rx="2" ry="2" />
<text  x="1095.77" y="607.5" ></text>
</g>
<g >
<title>tg/core/state.(*PlainStateReader).ReadAccountData (79 samples, 0.01%)</title><rect x="623.9" y="581" width="0.2" height="15.0" fill="rgb(235,64,47)" rx="2" ry="2" />
<text  x="626.95" y="591.5" ></text>
</g>
<g >
<title>tg/crypto/secp256k1._Cfunc_secp256k1_ext_ecdsa_recover (84 samples, 0.01%)</title><rect x="608.2" y="421" width="0.2" height="15.0" fill="rgb(224,188,0)" rx="2" ry="2" />
<text  x="611.24" y="431.5" ></text>
</g>
<g >
<title>cmpbody (171 samples, 0.02%)</title><rect x="961.0" y="629" width="0.3" height="15.0" fill="rgb(245,127,14)" rx="2" ry="2" />
<text  x="964.03" y="639.5" ></text>
</g>
<g >
<title>runtime.(*mheap).allocSpan (500 samples, 0.07%)</title><rect x="153.4" y="373" width="0.8" height="15.0" fill="rgb(252,49,19)" rx="2" ry="2" />
<text  x="156.38" y="383.5" ></text>
</g>
<g >
<title>runtime.mallocgc (121 samples, 0.02%)</title><rect x="269.9" y="533" width="0.2" height="15.0" fill="rgb(220,202,13)" rx="2" ry="2" />
<text  x="272.86" y="543.5" ></text>
</g>
<g >
<title>runtime.convT2Enoptr (76 samples, 0.01%)</title><rect x="222.1" y="613" width="0.1" height="15.0" fill="rgb(219,156,11)" rx="2" ry="2" />
<text  x="225.08" y="623.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).GetCode (256 samples, 0.04%)</title><rect x="464.0" y="565" width="0.4" height="15.0" fill="rgb(233,164,46)" rx="2" ry="2" />
<text  x="466.96" y="575.5" ></text>
</g>
<g >
<title>sync.(*WaitGroup).Add (111 samples, 0.02%)</title><rect x="834.1" y="501" width="0.2" height="15.0" fill="rgb(239,158,49)" rx="2" ry="2" />
<text  x="837.10" y="511.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring/roaring64.(*Bitmap).ReadFrom (658 samples, 0.09%)</title><rect x="1048.4" y="661" width="1.1" height="15.0" fill="rgb(212,18,23)" rx="2" ry="2" />
<text  x="1051.40" y="671.5" ></text>
</g>
<g >
<title>runtime.mallocgc (112 samples, 0.02%)</title><rect x="761.8" y="629" width="0.1" height="15.0" fill="rgb(236,171,5)" rx="2" ry="2" />
<text  x="764.75" y="639.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVMInterpreter).Run (80 samples, 0.01%)</title><rect x="413.7" y="293" width="0.2" height="15.0" fill="rgb(211,176,54)" rx="2" ry="2" />
<text  x="416.72" y="303.5" ></text>
</g>
<g >
<title>sort.Search (536 samples, 0.08%)</title><rect x="439.1" y="357" width="1.0" height="15.0" fill="rgb(205,221,9)" rx="2" ry="2" />
<text  x="442.14" y="367.5" ></text>
</g>
<g >
<title>tg/rlp.decodeUint256 (850 samples, 0.12%)</title><rect x="789.6" y="501" width="1.5" height="15.0" fill="rgb(253,80,8)" rx="2" ry="2" />
<text  x="792.64" y="511.5" ></text>
</g>
<g >
<title>sort.Search (73 samples, 0.01%)</title><rect x="504.3" y="357" width="0.2" height="15.0" fill="rgb(241,200,18)" rx="2" ry="2" />
<text  x="507.33" y="367.5" ></text>
</g>
<g >
<title>tg/common/etl.(*sortableBuffer).Swap (260 samples, 0.04%)</title><rect x="178.5" y="453" width="0.4" height="15.0" fill="rgb(241,135,50)" rx="2" ry="2" />
<text  x="181.48" y="463.5" ></text>
</g>
<g >
<title>tg/ethdb.(*MutationItem).Less (518 samples, 0.07%)</title><rect x="280.5" y="453" width="0.9" height="15.0" fill="rgb(211,81,35)" rx="2" ry="2" />
<text  x="283.50" y="463.5" ></text>
</g>
<g >
<title>tg/core/vm.opCall (207 samples, 0.03%)</title><rect x="483.8" y="341" width="0.4" height="15.0" fill="rgb(213,20,43)" rx="2" ry="2" />
<text  x="486.83" y="351.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb._Cfunc_lmdbgo_mdb_cursor_get2 (76 samples, 0.01%)</title><rect x="386.0" y="165" width="0.1" height="15.0" fill="rgb(226,187,53)" rx="2" ry="2" />
<text  x="388.97" y="175.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (295 samples, 0.04%)</title><rect x="325.8" y="453" width="0.5" height="15.0" fill="rgb(238,8,45)" rx="2" ry="2" />
<text  x="328.82" y="463.5" ></text>
</g>
<g >
<title>tg/core/vm.(*Contract).GetByte (131 samples, 0.02%)</title><rect x="350.9" y="549" width="0.3" height="15.0" fill="rgb(254,175,3)" rx="2" ry="2" />
<text  x="353.94" y="559.5" ></text>
</g>
<g >
<title>tg/ethdb.(*ObjectDatabase).Walk (80,098 samples, 11.53%)</title><rect x="822.5" y="661" width="136.1" height="15.0" fill="rgb(210,3,13)" rx="2" ry="2" />
<text  x="825.55" y="671.5" >tg/ethdb.(*Object..</text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb._Cfunc_lmdbgo_mdb_get (110 samples, 0.02%)</title><rect x="231.4" y="597" width="0.1" height="15.0" fill="rgb(207,220,0)" rx="2" ry="2" />
<text  x="234.35" y="607.5" ></text>
</g>
<g >
<title>tg/ethdb.(*LmdbKV).Begin (135 samples, 0.02%)</title><rect x="231.0" y="661" width="0.2" height="15.0" fill="rgb(209,27,46)" rx="2" ry="2" />
<text  x="234.02" y="671.5" ></text>
</g>
<g >
<title>github.com/holiman/uint256.(*Int).Bytes32 (101 samples, 0.01%)</title><rect x="321.8" y="581" width="0.2" height="15.0" fill="rgb(243,228,13)" rx="2" ry="2" />
<text  x="324.83" y="591.5" ></text>
</g>
<g >
<title>tg/rlp.cachedDecoder (65 samples, 0.01%)</title><rect x="233.2" y="517" width="0.1" height="15.0" fill="rgb(249,174,8)" rx="2" ry="2" />
<text  x="236.23" y="527.5" ></text>
</g>
<g >
<title>runtime.growslice (143 samples, 0.02%)</title><rect x="269.9" y="549" width="0.2" height="15.0" fill="rgb(253,123,28)" rx="2" ry="2" />
<text  x="272.85" y="559.5" ></text>
</g>
<g >
<title>runtime.sysmon (2,028 samples, 0.29%)</title><rect x="123.6" y="837" width="3.5" height="15.0" fill="rgb(240,124,9)" rx="2" ry="2" />
<text  x="126.65" y="847.5" ></text>
</g>
<g >
<title>tg/core/vm.(*Memory).Resize (71 samples, 0.01%)</title><rect x="392.5" y="421" width="0.2" height="15.0" fill="rgb(206,61,5)" rx="2" ry="2" />
<text  x="395.54" y="431.5" ></text>
</g>
<g >
<title>tg/core/vm.run (99 samples, 0.01%)</title><rect x="624.2" y="613" width="0.2" height="15.0" fill="rgb(216,68,33)" rx="2" ry="2" />
<text  x="627.19" y="623.5" ></text>
</g>
<g >
<title>tg/core/vm.(*Contract).UseGas (106 samples, 0.02%)</title><rect x="351.2" y="549" width="0.1" height="15.0" fill="rgb(223,84,49)" rx="2" ry="2" />
<text  x="354.17" y="559.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (59 samples, 0.01%)</title><rect x="501.2" y="309" width="0.1" height="15.0" fill="rgb(242,185,50)" rx="2" ry="2" />
<text  x="504.22" y="319.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.newArrayContainer (89 samples, 0.01%)</title><rect x="1034.2" y="613" width="0.2" height="15.0" fill="rgb(220,208,51)" rx="2" ry="2" />
<text  x="1037.21" y="623.5" ></text>
</g>
<g >
<title>runtime.memmove (182 samples, 0.03%)</title><rect x="765.6" y="293" width="0.3" height="15.0" fill="rgb(209,24,14)" rx="2" ry="2" />
<text  x="768.56" y="303.5" ></text>
</g>
<g >
<title>tg/rlp.makeListDecoder.func3 (3,573 samples, 0.51%)</title><rect x="1181.0" y="677" width="6.0" height="15.0" fill="rgb(211,40,12)" rx="2" ry="2" />
<text  x="1183.97" y="687.5" ></text>
</g>
<g >
<title>runtime.mallocgc (96 samples, 0.01%)</title><rect x="1092.1" y="581" width="0.2" height="15.0" fill="rgb(246,67,6)" rx="2" ry="2" />
<text  x="1095.15" y="591.5" ></text>
</g>
<g >
<title>runtime.exitsyscallfast (84 samples, 0.01%)</title><rect x="1045.6" y="549" width="0.1" height="15.0" fill="rgb(249,37,0)" rx="2" ry="2" />
<text  x="1048.55" y="559.5" ></text>
</g>
<g >
<title>tg/rlp.makeEncoderWriter.func2 (1,906 samples, 0.27%)</title><rect x="209.3" y="501" width="3.2" height="15.0" fill="rgb(229,37,16)" rx="2" ry="2" />
<text  x="212.31" y="511.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*BTree).Get (169 samples, 0.02%)</title><rect x="340.9" y="501" width="0.3" height="15.0" fill="rgb(235,137,20)" rx="2" ry="2" />
<text  x="343.92" y="511.5" ></text>
</g>
<g >
<title>tg/ethdb.(*mutation).Delete (1,201 samples, 0.17%)</title><rect x="702.0" y="629" width="2.0" height="15.0" fill="rgb(235,135,43)" rx="2" ry="2" />
<text  x="704.99" y="639.5" ></text>
</g>
<g >
<title>tg/common/etl.NewCollector.func2 (13,551 samples, 1.95%)</title><rect x="853.3" y="565" width="23.0" height="15.0" fill="rgb(254,207,8)" rx="2" ry="2" />
<text  x="856.32" y="575.5" >t..</text>
</g>
<g >
<title>tg/ethdb.(*ObjectDatabase).Walk (574 samples, 0.08%)</title><rect x="232.5" y="725" width="1.0" height="15.0" fill="rgb(234,83,8)" rx="2" ry="2" />
<text  x="235.49" y="735.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (187 samples, 0.03%)</title><rect x="215.3" y="469" width="0.3" height="15.0" fill="rgb(210,106,23)" rx="2" ry="2" />
<text  x="218.29" y="479.5" ></text>
</g>
<g >
<title>tg/rlp.writeInterface (137 samples, 0.02%)</title><rect x="1133.7" y="741" width="0.2" height="15.0" fill="rgb(214,157,6)" rx="2" ry="2" />
<text  x="1136.68" y="751.5" ></text>
</g>
<g >
<title>runtime.hashGrow (151 samples, 0.02%)</title><rect x="983.8" y="549" width="0.2" height="15.0" fill="rgb(248,98,33)" rx="2" ry="2" />
<text  x="986.75" y="559.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (104 samples, 0.01%)</title><rect x="827.4" y="517" width="0.2" height="15.0" fill="rgb(212,149,10)" rx="2" ry="2" />
<text  x="830.42" y="527.5" ></text>
</g>
<g >
<title>github.com/holiman/uint256.(*Int).Bytes (660 samples, 0.09%)</title><rect x="697.3" y="613" width="1.1" height="15.0" fill="rgb(236,122,39)" rx="2" ry="2" />
<text  x="700.29" y="623.5" ></text>
</g>
<g >
<title>runtime.removefinalizer (206 samples, 0.03%)</title><rect x="929.7" y="421" width="0.3" height="15.0" fill="rgb(222,101,33)" rx="2" ry="2" />
<text  x="932.70" y="431.5" ></text>
</g>
<g >
<title>runtime.makeslicecopy (339 samples, 0.05%)</title><rect x="562.5" y="501" width="0.6" height="15.0" fill="rgb(231,47,20)" rx="2" ry="2" />
<text  x="565.55" y="511.5" ></text>
</g>
<g >
<title>tg/core/state.(*PlainStateReader).ReadAccountCode (863 samples, 0.12%)</title><rect x="527.2" y="549" width="1.4" height="15.0" fill="rgb(220,77,22)" rx="2" ry="2" />
<text  x="530.15" y="559.5" ></text>
</g>
<g >
<title>runtime.mapassign (73 samples, 0.01%)</title><rect x="267.0" y="597" width="0.1" height="15.0" fill="rgb(244,50,43)" rx="2" ry="2" />
<text  x="270.02" y="607.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (84 samples, 0.01%)</title><rect x="450.2" y="341" width="0.2" height="15.0" fill="rgb(228,114,4)" rx="2" ry="2" />
<text  x="453.21" y="351.5" ></text>
</g>
<g >
<title>runtime.newobject (311 samples, 0.04%)</title><rect x="762.7" y="549" width="0.5" height="15.0" fill="rgb(244,124,52)" rx="2" ry="2" />
<text  x="765.70" y="559.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (139 samples, 0.02%)</title><rect x="452.4" y="357" width="0.2" height="15.0" fill="rgb(212,167,1)" rx="2" ry="2" />
<text  x="455.38" y="367.5" ></text>
</g>
<g >
<title>bytes.Compare (167 samples, 0.02%)</title><rect x="524.5" y="405" width="0.3" height="15.0" fill="rgb(222,74,9)" rx="2" ry="2" />
<text  x="527.55" y="415.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.(*state).padAndPermute (1,244 samples, 0.18%)</title><rect x="770.3" y="565" width="2.1" height="15.0" fill="rgb(241,148,37)" rx="2" ry="2" />
<text  x="773.27" y="575.5" ></text>
</g>
<g >
<title>runtime.mapaccess2 (363 samples, 0.05%)</title><rect x="629.9" y="661" width="0.6" height="15.0" fill="rgb(254,60,29)" rx="2" ry="2" />
<text  x="632.92" y="671.5" ></text>
</g>
<g >
<title>runtime.exitsyscall (70 samples, 0.01%)</title><rect x="221.5" y="437" width="0.1" height="15.0" fill="rgb(209,101,0)" rx="2" ry="2" />
<text  x="224.47" y="447.5" ></text>
</g>
<g >
<title>tg/core/vm.run (112 samples, 0.02%)</title><rect x="497.6" y="373" width="0.2" height="15.0" fill="rgb(232,58,13)" rx="2" ry="2" />
<text  x="500.57" y="383.5" ></text>
</g>
<g >
<title>tg/core/vm.opCallDataLoad (77 samples, 0.01%)</title><rect x="409.4" y="533" width="0.2" height="15.0" fill="rgb(252,178,8)" rx="2" ry="2" />
<text  x="412.43" y="543.5" ></text>
</g>
<g >
<title>cmpbody (140 samples, 0.02%)</title><rect x="1075.9" y="261" width="0.2" height="15.0" fill="rgb(207,131,49)" rx="2" ry="2" />
<text  x="1078.86" y="271.5" ></text>
</g>
<g >
<title>runtime.newobject (312 samples, 0.04%)</title><rect x="240.4" y="597" width="0.5" height="15.0" fill="rgb(232,118,49)" rx="2" ry="2" />
<text  x="243.38" y="607.5" ></text>
</g>
<g >
<title>tg/common.NewHasher (544 samples, 0.08%)</title><rect x="892.6" y="533" width="0.9" height="15.0" fill="rgb(210,199,29)" rx="2" ry="2" />
<text  x="895.57" y="543.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.binarySearch (257 samples, 0.04%)</title><rect x="149.4" y="517" width="0.4" height="15.0" fill="rgb(253,180,48)" rx="2" ry="2" />
<text  x="152.39" y="527.5" ></text>
</g>
<g >
<title>bytes.Compare (151 samples, 0.02%)</title><rect x="868.3" y="277" width="0.3" height="15.0" fill="rgb(209,66,19)" rx="2" ry="2" />
<text  x="871.34" y="287.5" ></text>
</g>
<g >
<title>tg/core/vm.run (105 samples, 0.02%)</title><rect x="479.0" y="245" width="0.2" height="15.0" fill="rgb(251,202,13)" rx="2" ry="2" />
<text  x="481.97" y="255.5" ></text>
</g>
<g >
<title>tg/rlp.writeByteArrayCopy (87 samples, 0.01%)</title><rect x="1130.4" y="709" width="0.1" height="15.0" fill="rgb(213,169,38)" rx="2" ry="2" />
<text  x="1133.38" y="719.5" ></text>
</g>
<g >
<title>runtime.mapassign (454 samples, 0.07%)</title><rect x="434.5" y="469" width="0.7" height="15.0" fill="rgb(250,91,7)" rx="2" ry="2" />
<text  x="437.48" y="479.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find.func1 (1,928 samples, 0.28%)</title><rect x="576.3" y="405" width="3.2" height="15.0" fill="rgb(242,137,39)" rx="2" ry="2" />
<text  x="579.26" y="415.5" ></text>
</g>
<g >
<title>bytes.Compare (144 samples, 0.02%)</title><rect x="181.4" y="421" width="0.2" height="15.0" fill="rgb(238,41,43)" rx="2" ry="2" />
<text  x="184.37" y="431.5" ></text>
</g>
<g >
<title>tg/crypto/bn256/cloudflare.(*gfP12).Mul (72 samples, 0.01%)</title><rect x="502.5" y="277" width="0.2" height="15.0" fill="rgb(212,102,17)" rx="2" ry="2" />
<text  x="505.55" y="287.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (79 samples, 0.01%)</title><rect x="164.4" y="485" width="0.1" height="15.0" fill="rgb(215,109,21)" rx="2" ry="2" />
<text  x="167.38" y="495.5" ></text>
</g>
<g >
<title>tg/common/etl.loadFilesIntoBucket (6,822 samples, 0.98%)</title><rect x="1046.3" y="693" width="11.6" height="15.0" fill="rgb(231,1,50)" rx="2" ry="2" />
<text  x="1049.30" y="703.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVMInterpreter).Run (866 samples, 0.12%)</title><rect x="514.6" y="421" width="1.5" height="15.0" fill="rgb(236,149,52)" rx="2" ry="2" />
<text  x="517.59" y="431.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (292 samples, 0.04%)</title><rect x="288.1" y="485" width="0.4" height="15.0" fill="rgb(243,153,29)" rx="2" ry="2" />
<text  x="291.05" y="495.5" ></text>
</g>
<g >
<title>aeshashbody (247 samples, 0.04%)</title><rect x="1038.0" y="581" width="0.4" height="15.0" fill="rgb(239,200,36)" rx="2" ry="2" />
<text  x="1040.96" y="591.5" ></text>
</g>
<g >
<title>runtime.newobject (323 samples, 0.05%)</title><rect x="243.2" y="549" width="0.5" height="15.0" fill="rgb(210,158,47)" rx="2" ry="2" />
<text  x="246.18" y="559.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (88 samples, 0.01%)</title><rect x="1181.4" y="485" width="0.2" height="15.0" fill="rgb(209,69,41)" rx="2" ry="2" />
<text  x="1184.45" y="495.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).Get (89 samples, 0.01%)</title><rect x="516.8" y="341" width="0.2" height="15.0" fill="rgb(246,109,44)" rx="2" ry="2" />
<text  x="519.81" y="351.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (351 samples, 0.05%)</title><rect x="778.8" y="597" width="0.6" height="15.0" fill="rgb(245,47,38)" rx="2" ry="2" />
<text  x="781.80" y="607.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVMInterpreter).Run (6,377 samples, 0.92%)</title><rect x="410.5" y="485" width="10.9" height="15.0" fill="rgb(234,196,25)" rx="2" ry="2" />
<text  x="413.54" y="495.5" ></text>
</g>
<g >
<title>runtime.pollWork (173 samples, 0.02%)</title><rect x="62.1" y="805" width="0.3" height="15.0" fill="rgb(253,216,1)" rx="2" ry="2" />
<text  x="65.06" y="815.5" ></text>
</g>
<g >
<title>runtime.heapBitsSetType (138 samples, 0.02%)</title><rect x="625.7" y="613" width="0.3" height="15.0" fill="rgb(212,190,35)" rx="2" ry="2" />
<text  x="628.73" y="623.5" ></text>
</g>
<g >
<title>runtime.growslice (195 samples, 0.03%)</title><rect x="494.9" y="469" width="0.4" height="15.0" fill="rgb(240,31,10)" rx="2" ry="2" />
<text  x="497.94" y="479.5" ></text>
</g>
<g >
<title>tg/common/etl.loadFilesIntoBucket (11,727 samples, 1.69%)</title><rect x="1086.9" y="693" width="19.9" height="15.0" fill="rgb(207,155,45)" rx="2" ry="2" />
<text  x="1089.92" y="703.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).StaticCall (119 samples, 0.02%)</title><rect x="414.9" y="325" width="0.2" height="15.0" fill="rgb(206,198,22)" rx="2" ry="2" />
<text  x="417.89" y="335.5" ></text>
</g>
<g >
<title>runtime.mallocgc.func1 (93 samples, 0.01%)</title><rect x="985.1" y="501" width="0.1" height="15.0" fill="rgb(239,199,24)" rx="2" ry="2" />
<text  x="988.09" y="511.5" ></text>
</g>
<g >
<title>tg/common/etl.(*oldestEntrySortableBuffer).Swap (94 samples, 0.01%)</title><rect x="990.1" y="341" width="0.2" height="15.0" fill="rgb(230,67,4)" rx="2" ry="2" />
<text  x="993.09" y="351.5" ></text>
</g>
<g >
<title>tg/common/etl.(*sortableBuffer).Swap (313 samples, 0.05%)</title><rect x="179.2" y="437" width="0.5" height="15.0" fill="rgb(208,144,21)" rx="2" ry="2" />
<text  x="182.19" y="447.5" ></text>
</g>
<g >
<title>tg/common/etl.NewCollector.func2 (623 samples, 0.09%)</title><rect x="1040.0" y="613" width="1.0" height="15.0" fill="rgb(243,183,23)" rx="2" ry="2" />
<text  x="1042.97" y="623.5" ></text>
</g>
<g >
<title>runtime.mallocgc (238 samples, 0.03%)</title><rect x="225.9" y="389" width="0.4" height="15.0" fill="rgb(217,213,12)" rx="2" ry="2" />
<text  x="228.91" y="399.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (104 samples, 0.01%)</title><rect x="408.9" y="405" width="0.2" height="15.0" fill="rgb(253,96,20)" rx="2" ry="2" />
<text  x="411.88" y="415.5" ></text>
</g>
<g >
<title>sync.(*RWMutex).RLock (116 samples, 0.02%)</title><rect x="440.8" y="437" width="0.2" height="15.0" fill="rgb(221,7,27)" rx="2" ry="2" />
<text  x="443.84" y="447.5" ></text>
</g>
<g >
<title>runtime.cgocall (60 samples, 0.01%)</title><rect x="1187.5" y="645" width="0.1" height="15.0" fill="rgb(222,150,22)" rx="2" ry="2" />
<text  x="1190.51" y="655.5" ></text>
</g>
<g >
<title>bytes.Compare (110 samples, 0.02%)</title><rect x="871.6" y="165" width="0.2" height="15.0" fill="rgb(217,182,8)" rx="2" ry="2" />
<text  x="874.60" y="175.5" ></text>
</g>
<g >
<title>tg/core/vm.pureMemoryGascost (69 samples, 0.01%)</title><rect x="518.0" y="533" width="0.1" height="15.0" fill="rgb(245,209,26)" rx="2" ry="2" />
<text  x="521.00" y="543.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).Get (472 samples, 0.07%)</title><rect x="511.5" y="405" width="0.8" height="15.0" fill="rgb(253,14,20)" rx="2" ry="2" />
<text  x="514.50" y="415.5" ></text>
</g>
<g >
<title>runtime.newobject (199 samples, 0.03%)</title><rect x="876.0" y="517" width="0.3" height="15.0" fill="rgb(242,4,19)" rx="2" ry="2" />
<text  x="879.00" y="527.5" ></text>
</g>
<g >
<title>sort.rotate (104 samples, 0.01%)</title><rect x="866.9" y="341" width="0.2" height="15.0" fill="rgb(232,88,18)" rx="2" ry="2" />
<text  x="869.90" y="351.5" ></text>
</g>
<g >
<title>runtime.mallocgc (507 samples, 0.07%)</title><rect x="831.7" y="469" width="0.9" height="15.0" fill="rgb(247,45,3)" rx="2" ry="2" />
<text  x="834.70" y="479.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).getVal0 (2,192 samples, 0.32%)</title><rect x="1022.3" y="597" width="3.7" height="15.0" fill="rgb(236,171,37)" rx="2" ry="2" />
<text  x="1025.31" y="607.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).Put (2,888 samples, 0.42%)</title><rect x="171.5" y="597" width="5.0" height="15.0" fill="rgb(229,121,32)" rx="2" ry="2" />
<text  x="174.55" y="607.5" ></text>
</g>
<g >
<title>tg/turbo/trie.GenStructStep (3,468 samples, 0.50%)</title><rect x="1113.2" y="693" width="5.9" height="15.0" fill="rgb(240,15,24)" rx="2" ry="2" />
<text  x="1116.19" y="703.5" ></text>
</g>
<g >
<title>tg/core/types.FrontierSigner.Hash (252 samples, 0.04%)</title><rect x="1166.1" y="805" width="0.5" height="15.0" fill="rgb(226,135,34)" rx="2" ry="2" />
<text  x="1169.15" y="815.5" ></text>
</g>
<g >
<title>runtime.cgocall (996 samples, 0.14%)</title><rect x="820.6" y="517" width="1.6" height="15.0" fill="rgb(206,215,53)" rx="2" ry="2" />
<text  x="823.56" y="527.5" ></text>
</g>
<g >
<title>tg/core/vm.opCall (237 samples, 0.03%)</title><rect x="386.9" y="341" width="0.4" height="15.0" fill="rgb(252,155,19)" rx="2" ry="2" />
<text  x="389.85" y="351.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find.func1 (87 samples, 0.01%)</title><rect x="491.7" y="277" width="0.2" height="15.0" fill="rgb(221,115,36)" rx="2" ry="2" />
<text  x="494.74" y="287.5" ></text>
</g>
<g >
<title>tg/ethdb.(*mutation).Get (8,025 samples, 1.15%)</title><rect x="272.2" y="581" width="13.6" height="15.0" fill="rgb(225,52,22)" rx="2" ry="2" />
<text  x="275.21" y="591.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find.func1 (940 samples, 0.14%)</title><rect x="687.9" y="549" width="1.6" height="15.0" fill="rgb(215,120,31)" rx="2" ry="2" />
<text  x="690.90" y="559.5" ></text>
</g>
<g >
<title>runtime.memmove (102 samples, 0.01%)</title><rect x="1030.9" y="565" width="0.2" height="15.0" fill="rgb(206,168,26)" rx="2" ry="2" />
<text  x="1033.90" y="575.5" ></text>
</g>
<g >
<title>sort.Search (1,066 samples, 0.15%)</title><rect x="687.7" y="565" width="1.8" height="15.0" fill="rgb(238,165,38)" rx="2" ry="2" />
<text  x="690.69" y="575.5" ></text>
</g>
<g >
<title>runtime.checkTimers (70 samples, 0.01%)</title><rect x="98.1" y="789" width="0.1" height="15.0" fill="rgb(227,50,49)" rx="2" ry="2" />
<text  x="101.07" y="799.5" ></text>
</g>
<g >
<title>reflect.packEface (77 samples, 0.01%)</title><rect x="789.5" y="469" width="0.1" height="15.0" fill="rgb(230,17,23)" rx="2" ry="2" />
<text  x="792.51" y="479.5" ></text>
</g>
<g >
<title>tg/core/vm.opSha3 (141 samples, 0.02%)</title><rect x="449.8" y="469" width="0.2" height="15.0" fill="rgb(225,17,32)" rx="2" ry="2" />
<text  x="452.81" y="479.5" ></text>
</g>
<g >
<title>runtime.cgocall (77 samples, 0.01%)</title><rect x="395.5" y="213" width="0.1" height="15.0" fill="rgb(224,79,49)" rx="2" ry="2" />
<text  x="398.46" y="223.5" ></text>
</g>
<g >
<title>tg/ethdb.(*mutation).Get (128 samples, 0.02%)</title><rect x="396.7" y="405" width="0.2" height="15.0" fill="rgb(247,85,2)" rx="2" ry="2" />
<text  x="399.72" y="415.5" ></text>
</g>
<g >
<title>runtime.newobject (72 samples, 0.01%)</title><rect x="141.8" y="709" width="0.1" height="15.0" fill="rgb(245,167,5)" rx="2" ry="2" />
<text  x="144.76" y="719.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (175 samples, 0.03%)</title><rect x="215.3" y="453" width="0.3" height="15.0" fill="rgb(224,71,26)" rx="2" ry="2" />
<text  x="218.30" y="463.5" ></text>
</g>
<g >
<title>tg/rlp.makePtrWriter.func1 (2,146 samples, 0.31%)</title><rect x="1122.3" y="709" width="3.6" height="15.0" fill="rgb(214,140,22)" rx="2" ry="2" />
<text  x="1125.25" y="719.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find.func1 (61 samples, 0.01%)</title><rect x="461.5" y="389" width="0.1" height="15.0" fill="rgb(233,136,13)" rx="2" ry="2" />
<text  x="464.54" y="399.5" ></text>
</g>
<g >
<title>tg/core/state.(*stateObject).SubBalance (62 samples, 0.01%)</title><rect x="339.8" y="533" width="0.1" height="15.0" fill="rgb(220,93,10)" rx="2" ry="2" />
<text  x="342.81" y="543.5" ></text>
</g>
<g >
<title>tg/rlp.(*encbuf).encodeUint (79 samples, 0.01%)</title><rect x="212.2" y="389" width="0.1" height="15.0" fill="rgb(207,115,50)" rx="2" ry="2" />
<text  x="215.18" y="399.5" ></text>
</g>
<g >
<title>runtime.nanotime (344 samples, 0.05%)</title><rect x="99.4" y="805" width="0.6" height="15.0" fill="rgb(237,229,19)" rx="2" ry="2" />
<text  x="102.37" y="815.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*cborDecDriver).ContainerType (82 samples, 0.01%)</title><rect x="1089.1" y="549" width="0.2" height="15.0" fill="rgb(209,106,33)" rx="2" ry="2" />
<text  x="1092.14" y="559.5" ></text>
</g>
<g >
<title>tg/crypto/secp256k1.RecoverPubkeyWithContext (320 samples, 0.05%)</title><rect x="512.7" y="453" width="0.6" height="15.0" fill="rgb(233,52,47)" rx="2" ry="2" />
<text  x="515.75" y="463.5" ></text>
</g>
<g >
<title>runtime.mallocgc (233 samples, 0.03%)</title><rect x="894.4" y="517" width="0.4" height="15.0" fill="rgb(230,154,39)" rx="2" ry="2" />
<text  x="897.40" y="527.5" ></text>
</g>
<g >
<title>sort.symMerge (2,926 samples, 0.42%)</title><rect x="187.8" y="293" width="4.9" height="15.0" fill="rgb(246,46,40)" rx="2" ry="2" />
<text  x="190.77" y="303.5" ></text>
</g>
<g >
<title>tg/core/vm.run (80 samples, 0.01%)</title><rect x="413.7" y="309" width="0.2" height="15.0" fill="rgb(221,221,13)" rx="2" ry="2" />
<text  x="416.72" y="319.5" ></text>
</g>
<g >
<title>reflect.Value.Field (107 samples, 0.02%)</title><rect x="1182.7" y="549" width="0.2" height="15.0" fill="rgb(250,66,48)" rx="2" ry="2" />
<text  x="1185.71" y="559.5" ></text>
</g>
<g >
<title>runtime.mallocgc (146 samples, 0.02%)</title><rect x="906.0" y="453" width="0.2" height="15.0" fill="rgb(237,138,44)" rx="2" ry="2" />
<text  x="909.00" y="463.5" ></text>
</g>
<g >
<title>aeshashbody (132 samples, 0.02%)</title><rect x="637.2" y="597" width="0.2" height="15.0" fill="rgb(231,62,42)" rx="2" ry="2" />
<text  x="640.23" y="607.5" ></text>
</g>
<g >
<title>sort.quickSort_func (144 samples, 0.02%)</title><rect x="961.6" y="629" width="0.3" height="15.0" fill="rgb(238,207,29)" rx="2" ry="2" />
<text  x="964.64" y="639.5" ></text>
</g>
<g >
<title>runtime.mapaccess2_faststr (1,285 samples, 0.18%)</title><rect x="138.7" y="709" width="2.2" height="15.0" fill="rgb(239,223,40)" rx="2" ry="2" />
<text  x="141.74" y="719.5" ></text>
</g>
<g >
<title>tg/rlp.(*Stream).readKind (91 samples, 0.01%)</title><rect x="1184.8" y="485" width="0.1" height="15.0" fill="rgb(210,56,3)" rx="2" ry="2" />
<text  x="1187.79" y="495.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).getStateObject (10,019 samples, 1.44%)</title><rect x="244.1" y="613" width="17.0" height="15.0" fill="rgb(230,214,31)" rx="2" ry="2" />
<text  x="247.13" y="623.5" ></text>
</g>
<g >
<title>tg/common/changeset.(*ChangeSet).Add (436 samples, 0.06%)</title><rect x="734.4" y="661" width="0.8" height="15.0" fill="rgb(216,177,12)" rx="2" ry="2" />
<text  x="737.44" y="671.5" ></text>
</g>
<g >
<title>tg/crypto/secp256k1.RecoverPubkey (290 samples, 0.04%)</title><rect x="371.0" y="469" width="0.5" height="15.0" fill="rgb(236,135,37)" rx="2" ry="2" />
<text  x="373.97" y="479.5" ></text>
</g>
<g >
<title>github.com/holiman/uint256.(*Int).IsZero (202 samples, 0.03%)</title><rect x="316.4" y="597" width="0.3" height="15.0" fill="rgb(222,43,35)" rx="2" ry="2" />
<text  x="319.36" y="607.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).getVal1.func1 (173 samples, 0.02%)</title><rect x="461.7" y="421" width="0.3" height="15.0" fill="rgb(206,74,3)" rx="2" ry="2" />
<text  x="464.71" y="431.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).getVal1.func1 (1,480 samples, 0.21%)</title><rect x="283.2" y="501" width="2.5" height="15.0" fill="rgb(218,2,29)" rx="2" ry="2" />
<text  x="286.18" y="511.5" ></text>
</g>
<g >
<title>tg/ethdb.(*ObjectDatabase).Get (75 samples, 0.01%)</title><rect x="1131.2" y="773" width="0.1" height="15.0" fill="rgb(207,64,33)" rx="2" ry="2" />
<text  x="1134.16" y="783.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find (166 samples, 0.02%)</title><rect x="523.1" y="421" width="0.3" height="15.0" fill="rgb(249,111,22)" rx="2" ry="2" />
<text  x="526.12" y="431.5" ></text>
</g>
<g >
<title>tg/common/etl.(*sortableBuffer).Swap (73 samples, 0.01%)</title><rect x="1073.6" y="341" width="0.1" height="15.0" fill="rgb(211,165,41)" rx="2" ry="2" />
<text  x="1076.61" y="351.5" ></text>
</g>
<g >
<title>tg/core/vm.opExtCodeSize (143 samples, 0.02%)</title><rect x="387.8" y="405" width="0.2" height="15.0" fill="rgb(220,179,32)" rx="2" ry="2" />
<text  x="390.79" y="415.5" ></text>
</g>
<g >
<title>tg/core/vm.makePush.func1 (148 samples, 0.02%)</title><rect x="602.4" y="533" width="0.2" height="15.0" fill="rgb(249,104,35)" rx="2" ry="2" />
<text  x="605.39" y="543.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*BTree).Get (6,334 samples, 0.91%)</title><rect x="272.2" y="565" width="10.8" height="15.0" fill="rgb(244,193,48)" rx="2" ry="2" />
<text  x="275.21" y="575.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (2,462 samples, 0.35%)</title><rect x="150.5" y="437" width="4.2" height="15.0" fill="rgb(242,212,26)" rx="2" ry="2" />
<text  x="153.51" y="447.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).GetState (105 samples, 0.02%)</title><rect x="485.4" y="325" width="0.2" height="15.0" fill="rgb(223,33,48)" rx="2" ry="2" />
<text  x="488.45" y="335.5" ></text>
</g>
<g >
<title>runtime.memmove (107 samples, 0.02%)</title><rect x="1056.1" y="501" width="0.2" height="15.0" fill="rgb(241,187,44)" rx="2" ry="2" />
<text  x="1059.07" y="511.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*Decoder).mustDecode (2,571 samples, 0.37%)</title><rect x="161.6" y="677" width="4.4" height="15.0" fill="rgb(221,136,15)" rx="2" ry="2" />
<text  x="164.65" y="687.5" ></text>
</g>
<g >
<title>tg/common/etl.(*sortableBuffer).Sort (5,727 samples, 0.82%)</title><rect x="1067.9" y="581" width="9.7" height="15.0" fill="rgb(207,102,22)" rx="2" ry="2" />
<text  x="1070.88" y="591.5" ></text>
</g>
<g >
<title>bytes.(*Buffer).grow (96 samples, 0.01%)</title><rect x="761.5" y="629" width="0.1" height="15.0" fill="rgb(223,53,32)" rx="2" ry="2" />
<text  x="764.47" y="639.5" ></text>
</g>
<g >
<title>tg/ethdb.(*LmdbCursor).Put (1,912 samples, 0.28%)</title><rect x="819.3" y="597" width="3.2" height="15.0" fill="rgb(233,118,1)" rx="2" ry="2" />
<text  x="822.25" y="607.5" ></text>
</g>
<g >
<title>github.com/holiman/uint256.(*Int).SetBytes (112 samples, 0.02%)</title><rect x="367.4" y="517" width="0.2" height="15.0" fill="rgb(242,155,21)" rx="2" ry="2" />
<text  x="370.43" y="527.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (266 samples, 0.04%)</title><rect x="458.3" y="501" width="0.4" height="15.0" fill="rgb(207,96,16)" rx="2" ry="2" />
<text  x="461.26" y="511.5" ></text>
</g>
<g >
<title>tg/core/vm.opStaticCall (3,196 samples, 0.46%)</title><rect x="512.5" y="533" width="5.5" height="15.0" fill="rgb(226,146,50)" rx="2" ry="2" />
<text  x="515.54" y="543.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.(*state).padAndPermute (587 samples, 0.08%)</title><rect x="399.5" y="437" width="1.0" height="15.0" fill="rgb(229,214,29)" rx="2" ry="2" />
<text  x="402.49" y="447.5" ></text>
</g>
<g >
<title>tg/core/vm.opAdd (150 samples, 0.02%)</title><rect x="368.5" y="533" width="0.3" height="15.0" fill="rgb(246,158,19)" rx="2" ry="2" />
<text  x="371.52" y="543.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).Call (75 samples, 0.01%)</title><rect x="493.3" y="389" width="0.1" height="15.0" fill="rgb(242,74,47)" rx="2" ry="2" />
<text  x="496.31" y="399.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (166 samples, 0.02%)</title><rect x="243.4" y="469" width="0.2" height="15.0" fill="rgb(247,99,18)" rx="2" ry="2" />
<text  x="246.36" y="479.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVM).DelegateCall (78 samples, 0.01%)</title><rect x="484.7" y="197" width="0.1" height="15.0" fill="rgb(233,18,52)" rx="2" ry="2" />
<text  x="487.69" y="207.5" ></text>
</g>
<g >
<title>cmpbody (133 samples, 0.02%)</title><rect x="182.1" y="389" width="0.2" height="15.0" fill="rgb(237,153,35)" rx="2" ry="2" />
<text  x="185.08" y="399.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).getVal0 (525 samples, 0.08%)</title><rect x="221.0" y="501" width="0.9" height="15.0" fill="rgb(233,179,2)" rx="2" ry="2" />
<text  x="224.04" y="511.5" ></text>
</g>
<g >
<title>tg/core/state.(*stateObject).GetCommittedState (200 samples, 0.03%)</title><rect x="363.6" y="485" width="0.4" height="15.0" fill="rgb(248,97,42)" rx="2" ry="2" />
<text  x="366.65" y="495.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).iterate (972 samples, 0.14%)</title><rect x="1126.6" y="709" width="1.7" height="15.0" fill="rgb(222,121,0)" rx="2" ry="2" />
<text  x="1129.61" y="719.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).maybeSplitChild (211 samples, 0.03%)</title><rect x="707.9" y="533" width="0.4" height="15.0" fill="rgb(215,121,14)" rx="2" ry="2" />
<text  x="710.92" y="543.5" ></text>
</g>
<g >
<title>tg/ethdb.(*TxDb).CommitAndBegin (302 samples, 0.04%)</title><rect x="795.7" y="725" width="0.5" height="15.0" fill="rgb(238,51,53)" rx="2" ry="2" />
<text  x="798.69" y="735.5" ></text>
</g>
<g >
<title>tg/core/types.(*Header).Hash (96 samples, 0.01%)</title><rect x="1107.0" y="773" width="0.1" height="15.0" fill="rgb(239,58,1)" rx="2" ry="2" />
<text  x="1109.96" y="783.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).Put (296 samples, 0.04%)</title><rect x="1127.8" y="661" width="0.5" height="15.0" fill="rgb(234,16,53)" rx="2" ry="2" />
<text  x="1130.76" y="671.5" ></text>
</g>
<g >
<title>tg/common/etl.(*sortableBuffer).Swap (139 samples, 0.02%)</title><rect x="1071.0" y="421" width="0.2" height="15.0" fill="rgb(233,224,15)" rx="2" ry="2" />
<text  x="1073.98" y="431.5" ></text>
</g>
<g >
<title>runtime.exitsyscallfast (134 samples, 0.02%)</title><rect x="905.1" y="421" width="0.2" height="15.0" fill="rgb(238,32,27)" rx="2" ry="2" />
<text  x="908.11" y="431.5" ></text>
</g>
<g >
<title>runtime.morestack (506 samples, 0.07%)</title><rect x="122.6" y="869" width="0.8" height="15.0" fill="rgb(228,172,38)" rx="2" ry="2" />
<text  x="125.59" y="879.5" ></text>
</g>
<g >
<title>tg/ethdb.Walk (29,163 samples, 4.20%)</title><rect x="976.5" y="645" width="49.6" height="15.0" fill="rgb(224,118,36)" rx="2" ry="2" />
<text  x="979.53" y="655.5" >tg/e..</text>
</g>
<g >
<title>runtime.newobject (68 samples, 0.01%)</title><rect x="232.0" y="629" width="0.1" height="15.0" fill="rgb(234,110,22)" rx="2" ry="2" />
<text  x="234.97" y="639.5" ></text>
</g>
<g >
<title>sort.symMerge (478 samples, 0.07%)</title><rect x="191.6" y="197" width="0.9" height="15.0" fill="rgb(245,24,48)" rx="2" ry="2" />
<text  x="194.65" y="207.5" ></text>
</g>
<g >
<title>runtime.mapassign (67 samples, 0.01%)</title><rect x="263.3" y="565" width="0.1" height="15.0" fill="rgb(242,99,17)" rx="2" ry="2" />
<text  x="266.32" y="575.5" ></text>
</g>
<g >
<title>runtime.mallocgc (107 samples, 0.02%)</title><rect x="1096.4" y="533" width="0.2" height="15.0" fill="rgb(235,199,17)" rx="2" ry="2" />
<text  x="1099.44" y="543.5" ></text>
</g>
<g >
<title>tg/core/vm.(*Contract).Address (85 samples, 0.01%)</title><rect x="376.1" y="469" width="0.1" height="15.0" fill="rgb(253,184,12)" rx="2" ry="2" />
<text  x="379.07" y="479.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.(*state).Read (8,236 samples, 1.19%)</title><rect x="877.4" y="533" width="14.0" height="15.0" fill="rgb(215,176,26)" rx="2" ry="2" />
<text  x="880.43" y="543.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (175 samples, 0.03%)</title><rect x="700.5" y="469" width="0.3" height="15.0" fill="rgb(241,223,49)" rx="2" ry="2" />
<text  x="703.53" y="479.5" ></text>
</g>
<g >
<title>tg/ethdb.(*mutation).Get (388 samples, 0.06%)</title><rect x="340.9" y="517" width="0.7" height="15.0" fill="rgb(241,25,41)" rx="2" ry="2" />
<text  x="343.92" y="527.5" ></text>
</g>
<g >
<title>reflect.New (80 samples, 0.01%)</title><rect x="219.4" y="405" width="0.1" height="15.0" fill="rgb(251,220,37)" rx="2" ry="2" />
<text  x="222.40" y="415.5" ></text>
</g>
<g >
<title>bytes.Compare (110 samples, 0.02%)</title><rect x="179.7" y="453" width="0.2" height="15.0" fill="rgb(215,184,53)" rx="2" ry="2" />
<text  x="182.73" y="463.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*cborDecDriver).DecodeBytes (422 samples, 0.06%)</title><rect x="817.3" y="533" width="0.7" height="15.0" fill="rgb(240,95,19)" rx="2" ry="2" />
<text  x="820.28" y="543.5" ></text>
</g>
<g >
<title>sort.swapRange (65 samples, 0.01%)</title><rect x="1075.3" y="293" width="0.1" height="15.0" fill="rgb(222,156,3)" rx="2" ry="2" />
<text  x="1078.30" y="303.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.(*state).permute (4,395 samples, 0.63%)</title><rect x="752.6" y="613" width="7.5" height="15.0" fill="rgb(242,194,50)" rx="2" ry="2" />
<text  x="755.64" y="623.5" ></text>
</g>
<g >
<title>runtime.mapaccess1 (113 samples, 0.02%)</title><rect x="244.2" y="597" width="0.2" height="15.0" fill="rgb(241,39,27)" rx="2" ry="2" />
<text  x="247.21" y="607.5" ></text>
</g>
<g >
<title>runtime.exitsyscall (267 samples, 0.04%)</title><rect x="904.9" y="437" width="0.4" height="15.0" fill="rgb(225,174,44)" rx="2" ry="2" />
<text  x="907.89" y="447.5" ></text>
</g>
<g >
<title>bufio.(*Reader).Read (179 samples, 0.03%)</title><rect x="169.9" y="469" width="0.3" height="15.0" fill="rgb(219,110,0)" rx="2" ry="2" />
<text  x="172.92" y="479.5" ></text>
</g>
<g >
<title>bytes.Compare (242 samples, 0.03%)</title><rect x="188.6" y="261" width="0.4" height="15.0" fill="rgb(247,58,38)" rx="2" ry="2" />
<text  x="191.63" y="271.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb._Cfunc_mdb_cursor_get (1,055 samples, 0.15%)</title><rect x="1043.9" y="597" width="1.8" height="15.0" fill="rgb(248,68,52)" rx="2" ry="2" />
<text  x="1046.91" y="607.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find.func1 (2,201 samples, 0.32%)</title><rect x="275.1" y="453" width="3.8" height="15.0" fill="rgb(217,129,44)" rx="2" ry="2" />
<text  x="278.12" y="463.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb._Cfunc_mdb_cursor_get (378 samples, 0.05%)</title><rect x="793.6" y="565" width="0.7" height="15.0" fill="rgb(208,8,30)" rx="2" ry="2" />
<text  x="796.61" y="575.5" ></text>
</g>
<g >
<title>sort.symMerge (80 samples, 0.01%)</title><rect x="1040.4" y="261" width="0.1" height="15.0" fill="rgb(215,92,44)" rx="2" ry="2" />
<text  x="1043.39" y="271.5" ></text>
</g>
<g >
<title>runtime.selectnbrecv (114 samples, 0.02%)</title><rect x="823.2" y="565" width="0.2" height="15.0" fill="rgb(251,141,21)" rx="2" ry="2" />
<text  x="826.20" y="575.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (851 samples, 0.12%)</title><rect x="401.5" y="325" width="1.4" height="15.0" fill="rgb(222,8,41)" rx="2" ry="2" />
<text  x="404.48" y="335.5" ></text>
</g>
<g >
<title>tg/crypto/bn256/cloudflare.(*twistPoint).Add (167 samples, 0.02%)</title><rect x="501.9" y="261" width="0.3" height="15.0" fill="rgb(209,159,50)" rx="2" ry="2" />
<text  x="504.94" y="271.5" ></text>
</g>
<g >
<title>math/big.nat.cmp (89 samples, 0.01%)</title><rect x="663.4" y="645" width="0.2" height="15.0" fill="rgb(215,128,26)" rx="2" ry="2" />
<text  x="666.42" y="655.5" ></text>
</g>
<g >
<title>runtime.mallocgc.func1 (79 samples, 0.01%)</title><rect x="860.1" y="437" width="0.2" height="15.0" fill="rgb(243,205,27)" rx="2" ry="2" />
<text  x="863.12" y="447.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find (277 samples, 0.04%)</title><rect x="440.1" y="389" width="0.4" height="15.0" fill="rgb(234,225,32)" rx="2" ry="2" />
<text  x="443.07" y="399.5" ></text>
</g>
<g >
<title>runtime.mapaccess2 (63 samples, 0.01%)</title><rect x="322.8" y="533" width="0.1" height="15.0" fill="rgb(248,192,9)" rx="2" ry="2" />
<text  x="325.80" y="543.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*Encoder).mustEncode (139 samples, 0.02%)</title><rect x="144.2" y="629" width="0.3" height="15.0" fill="rgb(238,18,4)" rx="2" ry="2" />
<text  x="147.22" y="639.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.fastpathT.EncSliceBytesV (674 samples, 0.10%)</title><rect x="1078.1" y="501" width="1.2" height="15.0" fill="rgb(206,2,1)" rx="2" ry="2" />
<text  x="1081.11" y="511.5" ></text>
</g>
<g >
<title>tg/ethdb.(*TxDb).Walk (29,164 samples, 4.20%)</title><rect x="976.5" y="661" width="49.6" height="15.0" fill="rgb(250,74,16)" rx="2" ry="2" />
<text  x="979.53" y="671.5" >tg/e..</text>
</g>
<g >
<title>tg/rlp.Encode (5,123 samples, 0.74%)</title><rect x="741.5" y="661" width="8.7" height="15.0" fill="rgb(208,212,33)" rx="2" ry="2" />
<text  x="744.55" y="671.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (341 samples, 0.05%)</title><rect x="491.1" y="309" width="0.6" height="15.0" fill="rgb(230,159,31)" rx="2" ry="2" />
<text  x="494.15" y="319.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*BTree).Get (75 samples, 0.01%)</title><rect x="264.7" y="565" width="0.1" height="15.0" fill="rgb(252,73,13)" rx="2" ry="2" />
<text  x="267.68" y="575.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*cborDecDriver).ContainerType (79 samples, 0.01%)</title><rect x="169.4" y="533" width="0.2" height="15.0" fill="rgb(235,31,38)" rx="2" ry="2" />
<text  x="172.44" y="543.5" ></text>
</g>
<g >
<title>tg/ethdb.(*MutationItem).Less (138 samples, 0.02%)</title><rect x="289.0" y="437" width="0.2" height="15.0" fill="rgb(217,177,0)" rx="2" ry="2" />
<text  x="292.01" y="447.5" ></text>
</g>
<g >
<title>runtime.timeSleepUntil (436 samples, 0.06%)</title><rect x="124.9" y="821" width="0.8" height="15.0" fill="rgb(215,43,39)" rx="2" ry="2" />
<text  x="127.95" y="831.5" ></text>
</g>
<g >
<title>runtime.(*mcache).nextFree (187 samples, 0.03%)</title><rect x="215.3" y="485" width="0.3" height="15.0" fill="rgb(213,132,11)" rx="2" ry="2" />
<text  x="218.29" y="495.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb._Cfunc_mdb_txn_commit (297 samples, 0.04%)</title><rect x="1188.9" y="741" width="0.5" height="15.0" fill="rgb(207,140,45)" rx="2" ry="2" />
<text  x="1191.85" y="751.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (64 samples, 0.01%)</title><rect x="318.4" y="485" width="0.1" height="15.0" fill="rgb(254,122,45)" rx="2" ry="2" />
<text  x="321.39" y="495.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (391 samples, 0.06%)</title><rect x="897.4" y="501" width="0.7" height="15.0" fill="rgb(221,62,19)" rx="2" ry="2" />
<text  x="900.41" y="511.5" ></text>
</g>
<g >
<title>runtime.mapaccess2 (61 samples, 0.01%)</title><rect x="325.1" y="549" width="0.1" height="15.0" fill="rgb(238,2,1)" rx="2" ry="2" />
<text  x="328.08" y="559.5" ></text>
</g>
<g >
<title>runtime.makeslice (220 samples, 0.03%)</title><rect x="852.9" y="549" width="0.4" height="15.0" fill="rgb(208,118,8)" rx="2" ry="2" />
<text  x="855.92" y="559.5" ></text>
</g>
<g >
<title>bytes.Compare (802 samples, 0.12%)</title><rect x="715.0" y="501" width="1.4" height="15.0" fill="rgb(234,73,24)" rx="2" ry="2" />
<text  x="718.01" y="511.5" ></text>
</g>
<g >
<title>runtime.makeBucketArray (122 samples, 0.02%)</title><rect x="631.7" y="629" width="0.2" height="15.0" fill="rgb(245,204,5)" rx="2" ry="2" />
<text  x="634.67" y="639.5" ></text>
</g>
<g >
<title>tg/core/vm.run (69 samples, 0.01%)</title><rect x="413.4" y="245" width="0.2" height="15.0" fill="rgb(228,96,10)" rx="2" ry="2" />
<text  x="416.44" y="255.5" ></text>
</g>
<g >
<title>bytes.(*Reader).Read (62 samples, 0.01%)</title><rect x="1092.0" y="581" width="0.1" height="15.0" fill="rgb(232,222,29)" rx="2" ry="2" />
<text  x="1094.99" y="591.5" ></text>
</g>
<g >
<title>runtime.cgocall (156 samples, 0.02%)</title><rect x="464.8" y="405" width="0.3" height="15.0" fill="rgb(220,30,32)" rx="2" ry="2" />
<text  x="467.83" y="415.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).GetOrNewStateObject (100 samples, 0.01%)</title><rect x="444.5" y="501" width="0.2" height="15.0" fill="rgb(241,191,0)" rx="2" ry="2" />
<text  x="447.50" y="511.5" ></text>
</g>
<g >
<title>sync.(*RWMutex).Lock (94 samples, 0.01%)</title><rect x="445.3" y="469" width="0.1" height="15.0" fill="rgb(239,129,54)" rx="2" ry="2" />
<text  x="448.28" y="479.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (822 samples, 0.12%)</title><rect x="510.0" y="421" width="1.4" height="15.0" fill="rgb(221,8,38)" rx="2" ry="2" />
<text  x="513.05" y="431.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*cborEncDriver).EncodeStringBytesRaw (128 samples, 0.02%)</title><rect x="1040.7" y="485" width="0.2" height="15.0" fill="rgb(205,48,8)" rx="2" ry="2" />
<text  x="1043.66" y="495.5" ></text>
</g>
<g >
<title>tg/common/etl.(*Collector).Load (11,727 samples, 1.69%)</title><rect x="1086.9" y="709" width="19.9" height="15.0" fill="rgb(238,158,18)" rx="2" ry="2" />
<text  x="1089.92" y="719.5" ></text>
</g>
<g >
<title>runtime.cgoIsGoPointer (83 samples, 0.01%)</title><rect x="927.2" y="421" width="0.2" height="15.0" fill="rgb(226,108,20)" rx="2" ry="2" />
<text  x="930.24" y="431.5" ></text>
</g>
<g >
<title>sort.symMerge (557 samples, 0.08%)</title><rect x="143.2" y="565" width="0.9" height="15.0" fill="rgb(214,86,18)" rx="2" ry="2" />
<text  x="146.19" y="575.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.(*Bitmap).AddRange (698 samples, 0.10%)</title><rect x="1050.3" y="597" width="1.2" height="15.0" fill="rgb(234,199,8)" rx="2" ry="2" />
<text  x="1053.32" y="607.5" ></text>
</g>
<g >
<title>tg/ethdb.(*MutationItem).Less (1,052 samples, 0.15%)</title><rect x="711.9" y="485" width="1.8" height="15.0" fill="rgb(247,197,28)" rx="2" ry="2" />
<text  x="714.87" y="495.5" ></text>
</g>
<g >
<title>reflect.New (110 samples, 0.02%)</title><rect x="1185.6" y="533" width="0.2" height="15.0" fill="rgb(253,65,19)" rx="2" ry="2" />
<text  x="1188.62" y="543.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find (173 samples, 0.02%)</title><rect x="289.2" y="501" width="0.3" height="15.0" fill="rgb(236,216,41)" rx="2" ry="2" />
<text  x="292.24" y="511.5" ></text>
</g>
<g >
<title>tg/eth/downloader.(*Downloader).importBlockResults (6,039 samples, 0.87%)</title><rect x="1119.4" y="821" width="10.3" height="15.0" fill="rgb(234,31,34)" rx="2" ry="2" />
<text  x="1122.41" y="831.5" ></text>
</g>
<g >
<title>container/heap.up (155 samples, 0.02%)</title><rect x="1088.2" y="661" width="0.3" height="15.0" fill="rgb(240,199,25)" rx="2" ry="2" />
<text  x="1091.19" y="671.5" ></text>
</g>
<g >
<title>tg/common/etl.writeToDisk (618 samples, 0.09%)</title><rect x="994.4" y="565" width="1.0" height="15.0" fill="rgb(221,202,30)" rx="2" ry="2" />
<text  x="997.39" y="575.5" ></text>
</g>
<g >
<title>tg/ethdb.(*MutationItem).Less (81 samples, 0.01%)</title><rect x="525.3" y="421" width="0.2" height="15.0" fill="rgb(236,188,30)" rx="2" ry="2" />
<text  x="528.33" y="431.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).maybeSplitChild (359 samples, 0.05%)</title><rect x="713.7" y="549" width="0.6" height="15.0" fill="rgb(213,21,11)" rx="2" ry="2" />
<text  x="716.72" y="559.5" ></text>
</g>
<g >
<title>runtime.mallocgc (320 samples, 0.05%)</title><rect x="1096.7" y="533" width="0.6" height="15.0" fill="rgb(210,176,21)" rx="2" ry="2" />
<text  x="1099.74" y="543.5" ></text>
</g>
<g >
<title>tg/common/etl.(*Collector).Load (8,029 samples, 1.16%)</title><rect x="144.6" y="709" width="13.6" height="15.0" fill="rgb(248,146,9)" rx="2" ry="2" />
<text  x="147.61" y="719.5" ></text>
</g>
<g >
<title>sort.Search (68 samples, 0.01%)</title><rect x="326.2" y="421" width="0.1" height="15.0" fill="rgb(228,199,43)" rx="2" ry="2" />
<text  x="329.20" y="431.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (104 samples, 0.01%)</title><rect x="853.0" y="501" width="0.2" height="15.0" fill="rgb(230,152,54)" rx="2" ry="2" />
<text  x="856.01" y="511.5" ></text>
</g>
<g >
<title>syscall.Syscall (169 samples, 0.02%)</title><rect x="970.5" y="357" width="0.3" height="15.0" fill="rgb(239,44,23)" rx="2" ry="2" />
<text  x="973.47" y="367.5" ></text>
</g>
<g >
<title>aeshashbody (105 samples, 0.02%)</title><rect x="985.4" y="533" width="0.2" height="15.0" fill="rgb(207,65,47)" rx="2" ry="2" />
<text  x="988.43" y="543.5" ></text>
</g>
<g >
<title>runtime.mallocgc (62 samples, 0.01%)</title><rect x="1088.0" y="629" width="0.1" height="15.0" fill="rgb(206,178,22)" rx="2" ry="2" />
<text  x="1090.99" y="639.5" ></text>
</g>
<g >
<title>sort.Stable (9,237 samples, 1.33%)</title><rect x="177.6" y="533" width="15.7" height="15.0" fill="rgb(252,23,52)" rx="2" ry="2" />
<text  x="180.57" y="543.5" ></text>
</g>
<g >
<title>runtime.nanotime (66 samples, 0.01%)</title><rect x="792.8" y="533" width="0.1" height="15.0" fill="rgb(215,56,9)" rx="2" ry="2" />
<text  x="795.80" y="543.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find.func1 (90 samples, 0.01%)</title><rect x="527.2" y="389" width="0.2" height="15.0" fill="rgb(216,5,29)" rx="2" ry="2" />
<text  x="530.23" y="399.5" ></text>
</g>
<g >
<title>tg/ethdb.(*ObjectDatabase).Walk (5,429 samples, 0.78%)</title><rect x="196.8" y="549" width="9.3" height="15.0" fill="rgb(208,108,14)" rx="2" ry="2" />
<text  x="199.85" y="559.5" ></text>
</g>
<g >
<title>runtime.memmove (81 samples, 0.01%)</title><rect x="977.8" y="581" width="0.1" height="15.0" fill="rgb(253,113,45)" rx="2" ry="2" />
<text  x="980.78" y="591.5" ></text>
</g>
<g >
<title>tg/p2p/discover.(*Table).copyLiveNodes (746 samples, 0.11%)</title><rect x="1188.2" y="869" width="1.2" height="15.0" fill="rgb(223,114,12)" rx="2" ry="2" />
<text  x="1191.17" y="879.5" ></text>
</g>
<g >
<title>tg/core/vm.opAdd (384 samples, 0.06%)</title><rect x="337.0" y="597" width="0.6" height="15.0" fill="rgb(242,210,50)" rx="2" ry="2" />
<text  x="339.98" y="607.5" ></text>
</g>
<g >
<title>tg/core/types.codecSelfer2.encReceipts (197 samples, 0.03%)</title><rect x="784.6" y="581" width="0.3" height="15.0" fill="rgb(247,120,46)" rx="2" ry="2" />
<text  x="787.61" y="591.5" ></text>
</g>
<g >
<title>tg/p2p.(*Server).setupConn (337 samples, 0.05%)</title><rect x="1187.2" y="805" width="0.6" height="15.0" fill="rgb(233,12,8)" rx="2" ry="2" />
<text  x="1190.20" y="815.5" ></text>
</g>
<g >
<title>runtime.mallocgc (148 samples, 0.02%)</title><rect x="164.3" y="501" width="0.2" height="15.0" fill="rgb(234,212,25)" rx="2" ry="2" />
<text  x="167.30" y="511.5" ></text>
</g>
<g >
<title>tg/core/vm.run (113 samples, 0.02%)</title><rect x="414.9" y="309" width="0.2" height="15.0" fill="rgb(219,93,38)" rx="2" ry="2" />
<text  x="417.90" y="319.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).getVal2 (251 samples, 0.04%)</title><rect x="607.6" y="389" width="0.4" height="15.0" fill="rgb(217,192,45)" rx="2" ry="2" />
<text  x="610.56" y="399.5" ></text>
</g>
<g >
<title>tg/ethdb.(*TxDb).Get (98 samples, 0.01%)</title><rect x="481.8" y="309" width="0.1" height="15.0" fill="rgb(214,226,14)" rx="2" ry="2" />
<text  x="484.77" y="319.5" ></text>
</g>
<g >
<title>tg/crypto/bn256/cloudflare.(*gfP2).Square (84 samples, 0.01%)</title><rect x="502.4" y="245" width="0.1" height="15.0" fill="rgb(251,127,32)" rx="2" ry="2" />
<text  x="505.37" y="255.5" ></text>
</g>
<g >
<title>tg/rlp.makeSliceWriter.func1 (1,782 samples, 0.26%)</title><rect x="763.8" y="485" width="3.0" height="15.0" fill="rgb(244,171,48)" rx="2" ry="2" />
<text  x="766.77" y="495.5" ></text>
</g>
<g >
<title>tg/crypto/bn256/cloudflare.(*gfP6).Mul (86 samples, 0.01%)</title><rect x="502.7" y="261" width="0.1" height="15.0" fill="rgb(212,72,34)" rx="2" ry="2" />
<text  x="505.68" y="271.5" ></text>
</g>
<g >
<title>tg/ethdb.(*MutationItem).Less (254 samples, 0.04%)</title><rect x="580.7" y="405" width="0.4" height="15.0" fill="rgb(231,19,1)" rx="2" ry="2" />
<text  x="583.67" y="415.5" ></text>
</g>
<g >
<title>runtime.assertI2I (70 samples, 0.01%)</title><rect x="554.2" y="581" width="0.1" height="15.0" fill="rgb(243,170,4)" rx="2" ry="2" />
<text  x="557.17" y="591.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (81 samples, 0.01%)</title><rect x="260.0" y="517" width="0.2" height="15.0" fill="rgb(205,172,53)" rx="2" ry="2" />
<text  x="263.03" y="527.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find.func1 (63 samples, 0.01%)</title><rect x="369.9" y="341" width="0.1" height="15.0" fill="rgb(240,17,20)" rx="2" ry="2" />
<text  x="372.92" y="351.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find.func1 (364 samples, 0.05%)</title><rect x="524.4" y="421" width="0.7" height="15.0" fill="rgb(227,85,15)" rx="2" ry="2" />
<text  x="527.44" y="431.5" ></text>
</g>
<g >
<title>tg/core/types.Receipts.CodecEncodeSelf (199 samples, 0.03%)</title><rect x="784.6" y="597" width="0.3" height="15.0" fill="rgb(247,57,27)" rx="2" ry="2" />
<text  x="787.60" y="607.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (65 samples, 0.01%)</title><rect x="341.9" y="469" width="0.1" height="15.0" fill="rgb(206,90,48)" rx="2" ry="2" />
<text  x="344.93" y="479.5" ></text>
</g>
<g >
<title>runtime.mallocgc (130 samples, 0.02%)</title><rect x="495.0" y="453" width="0.2" height="15.0" fill="rgb(226,129,52)" rx="2" ry="2" />
<text  x="497.96" y="463.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (62 samples, 0.01%)</title><rect x="1180.2" y="709" width="0.1" height="15.0" fill="rgb(238,119,25)" rx="2" ry="2" />
<text  x="1183.23" y="719.5" ></text>
</g>
<g >
<title>sort.Search (59 samples, 0.01%)</title><rect x="341.0" y="405" width="0.1" height="15.0" fill="rgb(233,16,51)" rx="2" ry="2" />
<text  x="343.98" y="415.5" ></text>
</g>
<g >
<title>runtime.exitsyscallfast (215 samples, 0.03%)</title><rect x="782.6" y="581" width="0.4" height="15.0" fill="rgb(210,21,19)" rx="2" ry="2" />
<text  x="785.60" y="591.5" ></text>
</g>
<g >
<title>tg/eth/stagedsync.transformPlainStateKey (10,499 samples, 1.51%)</title><rect x="995.6" y="597" width="17.9" height="15.0" fill="rgb(223,24,46)" rx="2" ry="2" />
<text  x="998.63" y="607.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb._Cfunc_lmdbgo_mdb_cursor_get2 (177 samples, 0.03%)</title><rect x="323.9" y="421" width="0.3" height="15.0" fill="rgb(218,71,9)" rx="2" ry="2" />
<text  x="326.90" y="431.5" ></text>
</g>
<g >
<title>tg/crypto/secp256k1._Cfunc_secp256k1_ext_scalar_mul (60 samples, 0.01%)</title><rect x="1187.5" y="661" width="0.1" height="15.0" fill="rgb(244,212,16)" rx="2" ry="2" />
<text  x="1190.51" y="671.5" ></text>
</g>
<g >
<title>runtime.gcMarkTermination (1,581 samples, 0.23%)</title><rect x="34.2" y="837" width="2.7" height="15.0" fill="rgb(221,152,22)" rx="2" ry="2" />
<text  x="37.24" y="847.5" ></text>
</g>
<g >
<title>runtime.mallocgc (87 samples, 0.01%)</title><rect x="1058.8" y="597" width="0.1" height="15.0" fill="rgb(235,117,40)" rx="2" ry="2" />
<text  x="1061.76" y="607.5" ></text>
</g>
<g >
<title>tg/rlp.cachedTypeInfo (151 samples, 0.02%)</title><rect x="792.5" y="533" width="0.3" height="15.0" fill="rgb(244,108,15)" rx="2" ry="2" />
<text  x="795.52" y="543.5" ></text>
</g>
<g >
<title>tg/eth.(*ProtocolManager).makeProtocol.func1 (3,924 samples, 0.56%)</title><rect x="1180.5" y="853" width="6.6" height="15.0" fill="rgb(250,102,34)" rx="2" ry="2" />
<text  x="1183.46" y="863.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find (73 samples, 0.01%)</title><rect x="511.2" y="389" width="0.2" height="15.0" fill="rgb(247,186,5)" rx="2" ry="2" />
<text  x="514.25" y="399.5" ></text>
</g>
<g >
<title>tg/core/vm.run (226 samples, 0.03%)</title><rect x="487.7" y="309" width="0.4" height="15.0" fill="rgb(210,122,47)" rx="2" ry="2" />
<text  x="490.71" y="319.5" ></text>
</g>
<g >
<title>tg/core/state.(*stateObject).GetState (77 samples, 0.01%)</title><rect x="414.0" y="309" width="0.1" height="15.0" fill="rgb(251,115,29)" rx="2" ry="2" />
<text  x="416.96" y="319.5" ></text>
</g>
<g >
<title>tg/core/rawdb.ReadTransactions (66 samples, 0.01%)</title><rect x="1180.7" y="741" width="0.1" height="15.0" fill="rgb(235,142,49)" rx="2" ry="2" />
<text  x="1183.67" y="751.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).Put.func1 (438 samples, 0.06%)</title><rect x="1057.1" y="533" width="0.8" height="15.0" fill="rgb(214,21,12)" rx="2" ry="2" />
<text  x="1060.12" y="543.5" ></text>
</g>
<g >
<title>runtime.cgocall (79 samples, 0.01%)</title><rect x="450.6" y="341" width="0.1" height="15.0" fill="rgb(213,115,47)" rx="2" ry="2" />
<text  x="453.56" y="351.5" ></text>
</g>
<g >
<title>runtime.mstart1 (2,173 samples, 0.31%)</title><rect x="123.4" y="853" width="3.7" height="15.0" fill="rgb(236,69,37)" rx="2" ry="2" />
<text  x="126.44" y="863.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find (563 samples, 0.08%)</title><rect x="439.1" y="373" width="1.0" height="15.0" fill="rgb(212,102,18)" rx="2" ry="2" />
<text  x="442.11" y="383.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (69 samples, 0.01%)</title><rect x="973.5" y="533" width="0.2" height="15.0" fill="rgb(205,33,17)" rx="2" ry="2" />
<text  x="976.54" y="543.5" ></text>
</g>
<g >
<title>tg/ethdb.(*MutationItem).Less (517 samples, 0.07%)</title><rect x="707.0" y="469" width="0.9" height="15.0" fill="rgb(209,177,17)" rx="2" ry="2" />
<text  x="710.02" y="479.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*cborEncDriver).EncodeStringBytesRaw (951 samples, 0.14%)</title><rect x="194.1" y="453" width="1.6" height="15.0" fill="rgb(236,121,8)" rx="2" ry="2" />
<text  x="197.09" y="463.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find.func1 (120 samples, 0.02%)</title><rect x="607.1" y="325" width="0.2" height="15.0" fill="rgb(252,229,30)" rx="2" ry="2" />
<text  x="610.10" y="335.5" ></text>
</g>
<g >
<title>tg/common/etl.(*sortableBuffer).Swap (61 samples, 0.01%)</title><rect x="1074.9" y="293" width="0.1" height="15.0" fill="rgb(207,205,43)" rx="2" ry="2" />
<text  x="1077.90" y="303.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring/roaring64.(*Bitmap).RunOptimize (1,941 samples, 0.28%)</title><rect x="1053.0" y="597" width="3.3" height="15.0" fill="rgb(251,32,22)" rx="2" ry="2" />
<text  x="1055.98" y="607.5" ></text>
</g>
<g >
<title>runtime.nextFreeFast (59 samples, 0.01%)</title><rect x="236.5" y="661" width="0.1" height="15.0" fill="rgb(231,99,43)" rx="2" ry="2" />
<text  x="239.51" y="671.5" ></text>
</g>
<g >
<title>runtime.cgocall (65 samples, 0.01%)</title><rect x="396.8" y="293" width="0.1" height="15.0" fill="rgb(232,68,4)" rx="2" ry="2" />
<text  x="399.82" y="303.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.(*state).Read (1,167 samples, 0.17%)</title><rect x="222.5" y="597" width="2.0" height="15.0" fill="rgb(207,177,32)" rx="2" ry="2" />
<text  x="225.49" y="607.5" ></text>
</g>
<g >
<title>runtime.cgocall (75 samples, 0.01%)</title><rect x="386.0" y="149" width="0.1" height="15.0" fill="rgb(209,37,54)" rx="2" ry="2" />
<text  x="388.97" y="159.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.newRunContainer16FromContainer (84 samples, 0.01%)</title><rect x="1056.6" y="517" width="0.1" height="15.0" fill="rgb(206,183,0)" rx="2" ry="2" />
<text  x="1059.56" y="527.5" ></text>
</g>
<g >
<title>tg/core/vm.opStaticCall (7,393 samples, 1.06%)</title><rect x="597.9" y="597" width="12.5" height="15.0" fill="rgb(250,170,51)" rx="2" ry="2" />
<text  x="600.89" y="607.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*BTree).Get (101 samples, 0.01%)</title><rect x="487.0" y="309" width="0.1" height="15.0" fill="rgb(250,39,16)" rx="2" ry="2" />
<text  x="489.98" y="319.5" ></text>
</g>
<g >
<title>cmpbody (245 samples, 0.04%)</title><rect x="718.0" y="501" width="0.5" height="15.0" fill="rgb(234,210,11)" rx="2" ry="2" />
<text  x="721.04" y="511.5" ></text>
</g>
<g >
<title>tg/ethdb.(*TxDb).Get (92 samples, 0.01%)</title><rect x="516.8" y="373" width="0.2" height="15.0" fill="rgb(227,109,25)" rx="2" ry="2" />
<text  x="519.80" y="383.5" ></text>
</g>
<g >
<title>tg/core/rawdb.WriteBody (4,153 samples, 0.60%)</title><rect x="1119.5" y="773" width="7.1" height="15.0" fill="rgb(237,166,37)" rx="2" ry="2" />
<text  x="1122.54" y="783.5" ></text>
</g>
<g >
<title>cmpbody (78 samples, 0.01%)</title><rect x="282.7" y="469" width="0.1" height="15.0" fill="rgb(224,184,7)" rx="2" ry="2" />
<text  x="285.70" y="479.5" ></text>
</g>
<g >
<title>sort.symMerge (136 samples, 0.02%)</title><rect x="1040.3" y="357" width="0.2" height="15.0" fill="rgb(241,172,37)" rx="2" ry="2" />
<text  x="1043.30" y="367.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVMInterpreter).Run (192,217 samples, 27.66%)</title><rect x="294.6" y="613" width="326.5" height="15.0" fill="rgb(224,56,0)" rx="2" ry="2" />
<text  x="297.64" y="623.5" >tg/core/vm.(*EVMInterpreter).Run</text>
</g>
<g >
<title>github.com/google/btree.items.find (1,477 samples, 0.21%)</title><rect x="278.9" y="501" width="2.5" height="15.0" fill="rgb(208,108,53)" rx="2" ry="2" />
<text  x="281.88" y="511.5" ></text>
</g>
<g >
<title>tg/core/vm.opCall (60 samples, 0.01%)</title><rect x="484.5" y="85" width="0.1" height="15.0" fill="rgb(220,58,2)" rx="2" ry="2" />
<text  x="487.49" y="95.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).Get (85 samples, 0.01%)</title><rect x="450.4" y="341" width="0.1" height="15.0" fill="rgb(253,141,21)" rx="2" ry="2" />
<text  x="453.38" y="351.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*BTree).Get (395 samples, 0.06%)</title><rect x="527.2" y="517" width="0.6" height="15.0" fill="rgb(250,34,48)" rx="2" ry="2" />
<text  x="530.18" y="527.5" ></text>
</g>
<g >
<title>tg/core/vm.newTwistPoint (353 samples, 0.05%)</title><rect x="501.9" y="325" width="0.6" height="15.0" fill="rgb(243,154,43)" rx="2" ry="2" />
<text  x="504.94" y="335.5" ></text>
</g>
<g >
<title>runtime.cgoCheckPointer (171 samples, 0.02%)</title><rect x="221.6" y="469" width="0.3" height="15.0" fill="rgb(231,27,44)" rx="2" ry="2" />
<text  x="224.59" y="479.5" ></text>
</g>
<g >
<title>sort.swapRange (138 samples, 0.02%)</title><rect x="866.1" y="357" width="0.2" height="15.0" fill="rgb(219,169,52)" rx="2" ry="2" />
<text  x="869.10" y="367.5" ></text>
</g>
<g >
<title>sort.Search (75 samples, 0.01%)</title><rect x="325.9" y="389" width="0.1" height="15.0" fill="rgb(223,133,12)" rx="2" ry="2" />
<text  x="328.85" y="399.5" ></text>
</g>
<g >
<title>tg/core/vm.opCall (368 samples, 0.05%)</title><rect x="513.9" y="469" width="0.6" height="15.0" fill="rgb(230,99,30)" rx="2" ry="2" />
<text  x="516.85" y="479.5" ></text>
</g>
<g >
<title>tg/core/types.(*Logs).CodecDecodeSelf (2,113 samples, 0.30%)</title><rect x="162.0" y="597" width="3.6" height="15.0" fill="rgb(249,84,50)" rx="2" ry="2" />
<text  x="164.97" y="607.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.(*Bitmap).And (189 samples, 0.03%)</title><rect x="1102.0" y="565" width="0.3" height="15.0" fill="rgb(226,3,15)" rx="2" ry="2" />
<text  x="1105.01" y="575.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb.(*Cursor).getVal1.func1 (240 samples, 0.03%)</title><rect x="960.2" y="581" width="0.4" height="15.0" fill="rgb(220,89,31)" rx="2" ry="2" />
<text  x="963.15" y="591.5" ></text>
</g>
<g >
<title>bytes.Compare (74 samples, 0.01%)</title><rect x="178.3" y="485" width="0.1" height="15.0" fill="rgb(247,168,23)" rx="2" ry="2" />
<text  x="181.32" y="495.5" ></text>
</g>
<g >
<title>tg/rlp.decodeUint256NoPtr (1,049 samples, 0.15%)</title><rect x="1183.4" y="549" width="1.8" height="15.0" fill="rgb(209,102,47)" rx="2" ry="2" />
<text  x="1186.41" y="559.5" ></text>
</g>
<g >
<title>runtime.mapaccess1 (99 samples, 0.01%)</title><rect x="1112.0" y="549" width="0.1" height="15.0" fill="rgb(222,32,37)" rx="2" ry="2" />
<text  x="1114.97" y="559.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (129 samples, 0.02%)</title><rect x="762.8" y="453" width="0.2" height="15.0" fill="rgb(228,35,14)" rx="2" ry="2" />
<text  x="765.80" y="463.5" ></text>
</g>
<g >
<title>tg/core/state.(*PlainStateReader).ReadAccountStorage (83 samples, 0.01%)</title><rect x="485.5" y="277" width="0.1" height="15.0" fill="rgb(229,154,6)" rx="2" ry="2" />
<text  x="488.48" y="287.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVMInterpreter).Run (3,186 samples, 0.46%)</title><rect x="482.9" y="421" width="5.4" height="15.0" fill="rgb(238,182,14)" rx="2" ry="2" />
<text  x="485.90" y="431.5" ></text>
</g>
<g >
<title>sort.Search (111 samples, 0.02%)</title><rect x="666.5" y="549" width="0.2" height="15.0" fill="rgb(211,149,48)" rx="2" ry="2" />
<text  x="669.54" y="559.5" ></text>
</g>
<g >
<title>github.com/holiman/uint256.(*Int).IsZero (80 samples, 0.01%)</title><rect x="667.5" y="645" width="0.2" height="15.0" fill="rgb(253,214,12)" rx="2" ry="2" />
<text  x="670.52" y="655.5" ></text>
</g>
<g >
<title>github.com/RoaringBitmap/roaring.(*Bitmap).Or (83 samples, 0.01%)</title><rect x="146.0" y="661" width="0.2" height="15.0" fill="rgb(243,108,0)" rx="2" ry="2" />
<text  x="149.03" y="671.5" ></text>
</g>
<g >
<title>github.com/ledgerwatch/lmdb-go/lmdb._Cfunc_mdb_txn_commit (302 samples, 0.04%)</title><rect x="795.7" y="629" width="0.5" height="15.0" fill="rgb(220,34,48)" rx="2" ry="2" />
<text  x="798.69" y="639.5" ></text>
</g>
<g >
<title>tg/eth/stagedsync.incrementIntermediateHashes (42,819 samples, 6.16%)</title><rect x="958.6" y="725" width="72.7" height="15.0" fill="rgb(235,65,45)" rx="2" ry="2" />
<text  x="961.58" y="735.5" >tg/eth/s..</text>
</g>
<g >
<title>runtime.(*spanSet).pop (622 samples, 0.09%)</title><rect x="21.5" y="821" width="1.0" height="15.0" fill="rgb(244,20,47)" rx="2" ry="2" />
<text  x="24.47" y="831.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (256 samples, 0.04%)</title><rect x="786.3" y="565" width="0.5" height="15.0" fill="rgb(219,166,11)" rx="2" ry="2" />
<text  x="789.32" y="575.5" ></text>
</g>
<g >
<title>tg/core/state.(*stateObject).GetCommittedState (1,551 samples, 0.22%)</title><rect x="509.7" y="485" width="2.6" height="15.0" fill="rgb(220,1,43)" rx="2" ry="2" />
<text  x="512.69" y="495.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).GetOrNewStateObject (210 samples, 0.03%)</title><rect x="262.5" y="613" width="0.3" height="15.0" fill="rgb(243,57,44)" rx="2" ry="2" />
<text  x="265.46" y="623.5" ></text>
</g>
<g >
<title>sort.quickSort (273 samples, 0.04%)</title><rect x="729.4" y="597" width="0.5" height="15.0" fill="rgb(236,25,45)" rx="2" ry="2" />
<text  x="732.43" y="607.5" ></text>
</g>
<g >
<title>tg/rlp.(*Stream).Kind (73 samples, 0.01%)</title><rect x="791.7" y="501" width="0.2" height="15.0" fill="rgb(229,6,26)" rx="2" ry="2" />
<text  x="794.74" y="511.5" ></text>
</g>
<g >
<title>tg/eth/stagedsync.incrementalTxPoolUpdate (9,003 samples, 1.30%)</title><rect x="214.8" y="725" width="15.3" height="15.0" fill="rgb(212,40,21)" rx="2" ry="2" />
<text  x="217.79" y="735.5" ></text>
</g>
<g >
<title>tg/p2p/dnsdisc.(*Client).resolveEntry (71 samples, 0.01%)</title><rect x="1189.9" y="773" width="0.1" height="15.0" fill="rgb(241,214,19)" rx="2" ry="2" />
<text  x="1192.87" y="783.5" ></text>
</g>
<g >
<title>sort.symMerge (127 samples, 0.02%)</title><rect x="1040.3" y="325" width="0.2" height="15.0" fill="rgb(225,215,44)" rx="2" ry="2" />
<text  x="1043.31" y="335.5" ></text>
</g>
<g >
<title>runtime.cgocall (1,941 samples, 0.28%)</title><rect x="723.8" y="549" width="3.3" height="15.0" fill="rgb(215,140,10)" rx="2" ry="2" />
<text  x="726.82" y="559.5" ></text>
</g>
<g >
<title>tg/crypto/secp256k1.RecoverPubkeyWithContext.func1 (143 samples, 0.02%)</title><rect x="447.0" y="437" width="0.3" height="15.0" fill="rgb(220,26,8)" rx="2" ry="2" />
<text  x="450.02" y="447.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.readFull (74 samples, 0.01%)</title><rect x="1047.4" y="501" width="0.1" height="15.0" fill="rgb(214,155,40)" rx="2" ry="2" />
<text  x="1050.35" y="511.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (103 samples, 0.01%)</title><rect x="434.9" y="341" width="0.2" height="15.0" fill="rgb(238,199,43)" rx="2" ry="2" />
<text  x="437.88" y="351.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*decRd).readb (62 samples, 0.01%)</title><rect x="145.3" y="533" width="0.1" height="15.0" fill="rgb(215,21,4)" rx="2" ry="2" />
<text  x="148.29" y="543.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find (226 samples, 0.03%)</title><rect x="401.6" y="277" width="0.4" height="15.0" fill="rgb(244,210,54)" rx="2" ry="2" />
<text  x="404.59" y="287.5" ></text>
</g>
<g >
<title>bytes.Compare (109 samples, 0.02%)</title><rect x="1076.5" y="245" width="0.2" height="15.0" fill="rgb(223,157,14)" rx="2" ry="2" />
<text  x="1079.49" y="255.5" ></text>
</g>
<g >
<title>tg/core.ApplyMessage (229,160 samples, 32.98%)</title><rect x="237.0" y="677" width="389.2" height="15.0" fill="rgb(248,45,19)" rx="2" ry="2" />
<text  x="240.02" y="687.5" >tg/core.ApplyMessage</text>
</g>
<g >
<title>golang.org/x/crypto/sha3.keccakF1600 (584 samples, 0.08%)</title><rect x="1117.2" y="565" width="1.0" height="15.0" fill="rgb(223,71,29)" rx="2" ry="2" />
<text  x="1120.20" y="575.5" ></text>
</g>
<g >
<title>tg/common/etl.(*fileDataProvider).Next (453 samples, 0.07%)</title><rect x="1047.0" y="677" width="0.7" height="15.0" fill="rgb(241,38,13)" rx="2" ry="2" />
<text  x="1049.97" y="687.5" ></text>
</g>
<g >
<title>runtime.cgoCheckPointer (133 samples, 0.02%)</title><rect x="1086.5" y="597" width="0.2" height="15.0" fill="rgb(246,85,45)" rx="2" ry="2" />
<text  x="1089.52" y="607.5" ></text>
</g>
<g >
<title>tg/core/types.(*Transaction).Hash (5,057 samples, 0.73%)</title><rect x="206.1" y="581" width="8.6" height="15.0" fill="rgb(242,199,39)" rx="2" ry="2" />
<text  x="209.12" y="591.5" ></text>
</g>
<g >
<title>tg/ethdb.(*TxDb).cursor (79 samples, 0.01%)</title><rect x="1022.0" y="581" width="0.2" height="15.0" fill="rgb(206,185,20)" rx="2" ry="2" />
<text  x="1025.04" y="591.5" ></text>
</g>
<g >
<title>tg/core/types.codecSelfer2.enccommon_Hash (253 samples, 0.04%)</title><rect x="784.1" y="533" width="0.4" height="15.0" fill="rgb(213,67,42)" rx="2" ry="2" />
<text  x="787.05" y="543.5" ></text>
</g>
<g >
<title>tg/crypto/secp256k1.RecoverPubkeyWithContext.func1 (79 samples, 0.01%)</title><rect x="450.6" y="373" width="0.1" height="15.0" fill="rgb(240,16,47)" rx="2" ry="2" />
<text  x="453.56" y="383.5" ></text>
</g>
<g >
<title>tg/common/etl.FlushToDisk (296 samples, 0.04%)</title><rect x="872.4" y="533" width="0.5" height="15.0" fill="rgb(250,51,46)" rx="2" ry="2" />
<text  x="875.42" y="543.5" ></text>
</g>
<g >
<title>tg/core/vm.opSload (68 samples, 0.01%)</title><rect x="479.7" y="341" width="0.2" height="15.0" fill="rgb(235,220,28)" rx="2" ry="2" />
<text  x="482.74" y="351.5" ></text>
</g>
<g >
<title>tg/turbo/trie.(*RetainList).RetainWithMarker (1,497 samples, 0.22%)</title><rect x="1026.4" y="661" width="2.5" height="15.0" fill="rgb(241,177,45)" rx="2" ry="2" />
<text  x="1029.39" y="671.5" ></text>
</g>
<g >
<title>runtime.systemstack (165 samples, 0.02%)</title><rect x="1101.1" y="389" width="0.3" height="15.0" fill="rgb(208,114,14)" rx="2" ry="2" />
<text  x="1104.14" y="399.5" ></text>
</g>
<g >
<title>tg/ethdb.(*TxDb).Get (186 samples, 0.03%)</title><rect x="461.7" y="485" width="0.3" height="15.0" fill="rgb(243,71,19)" rx="2" ry="2" />
<text  x="464.70" y="495.5" ></text>
</g>
<g >
<title>golang.org/x/crypto/sha3.(*state).Write (60 samples, 0.01%)</title><rect x="1029.9" y="629" width="0.1" height="15.0" fill="rgb(229,163,14)" rx="2" ry="2" />
<text  x="1032.89" y="639.5" ></text>
</g>
<g >
<title>sort.doPivot (125 samples, 0.02%)</title><rect x="1027.6" y="501" width="0.3" height="15.0" fill="rgb(225,153,11)" rx="2" ry="2" />
<text  x="1030.64" y="511.5" ></text>
</g>
<g >
<title>tg/core/vm.run (565 samples, 0.08%)</title><rect x="462.5" y="485" width="1.0" height="15.0" fill="rgb(241,72,34)" rx="2" ry="2" />
<text  x="465.52" y="495.5" ></text>
</g>
<g >
<title>runtime.newArenaMayUnlock (105 samples, 0.02%)</title><rect x="33.7" y="805" width="0.2" height="15.0" fill="rgb(225,60,3)" rx="2" ry="2" />
<text  x="36.70" y="815.5" ></text>
</g>
<g >
<title>sort.quickSort (192 samples, 0.03%)</title><rect x="723.0" y="597" width="0.3" height="15.0" fill="rgb(219,107,14)" rx="2" ry="2" />
<text  x="726.01" y="607.5" ></text>
</g>
<g >
<title>runtime.mallocgc (1,554 samples, 0.22%)</title><rect x="1053.4" y="485" width="2.6" height="15.0" fill="rgb(236,132,43)" rx="2" ry="2" />
<text  x="1056.38" y="495.5" ></text>
</g>
<g >
<title>github.com/ugorji/go/codec.(*ioDecReader).readb (503 samples, 0.07%)</title><rect x="970.2" y="485" width="0.9" height="15.0" fill="rgb(253,161,5)" rx="2" ry="2" />
<text  x="973.24" y="495.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*node).get (153 samples, 0.02%)</title><rect x="395.2" y="293" width="0.3" height="15.0" fill="rgb(210,97,31)" rx="2" ry="2" />
<text  x="398.19" y="303.5" ></text>
</g>
<g >
<title>tg/core/vm.(*EVMInterpreter).Run (111 samples, 0.02%)</title><rect x="497.6" y="357" width="0.2" height="15.0" fill="rgb(234,193,1)" rx="2" ry="2" />
<text  x="500.57" y="367.5" ></text>
</g>
<g >
<title>tg/eth/stagedsync.DefaultStages.func7.1 (42,819 samples, 6.16%)</title><rect x="958.6" y="757" width="72.7" height="15.0" fill="rgb(238,117,13)" rx="2" ry="2" />
<text  x="961.58" y="767.5" >tg/eth/s..</text>
</g>
<g >
<title>runtime.chansend (157 samples, 0.02%)</title><rect x="1011.6" y="533" width="0.2" height="15.0" fill="rgb(247,60,20)" rx="2" ry="2" />
<text  x="1014.56" y="543.5" ></text>
</g>
<g >
<title>tg/core/vm.run (579 samples, 0.08%)</title><rect x="419.8" y="437" width="1.0" height="15.0" fill="rgb(250,54,3)" rx="2" ry="2" />
<text  x="422.83" y="447.5" ></text>
</g>
<g >
<title>runtime.heapBits.initSpan (88 samples, 0.01%)</title><rect x="1101.4" y="405" width="0.2" height="15.0" fill="rgb(230,143,16)" rx="2" ry="2" />
<text  x="1104.42" y="415.5" ></text>
</g>
<g >
<title>tg/core/state.(*PlainStateReader).ReadAccountData (182 samples, 0.03%)</title><rect x="396.4" y="421" width="0.3" height="15.0" fill="rgb(239,209,25)" rx="2" ry="2" />
<text  x="399.36" y="431.5" ></text>
</g>
<g >
<title>syscall.read (505 samples, 0.07%)</title><rect x="1176.6" y="709" width="0.8" height="15.0" fill="rgb(214,51,45)" rx="2" ry="2" />
<text  x="1179.59" y="719.5" ></text>
</g>
<g >
<title>runtime.mallocgc (88 samples, 0.01%)</title><rect x="264.9" y="581" width="0.1" height="15.0" fill="rgb(219,151,32)" rx="2" ry="2" />
<text  x="267.88" y="591.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find.func1 (2,681 samples, 0.39%)</title><rect x="249.1" y="453" width="4.6" height="15.0" fill="rgb(253,174,42)" rx="2" ry="2" />
<text  x="252.10" y="463.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*items).insertAt (95 samples, 0.01%)</title><rect x="672.7" y="565" width="0.2" height="15.0" fill="rgb(237,37,25)" rx="2" ry="2" />
<text  x="675.69" y="575.5" ></text>
</g>
<g >
<title>runtime.mallocgc (109 samples, 0.02%)</title><rect x="875.5" y="485" width="0.2" height="15.0" fill="rgb(211,30,46)" rx="2" ry="2" />
<text  x="878.50" y="495.5" ></text>
</g>
<g >
<title>runtime.SetFinalizer (462 samples, 0.07%)</title><rect x="850.4" y="501" width="0.8" height="15.0" fill="rgb(244,117,49)" rx="2" ry="2" />
<text  x="853.42" y="511.5" ></text>
</g>
<g >
<title>tg/ethdb.(*TxDb).Get (801 samples, 0.12%)</title><rect x="1093.9" y="645" width="1.3" height="15.0" fill="rgb(207,68,48)" rx="2" ry="2" />
<text  x="1096.85" y="655.5" ></text>
</g>
<g >
<title>runtime.spanClass.sizeclass (134 samples, 0.02%)</title><rect x="33.9" y="837" width="0.3" height="15.0" fill="rgb(237,28,45)" rx="2" ry="2" />
<text  x="36.93" y="847.5" ></text>
</g>
<g >
<title>tg/core/vm.run (60 samples, 0.01%)</title><rect x="391.6" y="309" width="0.1" height="15.0" fill="rgb(240,166,1)" rx="2" ry="2" />
<text  x="394.62" y="319.5" ></text>
</g>
<g >
<title>tg/core/vm.opStaticCall (80 samples, 0.01%)</title><rect x="487.9" y="277" width="0.2" height="15.0" fill="rgb(215,112,27)" rx="2" ry="2" />
<text  x="490.94" y="287.5" ></text>
</g>
<g >
<title>tg/core/state.(*stateObject).GetState (62 samples, 0.01%)</title><rect x="391.5" y="309" width="0.1" height="15.0" fill="rgb(246,59,16)" rx="2" ry="2" />
<text  x="394.50" y="319.5" ></text>
</g>
<g >
<title>runtime.(*mcache).refill (81 samples, 0.01%)</title><rect x="788.5" y="437" width="0.1" height="15.0" fill="rgb(250,29,13)" rx="2" ry="2" />
<text  x="791.50" y="447.5" ></text>
</g>
<g >
<title>internal/poll.ignoringEINTR (169 samples, 0.02%)</title><rect x="970.5" y="405" width="0.3" height="15.0" fill="rgb(235,7,38)" rx="2" ry="2" />
<text  x="973.47" y="415.5" ></text>
</g>
<g >
<title>tg/crypto/secp256k1.RecoverPubkeyWithContext (68 samples, 0.01%)</title><rect x="486.2" y="261" width="0.1" height="15.0" fill="rgb(212,6,17)" rx="2" ry="2" />
<text  x="489.23" y="271.5" ></text>
</g>
<g >
<title>runtime.mapassign (1,250 samples, 0.18%)</title><rect x="637.5" y="629" width="2.1" height="15.0" fill="rgb(234,218,39)" rx="2" ry="2" />
<text  x="640.48" y="639.5" ></text>
</g>
<g >
<title>runtime.(*mheap).allocSpan (73 samples, 0.01%)</title><rect x="779.2" y="533" width="0.1" height="15.0" fill="rgb(237,147,5)" rx="2" ry="2" />
<text  x="782.20" y="543.5" ></text>
</g>
<g >
<title>runtime.largeAlloc (93 samples, 0.01%)</title><rect x="985.1" y="485" width="0.1" height="15.0" fill="rgb(217,113,46)" rx="2" ry="2" />
<text  x="988.09" y="495.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).cacheSpan (68 samples, 0.01%)</title><rect x="628.6" y="581" width="0.1" height="15.0" fill="rgb(210,50,17)" rx="2" ry="2" />
<text  x="631.61" y="591.5" ></text>
</g>
<g >
<title>sort.symMerge (1,974 samples, 0.28%)</title><rect x="990.7" y="357" width="3.3" height="15.0" fill="rgb(238,146,25)" rx="2" ry="2" />
<text  x="993.68" y="367.5" ></text>
</g>
<g >
<title>github.com/google/btree.items.find (373 samples, 0.05%)</title><rect x="402.0" y="293" width="0.6" height="15.0" fill="rgb(235,180,6)" rx="2" ry="2" />
<text  x="404.97" y="303.5" ></text>
</g>
<g >
<title>tg/params.(*ChainConfig).Rules (165 samples, 0.02%)</title><rect x="659.4" y="661" width="0.3" height="15.0" fill="rgb(232,217,40)" rx="2" ry="2" />
<text  x="662.39" y="671.5" ></text>
</g>
<g >
<title>sync/atomic.CompareAndSwapPointer (108 samples, 0.02%)</title><rect x="738.3" y="661" width="0.2" height="15.0" fill="rgb(227,110,1)" rx="2" ry="2" />
<text  x="741.29" y="671.5" ></text>
</g>
<g >
<title>github.com/google/btree.(*BTree).ReplaceOrInsert (10,902 samples, 1.57%)</title><rect x="672.1" y="629" width="18.5" height="15.0" fill="rgb(253,100,18)" rx="2" ry="2" />
<text  x="675.11" y="639.5" ></text>
</g>
<g >
<title>reflect.Copy (276 samples, 0.04%)</title><rect x="744.8" y="469" width="0.5" height="15.0" fill="rgb(209,7,26)" rx="2" ry="2" />
<text  x="747.82" y="479.5" ></text>
</g>
<g >
<title>tg/core/state.(*IntraBlockState).GetCommittedState (192 samples, 0.03%)</title><rect x="324.9" y="581" width="0.3" height="15.0" fill="rgb(238,19,40)" rx="2" ry="2" />
<text  x="327.86" y="591.5" ></text>
</g>
<g >
<title>tg/ethdb.(*TxDb).Get (155 samples, 0.02%)</title><rect x="464.1" y="501" width="0.3" height="15.0" fill="rgb(237,113,35)" rx="2" ry="2" />
<text  x="467.13" y="511.5" ></text>
</g>
<g >
<title>runtime.lock2 (201 samples, 0.03%)</title><rect x="30.9" y="773" width="0.4" height="15.0" fill="rgb(252,100,35)" rx="2" ry="2" />
<text  x="33.91" y="783.5" ></text>
</g>
<g >
<title>tg/core/vm.opAdd (79 samples, 0.01%)</title><rect x="471.2" y="533" width="0.1" height="15.0" fill="rgb(208,116,24)" rx="2" ry="2" />
<text  x="474.18" y="543.5" ></text>
</g>
<g >
<title>runtime.(*mheap).alloc (216 samples, 0.03%)</title><rect x="934.5" y="389" width="0.3" height="15.0" fill="rgb(247,217,19)" rx="2" ry="2" />
<text  x="937.47" y="399.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (719 samples, 0.10%)</title><rect x="1100.3" y="421" width="1.3" height="15.0" fill="rgb(237,134,15)" rx="2" ry="2" />
<text  x="1103.35" y="431.5" ></text>
</g>
<g >
<title>runtime.(*mcentral).grow (560 samples, 0.08%)</title><rect x="621.5" y="517" width="1.0" height="15.0" fill="rgb(227,176,14)" rx="2" ry="2" />
<text  x="624.53" y="527.5" ></text>
</g>
<g >
<title>tg/core/vm.opStaticCall (337 samples, 0.05%)</title><rect x="603.9" y="469" width="0.6" height="15.0" fill="rgb(222,193,52)" rx="2" ry="2" />
<text  x="606.91" y="479.5" ></text>
</g>
<g >
<title>runtime.memclrNoHeapPointers (107 samples, 0.02%)</title><rect x="286.4" y="469" width="0.2" height="15.0" fill="rgb(228,106,21)" rx="2" ry="2" />
<text  x="289.44" y="479.5" ></text>
</g>
<g >
<title>tg/rlp.makeListDecoder.func3 (3,637 samples, 0.52%)</title><rect x="1180.9" y="757" width="6.1" height="15.0" fill="rgb(213,20,5)" rx="2" ry="2" />
<text  x="1183.86" y="767.5" ></text>
</g>
<g >
<title>tg/core/vm.run (178 samples, 0.03%)</title><rect x="485.9" y="309" width="0.3" height="15.0" fill="rgb(217,200,15)" rx="2" ry="2" />
<text  x="488.88" y="319.5" ></text>
</g>
<g >
<title>aeshashbody (79 samples, 0.01%)</title><rect x="561.4" y="501" width="0.1" height="15.0" fill="rgb(214,76,28)" rx="2" ry="2" />
<text  x="564.36" y="511.5" ></text>
</g>
</g>
</svg>
